/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 20008.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 3.0], [71.4, 3.0], [71.5, 3.0], [71.6, 3.0], [71.7, 3.0], [71.8, 3.0], [71.9, 3.0], [72.0, 4.0], [72.1, 4.0], [72.2, 4.0], [72.3, 5.0], [72.4, 5.0], [72.5, 5.0], [72.6, 6.0], [72.7, 9.0], [72.8, 11.0], [72.9, 15.0], [73.0, 21.0], [73.1, 28.0], [73.2, 38.0], [73.3, 43.0], [73.4, 46.0], [73.5, 50.0], [73.6, 54.0], [73.7, 60.0], [73.8, 67.0], [73.9, 72.0], [74.0, 79.0], [74.1, 86.0], [74.2, 91.0], [74.3, 96.0], [74.4, 102.0], [74.5, 107.0], [74.6, 113.0], [74.7, 120.0], [74.8, 127.0], [74.9, 134.0], [75.0, 140.0], [75.1, 147.0], [75.2, 154.0], [75.3, 161.0], [75.4, 169.0], [75.5, 192.0], [75.6, 211.0], [75.7, 232.0], [75.8, 251.0], [75.9, 273.0], [76.0, 303.0], [76.1, 325.0], [76.2, 345.0], [76.3, 369.0], [76.4, 395.0], [76.5, 421.0], [76.6, 450.0], [76.7, 466.0], [76.8, 497.0], [76.9, 519.0], [77.0, 545.0], [77.1, 576.0], [77.2, 605.0], [77.3, 647.0], [77.4, 669.0], [77.5, 693.0], [77.6, 718.0], [77.7, 757.0], [77.8, 783.0], [77.9, 819.0], [78.0, 850.0], [78.1, 880.0], [78.2, 907.0], [78.3, 933.0], [78.4, 957.0], [78.5, 983.0], [78.6, 1006.0], [78.7, 1024.0], [78.8, 1047.0], [78.9, 1070.0], [79.0, 1094.0], [79.1, 1117.0], [79.2, 1149.0], [79.3, 1174.0], [79.4, 1198.0], [79.5, 1231.0], [79.6, 1256.0], [79.7, 1274.0], [79.8, 1300.0], [79.9, 1320.0], [80.0, 1354.0], [80.1, 1369.0], [80.2, 1390.0], [80.3, 1416.0], [80.4, 1435.0], [80.5, 1465.0], [80.6, 1494.0], [80.7, 1517.0], [80.8, 1544.0], [80.9, 1566.0], [81.0, 1593.0], [81.1, 1620.0], [81.2, 1646.0], [81.3, 1670.0], [81.4, 1693.0], [81.5, 1719.0], [81.6, 1751.0], [81.7, 1776.0], [81.8, 1796.0], [81.9, 1812.0], [82.0, 1836.0], [82.1, 1867.0], [82.2, 1894.0], [82.3, 1919.0], [82.4, 1935.0], [82.5, 1949.0], [82.6, 1970.0], [82.7, 1987.0], [82.8, 2013.0], [82.9, 2033.0], [83.0, 2051.0], [83.1, 2078.0], [83.2, 2100.0], [83.3, 2114.0], [83.4, 2131.0], [83.5, 2161.0], [83.6, 2185.0], [83.7, 2203.0], [83.8, 2220.0], [83.9, 2237.0], [84.0, 2252.0], [84.1, 2274.0], [84.2, 2293.0], [84.3, 2314.0], [84.4, 2334.0], [84.5, 2354.0], [84.6, 2371.0], [84.7, 2384.0], [84.8, 2401.0], [84.9, 2417.0], [85.0, 2433.0], [85.1, 2449.0], [85.2, 2468.0], [85.3, 2483.0], [85.4, 2501.0], [85.5, 2521.0], [85.6, 2536.0], [85.7, 2555.0], [85.8, 2576.0], [85.9, 2590.0], [86.0, 2611.0], [86.1, 2629.0], [86.2, 2639.0], [86.3, 2654.0], [86.4, 2668.0], [86.5, 2680.0], [86.6, 2697.0], [86.7, 2713.0], [86.8, 2732.0], [86.9, 2749.0], [87.0, 2767.0], [87.1, 2778.0], [87.2, 2795.0], [87.3, 2810.0], [87.4, 2821.0], [87.5, 2836.0], [87.6, 2851.0], [87.7, 2861.0], [87.8, 2879.0], [87.9, 2889.0], [88.0, 2904.0], [88.1, 2921.0], [88.2, 2940.0], [88.3, 2953.0], [88.4, 2961.0], [88.5, 2980.0], [88.6, 2998.0], [88.7, 3012.0], [88.8, 3026.0], [88.9, 3040.0], [89.0, 3055.0], [89.1, 3067.0], [89.2, 3084.0], [89.3, 3107.0], [89.4, 3122.0], [89.5, 3132.0], [89.6, 3149.0], [89.7, 3158.0], [89.8, 3168.0], [89.9, 3181.0], [90.0, 3200.0], [90.1, 3216.0], [90.2, 3231.0], [90.3, 3246.0], [90.4, 3255.0], [90.5, 3269.0], [90.6, 3277.0], [90.7, 3293.0], [90.8, 3311.0], [90.9, 3327.0], [91.0, 3338.0], [91.1, 3353.0], [91.2, 3368.0], [91.3, 3385.0], [91.4, 3400.0], [91.5, 3414.0], [91.6, 3429.0], [91.7, 3442.0], [91.8, 3455.0], [91.9, 3469.0], [92.0, 3479.0], [92.1, 3495.0], [92.2, 3515.0], [92.3, 3532.0], [92.4, 3550.0], [92.5, 3564.0], [92.6, 3581.0], [92.7, 3595.0], [92.8, 3619.0], [92.9, 3634.0], [93.0, 3650.0], [93.1, 3672.0], [93.2, 3689.0], [93.3, 3707.0], [93.4, 3736.0], [93.5, 3751.0], [93.6, 3769.0], [93.7, 3782.0], [93.8, 3799.0], [93.9, 3816.0], [94.0, 3832.0], [94.1, 3851.0], [94.2, 3877.0], [94.3, 3895.0], [94.4, 3911.0], [94.5, 3938.0], [94.6, 3968.0], [94.7, 3982.0], [94.8, 4012.0], [94.9, 4030.0], [95.0, 4054.0], [95.1, 4082.0], [95.2, 4101.0], [95.3, 4132.0], [95.4, 4153.0], [95.5, 4175.0], [95.6, 4203.0], [95.7, 4230.0], [95.8, 4261.0], [95.9, 4283.0], [96.0, 4319.0], [96.1, 4362.0], [96.2, 4402.0], [96.3, 4439.0], [96.4, 4469.0], [96.5, 4534.0], [96.6, 4576.0], [96.7, 4612.0], [96.8, 4640.0], [96.9, 4691.0], [97.0, 4735.0], [97.1, 4772.0], [97.2, 4828.0], [97.3, 4890.0], [97.4, 4927.0], [97.5, 4972.0], [97.6, 5022.0], [97.7, 5089.0], [97.8, 5128.0], [97.9, 5191.0], [98.0, 5285.0], [98.1, 5347.0], [98.2, 5408.0], [98.3, 5443.0], [98.4, 5512.0], [98.5, 5566.0], [98.6, 5653.0], [98.7, 5725.0], [98.8, 5824.0], [98.9, 5895.0], [99.0, 5992.0], [99.1, 6102.0], [99.2, 6201.0], [99.3, 6316.0], [99.4, 6462.0], [99.5, 6629.0], [99.6, 7007.0], [99.7, 7651.0], [99.8, 20005.0], [99.9, 20006.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 163.0], [0.1, 163.0], [0.2, 163.0], [0.3, 163.0], [0.4, 163.0], [0.5, 165.0], [0.6, 165.0], [0.7, 165.0], [0.8, 165.0], [0.9, 165.0], [1.0, 166.0], [1.1, 166.0], [1.2, 166.0], [1.3, 166.0], [1.4, 166.0], [1.5, 170.0], [1.6, 170.0], [1.7, 170.0], [1.8, 170.0], [1.9, 170.0], [2.0, 206.0], [2.1, 206.0], [2.2, 206.0], [2.3, 206.0], [2.4, 206.0], [2.5, 214.0], [2.6, 214.0], [2.7, 214.0], [2.8, 214.0], [2.9, 214.0], [3.0, 226.0], [3.1, 226.0], [3.2, 226.0], [3.3, 226.0], [3.4, 226.0], [3.5, 229.0], [3.6, 229.0], [3.7, 229.0], [3.8, 229.0], [3.9, 229.0], [4.0, 236.0], [4.1, 236.0], [4.2, 236.0], [4.3, 236.0], [4.4, 236.0], [4.5, 246.0], [4.6, 246.0], [4.7, 246.0], [4.8, 246.0], [4.9, 246.0], [5.0, 264.0], [5.1, 264.0], [5.2, 264.0], [5.3, 264.0], [5.4, 264.0], [5.5, 273.0], [5.6, 273.0], [5.7, 273.0], [5.8, 273.0], [5.9, 273.0], [6.0, 280.0], [6.1, 280.0], [6.2, 280.0], [6.3, 280.0], [6.4, 280.0], [6.5, 283.0], [6.6, 283.0], [6.7, 283.0], [6.8, 283.0], [6.9, 283.0], [7.0, 290.0], [7.1, 290.0], [7.2, 290.0], [7.3, 290.0], [7.4, 290.0], [7.5, 295.0], [7.6, 295.0], [7.7, 295.0], [7.8, 295.0], [7.9, 295.0], [8.0, 297.0], [8.1, 297.0], [8.2, 297.0], [8.3, 297.0], [8.4, 297.0], [8.5, 315.0], [8.6, 315.0], [8.7, 315.0], [8.8, 315.0], [8.9, 315.0], [9.0, 320.0], [9.1, 320.0], [9.2, 320.0], [9.3, 320.0], [9.4, 320.0], [9.5, 331.0], [9.6, 331.0], [9.7, 331.0], [9.8, 331.0], [9.9, 331.0], [10.0, 353.0], [10.1, 353.0], [10.2, 353.0], [10.3, 353.0], [10.4, 353.0], [10.5, 369.0], [10.6, 369.0], [10.7, 369.0], [10.8, 369.0], [10.9, 369.0], [11.0, 391.0], [11.1, 391.0], [11.2, 391.0], [11.3, 391.0], [11.4, 391.0], [11.5, 396.0], [11.6, 396.0], [11.7, 396.0], [11.8, 396.0], [11.9, 396.0], [12.0, 403.0], [12.1, 403.0], [12.2, 403.0], [12.3, 403.0], [12.4, 403.0], [12.5, 444.0], [12.6, 444.0], [12.7, 444.0], [12.8, 444.0], [12.9, 444.0], [13.0, 466.0], [13.1, 466.0], [13.2, 466.0], [13.3, 466.0], [13.4, 466.0], [13.5, 468.0], [13.6, 468.0], [13.7, 468.0], [13.8, 468.0], [13.9, 468.0], [14.0, 485.0], [14.1, 485.0], [14.2, 485.0], [14.3, 485.0], [14.4, 485.0], [14.5, 492.0], [14.6, 492.0], [14.7, 492.0], [14.8, 492.0], [14.9, 492.0], [15.0, 508.0], [15.1, 508.0], [15.2, 508.0], [15.3, 508.0], [15.4, 508.0], [15.5, 508.0], [15.6, 508.0], [15.7, 508.0], [15.8, 508.0], [15.9, 508.0], [16.0, 515.0], [16.1, 515.0], [16.2, 515.0], [16.3, 515.0], [16.4, 515.0], [16.5, 530.0], [16.6, 530.0], [16.7, 530.0], [16.8, 530.0], [16.9, 530.0], [17.0, 551.0], [17.1, 551.0], [17.2, 551.0], [17.3, 551.0], [17.4, 551.0], [17.5, 572.0], [17.6, 572.0], [17.7, 572.0], [17.8, 572.0], [17.9, 572.0], [18.0, 572.0], [18.1, 572.0], [18.2, 572.0], [18.3, 572.0], [18.4, 572.0], [18.5, 573.0], [18.6, 573.0], [18.7, 573.0], [18.8, 573.0], [18.9, 573.0], [19.0, 592.0], [19.1, 592.0], [19.2, 592.0], [19.3, 592.0], [19.4, 592.0], [19.5, 596.0], [19.6, 596.0], [19.7, 596.0], [19.8, 596.0], [19.9, 596.0], [20.0, 603.0], [20.1, 603.0], [20.2, 603.0], [20.3, 603.0], [20.4, 603.0], [20.5, 604.0], [20.6, 604.0], [20.7, 604.0], [20.8, 604.0], [20.9, 604.0], [21.0, 608.0], [21.1, 608.0], [21.2, 608.0], [21.3, 608.0], [21.4, 608.0], [21.5, 609.0], [21.6, 609.0], [21.7, 609.0], [21.8, 609.0], [21.9, 609.0], [22.0, 620.0], [22.1, 620.0], [22.2, 620.0], [22.3, 620.0], [22.4, 620.0], [22.5, 622.0], [22.6, 622.0], [22.7, 622.0], [22.8, 622.0], [22.9, 622.0], [23.0, 640.0], [23.1, 640.0], [23.2, 640.0], [23.3, 640.0], [23.4, 640.0], [23.5, 654.0], [23.6, 654.0], [23.7, 654.0], [23.8, 654.0], [23.9, 654.0], [24.0, 658.0], [24.1, 658.0], [24.2, 658.0], [24.3, 658.0], [24.4, 658.0], [24.5, 664.0], [24.6, 664.0], [24.7, 664.0], [24.8, 664.0], [24.9, 664.0], [25.0, 676.0], [25.1, 676.0], [25.2, 676.0], [25.3, 676.0], [25.4, 676.0], [25.5, 680.0], [25.6, 680.0], [25.7, 680.0], [25.8, 680.0], [25.9, 680.0], [26.0, 684.0], [26.1, 684.0], [26.2, 684.0], [26.3, 684.0], [26.4, 684.0], [26.5, 689.0], [26.6, 689.0], [26.7, 689.0], [26.8, 689.0], [26.9, 689.0], [27.0, 708.0], [27.1, 708.0], [27.2, 708.0], [27.3, 708.0], [27.4, 708.0], [27.5, 708.0], [27.6, 708.0], [27.7, 708.0], [27.8, 708.0], [27.9, 708.0], [28.0, 710.0], [28.1, 710.0], [28.2, 710.0], [28.3, 710.0], [28.4, 710.0], [28.5, 715.0], [28.6, 715.0], [28.7, 715.0], [28.8, 715.0], [28.9, 715.0], [29.0, 736.0], [29.1, 736.0], [29.2, 736.0], [29.3, 736.0], [29.4, 736.0], [29.5, 748.0], [29.6, 748.0], [29.7, 748.0], [29.8, 748.0], [29.9, 748.0], [30.0, 754.0], [30.1, 754.0], [30.2, 754.0], [30.3, 754.0], [30.4, 754.0], [30.5, 757.0], [30.6, 757.0], [30.7, 757.0], [30.8, 757.0], [30.9, 757.0], [31.0, 762.0], [31.1, 762.0], [31.2, 762.0], [31.3, 762.0], [31.4, 762.0], [31.5, 770.0], [31.6, 770.0], [31.7, 770.0], [31.8, 770.0], [31.9, 770.0], [32.0, 772.0], [32.1, 772.0], [32.2, 772.0], [32.3, 772.0], [32.4, 772.0], [32.5, 773.0], [32.6, 773.0], [32.7, 773.0], [32.8, 773.0], [32.9, 773.0], [33.0, 777.0], [33.1, 777.0], [33.2, 777.0], [33.3, 777.0], [33.4, 777.0], [33.5, 779.0], [33.6, 779.0], [33.7, 779.0], [33.8, 779.0], [33.9, 779.0], [34.0, 782.0], [34.1, 782.0], [34.2, 782.0], [34.3, 782.0], [34.4, 782.0], [34.5, 802.0], [34.6, 802.0], [34.7, 802.0], [34.8, 802.0], [34.9, 802.0], [35.0, 817.0], [35.1, 817.0], [35.2, 817.0], [35.3, 817.0], [35.4, 817.0], [35.5, 822.0], [35.6, 822.0], [35.7, 822.0], [35.8, 822.0], [35.9, 822.0], [36.0, 826.0], [36.1, 826.0], [36.2, 826.0], [36.3, 826.0], [36.4, 826.0], [36.5, 829.0], [36.6, 829.0], [36.7, 829.0], [36.8, 829.0], [36.9, 829.0], [37.0, 834.0], [37.1, 834.0], [37.2, 834.0], [37.3, 834.0], [37.4, 834.0], [37.5, 844.0], [37.6, 844.0], [37.7, 844.0], [37.8, 844.0], [37.9, 844.0], [38.0, 856.0], [38.1, 856.0], [38.2, 856.0], [38.3, 856.0], [38.4, 856.0], [38.5, 863.0], [38.6, 863.0], [38.7, 863.0], [38.8, 863.0], [38.9, 863.0], [39.0, 866.0], [39.1, 866.0], [39.2, 866.0], [39.3, 866.0], [39.4, 866.0], [39.5, 868.0], [39.6, 868.0], [39.7, 868.0], [39.8, 868.0], [39.9, 868.0], [40.0, 879.0], [40.1, 879.0], [40.2, 879.0], [40.3, 879.0], [40.4, 879.0], [40.5, 880.0], [40.6, 880.0], [40.7, 880.0], [40.8, 880.0], [40.9, 880.0], [41.0, 888.0], [41.1, 888.0], [41.2, 888.0], [41.3, 888.0], [41.4, 888.0], [41.5, 908.0], [41.6, 908.0], [41.7, 908.0], [41.8, 908.0], [41.9, 908.0], [42.0, 909.0], [42.1, 909.0], [42.2, 909.0], [42.3, 909.0], [42.4, 909.0], [42.5, 923.0], [42.6, 923.0], [42.7, 923.0], [42.8, 923.0], [42.9, 923.0], [43.0, 931.0], [43.1, 931.0], [43.2, 931.0], [43.3, 931.0], [43.4, 931.0], [43.5, 937.0], [43.6, 937.0], [43.7, 937.0], [43.8, 937.0], [43.9, 937.0], [44.0, 941.0], [44.1, 941.0], [44.2, 941.0], [44.3, 941.0], [44.4, 941.0], [44.5, 943.0], [44.6, 943.0], [44.7, 943.0], [44.8, 943.0], [44.9, 943.0], [45.0, 948.0], [45.1, 948.0], [45.2, 948.0], [45.3, 948.0], [45.4, 948.0], [45.5, 949.0], [45.6, 949.0], [45.7, 949.0], [45.8, 949.0], [45.9, 949.0], [46.0, 951.0], [46.1, 951.0], [46.2, 951.0], [46.3, 951.0], [46.4, 951.0], [46.5, 958.0], [46.6, 958.0], [46.7, 958.0], [46.8, 958.0], [46.9, 958.0], [47.0, 960.0], [47.1, 960.0], [47.2, 960.0], [47.3, 960.0], [47.4, 960.0], [47.5, 967.0], [47.6, 967.0], [47.7, 967.0], [47.8, 967.0], [47.9, 967.0], [48.0, 974.0], [48.1, 974.0], [48.2, 974.0], [48.3, 974.0], [48.4, 974.0], [48.5, 977.0], [48.6, 977.0], [48.7, 977.0], [48.8, 977.0], [48.9, 977.0], [49.0, 995.0], [49.1, 995.0], [49.2, 995.0], [49.3, 995.0], [49.4, 995.0], [49.5, 998.0], [49.6, 998.0], [49.7, 998.0], [49.8, 998.0], [49.9, 998.0], [50.0, 1013.0], [50.1, 1013.0], [50.2, 1013.0], [50.3, 1013.0], [50.4, 1013.0], [50.5, 1013.0], [50.6, 1013.0], [50.7, 1013.0], [50.8, 1013.0], [50.9, 1013.0], [51.0, 1021.0], [51.1, 1021.0], [51.2, 1021.0], [51.3, 1021.0], [51.4, 1021.0], [51.5, 1028.0], [51.6, 1028.0], [51.7, 1028.0], [51.8, 1028.0], [51.9, 1028.0], [52.0, 1052.0], [52.1, 1052.0], [52.2, 1052.0], [52.3, 1052.0], [52.4, 1052.0], [52.5, 1078.0], [52.6, 1078.0], [52.7, 1078.0], [52.8, 1078.0], [52.9, 1078.0], [53.0, 1089.0], [53.1, 1089.0], [53.2, 1089.0], [53.3, 1089.0], [53.4, 1089.0], [53.5, 1096.0], [53.6, 1096.0], [53.7, 1096.0], [53.8, 1096.0], [53.9, 1096.0], [54.0, 1107.0], [54.1, 1107.0], [54.2, 1107.0], [54.3, 1107.0], [54.4, 1107.0], [54.5, 1115.0], [54.6, 1115.0], [54.7, 1115.0], [54.8, 1115.0], [54.9, 1115.0], [55.0, 1127.0], [55.1, 1127.0], [55.2, 1127.0], [55.3, 1127.0], [55.4, 1127.0], [55.5, 1137.0], [55.6, 1137.0], [55.7, 1137.0], [55.8, 1137.0], [55.9, 1137.0], [56.0, 1184.0], [56.1, 1184.0], [56.2, 1184.0], [56.3, 1184.0], [56.4, 1184.0], [56.5, 1199.0], [56.6, 1199.0], [56.7, 1199.0], [56.8, 1199.0], [56.9, 1199.0], [57.0, 1243.0], [57.1, 1243.0], [57.2, 1243.0], [57.3, 1243.0], [57.4, 1243.0], [57.5, 1255.0], [57.6, 1255.0], [57.7, 1255.0], [57.8, 1255.0], [57.9, 1255.0], [58.0, 1288.0], [58.1, 1288.0], [58.2, 1288.0], [58.3, 1288.0], [58.4, 1288.0], [58.5, 1288.0], [58.6, 1288.0], [58.7, 1288.0], [58.8, 1288.0], [58.9, 1288.0], [59.0, 1313.0], [59.1, 1313.0], [59.2, 1313.0], [59.3, 1313.0], [59.4, 1313.0], [59.5, 1322.0], [59.6, 1322.0], [59.7, 1322.0], [59.8, 1322.0], [59.9, 1322.0], [60.0, 1328.0], [60.1, 1328.0], [60.2, 1328.0], [60.3, 1328.0], [60.4, 1328.0], [60.5, 1371.0], [60.6, 1371.0], [60.7, 1371.0], [60.8, 1371.0], [60.9, 1371.0], [61.0, 1372.0], [61.1, 1372.0], [61.2, 1372.0], [61.3, 1372.0], [61.4, 1372.0], [61.5, 1379.0], [61.6, 1379.0], [61.7, 1379.0], [61.8, 1379.0], [61.9, 1379.0], [62.0, 1389.0], [62.1, 1389.0], [62.2, 1389.0], [62.3, 1389.0], [62.4, 1389.0], [62.5, 1392.0], [62.6, 1392.0], [62.7, 1392.0], [62.8, 1392.0], [62.9, 1392.0], [63.0, 1398.0], [63.1, 1398.0], [63.2, 1398.0], [63.3, 1398.0], [63.4, 1398.0], [63.5, 1436.0], [63.6, 1436.0], [63.7, 1436.0], [63.8, 1436.0], [63.9, 1436.0], [64.0, 1438.0], [64.1, 1438.0], [64.2, 1438.0], [64.3, 1438.0], [64.4, 1438.0], [64.5, 1451.0], [64.6, 1451.0], [64.7, 1451.0], [64.8, 1451.0], [64.9, 1451.0], [65.0, 1454.0], [65.1, 1454.0], [65.2, 1454.0], [65.3, 1454.0], [65.4, 1454.0], [65.5, 1471.0], [65.6, 1471.0], [65.7, 1471.0], [65.8, 1471.0], [65.9, 1471.0], [66.0, 1472.0], [66.1, 1472.0], [66.2, 1472.0], [66.3, 1472.0], [66.4, 1472.0], [66.5, 1490.0], [66.6, 1490.0], [66.7, 1490.0], [66.8, 1490.0], [66.9, 1490.0], [67.0, 1491.0], [67.1, 1491.0], [67.2, 1491.0], [67.3, 1491.0], [67.4, 1491.0], [67.5, 1498.0], [67.6, 1498.0], [67.7, 1498.0], [67.8, 1498.0], [67.9, 1498.0], [68.0, 1520.0], [68.1, 1520.0], [68.2, 1520.0], [68.3, 1520.0], [68.4, 1520.0], [68.5, 1524.0], [68.6, 1524.0], [68.7, 1524.0], [68.8, 1524.0], [68.9, 1524.0], [69.0, 1569.0], [69.1, 1569.0], [69.2, 1569.0], [69.3, 1569.0], [69.4, 1569.0], [69.5, 1574.0], [69.6, 1574.0], [69.7, 1574.0], [69.8, 1574.0], [69.9, 1574.0], [70.0, 1621.0], [70.1, 1621.0], [70.2, 1621.0], [70.3, 1621.0], [70.4, 1621.0], [70.5, 1630.0], [70.6, 1630.0], [70.7, 1630.0], [70.8, 1630.0], [70.9, 1630.0], [71.0, 1663.0], [71.1, 1663.0], [71.2, 1663.0], [71.3, 1663.0], [71.4, 1663.0], [71.5, 1674.0], [71.6, 1674.0], [71.7, 1674.0], [71.8, 1674.0], [71.9, 1674.0], [72.0, 1676.0], [72.1, 1676.0], [72.2, 1676.0], [72.3, 1676.0], [72.4, 1676.0], [72.5, 1686.0], [72.6, 1686.0], [72.7, 1686.0], [72.8, 1686.0], [72.9, 1686.0], [73.0, 1694.0], [73.1, 1694.0], [73.2, 1694.0], [73.3, 1694.0], [73.4, 1694.0], [73.5, 1715.0], [73.6, 1715.0], [73.7, 1715.0], [73.8, 1715.0], [73.9, 1715.0], [74.0, 1730.0], [74.1, 1730.0], [74.2, 1730.0], [74.3, 1730.0], [74.4, 1730.0], [74.5, 1737.0], [74.6, 1737.0], [74.7, 1737.0], [74.8, 1737.0], [74.9, 1737.0], [75.0, 1804.0], [75.1, 1804.0], [75.2, 1804.0], [75.3, 1804.0], [75.4, 1804.0], [75.5, 1811.0], [75.6, 1811.0], [75.7, 1811.0], [75.8, 1811.0], [75.9, 1811.0], [76.0, 1823.0], [76.1, 1823.0], [76.2, 1823.0], [76.3, 1823.0], [76.4, 1823.0], [76.5, 1844.0], [76.6, 1844.0], [76.7, 1844.0], [76.8, 1844.0], [76.9, 1844.0], [77.0, 1847.0], [77.1, 1847.0], [77.2, 1847.0], [77.3, 1847.0], [77.4, 1847.0], [77.5, 1848.0], [77.6, 1848.0], [77.7, 1848.0], [77.8, 1848.0], [77.9, 1848.0], [78.0, 1855.0], [78.1, 1855.0], [78.2, 1855.0], [78.3, 1855.0], [78.4, 1855.0], [78.5, 1863.0], [78.6, 1863.0], [78.7, 1863.0], [78.8, 1863.0], [78.9, 1863.0], [79.0, 1864.0], [79.1, 1864.0], [79.2, 1864.0], [79.3, 1864.0], [79.4, 1864.0], [79.5, 1870.0], [79.6, 1870.0], [79.7, 1870.0], [79.8, 1870.0], [79.9, 1870.0], [80.0, 1871.0], [80.1, 1871.0], [80.2, 1871.0], [80.3, 1871.0], [80.4, 1871.0], [80.5, 1875.0], [80.6, 1875.0], [80.7, 1875.0], [80.8, 1875.0], [80.9, 1875.0], [81.0, 1976.0], [81.1, 1976.0], [81.2, 1976.0], [81.3, 1976.0], [81.4, 1976.0], [81.5, 2013.0], [81.6, 2013.0], [81.7, 2013.0], [81.8, 2013.0], [81.9, 2013.0], [82.0, 2060.0], [82.1, 2060.0], [82.2, 2060.0], [82.3, 2060.0], [82.4, 2060.0], [82.5, 2128.0], [82.6, 2128.0], [82.7, 2128.0], [82.8, 2128.0], [82.9, 2128.0], [83.0, 2134.0], [83.1, 2134.0], [83.2, 2134.0], [83.3, 2134.0], [83.4, 2134.0], [83.5, 2163.0], [83.6, 2163.0], [83.7, 2163.0], [83.8, 2163.0], [83.9, 2163.0], [84.0, 2167.0], [84.1, 2167.0], [84.2, 2167.0], [84.3, 2167.0], [84.4, 2167.0], [84.5, 2169.0], [84.6, 2169.0], [84.7, 2169.0], [84.8, 2169.0], [84.9, 2169.0], [85.0, 2272.0], [85.1, 2272.0], [85.2, 2272.0], [85.3, 2272.0], [85.4, 2272.0], [85.5, 2281.0], [85.6, 2281.0], [85.7, 2281.0], [85.8, 2281.0], [85.9, 2281.0], [86.0, 2388.0], [86.1, 2388.0], [86.2, 2388.0], [86.3, 2388.0], [86.4, 2388.0], [86.5, 2390.0], [86.6, 2390.0], [86.7, 2390.0], [86.8, 2390.0], [86.9, 2390.0], [87.0, 2425.0], [87.1, 2425.0], [87.2, 2425.0], [87.3, 2425.0], [87.4, 2425.0], [87.5, 2454.0], [87.6, 2454.0], [87.7, 2454.0], [87.8, 2454.0], [87.9, 2454.0], [88.0, 2496.0], [88.1, 2496.0], [88.2, 2496.0], [88.3, 2496.0], [88.4, 2496.0], [88.5, 2558.0], [88.6, 2558.0], [88.7, 2558.0], [88.8, 2558.0], [88.9, 2558.0], [89.0, 2558.0], [89.1, 2558.0], [89.2, 2558.0], [89.3, 2558.0], [89.4, 2558.0], [89.5, 2567.0], [89.6, 2567.0], [89.7, 2567.0], [89.8, 2567.0], [89.9, 2567.0], [90.0, 2585.0], [90.1, 2585.0], [90.2, 2585.0], [90.3, 2585.0], [90.4, 2585.0], [90.5, 2659.0], [90.6, 2659.0], [90.7, 2659.0], [90.8, 2659.0], [90.9, 2659.0], [91.0, 2681.0], [91.1, 2681.0], [91.2, 2681.0], [91.3, 2681.0], [91.4, 2681.0], [91.5, 2712.0], [91.6, 2712.0], [91.7, 2712.0], [91.8, 2712.0], [91.9, 2712.0], [92.0, 2759.0], [92.1, 2759.0], [92.2, 2759.0], [92.3, 2759.0], [92.4, 2759.0], [92.5, 2796.0], [92.6, 2796.0], [92.7, 2796.0], [92.8, 2796.0], [92.9, 2796.0], [93.0, 2799.0], [93.1, 2799.0], [93.2, 2799.0], [93.3, 2799.0], [93.4, 2799.0], [93.5, 2873.0], [93.6, 2873.0], [93.7, 2873.0], [93.8, 2873.0], [93.9, 2873.0], [94.0, 2940.0], [94.1, 2940.0], [94.2, 2940.0], [94.3, 2940.0], [94.4, 2940.0], [94.5, 2953.0], [94.6, 2953.0], [94.7, 2953.0], [94.8, 2953.0], [94.9, 2953.0], [95.0, 2971.0], [95.1, 2971.0], [95.2, 2971.0], [95.3, 2971.0], [95.4, 2971.0], [95.5, 3056.0], [95.6, 3056.0], [95.7, 3056.0], [95.8, 3056.0], [95.9, 3056.0], [96.0, 3102.0], [96.1, 3102.0], [96.2, 3102.0], [96.3, 3102.0], [96.4, 3102.0], [96.5, 3147.0], [96.6, 3147.0], [96.7, 3147.0], [96.8, 3147.0], [96.9, 3147.0], [97.0, 3188.0], [97.1, 3188.0], [97.2, 3188.0], [97.3, 3188.0], [97.4, 3188.0], [97.5, 3206.0], [97.6, 3206.0], [97.7, 3206.0], [97.8, 3206.0], [97.9, 3206.0], [98.0, 3289.0], [98.1, 3289.0], [98.2, 3289.0], [98.3, 3289.0], [98.4, 3289.0], [98.5, 3476.0], [98.6, 3476.0], [98.7, 3476.0], [98.8, 3476.0], [98.9, 3476.0], [99.0, 3896.0], [99.1, 3896.0], [99.2, 3896.0], [99.3, 3896.0], [99.4, 3896.0], [99.5, 4188.0], [99.6, 4188.0], [99.7, 4188.0], [99.8, 4188.0], [99.9, 4188.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 3.0], [68.6, 3.0], [68.7, 3.0], [68.8, 3.0], [68.9, 3.0], [69.0, 3.0], [69.1, 3.0], [69.2, 4.0], [69.3, 4.0], [69.4, 4.0], [69.5, 4.0], [69.6, 4.0], [69.7, 5.0], [69.8, 5.0], [69.9, 5.0], [70.0, 6.0], [70.1, 7.0], [70.2, 9.0], [70.3, 14.0], [70.4, 23.0], [70.5, 35.0], [70.6, 41.0], [70.7, 45.0], [70.8, 50.0], [70.9, 54.0], [71.0, 58.0], [71.1, 65.0], [71.2, 70.0], [71.3, 77.0], [71.4, 83.0], [71.5, 89.0], [71.6, 93.0], [71.7, 101.0], [71.8, 104.0], [71.9, 109.0], [72.0, 115.0], [72.1, 123.0], [72.2, 130.0], [72.3, 138.0], [72.4, 143.0], [72.5, 150.0], [72.6, 157.0], [72.7, 165.0], [72.8, 171.0], [72.9, 187.0], [73.0, 208.0], [73.1, 240.0], [73.2, 257.0], [73.3, 279.0], [73.4, 298.0], [73.5, 322.0], [73.6, 335.0], [73.7, 356.0], [73.8, 390.0], [73.9, 417.0], [74.0, 458.0], [74.1, 499.0], [74.2, 522.0], [74.3, 553.0], [74.4, 568.0], [74.5, 603.0], [74.6, 645.0], [74.7, 678.0], [74.8, 705.0], [74.9, 742.0], [75.0, 764.0], [75.1, 793.0], [75.2, 827.0], [75.3, 859.0], [75.4, 884.0], [75.5, 904.0], [75.6, 926.0], [75.7, 955.0], [75.8, 986.0], [75.9, 1005.0], [76.0, 1018.0], [76.1, 1041.0], [76.2, 1056.0], [76.3, 1069.0], [76.4, 1082.0], [76.5, 1101.0], [76.6, 1118.0], [76.7, 1139.0], [76.8, 1153.0], [76.9, 1173.0], [77.0, 1194.0], [77.1, 1209.0], [77.2, 1230.0], [77.3, 1256.0], [77.4, 1275.0], [77.5, 1291.0], [77.6, 1310.0], [77.7, 1332.0], [77.8, 1352.0], [77.9, 1370.0], [78.0, 1390.0], [78.1, 1414.0], [78.2, 1444.0], [78.3, 1473.0], [78.4, 1496.0], [78.5, 1517.0], [78.6, 1540.0], [78.7, 1561.0], [78.8, 1577.0], [78.9, 1599.0], [79.0, 1624.0], [79.1, 1657.0], [79.2, 1675.0], [79.3, 1697.0], [79.4, 1725.0], [79.5, 1746.0], [79.6, 1768.0], [79.7, 1793.0], [79.8, 1817.0], [79.9, 1834.0], [80.0, 1855.0], [80.1, 1882.0], [80.2, 1900.0], [80.3, 1919.0], [80.4, 1939.0], [80.5, 1955.0], [80.6, 1970.0], [80.7, 1986.0], [80.8, 2001.0], [80.9, 2016.0], [81.0, 2038.0], [81.1, 2059.0], [81.2, 2068.0], [81.3, 2079.0], [81.4, 2100.0], [81.5, 2117.0], [81.6, 2130.0], [81.7, 2154.0], [81.8, 2172.0], [81.9, 2196.0], [82.0, 2218.0], [82.1, 2233.0], [82.2, 2249.0], [82.3, 2267.0], [82.4, 2280.0], [82.5, 2298.0], [82.6, 2317.0], [82.7, 2332.0], [82.8, 2350.0], [82.9, 2366.0], [83.0, 2381.0], [83.1, 2395.0], [83.2, 2415.0], [83.3, 2434.0], [83.4, 2450.0], [83.5, 2461.0], [83.6, 2474.0], [83.7, 2496.0], [83.8, 2511.0], [83.9, 2527.0], [84.0, 2547.0], [84.1, 2558.0], [84.2, 2578.0], [84.3, 2592.0], [84.4, 2606.0], [84.5, 2624.0], [84.6, 2644.0], [84.7, 2660.0], [84.8, 2672.0], [84.9, 2690.0], [85.0, 2711.0], [85.1, 2722.0], [85.2, 2735.0], [85.3, 2745.0], [85.4, 2753.0], [85.5, 2772.0], [85.6, 2785.0], [85.7, 2796.0], [85.8, 2810.0], [85.9, 2828.0], [86.0, 2840.0], [86.1, 2853.0], [86.2, 2868.0], [86.3, 2880.0], [86.4, 2891.0], [86.5, 2906.0], [86.6, 2920.0], [86.7, 2933.0], [86.8, 2950.0], [86.9, 2963.0], [87.0, 2985.0], [87.1, 3004.0], [87.2, 3006.0], [87.3, 3013.0], [87.4, 3022.0], [87.5, 3035.0], [87.6, 3053.0], [87.7, 3068.0], [87.8, 3084.0], [87.9, 3098.0], [88.0, 3119.0], [88.1, 3133.0], [88.2, 3143.0], [88.3, 3160.0], [88.4, 3175.0], [88.5, 3189.0], [88.6, 3202.0], [88.7, 3222.0], [88.8, 3236.0], [88.9, 3249.0], [89.0, 3264.0], [89.1, 3275.0], [89.2, 3285.0], [89.3, 3297.0], [89.4, 3316.0], [89.5, 3328.0], [89.6, 3337.0], [89.7, 3347.0], [89.8, 3359.0], [89.9, 3371.0], [90.0, 3382.0], [90.1, 3395.0], [90.2, 3408.0], [90.3, 3418.0], [90.4, 3433.0], [90.5, 3453.0], [90.6, 3463.0], [90.7, 3480.0], [90.8, 3495.0], [90.9, 3511.0], [91.0, 3530.0], [91.1, 3541.0], [91.2, 3558.0], [91.3, 3574.0], [91.4, 3587.0], [91.5, 3603.0], [91.6, 3624.0], [91.7, 3639.0], [91.8, 3649.0], [91.9, 3663.0], [92.0, 3675.0], [92.1, 3690.0], [92.2, 3699.0], [92.3, 3717.0], [92.4, 3732.0], [92.5, 3750.0], [92.6, 3764.0], [92.7, 3782.0], [92.8, 3806.0], [92.9, 3819.0], [93.0, 3837.0], [93.1, 3856.0], [93.2, 3877.0], [93.3, 3904.0], [93.4, 3925.0], [93.5, 3957.0], [93.6, 3992.0], [93.7, 4018.0], [93.8, 4048.0], [93.9, 4085.0], [94.0, 4126.0], [94.1, 4156.0], [94.2, 4184.0], [94.3, 4217.0], [94.4, 4268.0], [94.5, 4305.0], [94.6, 4346.0], [94.7, 4390.0], [94.8, 4447.0], [94.9, 4482.0], [95.0, 4514.0], [95.1, 4557.0], [95.2, 4592.0], [95.3, 4631.0], [95.4, 4687.0], [95.5, 4734.0], [95.6, 4772.0], [95.7, 4812.0], [95.8, 4863.0], [95.9, 4922.0], [96.0, 4985.0], [96.1, 5013.0], [96.2, 5067.0], [96.3, 5137.0], [96.4, 5197.0], [96.5, 5282.0], [96.6, 5334.0], [96.7, 5405.0], [96.8, 5488.0], [96.9, 5562.0], [97.0, 5621.0], [97.1, 5717.0], [97.2, 5786.0], [97.3, 5896.0], [97.4, 5980.0], [97.5, 6126.0], [97.6, 6232.0], [97.7, 6301.0], [97.8, 6478.0], [97.9, 6577.0], [98.0, 6852.0], [98.1, 7819.0], [98.2, 8006.0], [98.3, 8007.0], [98.4, 12005.0], [98.5, 16004.0], [98.6, 16005.0], [98.7, 16005.0], [98.8, 16006.0], [98.9, 16006.0], [99.0, 16007.0], [99.1, 20003.0], [99.2, 20004.0], [99.3, 20005.0], [99.4, 20005.0], [99.5, 20005.0], [99.6, 20005.0], [99.7, 20006.0], [99.8, 20006.0], [99.9, 20006.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 14869.0, "series": [{"data": [[0.0, 14869.0], [600.0, 71.0], [700.0, 58.0], [800.0, 71.0], [900.0, 81.0], [1000.0, 90.0], [1100.0, 76.0], [1200.0, 76.0], [1300.0, 88.0], [1400.0, 77.0], [1500.0, 80.0], [1600.0, 84.0], [1700.0, 76.0], [1800.0, 80.0], [1900.0, 108.0], [2000.0, 88.0], [2100.0, 94.0], [2200.0, 113.0], [2300.0, 112.0], [2400.0, 120.0], [2500.0, 109.0], [2600.0, 136.0], [2800.0, 150.0], [2700.0, 121.0], [2900.0, 127.0], [3000.0, 135.0], [3100.0, 143.0], [3300.0, 131.0], [3200.0, 147.0], [3400.0, 146.0], [3500.0, 121.0], [3600.0, 105.0], [3700.0, 111.0], [3800.0, 104.0], [3900.0, 88.0], [4000.0, 86.0], [4100.0, 80.0], [4200.0, 72.0], [4300.0, 49.0], [4600.0, 50.0], [4500.0, 46.0], [4400.0, 49.0], [4700.0, 46.0], [4800.0, 32.0], [5000.0, 40.0], [4900.0, 44.0], [5100.0, 36.0], [5300.0, 32.0], [5200.0, 25.0], [5600.0, 27.0], [5500.0, 32.0], [5400.0, 37.0], [5800.0, 29.0], [5700.0, 18.0], [6000.0, 16.0], [5900.0, 18.0], [6100.0, 22.0], [6300.0, 16.0], [6200.0, 16.0], [6400.0, 12.0], [6500.0, 15.0], [6600.0, 12.0], [6900.0, 6.0], [6800.0, 2.0], [6700.0, 2.0], [7000.0, 10.0], [7100.0, 1.0], [7300.0, 3.0], [7200.0, 2.0], [7400.0, 2.0], [7600.0, 2.0], [7500.0, 1.0], [7700.0, 2.0], [7800.0, 1.0], [8000.0, 1.0], [20000.0, 55.0], [100.0, 244.0], [200.0, 84.0], [300.0, 86.0], [400.0, 82.0], [500.0, 71.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[600.0, 14.0], [700.0, 15.0], [800.0, 14.0], [900.0, 17.0], [1000.0, 8.0], [1100.0, 6.0], [1200.0, 4.0], [1300.0, 9.0], [1400.0, 9.0], [1500.0, 4.0], [100.0, 4.0], [1600.0, 7.0], [1700.0, 3.0], [1800.0, 12.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 5.0], [2200.0, 2.0], [2300.0, 2.0], [2400.0, 3.0], [2500.0, 4.0], [2600.0, 2.0], [2700.0, 4.0], [2800.0, 1.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 3.0], [200.0, 13.0], [3200.0, 2.0], [3400.0, 1.0], [3800.0, 1.0], [4100.0, 1.0], [300.0, 7.0], [400.0, 6.0], [500.0, 10.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 14338.0], [600.0, 57.0], [700.0, 72.0], [800.0, 69.0], [900.0, 78.0], [1000.0, 122.0], [1100.0, 114.0], [1200.0, 103.0], [1300.0, 97.0], [1400.0, 77.0], [1500.0, 96.0], [1600.0, 80.0], [1700.0, 82.0], [1800.0, 96.0], [1900.0, 118.0], [2000.0, 121.0], [2100.0, 105.0], [2200.0, 117.0], [2300.0, 123.0], [2400.0, 121.0], [2500.0, 128.0], [2600.0, 116.0], [2700.0, 158.0], [2800.0, 144.0], [2900.0, 124.0], [3000.0, 166.0], [3100.0, 137.0], [3300.0, 161.0], [3200.0, 146.0], [3400.0, 141.0], [3500.0, 129.0], [3700.0, 115.0], [3600.0, 146.0], [3800.0, 103.0], [3900.0, 66.0], [4000.0, 61.0], [4100.0, 63.0], [4200.0, 45.0], [4300.0, 49.0], [4500.0, 54.0], [4400.0, 49.0], [4600.0, 39.0], [4700.0, 50.0], [4800.0, 31.0], [5100.0, 33.0], [5000.0, 39.0], [4900.0, 43.0], [5200.0, 28.0], [5300.0, 31.0], [5400.0, 23.0], [5500.0, 33.0], [5600.0, 22.0], [5800.0, 19.0], [5700.0, 25.0], [5900.0, 20.0], [6100.0, 19.0], [6000.0, 16.0], [6200.0, 22.0], [6300.0, 14.0], [6500.0, 17.0], [6400.0, 11.0], [6600.0, 12.0], [6800.0, 7.0], [6700.0, 6.0], [6900.0, 6.0], [7100.0, 4.0], [7000.0, 1.0], [7200.0, 1.0], [7300.0, 1.0], [7500.0, 1.0], [7800.0, 1.0], [8000.0, 51.0], [8400.0, 1.0], [12000.0, 24.0], [16000.0, 123.0], [20000.0, 180.0], [100.0, 256.0], [200.0, 87.0], [300.0, 89.0], [400.0, 51.0], [500.0, 76.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 20000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1632.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 28717.0, "series": [{"data": [[0.0, 2340.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1632.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 7511.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 28717.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 18.234042553191493, "minX": 1.58543772E12, "maxY": 200.0, "series": [{"data": [[1.58543808E12, 200.0], [1.58543778E12, 199.97394957983195], [1.58543826E12, 165.41176470588294], [1.58543796E12, 200.0], [1.58543814E12, 200.0], [1.58543784E12, 200.0], [1.58543832E12, 18.234042553191493], [1.58543802E12, 200.0], [1.58543772E12, 117.71719038817017], [1.5854382E12, 200.0], [1.5854379E12, 200.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543832E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.75, "minX": 1.0, "maxY": 4042.0, "series": [{"data": [[2.0, 1.0], [3.0, 1.6666666666666667], [6.0, 1.5], [8.0, 1.1666666666666665], [11.0, 1.0], [13.0, 1.0], [14.0, 1.0], [15.0, 1.0], [17.0, 1.0], [18.0, 1.0], [21.0, 1.0], [22.0, 1.0], [25.0, 47.89473684210526], [26.0, 85.0], [27.0, 45.4], [28.0, 1.0], [29.0, 1.0], [30.0, 38.0], [31.0, 56.0], [32.0, 45.0], [35.0, 151.0], [34.0, 1.0], [37.0, 40.7], [38.0, 40.375], [39.0, 29.454545454545453], [40.0, 121.0], [41.0, 1.0], [42.0, 75.0], [43.0, 29.333333333333336], [44.0, 19.857142857142858], [45.0, 41.8], [46.0, 52.8], [47.0, 1.3333333333333333], [48.0, 35.888888888888886], [49.0, 14.4], [50.0, 66.0], [51.0, 102.11111111111113], [52.0, 143.16666666666669], [53.0, 102.5], [54.0, 102.37500000000001], [55.0, 69.0], [56.0, 60.125], [57.0, 148.0], [58.0, 51.90909090909091], [59.0, 145.0], [60.0, 71.0], [61.0, 56.5], [62.0, 94.25], [63.0, 58.58333333333334], [64.0, 112.57142857142856], [65.0, 142.25], [66.0, 77.66666666666667], [67.0, 38.85714285714285], [68.0, 24.75], [69.0, 48.49999999999999], [70.0, 139.0], [71.0, 72.0], [72.0, 66.42857142857143], [73.0, 104.2], [74.0, 33.94736842105264], [75.0, 209.0], [76.0, 94.14285714285715], [77.0, 40.35714285714285], [78.0, 134.75], [79.0, 130.16666666666669], [80.0, 177.14285714285714], [81.0, 419.0], [82.0, 320.42857142857144], [83.0, 244.12500000000003], [84.0, 213.0], [85.0, 42.37500000000001], [86.0, 47.07692307692306], [87.0, 28.94444444444444], [88.0, 143.875], [89.0, 482.0], [91.0, 640.3333333333334], [90.0, 0.8571428571428572], [92.0, 695.25], [93.0, 854.7], [94.0, 917.0], [95.0, 443.047619047619], [96.0, 544.0], [97.0, 94.56000000000003], [98.0, 400.5], [99.0, 258.64705882352945], [100.0, 233.7], [101.0, 96.30232558139538], [102.0, 382.62500000000006], [103.0, 63.2857142857143], [104.0, 241.63636363636363], [105.0, 151.4], [106.0, 186.66666666666666], [107.0, 53.705882352941174], [108.0, 46.631578947368425], [109.0, 43.13333333333333], [110.0, 101.44444444444444], [111.0, 305.85714285714283], [112.0, 273.55555555555554], [113.0, 479.41666666666663], [114.0, 138.0454545454545], [115.0, 202.84615384615387], [116.0, 310.66666666666663], [117.0, 710.8], [118.0, 121.23333333333338], [119.0, 290.5], [120.0, 294.4117647058824], [121.0, 384.4545454545455], [122.0, 25.19444444444445], [123.0, 199.79411764705884], [124.0, 390.7142857142858], [125.0, 398.8947368421054], [126.0, 180.0], [127.0, 211.99999999999997], [128.0, 200.5], [129.0, 547.3999999999999], [130.0, 620.4230769230767], [131.0, 576.5], [132.0, 828.5925925925926], [133.0, 567.4285714285713], [134.0, 570.375], [135.0, 235.74999999999994], [136.0, 143.61111111111111], [137.0, 137.0263157894737], [138.0, 161.77272727272728], [139.0, 93.76923076923076], [140.0, 50.62857142857144], [141.0, 118.8], [142.0, 71.61538461538461], [143.0, 39.25], [144.0, 141.79999999999998], [145.0, 60.387096774193566], [146.0, 288.6923076923077], [147.0, 278.5714285714286], [148.0, 239.88888888888889], [149.0, 78.46428571428572], [150.0, 459.22222222222223], [151.0, 108.33333333333336], [152.0, 343.38888888888886], [153.0, 254.0], [154.0, 504.77777777777777], [155.0, 348.4444444444444], [156.0, 129.85714285714283], [157.0, 603.0555555555555], [158.0, 851.0], [159.0, 917.1111111111111], [160.0, 442.90476190476204], [161.0, 612.2666666666667], [162.0, 378.00000000000006], [163.0, 703.1666666666667], [164.0, 971.1428571428571], [165.0, 242.64000000000001], [166.0, 271.93333333333334], [167.0, 278.24], [168.0, 709.6923076923078], [169.0, 824.8], [170.0, 838.8], [171.0, 170.53225806451618], [172.0, 645.8181818181818], [173.0, 132.33333333333334], [174.0, 19.230769230769223], [175.0, 539.4137931034484], [176.0, 992.2666666666665], [177.0, 155.99999999999994], [178.0, 1023.5], [179.0, 332.5833333333333], [180.0, 498.0], [181.0, 396.08823529411785], [182.0, 20.037735849056617], [183.0, 383.0285714285714], [184.0, 537.3243243243244], [185.0, 241.18181818181807], [186.0, 1084.333333333333], [187.0, 262.97058823529414], [188.0, 337.28260869565224], [189.0, 230.26923076923083], [190.0, 194.83333333333337], [191.0, 73.6190476190476], [192.0, 393.6470588235294], [193.0, 383.813953488372], [194.0, 844.3333333333334], [195.0, 57.26530612244896], [196.0, 85.22352941176474], [197.0, 1313.294117647059], [198.0, 274.02083333333337], [199.0, 490.44444444444457], [200.0, 827.2556778678949], [1.0, 1.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[191.5113500000006, 749.939849999999]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[10.0, 2276.6666666666665], [11.0, 1119.3333333333333], [12.0, 594.0], [13.0, 242.5], [14.0, 226.0], [16.0, 530.0], [18.0, 888.0], [19.0, 687.5], [22.0, 865.5], [23.0, 445.6666666666667], [24.0, 166.0], [25.0, 315.0], [27.0, 573.0], [28.0, 572.0], [29.0, 288.5], [30.0, 273.0], [31.0, 170.0], [32.0, 163.0], [33.0, 236.0], [35.0, 572.0], [36.0, 327.5], [37.0, 290.0], [38.0, 229.0], [40.0, 468.0], [41.0, 424.0], [42.0, 283.0], [43.0, 206.0], [44.0, 214.0], [45.0, 295.0], [47.0, 492.0], [48.0, 353.0], [49.0, 396.0], [50.0, 369.0], [51.0, 466.0], [52.0, 485.0], [53.0, 608.0], [56.0, 841.0], [57.0, 773.0], [58.0, 863.0], [59.0, 762.0], [60.0, 736.0], [61.0, 636.5], [63.0, 708.0], [64.0, 689.0], [65.0, 802.0], [66.0, 658.0], [67.0, 856.0], [69.0, 943.0], [70.0, 881.5], [71.0, 715.0], [72.0, 620.0], [73.0, 817.0], [74.0, 710.0], [76.0, 995.0], [77.0, 1026.0], [78.0, 754.0], [79.0, 908.0], [80.0, 844.0], [81.0, 834.0], [82.0, 640.0], [83.0, 592.0], [84.0, 604.0], [85.0, 603.0], [87.0, 708.0], [88.0, 826.0], [89.0, 777.0], [92.0, 1371.0], [93.0, 1288.0], [95.0, 1243.0], [96.0, 1844.0], [97.0, 1524.0], [98.0, 2134.0], [99.0, 1570.5], [100.0, 1322.0], [102.0, 1453.5], [103.0, 1372.5], [105.0, 1046.0], [108.0, 1229.0], [111.0, 1273.6666666666667], [112.0, 1379.0], [113.0, 960.0], [114.0, 912.0], [115.0, 748.0], [116.0, 770.0], [117.0, 782.0], [118.0, 829.0], [120.0, 948.0], [121.0, 949.0], [122.0, 951.0], [123.0, 909.0], [124.0, 937.0], [125.0, 1013.0], [126.0, 1199.0], [127.0, 1013.0], [128.0, 1028.0], [131.0, 1651.0], [134.0, 1976.0], [137.0, 1674.0], [138.0, 2572.5], [139.0, 1767.0], [140.0, 3289.0], [141.0, 1863.0], [144.0, 2558.0], [145.0, 1776.0], [147.0, 2811.5], [148.0, 2496.0], [149.0, 2015.5], [150.0, 2060.0], [151.0, 1605.3333333333333], [153.0, 1175.0], [154.0, 1875.0], [155.0, 1382.5], [157.0, 1313.0], [159.0, 1490.0], [161.0, 1769.0], [163.0, 1583.0], [164.0, 1783.0], [165.0, 1454.0], [166.0, 1392.0], [168.0, 1569.0], [171.0, 1694.0], [173.0, 2013.0], [174.0, 1848.0], [175.0, 1594.0], [176.0, 553.5], [178.0, 4042.0], [179.0, 444.0], [181.0, 1884.5], [184.0, 2531.6666666666665], [185.0, 2759.0], [188.0, 2091.5], [189.0, 1052.0], [191.0, 2907.0], [192.0, 2036.6666666666667], [195.0, 1398.0], [196.0, 2681.0], [198.0, 1847.0], [199.0, 2796.0], [200.0, 2268.222222222222]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[104.14000000000001, 1282.595]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[3.0, 1.25], [4.0, 1.0], [8.0, 1.0], [9.0, 1.0], [10.0, 1.0], [11.0, 1.0], [13.0, 1.0], [14.0, 1.0], [18.0, 1.0], [19.0, 1.0], [21.0, 1567.6875], [22.0, 417.0], [23.0, 64.0], [25.0, 1.0], [26.0, 151.5], [27.0, 24.200000000000003], [28.0, 101.0], [29.0, 1.0], [30.0, 36.0], [31.0, 50.0], [33.0, 48.333333333333336], [32.0, 1.0], [34.0, 74.72727272727272], [35.0, 140.5], [36.0, 47.8], [37.0, 1.0], [38.0, 27.5], [39.0, 47.33333333333333], [40.0, 53.625], [41.0, 35.0], [42.0, 36.8], [43.0, 40.0], [44.0, 15.666666666666668], [45.0, 28.499999999999996], [46.0, 67.875], [47.0, 49.400000000000006], [48.0, 46.57142857142857], [49.0, 99.7], [50.0, 37.66666666666667], [51.0, 82.0], [52.0, 83.33333333333333], [53.0, 126.25], [54.0, 112.25], [55.0, 76.0], [56.0, 71.0], [57.0, 123.0], [58.0, 44.38461538461539], [59.0, 136.8], [60.0, 110.42857142857143], [61.0, 88.5], [62.0, 142.85714285714286], [63.0, 59.9], [64.0, 118.0], [65.0, 64.0], [66.0, 47.5], [67.0, 41.333333333333336], [68.0, 62.8], [69.0, 34.0625], [70.0, 99.5], [71.0, 63.454545454545446], [72.0, 70.12499999999999], [73.0, 62.44444444444445], [74.0, 63.125], [75.0, 198.13333333333335], [76.0, 119.33333333333333], [77.0, 58.00000000000001], [78.0, 94.57142857142857], [79.0, 58.5], [80.0, 143.0], [81.0, 225.25], [82.0, 325.8], [83.0, 297.65], [84.0, 138.71428571428572], [85.0, 80.75], [86.0, 120.38461538461539], [87.0, 103.5], [88.0, 174.4], [89.0, 475.75], [91.0, 608.3333333333333], [90.0, 1.0], [92.0, 562.7333333333332], [93.0, 655.7], [94.0, 962.5], [95.0, 243.68421052631575], [96.0, 935.5555555555555], [97.0, 101.31578947368422], [98.0, 350.58333333333337], [99.0, 165.05263157894737], [100.0, 106.0], [101.0, 68.04761904761905], [102.0, 317.0], [103.0, 98.66666666666666], [104.0, 175.57142857142856], [105.0, 208.75], [106.0, 199.00000000000003], [107.0, 42.36666666666665], [108.0, 64.9090909090909], [109.0, 58.17647058823528], [110.0, 92.19999999999999], [111.0, 432.25], [112.0, 323.9], [113.0, 562.0], [114.0, 172.39999999999995], [115.0, 204.86666666666667], [116.0, 350.6666666666667], [117.0, 698.5714285714287], [118.0, 246.6315789473684], [119.0, 430.8500000000001], [120.0, 298.6521739130436], [121.0, 309.17647058823525], [122.0, 191.5675675675676], [123.0, 181.12195121951217], [124.0, 505.3571428571428], [125.0, 632.1333333333333], [126.0, 75.60000000000004], [127.0, 115.05714285714288], [128.0, 510.7692307692308], [129.0, 739.923076923077], [130.0, 313.88235294117635], [131.0, 1143.818181818182], [132.0, 633.1000000000001], [133.0, 490.909090909091], [134.0, 407.84615384615375], [135.0, 352.9411764705883], [136.0, 152.875], [137.0, 88.17647058823528], [138.0, 125.41176470588232], [139.0, 156.3846153846154], [140.0, 40.83870967741935], [141.0, 116.05882352941178], [142.0, 88.75], [143.0, 36.83333333333333], [144.0, 153.875], [145.0, 47.32000000000001], [146.0, 300.29999999999995], [147.0, 257.5882352941176], [148.0, 227.66666666666666], [149.0, 121.26829268292686], [150.0, 508.6666666666667], [151.0, 205.95000000000002], [152.0, 349.42857142857144], [153.0, 314.72727272727275], [154.0, 472.2222222222221], [155.0, 554.4444444444445], [156.0, 230.70000000000002], [157.0, 757.75], [158.0, 586.6666666666667], [159.0, 1036.153846153846], [160.0, 700.086956521739], [161.0, 611.4], [162.0, 835.3333333333334], [163.0, 665.6250000000001], [164.0, 957.7142857142858], [165.0, 286.11428571428576], [166.0, 290.2666666666667], [167.0, 226.42105263157893], [168.0, 790.875], [169.0, 660.0833333333333], [170.0, 719.2142857142857], [171.0, 198.19642857142858], [172.0, 709.9333333333333], [173.0, 93.0], [174.0, 25.14285714285714], [175.0, 172.322033898305], [176.0, 1114.923076923077], [177.0, 173.1714285714285], [178.0, 1247.6249999999998], [179.0, 739.5714285714286], [180.0, 175.19999999999996], [181.0, 950.1428571428571], [182.0, 29.740740740740726], [183.0, 566.977272727273], [184.0, 355.6153846153846], [185.0, 488.782608695652], [186.0, 1114.375], [187.0, 240.38888888888903], [188.0, 937.8461538461537], [189.0, 538.0277777777779], [190.0, 295.4181818181817], [191.0, 535.7777777777779], [192.0, 353.0000000000001], [193.0, 183.94594594594594], [194.0, 886.851851851852], [195.0, 168.22222222222226], [196.0, 55.85714285714286], [198.0, 348.9423076923078], [199.0, 469.1785714285714], [197.0, 0.75], [200.0, 1133.8507566533283], [1.0, 1.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[191.48425000000034, 1018.5283499999852]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.58543772E12, "maxY": 270797.31666666665, "series": [{"data": [[1.58543808E12, 219956.91666666666], [1.58543778E12, 270797.31666666665], [1.58543826E12, 163238.25], [1.58543796E12, 257005.36666666667], [1.58543814E12, 219956.91666666666], [1.58543784E12, 212310.65], [1.58543832E12, 3235.1666666666665], [1.58543802E12, 145959.58333333334], [1.58543772E12, 236498.95], [1.5854382E12, 219991.33333333334], [1.5854379E12, 229812.91666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58543808E12, 0.0], [1.58543778E12, 16840.05], [1.58543826E12, 0.0], [1.58543796E12, 17360.45], [1.58543814E12, 0.0], [1.58543784E12, 16684.566666666666], [1.58543832E12, 0.0], [1.58543802E12, 6091.333333333333], [1.58543772E12, 14730.166666666666], [1.5854382E12, 0.0], [1.5854379E12, 11545.866666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543832E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.9736677115987477, "minX": 1.58543772E12, "maxY": 3240.421362489485, "series": [{"data": [[1.58543808E12, 1.1640062597809078], [1.58543778E12, 3240.421362489485], [1.58543826E12, 0.9920767306088387], [1.58543796E12, 2828.6821766561516], [1.58543814E12, 1.0426733605271394], [1.58543784E12, 1586.382697947214], [1.58543832E12, 1.0943396226415099], [1.58543802E12, 529.5769020251778], [1.58543772E12, 706.5116772823786], [1.5854382E12, 0.9962523422860733], [1.5854379E12, 2726.9825454545385]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58543778E12, 2277.9090909090914], [1.58543772E12, 1224.6666666666665]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58543808E12, 1.1317271589486873], [1.58543778E12, 3156.2550847457633], [1.58543826E12, 0.9833688699360337], [1.58543796E12, 2824.2768754833714], [1.58543814E12, 1.0864544319600526], [1.58543784E12, 2306.6456928839], [1.58543832E12, 1.024390243902439], [1.58543802E12, 2607.3723163841723], [1.58543772E12, 757.1500484027106], [1.5854382E12, 0.9736677115987477], [1.5854379E12, 3188.4550601556925]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543832E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58543772E12, "maxY": 3239.882253994955, "series": [{"data": [[1.58543808E12, 0.0], [1.58543778E12, 3239.882253994955], [1.58543826E12, 0.0], [1.58543796E12, 2828.1648264984174], [1.58543814E12, 0.0], [1.58543784E12, 1581.0065982404706], [1.58543832E12, 0.0], [1.58543802E12, 495.75424192665747], [1.58543772E12, 704.6815286624202], [1.5854382E12, 0.0], [1.5854379E12, 1969.4690909090912]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58543778E12, 2277.2727272727275], [1.58543772E12, 1221.566137566137]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58543808E12, 0.0], [1.58543778E12, 3155.7822033898306], [1.58543826E12, 0.0], [1.58543796E12, 2823.848414539829], [1.58543814E12, 0.0], [1.58543784E12, 1728.2823970037475], [1.58543832E12, 0.0], [1.58543802E12, 465.9802259887021], [1.58543772E12, 755.2875121006772], [1.5854382E12, 0.0], [1.5854379E12, 1927.356687898091]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543832E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.3269639065817408, "minX": 1.58543772E12, "maxY": 1.0423280423280432, "series": [{"data": [[1.58543808E12, 0.659780907668231], [1.58543778E12, 0.6955424726661055], [1.58543826E12, 0.5020850708924097], [1.58543796E12, 0.4274447949526807], [1.58543814E12, 0.5569501098211495], [1.58543784E12, 0.6165689149560111], [1.58543832E12, 0.5660377358490565], [1.58543802E12, 0.4510125889436232], [1.58543772E12, 0.3269639065817408], [1.5854382E12, 0.487820112429731], [1.5854379E12, 0.5439999999999988]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58543778E12, 0.7272727272727272], [1.58543772E12, 1.0423280423280432]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58543808E12, 0.6214017521902382], [1.58543778E12, 0.7050847457627115], [1.58543826E12, 0.5134328358208956], [1.58543796E12, 0.5212683681361171], [1.58543814E12, 0.5914481897627951], [1.58543784E12, 0.7288389513108595], [1.58543832E12, 0.4878048780487805], [1.58543802E12, 0.5186440677966108], [1.58543772E12, 0.7792836398838326], [1.5854382E12, 0.49122257053291574], [1.5854379E12, 0.5435244161358813]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543832E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.58543772E12, "maxY": 7833.0, "series": [{"data": [[1.58543778E12, 7833.0], [1.58543796E12, 7819.0], [1.58543784E12, 6458.0], [1.58543802E12, 4598.0], [1.58543772E12, 4250.0], [1.5854379E12, 5591.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58543778E12, 127.0], [1.58543796E12, 2.0], [1.58543784E12, 1.0], [1.58543802E12, 1.0], [1.58543772E12, 34.0], [1.5854379E12, 605.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58543778E12, 5895.0], [1.58543796E12, 5192.000000000001], [1.58543784E12, 3260.0], [1.58543802E12, 3827.0], [1.58543772E12, 1631.8000000000004], [1.5854379E12, 4267.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58543778E12, 6998.439999999999], [1.58543796E12, 6538.0], [1.58543784E12, 4373.239999999962], [1.58543802E12, 4169.5599999999995], [1.58543772E12, 3484.12], [1.5854379E12, 4974.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58543778E12, 6331.599999999998], [1.58543796E12, 5695.8], [1.58543784E12, 3518.249999999999], [1.58543802E12, 3973.7999999999997], [1.58543772E12, 2938.5999999999995], [1.5854379E12, 4554.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543802E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 16006.0, "series": [{"data": [[2.0, 378.0], [3.0, 779.0], [6.0, 594.0], [7.0, 2169.0], [11.0, 123.0], [15.0, 55.0], [21.0, 92.0], [22.0, 492.0], [23.0, 1597.0], [24.0, 290.0], [25.0, 572.0], [26.0, 2144.0], [27.0, 3109.0], [28.0, 2411.0], [29.0, 3646.0], [30.0, 3901.5], [31.0, 2553.0], [33.0, 2817.5], [32.0, 3119.0], [35.0, 2889.0], [34.0, 3628.0], [37.0, 3209.0], [36.0, 3440.5], [38.0, 3252.5], [39.0, 3168.5], [41.0, 3167.0], [40.0, 2820.0], [43.0, 2613.5], [42.0, 3014.0], [45.0, 2068.0], [44.0, 2778.0], [46.0, 2432.0], [47.0, 2622.0], [48.0, 1629.0], [49.0, 2477.0], [51.0, 1481.0], [50.0, 3357.0], [52.0, 1622.0], [53.0, 3290.0], [55.0, 1259.0], [56.0, 402.0], [58.0, 1022.5], [60.0, 154.0], [61.0, 2270.5], [62.0, 3121.5], [65.0, 395.0], [66.0, 1200.5], [67.0, 2461.0], [68.0, 280.5], [69.0, 80.0], [75.0, 127.0], [77.0, 1035.0], [76.0, 53.5], [78.0, 2453.0], [82.0, 3296.5], [86.0, 9.5], [87.0, 43.0], [91.0, 77.5], [95.0, 4.0], [97.0, 5.0], [96.0, 2943.0], [106.0, 4.0], [104.0, 47.0], [111.0, 3.0], [118.0, 977.0], [121.0, 1050.0], [129.0, 3.0], [162.0, 1730.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 1.0], [5.0, 1.0], [6.0, 1.0], [7.0, 1.0], [9.0, 1.0], [12.0, 1.0], [13.0, 1.0], [15.0, 1.0], [16.0, 8006.0], [18.0, 1.0], [19.0, 1503.0], [21.0, 2.0], [23.0, 16006.0], [24.0, 1.0], [25.0, 1756.0], [26.0, 1.0], [27.0, 1.0], [28.0, 2892.0], [29.0, 3197.0], [30.0, 1.0], [31.0, 1.0], [32.0, 2458.0], [33.0, 1.0], [34.0, 1.0], [35.0, 8005.0], [37.0, 1725.5], [36.0, 2604.0], [39.0, 1.0], [38.0, 1.0], [40.0, 3006.0], [41.0, 1.0], [43.0, 1.0], [42.0, 1524.0], [44.0, 1297.0], [45.0, 2583.0], [47.0, 4665.0], [46.0, 2697.0], [48.0, 1.0], [49.0, 2349.5], [51.0, 1111.0], [50.0, 1.0], [52.0, 623.0], [53.0, 1.0], [55.0, 1.0], [54.0, 1.0], [56.0, 1.0], [58.0, 1.0], [60.0, 1.0], [61.0, 2250.0], [63.0, 1.0], [67.0, 2071.5], [65.0, 1.0], [66.0, 0.0], [69.0, 1.0], [70.0, 1.0], [75.0, 1.0], [74.0, 1.0], [72.0, 1.0], [73.0, 1.0], [76.0, 1.0], [77.0, 1.0], [78.0, 1.0], [79.0, 1.0], [82.0, 1.0], [83.0, 1.0], [81.0, 1.0], [86.0, 1.0], [87.0, 1.0], [85.0, 1.0], [89.0, 1.0], [91.0, 1.0], [90.0, 1.0], [88.0, 1.0], [93.0, 1.0], [92.0, 1.0], [95.0, 1.0], [94.0, 1.0], [97.0, 1.0], [96.0, 1.0], [98.0, 1.0], [99.0, 1.0], [103.0, 1.0], [102.0, 1.0], [101.0, 1.0], [100.0, 1.0], [106.0, 1.0], [104.0, 1.0], [105.0, 1.0], [107.0, 1.0], [109.0, 1.0], [111.0, 1.0], [110.0, 1.0], [108.0, 1.0], [114.0, 1.0], [112.0, 1.0], [115.0, 1.0], [113.0, 1.0], [118.0, 1.0], [116.0, 1.0], [119.0, 1.0], [117.0, 1.0], [121.0, 1.0], [122.0, 1.0], [123.0, 1.0], [120.0, 1.0], [126.0, 1.0], [124.0, 1.0], [127.0, 1.0], [125.0, 1.0], [129.0, 1.0], [131.0, 1.0], [132.0, 1.0], [135.0, 1.0], [130.0, 1.0], [128.0, 1.0], [143.0, 1.0], [140.0, 1.0], [142.0, 1.0], [136.0, 1.0], [137.0, 1.0], [152.0, 1.0], [1.0, 1.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 162.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4664.0, "series": [{"data": [[2.0, 377.0], [3.0, 779.0], [6.0, 594.0], [7.0, 2169.0], [11.0, 117.0], [15.0, 54.0], [21.0, 88.5], [22.0, 492.0], [23.0, 1596.0], [24.0, 290.0], [25.0, 571.0], [26.0, 2144.0], [27.0, 3108.0], [28.0, 2410.0], [29.0, 3646.0], [30.0, 3901.0], [31.0, 2552.0], [33.0, 2816.5], [32.0, 3119.0], [35.0, 2889.0], [34.0, 3628.0], [37.0, 3209.0], [36.0, 3440.5], [38.0, 3251.5], [39.0, 3168.0], [41.0, 3167.0], [40.0, 2819.0], [43.0, 2613.0], [42.0, 3006.0], [45.0, 2067.0], [44.0, 2777.5], [46.0, 2432.0], [47.0, 2621.5], [48.0, 1628.5], [49.0, 2477.0], [51.0, 1481.0], [50.0, 3357.0], [52.0, 1622.0], [53.0, 3289.0], [55.0, 1259.0], [56.0, 402.0], [58.0, 1022.0], [60.0, 154.0], [61.0, 2270.0], [62.0, 3121.0], [65.0, 395.0], [66.0, 1200.0], [67.0, 2461.0], [68.0, 273.0], [69.0, 80.0], [75.0, 126.0], [77.0, 1027.0], [76.0, 53.5], [78.0, 2453.0], [82.0, 3291.0], [86.0, 9.5], [87.0, 43.0], [91.0, 77.5], [95.0, 4.0], [97.0, 5.0], [96.0, 2943.0], [106.0, 4.0], [104.0, 46.0], [111.0, 3.0], [118.0, 977.0], [121.0, 1050.0], [129.0, 3.0], [162.0, 1730.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [9.0, 0.0], [12.0, 0.0], [13.0, 0.0], [15.0, 0.0], [16.0, 0.0], [18.0, 0.0], [19.0, 0.0], [21.0, 0.0], [23.0, 0.0], [24.0, 0.0], [25.0, 1751.0], [26.0, 0.0], [27.0, 0.0], [28.0, 2892.0], [29.0, 3196.0], [30.0, 0.0], [31.0, 0.0], [32.0, 2445.0], [33.0, 0.0], [34.0, 0.0], [35.0, 0.0], [37.0, 1725.5], [36.0, 2603.5], [39.0, 0.0], [38.0, 0.0], [40.0, 572.0], [41.0, 0.0], [43.0, 0.0], [42.0, 1524.0], [44.0, 1297.0], [45.0, 2572.0], [47.0, 4664.0], [46.0, 0.0], [48.0, 0.0], [49.0, 2349.5], [51.0, 1111.0], [50.0, 0.0], [52.0, 623.0], [53.0, 0.0], [55.0, 0.0], [54.0, 0.0], [56.0, 0.0], [58.0, 0.0], [60.0, 0.0], [61.0, 2250.0], [63.0, 0.0], [67.0, 2070.5], [65.0, 0.0], [66.0, 0.0], [69.0, 0.0], [70.0, 0.0], [75.0, 0.0], [74.0, 0.0], [72.0, 0.0], [73.0, 0.0], [76.0, 0.0], [77.0, 0.0], [78.0, 0.0], [79.0, 0.0], [82.0, 0.0], [83.0, 0.0], [81.0, 0.0], [86.0, 0.0], [87.0, 0.0], [85.0, 0.0], [89.0, 0.0], [91.0, 0.0], [90.0, 0.0], [88.0, 0.0], [93.0, 0.0], [92.0, 0.0], [95.0, 0.0], [94.0, 0.0], [97.0, 0.0], [96.0, 0.0], [98.0, 0.0], [99.0, 0.0], [103.0, 0.0], [102.0, 0.0], [101.0, 0.0], [100.0, 0.0], [106.0, 0.0], [104.0, 0.0], [105.0, 0.0], [107.0, 0.0], [109.0, 0.0], [111.0, 0.0], [110.0, 0.0], [108.0, 0.0], [114.0, 0.0], [112.0, 0.0], [115.0, 0.0], [113.0, 0.0], [118.0, 0.0], [116.0, 0.0], [119.0, 0.0], [117.0, 0.0], [121.0, 0.0], [122.0, 0.0], [123.0, 0.0], [120.0, 0.0], [126.0, 0.0], [124.0, 0.0], [127.0, 0.0], [125.0, 0.0], [129.0, 0.0], [131.0, 0.0], [132.0, 0.0], [135.0, 0.0], [130.0, 0.0], [128.0, 0.0], [143.0, 0.0], [140.0, 0.0], [142.0, 0.0], [136.0, 0.0], [137.0, 0.0], [152.0, 0.0], [1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 162.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.5666666666666667, "minX": 1.58543772E12, "maxY": 106.53333333333333, "series": [{"data": [[1.58543808E12, 106.51666666666667], [1.58543778E12, 38.95], [1.58543826E12, 79.03333333333333], [1.58543796E12, 42.86666666666667], [1.58543814E12, 106.53333333333333], [1.58543784E12, 46.05], [1.58543832E12, 1.5666666666666667], [1.58543802E12, 57.55], [1.58543772E12, 38.35], [1.5854382E12, 106.53333333333333], [1.5854379E12, 46.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543832E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58543772E12, "maxY": 106.53333333333333, "series": [{"data": [[1.58543778E12, 37.916666666666664], [1.58543796E12, 39.68333333333333], [1.58543784E12, 37.5], [1.58543802E12, 13.916666666666666], [1.58543772E12, 35.71666666666667], [1.5854379E12, 26.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58543796E12, 0.11666666666666667], [1.58543784E12, 0.016666666666666666], [1.58543772E12, 0.03333333333333333], [1.5854379E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.TruncatedChunkException", "isController": false}, {"data": [[1.58543778E12, 0.75], [1.58543796E12, 0.6666666666666666], [1.58543784E12, 0.45], [1.58543802E12, 0.11666666666666667], [1.58543772E12, 0.13333333333333333], [1.5854379E12, 0.4666666666666667]], "isOverall": false, "label": "401", "isController": false}, {"data": [[1.58543778E12, 1.0], [1.58543796E12, 0.43333333333333335], [1.58543784E12, 1.2333333333333334], [1.58543802E12, 0.25]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.58543808E12, 106.51666666666667], [1.58543826E12, 79.05], [1.58543796E12, 1.2833333333333334], [1.58543814E12, 106.51666666666667], [1.58543784E12, 5.066666666666666], [1.58543832E12, 1.5666666666666667], [1.58543802E12, 45.65], [1.58543772E12, 0.016666666666666666], [1.5854382E12, 106.53333333333333], [1.5854379E12, 19.083333333333332]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.58543802E12, 0.016666666666666666]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.58543796E12, 0.5], [1.58543784E12, 0.7166666666666667], [1.58543772E12, 0.16666666666666666], [1.5854379E12, 0.23333333333333334]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543832E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.58543772E12, "maxY": 53.4, "series": [{"data": [[1.58543778E12, 0.18333333333333332], [1.58543772E12, 3.1]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58543772E12, 0.05]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-failure", "isController": false}, {"data": [[1.58543778E12, 18.883333333333333], [1.58543796E12, 19.0], [1.58543784E12, 18.6], [1.58543802E12, 7.083333333333333], [1.58543772E12, 15.6], [1.5854379E12, 13.366666666666667]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58543808E12, 53.25], [1.58543778E12, 0.9333333333333333], [1.58543826E12, 39.96666666666667], [1.58543796E12, 2.1333333333333333], [1.58543814E12, 53.11666666666667], [1.58543784E12, 4.133333333333334], [1.58543832E12, 0.8833333333333333], [1.58543802E12, 23.366666666666667], [1.58543772E12, 0.1], [1.5854382E12, 53.36666666666667], [1.5854379E12, 9.55]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58543778E12, 18.85], [1.58543796E12, 20.683333333333334], [1.58543784E12, 18.9], [1.58543802E12, 6.833333333333333], [1.58543772E12, 17.016666666666666], [1.5854379E12, 13.283333333333333]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.58543808E12, 53.266666666666666], [1.58543778E12, 0.8166666666666667], [1.58543826E12, 39.083333333333336], [1.58543796E12, 0.8666666666666667], [1.58543814E12, 53.4], [1.58543784E12, 3.35], [1.58543832E12, 0.6833333333333333], [1.58543802E12, 22.666666666666668], [1.58543772E12, 0.2], [1.5854382E12, 53.166666666666664], [1.5854379E12, 10.266666666666667]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543832E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.58543772E12, "maxY": 106.53333333333333, "series": [{"data": [[1.58543778E12, 37.916666666666664], [1.58543796E12, 39.68333333333333], [1.58543784E12, 37.5], [1.58543802E12, 13.916666666666666], [1.58543772E12, 35.71666666666667], [1.5854379E12, 26.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58543808E12, 106.51666666666667], [1.58543778E12, 1.75], [1.58543826E12, 79.05], [1.58543796E12, 3.0], [1.58543814E12, 106.51666666666667], [1.58543784E12, 7.483333333333333], [1.58543832E12, 1.5666666666666667], [1.58543802E12, 46.03333333333333], [1.58543772E12, 0.35], [1.5854382E12, 106.53333333333333], [1.5854379E12, 19.816666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543832E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

