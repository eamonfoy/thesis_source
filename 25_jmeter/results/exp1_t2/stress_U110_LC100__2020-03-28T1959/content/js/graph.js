/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 27.0, "minX": 0.0, "maxY": 3357.0, "series": [{"data": [[0.0, 27.0], [0.1, 30.0], [0.2, 30.0], [0.3, 31.0], [0.4, 32.0], [0.5, 33.0], [0.6, 33.0], [0.7, 33.0], [0.8, 34.0], [0.9, 34.0], [1.0, 35.0], [1.1, 35.0], [1.2, 35.0], [1.3, 36.0], [1.4, 36.0], [1.5, 36.0], [1.6, 36.0], [1.7, 36.0], [1.8, 36.0], [1.9, 37.0], [2.0, 37.0], [2.1, 37.0], [2.2, 37.0], [2.3, 37.0], [2.4, 38.0], [2.5, 38.0], [2.6, 38.0], [2.7, 38.0], [2.8, 38.0], [2.9, 39.0], [3.0, 39.0], [3.1, 39.0], [3.2, 39.0], [3.3, 39.0], [3.4, 39.0], [3.5, 39.0], [3.6, 40.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 40.0], [4.1, 40.0], [4.2, 40.0], [4.3, 40.0], [4.4, 40.0], [4.5, 41.0], [4.6, 41.0], [4.7, 41.0], [4.8, 41.0], [4.9, 41.0], [5.0, 41.0], [5.1, 41.0], [5.2, 42.0], [5.3, 42.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 42.0], [5.8, 42.0], [5.9, 42.0], [6.0, 42.0], [6.1, 42.0], [6.2, 43.0], [6.3, 43.0], [6.4, 43.0], [6.5, 43.0], [6.6, 43.0], [6.7, 43.0], [6.8, 43.0], [6.9, 43.0], [7.0, 44.0], [7.1, 44.0], [7.2, 44.0], [7.3, 44.0], [7.4, 44.0], [7.5, 44.0], [7.6, 44.0], [7.7, 44.0], [7.8, 45.0], [7.9, 45.0], [8.0, 45.0], [8.1, 45.0], [8.2, 45.0], [8.3, 45.0], [8.4, 45.0], [8.5, 45.0], [8.6, 45.0], [8.7, 46.0], [8.8, 46.0], [8.9, 46.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 46.0], [9.4, 46.0], [9.5, 47.0], [9.6, 47.0], [9.7, 47.0], [9.8, 47.0], [9.9, 47.0], [10.0, 47.0], [10.1, 47.0], [10.2, 47.0], [10.3, 47.0], [10.4, 48.0], [10.5, 48.0], [10.6, 48.0], [10.7, 48.0], [10.8, 48.0], [10.9, 48.0], [11.0, 48.0], [11.1, 48.0], [11.2, 48.0], [11.3, 49.0], [11.4, 49.0], [11.5, 49.0], [11.6, 49.0], [11.7, 49.0], [11.8, 50.0], [11.9, 50.0], [12.0, 50.0], [12.1, 50.0], [12.2, 50.0], [12.3, 50.0], [12.4, 51.0], [12.5, 51.0], [12.6, 51.0], [12.7, 51.0], [12.8, 51.0], [12.9, 51.0], [13.0, 52.0], [13.1, 52.0], [13.2, 52.0], [13.3, 52.0], [13.4, 52.0], [13.5, 53.0], [13.6, 53.0], [13.7, 53.0], [13.8, 53.0], [13.9, 54.0], [14.0, 54.0], [14.1, 54.0], [14.2, 54.0], [14.3, 54.0], [14.4, 55.0], [14.5, 55.0], [14.6, 55.0], [14.7, 55.0], [14.8, 56.0], [14.9, 56.0], [15.0, 56.0], [15.1, 57.0], [15.2, 57.0], [15.3, 57.0], [15.4, 58.0], [15.5, 58.0], [15.6, 58.0], [15.7, 59.0], [15.8, 59.0], [15.9, 60.0], [16.0, 61.0], [16.1, 61.0], [16.2, 62.0], [16.3, 62.0], [16.4, 63.0], [16.5, 64.0], [16.6, 64.0], [16.7, 66.0], [16.8, 67.0], [16.9, 69.0], [17.0, 70.0], [17.1, 72.0], [17.2, 75.0], [17.3, 79.0], [17.4, 86.0], [17.5, 103.0], [17.6, 115.0], [17.7, 126.0], [17.8, 141.0], [17.9, 157.0], [18.0, 176.0], [18.1, 196.0], [18.2, 207.0], [18.3, 222.0], [18.4, 232.0], [18.5, 244.0], [18.6, 254.0], [18.7, 263.0], [18.8, 269.0], [18.9, 284.0], [19.0, 290.0], [19.1, 296.0], [19.2, 302.0], [19.3, 309.0], [19.4, 315.0], [19.5, 320.0], [19.6, 324.0], [19.7, 328.0], [19.8, 332.0], [19.9, 339.0], [20.0, 346.0], [20.1, 353.0], [20.2, 360.0], [20.3, 366.0], [20.4, 371.0], [20.5, 376.0], [20.6, 380.0], [20.7, 387.0], [20.8, 394.0], [20.9, 397.0], [21.0, 401.0], [21.1, 404.0], [21.2, 407.0], [21.3, 410.0], [21.4, 414.0], [21.5, 418.0], [21.6, 419.0], [21.7, 424.0], [21.8, 427.0], [21.9, 430.0], [22.0, 433.0], [22.1, 435.0], [22.2, 439.0], [22.3, 441.0], [22.4, 446.0], [22.5, 449.0], [22.6, 454.0], [22.7, 457.0], [22.8, 460.0], [22.9, 463.0], [23.0, 466.0], [23.1, 469.0], [23.2, 472.0], [23.3, 474.0], [23.4, 477.0], [23.5, 478.0], [23.6, 481.0], [23.7, 483.0], [23.8, 485.0], [23.9, 487.0], [24.0, 490.0], [24.1, 493.0], [24.2, 495.0], [24.3, 497.0], [24.4, 499.0], [24.5, 502.0], [24.6, 503.0], [24.7, 505.0], [24.8, 509.0], [24.9, 511.0], [25.0, 514.0], [25.1, 516.0], [25.2, 518.0], [25.3, 520.0], [25.4, 523.0], [25.5, 525.0], [25.6, 528.0], [25.7, 528.0], [25.8, 532.0], [25.9, 534.0], [26.0, 535.0], [26.1, 537.0], [26.2, 539.0], [26.3, 541.0], [26.4, 543.0], [26.5, 544.0], [26.6, 546.0], [26.7, 549.0], [26.8, 550.0], [26.9, 552.0], [27.0, 554.0], [27.1, 555.0], [27.2, 558.0], [27.3, 559.0], [27.4, 563.0], [27.5, 565.0], [27.6, 566.0], [27.7, 567.0], [27.8, 569.0], [27.9, 571.0], [28.0, 572.0], [28.1, 574.0], [28.2, 576.0], [28.3, 578.0], [28.4, 581.0], [28.5, 583.0], [28.6, 585.0], [28.7, 586.0], [28.8, 588.0], [28.9, 590.0], [29.0, 592.0], [29.1, 594.0], [29.2, 596.0], [29.3, 598.0], [29.4, 600.0], [29.5, 602.0], [29.6, 604.0], [29.7, 606.0], [29.8, 608.0], [29.9, 610.0], [30.0, 611.0], [30.1, 613.0], [30.2, 615.0], [30.3, 617.0], [30.4, 618.0], [30.5, 621.0], [30.6, 623.0], [30.7, 625.0], [30.8, 627.0], [30.9, 630.0], [31.0, 632.0], [31.1, 633.0], [31.2, 635.0], [31.3, 637.0], [31.4, 639.0], [31.5, 640.0], [31.6, 642.0], [31.7, 644.0], [31.8, 646.0], [31.9, 646.0], [32.0, 648.0], [32.1, 649.0], [32.2, 651.0], [32.3, 652.0], [32.4, 653.0], [32.5, 655.0], [32.6, 657.0], [32.7, 658.0], [32.8, 659.0], [32.9, 661.0], [33.0, 663.0], [33.1, 665.0], [33.2, 668.0], [33.3, 670.0], [33.4, 671.0], [33.5, 672.0], [33.6, 673.0], [33.7, 676.0], [33.8, 678.0], [33.9, 679.0], [34.0, 680.0], [34.1, 683.0], [34.2, 684.0], [34.3, 685.0], [34.4, 686.0], [34.5, 688.0], [34.6, 689.0], [34.7, 691.0], [34.8, 692.0], [34.9, 693.0], [35.0, 694.0], [35.1, 695.0], [35.2, 697.0], [35.3, 699.0], [35.4, 700.0], [35.5, 701.0], [35.6, 702.0], [35.7, 704.0], [35.8, 705.0], [35.9, 706.0], [36.0, 708.0], [36.1, 709.0], [36.2, 711.0], [36.3, 712.0], [36.4, 713.0], [36.5, 714.0], [36.6, 716.0], [36.7, 718.0], [36.8, 719.0], [36.9, 720.0], [37.0, 721.0], [37.1, 724.0], [37.2, 725.0], [37.3, 726.0], [37.4, 727.0], [37.5, 728.0], [37.6, 730.0], [37.7, 731.0], [37.8, 733.0], [37.9, 734.0], [38.0, 736.0], [38.1, 737.0], [38.2, 738.0], [38.3, 740.0], [38.4, 741.0], [38.5, 743.0], [38.6, 745.0], [38.7, 747.0], [38.8, 749.0], [38.9, 750.0], [39.0, 751.0], [39.1, 752.0], [39.2, 754.0], [39.3, 755.0], [39.4, 756.0], [39.5, 758.0], [39.6, 759.0], [39.7, 760.0], [39.8, 761.0], [39.9, 762.0], [40.0, 764.0], [40.1, 765.0], [40.2, 766.0], [40.3, 767.0], [40.4, 769.0], [40.5, 769.0], [40.6, 771.0], [40.7, 772.0], [40.8, 773.0], [40.9, 775.0], [41.0, 775.0], [41.1, 777.0], [41.2, 778.0], [41.3, 780.0], [41.4, 781.0], [41.5, 782.0], [41.6, 783.0], [41.7, 785.0], [41.8, 786.0], [41.9, 788.0], [42.0, 789.0], [42.1, 790.0], [42.2, 792.0], [42.3, 793.0], [42.4, 795.0], [42.5, 796.0], [42.6, 798.0], [42.7, 799.0], [42.8, 800.0], [42.9, 802.0], [43.0, 803.0], [43.1, 804.0], [43.2, 806.0], [43.3, 807.0], [43.4, 809.0], [43.5, 810.0], [43.6, 811.0], [43.7, 813.0], [43.8, 814.0], [43.9, 816.0], [44.0, 818.0], [44.1, 819.0], [44.2, 820.0], [44.3, 821.0], [44.4, 823.0], [44.5, 824.0], [44.6, 825.0], [44.7, 827.0], [44.8, 829.0], [44.9, 830.0], [45.0, 831.0], [45.1, 832.0], [45.2, 834.0], [45.3, 835.0], [45.4, 836.0], [45.5, 838.0], [45.6, 839.0], [45.7, 841.0], [45.8, 842.0], [45.9, 843.0], [46.0, 845.0], [46.1, 846.0], [46.2, 848.0], [46.3, 849.0], [46.4, 850.0], [46.5, 851.0], [46.6, 853.0], [46.7, 854.0], [46.8, 855.0], [46.9, 857.0], [47.0, 858.0], [47.1, 859.0], [47.2, 861.0], [47.3, 862.0], [47.4, 864.0], [47.5, 865.0], [47.6, 867.0], [47.7, 868.0], [47.8, 868.0], [47.9, 869.0], [48.0, 871.0], [48.1, 872.0], [48.2, 873.0], [48.3, 875.0], [48.4, 876.0], [48.5, 877.0], [48.6, 878.0], [48.7, 880.0], [48.8, 881.0], [48.9, 882.0], [49.0, 884.0], [49.1, 885.0], [49.2, 887.0], [49.3, 889.0], [49.4, 890.0], [49.5, 890.0], [49.6, 892.0], [49.7, 893.0], [49.8, 894.0], [49.9, 895.0], [50.0, 896.0], [50.1, 897.0], [50.2, 899.0], [50.3, 901.0], [50.4, 903.0], [50.5, 904.0], [50.6, 905.0], [50.7, 906.0], [50.8, 907.0], [50.9, 908.0], [51.0, 911.0], [51.1, 912.0], [51.2, 913.0], [51.3, 915.0], [51.4, 916.0], [51.5, 918.0], [51.6, 919.0], [51.7, 920.0], [51.8, 921.0], [51.9, 922.0], [52.0, 924.0], [52.1, 925.0], [52.2, 926.0], [52.3, 927.0], [52.4, 928.0], [52.5, 930.0], [52.6, 932.0], [52.7, 933.0], [52.8, 935.0], [52.9, 935.0], [53.0, 936.0], [53.1, 937.0], [53.2, 939.0], [53.3, 940.0], [53.4, 941.0], [53.5, 942.0], [53.6, 943.0], [53.7, 945.0], [53.8, 946.0], [53.9, 947.0], [54.0, 948.0], [54.1, 950.0], [54.2, 950.0], [54.3, 951.0], [54.4, 952.0], [54.5, 954.0], [54.6, 955.0], [54.7, 956.0], [54.8, 958.0], [54.9, 959.0], [55.0, 961.0], [55.1, 962.0], [55.2, 963.0], [55.3, 964.0], [55.4, 965.0], [55.5, 966.0], [55.6, 968.0], [55.7, 969.0], [55.8, 970.0], [55.9, 972.0], [56.0, 973.0], [56.1, 975.0], [56.2, 976.0], [56.3, 978.0], [56.4, 979.0], [56.5, 980.0], [56.6, 981.0], [56.7, 981.0], [56.8, 982.0], [56.9, 983.0], [57.0, 985.0], [57.1, 986.0], [57.2, 986.0], [57.3, 988.0], [57.4, 989.0], [57.5, 990.0], [57.6, 992.0], [57.7, 994.0], [57.8, 994.0], [57.9, 996.0], [58.0, 997.0], [58.1, 998.0], [58.2, 999.0], [58.3, 1000.0], [58.4, 1002.0], [58.5, 1003.0], [58.6, 1005.0], [58.7, 1007.0], [58.8, 1008.0], [58.9, 1009.0], [59.0, 1010.0], [59.1, 1011.0], [59.2, 1012.0], [59.3, 1013.0], [59.4, 1015.0], [59.5, 1016.0], [59.6, 1017.0], [59.7, 1019.0], [59.8, 1019.0], [59.9, 1020.0], [60.0, 1021.0], [60.1, 1022.0], [60.2, 1023.0], [60.3, 1024.0], [60.4, 1025.0], [60.5, 1027.0], [60.6, 1028.0], [60.7, 1030.0], [60.8, 1032.0], [60.9, 1034.0], [61.0, 1035.0], [61.1, 1036.0], [61.2, 1038.0], [61.3, 1039.0], [61.4, 1041.0], [61.5, 1043.0], [61.6, 1045.0], [61.7, 1047.0], [61.8, 1048.0], [61.9, 1049.0], [62.0, 1050.0], [62.1, 1051.0], [62.2, 1052.0], [62.3, 1054.0], [62.4, 1055.0], [62.5, 1057.0], [62.6, 1059.0], [62.7, 1060.0], [62.8, 1061.0], [62.9, 1063.0], [63.0, 1063.0], [63.1, 1065.0], [63.2, 1067.0], [63.3, 1068.0], [63.4, 1069.0], [63.5, 1071.0], [63.6, 1072.0], [63.7, 1073.0], [63.8, 1074.0], [63.9, 1076.0], [64.0, 1078.0], [64.1, 1080.0], [64.2, 1081.0], [64.3, 1082.0], [64.4, 1082.0], [64.5, 1084.0], [64.6, 1085.0], [64.7, 1086.0], [64.8, 1087.0], [64.9, 1089.0], [65.0, 1090.0], [65.1, 1091.0], [65.2, 1092.0], [65.3, 1093.0], [65.4, 1095.0], [65.5, 1097.0], [65.6, 1098.0], [65.7, 1099.0], [65.8, 1100.0], [65.9, 1101.0], [66.0, 1103.0], [66.1, 1105.0], [66.2, 1107.0], [66.3, 1109.0], [66.4, 1110.0], [66.5, 1112.0], [66.6, 1114.0], [66.7, 1115.0], [66.8, 1117.0], [66.9, 1118.0], [67.0, 1119.0], [67.1, 1120.0], [67.2, 1121.0], [67.3, 1123.0], [67.4, 1124.0], [67.5, 1125.0], [67.6, 1127.0], [67.7, 1130.0], [67.8, 1131.0], [67.9, 1132.0], [68.0, 1135.0], [68.1, 1137.0], [68.2, 1139.0], [68.3, 1140.0], [68.4, 1141.0], [68.5, 1144.0], [68.6, 1145.0], [68.7, 1146.0], [68.8, 1148.0], [68.9, 1149.0], [69.0, 1150.0], [69.1, 1152.0], [69.2, 1153.0], [69.3, 1155.0], [69.4, 1156.0], [69.5, 1158.0], [69.6, 1160.0], [69.7, 1161.0], [69.8, 1162.0], [69.9, 1163.0], [70.0, 1164.0], [70.1, 1165.0], [70.2, 1166.0], [70.3, 1168.0], [70.4, 1169.0], [70.5, 1171.0], [70.6, 1173.0], [70.7, 1173.0], [70.8, 1175.0], [70.9, 1176.0], [71.0, 1177.0], [71.1, 1178.0], [71.2, 1180.0], [71.3, 1181.0], [71.4, 1183.0], [71.5, 1185.0], [71.6, 1185.0], [71.7, 1187.0], [71.8, 1189.0], [71.9, 1190.0], [72.0, 1192.0], [72.1, 1193.0], [72.2, 1195.0], [72.3, 1196.0], [72.4, 1199.0], [72.5, 1201.0], [72.6, 1202.0], [72.7, 1204.0], [72.8, 1206.0], [72.9, 1207.0], [73.0, 1208.0], [73.1, 1211.0], [73.2, 1212.0], [73.3, 1213.0], [73.4, 1215.0], [73.5, 1216.0], [73.6, 1217.0], [73.7, 1220.0], [73.8, 1221.0], [73.9, 1222.0], [74.0, 1224.0], [74.1, 1225.0], [74.2, 1226.0], [74.3, 1228.0], [74.4, 1230.0], [74.5, 1231.0], [74.6, 1232.0], [74.7, 1233.0], [74.8, 1236.0], [74.9, 1237.0], [75.0, 1240.0], [75.1, 1240.0], [75.2, 1242.0], [75.3, 1243.0], [75.4, 1245.0], [75.5, 1247.0], [75.6, 1248.0], [75.7, 1251.0], [75.8, 1253.0], [75.9, 1254.0], [76.0, 1256.0], [76.1, 1257.0], [76.2, 1259.0], [76.3, 1260.0], [76.4, 1262.0], [76.5, 1264.0], [76.6, 1265.0], [76.7, 1266.0], [76.8, 1268.0], [76.9, 1269.0], [77.0, 1270.0], [77.1, 1273.0], [77.2, 1275.0], [77.3, 1277.0], [77.4, 1278.0], [77.5, 1280.0], [77.6, 1281.0], [77.7, 1283.0], [77.8, 1284.0], [77.9, 1286.0], [78.0, 1288.0], [78.1, 1290.0], [78.2, 1292.0], [78.3, 1294.0], [78.4, 1295.0], [78.5, 1297.0], [78.6, 1298.0], [78.7, 1300.0], [78.8, 1302.0], [78.9, 1303.0], [79.0, 1304.0], [79.1, 1306.0], [79.2, 1308.0], [79.3, 1309.0], [79.4, 1311.0], [79.5, 1313.0], [79.6, 1315.0], [79.7, 1317.0], [79.8, 1318.0], [79.9, 1320.0], [80.0, 1322.0], [80.1, 1324.0], [80.2, 1325.0], [80.3, 1328.0], [80.4, 1329.0], [80.5, 1332.0], [80.6, 1334.0], [80.7, 1335.0], [80.8, 1337.0], [80.9, 1339.0], [81.0, 1341.0], [81.1, 1343.0], [81.2, 1344.0], [81.3, 1345.0], [81.4, 1346.0], [81.5, 1347.0], [81.6, 1349.0], [81.7, 1352.0], [81.8, 1353.0], [81.9, 1356.0], [82.0, 1358.0], [82.1, 1360.0], [82.2, 1362.0], [82.3, 1365.0], [82.4, 1368.0], [82.5, 1370.0], [82.6, 1372.0], [82.7, 1375.0], [82.8, 1377.0], [82.9, 1379.0], [83.0, 1381.0], [83.1, 1382.0], [83.2, 1384.0], [83.3, 1386.0], [83.4, 1389.0], [83.5, 1392.0], [83.6, 1394.0], [83.7, 1396.0], [83.8, 1398.0], [83.9, 1399.0], [84.0, 1402.0], [84.1, 1404.0], [84.2, 1407.0], [84.3, 1410.0], [84.4, 1414.0], [84.5, 1416.0], [84.6, 1418.0], [84.7, 1421.0], [84.8, 1423.0], [84.9, 1424.0], [85.0, 1425.0], [85.1, 1427.0], [85.2, 1428.0], [85.3, 1429.0], [85.4, 1432.0], [85.5, 1434.0], [85.6, 1436.0], [85.7, 1439.0], [85.8, 1441.0], [85.9, 1443.0], [86.0, 1445.0], [86.1, 1448.0], [86.2, 1450.0], [86.3, 1453.0], [86.4, 1456.0], [86.5, 1458.0], [86.6, 1461.0], [86.7, 1463.0], [86.8, 1466.0], [86.9, 1469.0], [87.0, 1470.0], [87.1, 1473.0], [87.2, 1476.0], [87.3, 1478.0], [87.4, 1480.0], [87.5, 1482.0], [87.6, 1484.0], [87.7, 1485.0], [87.8, 1488.0], [87.9, 1491.0], [88.0, 1493.0], [88.1, 1497.0], [88.2, 1501.0], [88.3, 1504.0], [88.4, 1507.0], [88.5, 1510.0], [88.6, 1514.0], [88.7, 1518.0], [88.8, 1522.0], [88.9, 1524.0], [89.0, 1527.0], [89.1, 1531.0], [89.2, 1533.0], [89.3, 1535.0], [89.4, 1537.0], [89.5, 1540.0], [89.6, 1543.0], [89.7, 1546.0], [89.8, 1549.0], [89.9, 1553.0], [90.0, 1555.0], [90.1, 1558.0], [90.2, 1559.0], [90.3, 1563.0], [90.4, 1565.0], [90.5, 1569.0], [90.6, 1571.0], [90.7, 1575.0], [90.8, 1576.0], [90.9, 1578.0], [91.0, 1580.0], [91.1, 1582.0], [91.2, 1584.0], [91.3, 1587.0], [91.4, 1590.0], [91.5, 1594.0], [91.6, 1596.0], [91.7, 1601.0], [91.8, 1604.0], [91.9, 1608.0], [92.0, 1613.0], [92.1, 1616.0], [92.2, 1620.0], [92.3, 1622.0], [92.4, 1625.0], [92.5, 1630.0], [92.6, 1634.0], [92.7, 1639.0], [92.8, 1642.0], [92.9, 1646.0], [93.0, 1649.0], [93.1, 1653.0], [93.2, 1656.0], [93.3, 1661.0], [93.4, 1667.0], [93.5, 1673.0], [93.6, 1676.0], [93.7, 1680.0], [93.8, 1683.0], [93.9, 1688.0], [94.0, 1691.0], [94.1, 1696.0], [94.2, 1700.0], [94.3, 1706.0], [94.4, 1715.0], [94.5, 1723.0], [94.6, 1731.0], [94.7, 1733.0], [94.8, 1737.0], [94.9, 1741.0], [95.0, 1745.0], [95.1, 1750.0], [95.2, 1755.0], [95.3, 1760.0], [95.4, 1766.0], [95.5, 1769.0], [95.6, 1774.0], [95.7, 1783.0], [95.8, 1791.0], [95.9, 1799.0], [96.0, 1804.0], [96.1, 1812.0], [96.2, 1820.0], [96.3, 1824.0], [96.4, 1831.0], [96.5, 1839.0], [96.6, 1848.0], [96.7, 1857.0], [96.8, 1863.0], [96.9, 1868.0], [97.0, 1873.0], [97.1, 1885.0], [97.2, 1893.0], [97.3, 1901.0], [97.4, 1908.0], [97.5, 1918.0], [97.6, 1928.0], [97.7, 1935.0], [97.8, 1950.0], [97.9, 1958.0], [98.0, 1972.0], [98.1, 1987.0], [98.2, 2000.0], [98.3, 2014.0], [98.4, 2025.0], [98.5, 2040.0], [98.6, 2051.0], [98.7, 2068.0], [98.8, 2082.0], [98.9, 2102.0], [99.0, 2115.0], [99.1, 2132.0], [99.2, 2170.0], [99.3, 2195.0], [99.4, 2230.0], [99.5, 2272.0], [99.6, 2315.0], [99.7, 2389.0], [99.8, 2450.0], [99.9, 2631.0], [100.0, 3171.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 147.0], [0.1, 147.0], [0.2, 147.0], [0.3, 147.0], [0.4, 147.0], [0.5, 147.0], [0.6, 147.0], [0.7, 147.0], [0.8, 147.0], [0.9, 147.0], [1.0, 149.0], [1.1, 149.0], [1.2, 149.0], [1.3, 149.0], [1.4, 149.0], [1.5, 149.0], [1.6, 149.0], [1.7, 149.0], [1.8, 149.0], [1.9, 149.0], [2.0, 149.0], [2.1, 149.0], [2.2, 149.0], [2.3, 149.0], [2.4, 149.0], [2.5, 149.0], [2.6, 149.0], [2.7, 149.0], [2.8, 150.0], [2.9, 150.0], [3.0, 150.0], [3.1, 150.0], [3.2, 150.0], [3.3, 150.0], [3.4, 150.0], [3.5, 150.0], [3.6, 150.0], [3.7, 151.0], [3.8, 151.0], [3.9, 151.0], [4.0, 151.0], [4.1, 151.0], [4.2, 151.0], [4.3, 151.0], [4.4, 151.0], [4.5, 151.0], [4.6, 152.0], [4.7, 152.0], [4.8, 152.0], [4.9, 152.0], [5.0, 152.0], [5.1, 152.0], [5.2, 152.0], [5.3, 152.0], [5.4, 152.0], [5.5, 152.0], [5.6, 152.0], [5.7, 152.0], [5.8, 152.0], [5.9, 152.0], [6.0, 152.0], [6.1, 152.0], [6.2, 152.0], [6.3, 152.0], [6.4, 153.0], [6.5, 153.0], [6.6, 153.0], [6.7, 153.0], [6.8, 153.0], [6.9, 153.0], [7.0, 153.0], [7.1, 153.0], [7.2, 153.0], [7.3, 154.0], [7.4, 154.0], [7.5, 154.0], [7.6, 154.0], [7.7, 154.0], [7.8, 154.0], [7.9, 154.0], [8.0, 154.0], [8.1, 154.0], [8.2, 154.0], [8.3, 154.0], [8.4, 154.0], [8.5, 154.0], [8.6, 154.0], [8.7, 154.0], [8.8, 154.0], [8.9, 154.0], [9.0, 154.0], [9.1, 155.0], [9.2, 155.0], [9.3, 155.0], [9.4, 155.0], [9.5, 155.0], [9.6, 155.0], [9.7, 155.0], [9.8, 155.0], [9.9, 155.0], [10.0, 157.0], [10.1, 157.0], [10.2, 157.0], [10.3, 157.0], [10.4, 157.0], [10.5, 157.0], [10.6, 157.0], [10.7, 157.0], [10.8, 157.0], [10.9, 157.0], [11.0, 157.0], [11.1, 157.0], [11.2, 157.0], [11.3, 157.0], [11.4, 157.0], [11.5, 157.0], [11.6, 157.0], [11.7, 157.0], [11.8, 157.0], [11.9, 157.0], [12.0, 157.0], [12.1, 157.0], [12.2, 157.0], [12.3, 157.0], [12.4, 157.0], [12.5, 157.0], [12.6, 157.0], [12.7, 157.0], [12.8, 157.0], [12.9, 157.0], [13.0, 157.0], [13.1, 157.0], [13.2, 157.0], [13.3, 157.0], [13.4, 157.0], [13.5, 157.0], [13.6, 157.0], [13.7, 157.0], [13.8, 157.0], [13.9, 157.0], [14.0, 157.0], [14.1, 157.0], [14.2, 157.0], [14.3, 157.0], [14.4, 157.0], [14.5, 157.0], [14.6, 158.0], [14.7, 158.0], [14.8, 158.0], [14.9, 158.0], [15.0, 158.0], [15.1, 158.0], [15.2, 158.0], [15.3, 158.0], [15.4, 158.0], [15.5, 159.0], [15.6, 159.0], [15.7, 159.0], [15.8, 159.0], [15.9, 159.0], [16.0, 159.0], [16.1, 159.0], [16.2, 159.0], [16.3, 159.0], [16.4, 159.0], [16.5, 159.0], [16.6, 159.0], [16.7, 159.0], [16.8, 159.0], [16.9, 159.0], [17.0, 159.0], [17.1, 159.0], [17.2, 159.0], [17.3, 159.0], [17.4, 159.0], [17.5, 159.0], [17.6, 159.0], [17.7, 159.0], [17.8, 159.0], [17.9, 159.0], [18.0, 159.0], [18.1, 159.0], [18.2, 159.0], [18.3, 159.0], [18.4, 159.0], [18.5, 159.0], [18.6, 159.0], [18.7, 159.0], [18.8, 159.0], [18.9, 159.0], [19.0, 159.0], [19.1, 160.0], [19.2, 160.0], [19.3, 160.0], [19.4, 160.0], [19.5, 160.0], [19.6, 160.0], [19.7, 160.0], [19.8, 160.0], [19.9, 160.0], [20.0, 160.0], [20.1, 160.0], [20.2, 160.0], [20.3, 160.0], [20.4, 160.0], [20.5, 160.0], [20.6, 160.0], [20.7, 160.0], [20.8, 160.0], [20.9, 160.0], [21.0, 160.0], [21.1, 160.0], [21.2, 160.0], [21.3, 160.0], [21.4, 160.0], [21.5, 160.0], [21.6, 160.0], [21.7, 160.0], [21.8, 160.0], [21.9, 160.0], [22.0, 160.0], [22.1, 160.0], [22.2, 160.0], [22.3, 160.0], [22.4, 160.0], [22.5, 160.0], [22.6, 160.0], [22.7, 160.0], [22.8, 160.0], [22.9, 160.0], [23.0, 160.0], [23.1, 160.0], [23.2, 160.0], [23.3, 160.0], [23.4, 160.0], [23.5, 160.0], [23.6, 160.0], [23.7, 161.0], [23.8, 161.0], [23.9, 161.0], [24.0, 161.0], [24.1, 161.0], [24.2, 161.0], [24.3, 161.0], [24.4, 161.0], [24.5, 161.0], [24.6, 161.0], [24.7, 161.0], [24.8, 161.0], [24.9, 161.0], [25.0, 161.0], [25.1, 161.0], [25.2, 161.0], [25.3, 161.0], [25.4, 161.0], [25.5, 161.0], [25.6, 161.0], [25.7, 161.0], [25.8, 161.0], [25.9, 161.0], [26.0, 161.0], [26.1, 161.0], [26.2, 161.0], [26.3, 161.0], [26.4, 162.0], [26.5, 162.0], [26.6, 162.0], [26.7, 162.0], [26.8, 162.0], [26.9, 162.0], [27.0, 162.0], [27.1, 162.0], [27.2, 162.0], [27.3, 162.0], [27.4, 162.0], [27.5, 162.0], [27.6, 162.0], [27.7, 162.0], [27.8, 162.0], [27.9, 162.0], [28.0, 162.0], [28.1, 162.0], [28.2, 162.0], [28.3, 162.0], [28.4, 162.0], [28.5, 162.0], [28.6, 162.0], [28.7, 162.0], [28.8, 162.0], [28.9, 162.0], [29.0, 162.0], [29.1, 163.0], [29.2, 163.0], [29.3, 163.0], [29.4, 163.0], [29.5, 163.0], [29.6, 163.0], [29.7, 163.0], [29.8, 163.0], [29.9, 163.0], [30.0, 163.0], [30.1, 163.0], [30.2, 163.0], [30.3, 163.0], [30.4, 163.0], [30.5, 163.0], [30.6, 163.0], [30.7, 163.0], [30.8, 163.0], [30.9, 163.0], [31.0, 163.0], [31.1, 163.0], [31.2, 163.0], [31.3, 163.0], [31.4, 163.0], [31.5, 163.0], [31.6, 163.0], [31.7, 163.0], [31.8, 163.0], [31.9, 163.0], [32.0, 163.0], [32.1, 163.0], [32.2, 163.0], [32.3, 163.0], [32.4, 163.0], [32.5, 163.0], [32.6, 163.0], [32.7, 163.0], [32.8, 163.0], [32.9, 163.0], [33.0, 163.0], [33.1, 163.0], [33.2, 163.0], [33.3, 163.0], [33.4, 163.0], [33.5, 163.0], [33.6, 163.0], [33.7, 163.0], [33.8, 163.0], [33.9, 163.0], [34.0, 163.0], [34.1, 163.0], [34.2, 163.0], [34.3, 163.0], [34.4, 163.0], [34.5, 163.0], [34.6, 164.0], [34.7, 164.0], [34.8, 164.0], [34.9, 164.0], [35.0, 164.0], [35.1, 164.0], [35.2, 164.0], [35.3, 164.0], [35.4, 164.0], [35.5, 164.0], [35.6, 164.0], [35.7, 164.0], [35.8, 164.0], [35.9, 164.0], [36.0, 164.0], [36.1, 164.0], [36.2, 164.0], [36.3, 164.0], [36.4, 164.0], [36.5, 164.0], [36.6, 164.0], [36.7, 164.0], [36.8, 164.0], [36.9, 164.0], [37.0, 164.0], [37.1, 164.0], [37.2, 164.0], [37.3, 164.0], [37.4, 164.0], [37.5, 164.0], [37.6, 164.0], [37.7, 164.0], [37.8, 164.0], [37.9, 164.0], [38.0, 164.0], [38.1, 164.0], [38.2, 164.0], [38.3, 164.0], [38.4, 164.0], [38.5, 164.0], [38.6, 164.0], [38.7, 164.0], [38.8, 164.0], [38.9, 164.0], [39.0, 164.0], [39.1, 165.0], [39.2, 165.0], [39.3, 165.0], [39.4, 165.0], [39.5, 165.0], [39.6, 165.0], [39.7, 165.0], [39.8, 165.0], [39.9, 165.0], [40.0, 165.0], [40.1, 165.0], [40.2, 165.0], [40.3, 165.0], [40.4, 165.0], [40.5, 165.0], [40.6, 165.0], [40.7, 165.0], [40.8, 165.0], [40.9, 165.0], [41.0, 165.0], [41.1, 165.0], [41.2, 165.0], [41.3, 165.0], [41.4, 165.0], [41.5, 165.0], [41.6, 165.0], [41.7, 165.0], [41.8, 165.0], [41.9, 165.0], [42.0, 165.0], [42.1, 165.0], [42.2, 165.0], [42.3, 165.0], [42.4, 165.0], [42.5, 165.0], [42.6, 165.0], [42.7, 165.0], [42.8, 166.0], [42.9, 166.0], [43.0, 166.0], [43.1, 166.0], [43.2, 166.0], [43.3, 166.0], [43.4, 166.0], [43.5, 166.0], [43.6, 166.0], [43.7, 166.0], [43.8, 166.0], [43.9, 166.0], [44.0, 166.0], [44.1, 166.0], [44.2, 166.0], [44.3, 166.0], [44.4, 166.0], [44.5, 166.0], [44.6, 167.0], [44.7, 167.0], [44.8, 167.0], [44.9, 167.0], [45.0, 167.0], [45.1, 167.0], [45.2, 167.0], [45.3, 167.0], [45.4, 167.0], [45.5, 167.0], [45.6, 167.0], [45.7, 167.0], [45.8, 167.0], [45.9, 167.0], [46.0, 167.0], [46.1, 167.0], [46.2, 167.0], [46.3, 167.0], [46.4, 168.0], [46.5, 168.0], [46.6, 168.0], [46.7, 168.0], [46.8, 168.0], [46.9, 168.0], [47.0, 168.0], [47.1, 168.0], [47.2, 168.0], [47.3, 168.0], [47.4, 168.0], [47.5, 168.0], [47.6, 168.0], [47.7, 168.0], [47.8, 168.0], [47.9, 168.0], [48.0, 168.0], [48.1, 168.0], [48.2, 168.0], [48.3, 168.0], [48.4, 168.0], [48.5, 168.0], [48.6, 168.0], [48.7, 168.0], [48.8, 168.0], [48.9, 168.0], [49.0, 168.0], [49.1, 168.0], [49.2, 168.0], [49.3, 168.0], [49.4, 168.0], [49.5, 168.0], [49.6, 168.0], [49.7, 168.0], [49.8, 168.0], [49.9, 168.0], [50.0, 169.0], [50.1, 169.0], [50.2, 169.0], [50.3, 169.0], [50.4, 169.0], [50.5, 169.0], [50.6, 169.0], [50.7, 169.0], [50.8, 169.0], [50.9, 169.0], [51.0, 169.0], [51.1, 169.0], [51.2, 169.0], [51.3, 169.0], [51.4, 169.0], [51.5, 169.0], [51.6, 169.0], [51.7, 169.0], [51.8, 169.0], [51.9, 169.0], [52.0, 169.0], [52.1, 169.0], [52.2, 169.0], [52.3, 169.0], [52.4, 169.0], [52.5, 169.0], [52.6, 169.0], [52.7, 169.0], [52.8, 169.0], [52.9, 169.0], [53.0, 169.0], [53.1, 169.0], [53.2, 169.0], [53.3, 169.0], [53.4, 169.0], [53.5, 169.0], [53.6, 169.0], [53.7, 170.0], [53.8, 170.0], [53.9, 170.0], [54.0, 170.0], [54.1, 170.0], [54.2, 170.0], [54.3, 170.0], [54.4, 170.0], [54.5, 170.0], [54.6, 170.0], [54.7, 170.0], [54.8, 170.0], [54.9, 170.0], [55.0, 170.0], [55.1, 170.0], [55.2, 170.0], [55.3, 170.0], [55.4, 170.0], [55.5, 170.0], [55.6, 170.0], [55.7, 170.0], [55.8, 170.0], [55.9, 170.0], [56.0, 170.0], [56.1, 170.0], [56.2, 170.0], [56.3, 170.0], [56.4, 170.0], [56.5, 170.0], [56.6, 170.0], [56.7, 170.0], [56.8, 170.0], [56.9, 170.0], [57.0, 170.0], [57.1, 170.0], [57.2, 170.0], [57.3, 171.0], [57.4, 171.0], [57.5, 171.0], [57.6, 171.0], [57.7, 171.0], [57.8, 171.0], [57.9, 171.0], [58.0, 171.0], [58.1, 171.0], [58.2, 172.0], [58.3, 172.0], [58.4, 172.0], [58.5, 172.0], [58.6, 172.0], [58.7, 172.0], [58.8, 172.0], [58.9, 172.0], [59.0, 172.0], [59.1, 172.0], [59.2, 172.0], [59.3, 172.0], [59.4, 172.0], [59.5, 172.0], [59.6, 172.0], [59.7, 172.0], [59.8, 172.0], [59.9, 172.0], [60.0, 172.0], [60.1, 172.0], [60.2, 172.0], [60.3, 172.0], [60.4, 172.0], [60.5, 172.0], [60.6, 172.0], [60.7, 172.0], [60.8, 172.0], [60.9, 172.0], [61.0, 172.0], [61.1, 172.0], [61.2, 172.0], [61.3, 172.0], [61.4, 172.0], [61.5, 172.0], [61.6, 172.0], [61.7, 172.0], [61.8, 172.0], [61.9, 173.0], [62.0, 173.0], [62.1, 173.0], [62.2, 173.0], [62.3, 173.0], [62.4, 173.0], [62.5, 173.0], [62.6, 173.0], [62.7, 173.0], [62.8, 174.0], [62.9, 174.0], [63.0, 174.0], [63.1, 174.0], [63.2, 174.0], [63.3, 174.0], [63.4, 174.0], [63.5, 174.0], [63.6, 174.0], [63.7, 174.0], [63.8, 174.0], [63.9, 174.0], [64.0, 174.0], [64.1, 174.0], [64.2, 174.0], [64.3, 174.0], [64.4, 174.0], [64.5, 174.0], [64.6, 175.0], [64.7, 175.0], [64.8, 175.0], [64.9, 175.0], [65.0, 175.0], [65.1, 175.0], [65.2, 175.0], [65.3, 175.0], [65.4, 175.0], [65.5, 176.0], [65.6, 176.0], [65.7, 176.0], [65.8, 176.0], [65.9, 176.0], [66.0, 176.0], [66.1, 176.0], [66.2, 176.0], [66.3, 176.0], [66.4, 176.0], [66.5, 176.0], [66.6, 176.0], [66.7, 176.0], [66.8, 176.0], [66.9, 176.0], [67.0, 176.0], [67.1, 176.0], [67.2, 176.0], [67.3, 176.0], [67.4, 176.0], [67.5, 176.0], [67.6, 176.0], [67.7, 176.0], [67.8, 176.0], [67.9, 176.0], [68.0, 176.0], [68.1, 176.0], [68.2, 176.0], [68.3, 176.0], [68.4, 176.0], [68.5, 176.0], [68.6, 176.0], [68.7, 176.0], [68.8, 176.0], [68.9, 176.0], [69.0, 176.0], [69.1, 176.0], [69.2, 176.0], [69.3, 176.0], [69.4, 176.0], [69.5, 176.0], [69.6, 176.0], [69.7, 176.0], [69.8, 176.0], [69.9, 176.0], [70.0, 177.0], [70.1, 177.0], [70.2, 177.0], [70.3, 177.0], [70.4, 177.0], [70.5, 177.0], [70.6, 177.0], [70.7, 177.0], [70.8, 177.0], [70.9, 177.0], [71.0, 177.0], [71.1, 177.0], [71.2, 177.0], [71.3, 177.0], [71.4, 177.0], [71.5, 177.0], [71.6, 177.0], [71.7, 177.0], [71.8, 177.0], [71.9, 177.0], [72.0, 177.0], [72.1, 177.0], [72.2, 177.0], [72.3, 177.0], [72.4, 177.0], [72.5, 177.0], [72.6, 177.0], [72.7, 177.0], [72.8, 179.0], [72.9, 179.0], [73.0, 179.0], [73.1, 179.0], [73.2, 179.0], [73.3, 179.0], [73.4, 179.0], [73.5, 179.0], [73.6, 179.0], [73.7, 179.0], [73.8, 179.0], [73.9, 179.0], [74.0, 179.0], [74.1, 179.0], [74.2, 179.0], [74.3, 179.0], [74.4, 179.0], [74.5, 179.0], [74.6, 180.0], [74.7, 180.0], [74.8, 180.0], [74.9, 180.0], [75.0, 180.0], [75.1, 180.0], [75.2, 180.0], [75.3, 180.0], [75.4, 180.0], [75.5, 180.0], [75.6, 180.0], [75.7, 180.0], [75.8, 180.0], [75.9, 180.0], [76.0, 180.0], [76.1, 180.0], [76.2, 180.0], [76.3, 180.0], [76.4, 182.0], [76.5, 182.0], [76.6, 182.0], [76.7, 182.0], [76.8, 182.0], [76.9, 182.0], [77.0, 182.0], [77.1, 182.0], [77.2, 182.0], [77.3, 182.0], [77.4, 182.0], [77.5, 182.0], [77.6, 182.0], [77.7, 182.0], [77.8, 182.0], [77.9, 182.0], [78.0, 182.0], [78.1, 182.0], [78.2, 182.0], [78.3, 182.0], [78.4, 182.0], [78.5, 182.0], [78.6, 182.0], [78.7, 182.0], [78.8, 182.0], [78.9, 182.0], [79.0, 182.0], [79.1, 182.0], [79.2, 182.0], [79.3, 182.0], [79.4, 182.0], [79.5, 182.0], [79.6, 182.0], [79.7, 182.0], [79.8, 182.0], [79.9, 182.0], [80.0, 184.0], [80.1, 184.0], [80.2, 184.0], [80.3, 184.0], [80.4, 184.0], [80.5, 184.0], [80.6, 184.0], [80.7, 184.0], [80.8, 184.0], [80.9, 184.0], [81.0, 185.0], [81.1, 185.0], [81.2, 185.0], [81.3, 185.0], [81.4, 185.0], [81.5, 185.0], [81.6, 185.0], [81.7, 185.0], [81.8, 185.0], [81.9, 185.0], [82.0, 185.0], [82.1, 185.0], [82.2, 185.0], [82.3, 185.0], [82.4, 185.0], [82.5, 185.0], [82.6, 185.0], [82.7, 185.0], [82.8, 188.0], [82.9, 188.0], [83.0, 188.0], [83.1, 188.0], [83.2, 188.0], [83.3, 188.0], [83.4, 188.0], [83.5, 188.0], [83.6, 188.0], [83.7, 189.0], [83.8, 189.0], [83.9, 189.0], [84.0, 189.0], [84.1, 189.0], [84.2, 189.0], [84.3, 189.0], [84.4, 189.0], [84.5, 189.0], [84.6, 192.0], [84.7, 192.0], [84.8, 192.0], [84.9, 192.0], [85.0, 192.0], [85.1, 192.0], [85.2, 192.0], [85.3, 192.0], [85.4, 192.0], [85.5, 195.0], [85.6, 195.0], [85.7, 195.0], [85.8, 195.0], [85.9, 195.0], [86.0, 195.0], [86.1, 195.0], [86.2, 195.0], [86.3, 195.0], [86.4, 199.0], [86.5, 199.0], [86.6, 199.0], [86.7, 199.0], [86.8, 199.0], [86.9, 199.0], [87.0, 199.0], [87.1, 199.0], [87.2, 199.0], [87.3, 203.0], [87.4, 203.0], [87.5, 203.0], [87.6, 203.0], [87.7, 203.0], [87.8, 203.0], [87.9, 203.0], [88.0, 203.0], [88.1, 203.0], [88.2, 204.0], [88.3, 204.0], [88.4, 204.0], [88.5, 204.0], [88.6, 204.0], [88.7, 204.0], [88.8, 204.0], [88.9, 204.0], [89.0, 204.0], [89.1, 206.0], [89.2, 206.0], [89.3, 206.0], [89.4, 206.0], [89.5, 206.0], [89.6, 206.0], [89.7, 206.0], [89.8, 206.0], [89.9, 206.0], [90.0, 207.0], [90.1, 207.0], [90.2, 207.0], [90.3, 207.0], [90.4, 207.0], [90.5, 207.0], [90.6, 207.0], [90.7, 207.0], [90.8, 207.0], [90.9, 207.0], [91.0, 210.0], [91.1, 210.0], [91.2, 210.0], [91.3, 210.0], [91.4, 210.0], [91.5, 210.0], [91.6, 210.0], [91.7, 210.0], [91.8, 210.0], [91.9, 221.0], [92.0, 221.0], [92.1, 221.0], [92.2, 221.0], [92.3, 221.0], [92.4, 221.0], [92.5, 221.0], [92.6, 221.0], [92.7, 221.0], [92.8, 223.0], [92.9, 223.0], [93.0, 223.0], [93.1, 223.0], [93.2, 223.0], [93.3, 223.0], [93.4, 223.0], [93.5, 223.0], [93.6, 223.0], [93.7, 224.0], [93.8, 224.0], [93.9, 224.0], [94.0, 224.0], [94.1, 224.0], [94.2, 224.0], [94.3, 224.0], [94.4, 224.0], [94.5, 224.0], [94.6, 238.0], [94.7, 238.0], [94.8, 238.0], [94.9, 238.0], [95.0, 238.0], [95.1, 238.0], [95.2, 238.0], [95.3, 238.0], [95.4, 238.0], [95.5, 245.0], [95.6, 245.0], [95.7, 245.0], [95.8, 245.0], [95.9, 245.0], [96.0, 245.0], [96.1, 245.0], [96.2, 245.0], [96.3, 245.0], [96.4, 305.0], [96.5, 305.0], [96.6, 305.0], [96.7, 305.0], [96.8, 305.0], [96.9, 305.0], [97.0, 305.0], [97.1, 305.0], [97.2, 305.0], [97.3, 473.0], [97.4, 473.0], [97.5, 473.0], [97.6, 473.0], [97.7, 473.0], [97.8, 473.0], [97.9, 473.0], [98.0, 473.0], [98.1, 473.0], [98.2, 527.0], [98.3, 527.0], [98.4, 527.0], [98.5, 527.0], [98.6, 527.0], [98.7, 527.0], [98.8, 527.0], [98.9, 527.0], [99.0, 527.0], [99.1, 528.0], [99.2, 528.0], [99.3, 528.0], [99.4, 528.0], [99.5, 528.0], [99.6, 528.0], [99.7, 528.0], [99.8, 528.0], [99.9, 528.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 28.0], [0.1, 30.0], [0.2, 30.0], [0.3, 32.0], [0.4, 33.0], [0.5, 33.0], [0.6, 34.0], [0.7, 34.0], [0.8, 35.0], [0.9, 35.0], [1.0, 36.0], [1.1, 36.0], [1.2, 36.0], [1.3, 36.0], [1.4, 37.0], [1.5, 37.0], [1.6, 37.0], [1.7, 37.0], [1.8, 37.0], [1.9, 38.0], [2.0, 38.0], [2.1, 38.0], [2.2, 38.0], [2.3, 38.0], [2.4, 39.0], [2.5, 39.0], [2.6, 39.0], [2.7, 39.0], [2.8, 39.0], [2.9, 39.0], [3.0, 40.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 40.0], [3.5, 40.0], [3.6, 41.0], [3.7, 41.0], [3.8, 41.0], [3.9, 41.0], [4.0, 41.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 42.0], [4.5, 42.0], [4.6, 42.0], [4.7, 42.0], [4.8, 42.0], [4.9, 42.0], [5.0, 42.0], [5.1, 42.0], [5.2, 43.0], [5.3, 43.0], [5.4, 43.0], [5.5, 43.0], [5.6, 43.0], [5.7, 43.0], [5.8, 43.0], [5.9, 43.0], [6.0, 44.0], [6.1, 44.0], [6.2, 44.0], [6.3, 44.0], [6.4, 44.0], [6.5, 44.0], [6.6, 44.0], [6.7, 44.0], [6.8, 44.0], [6.9, 44.0], [7.0, 45.0], [7.1, 45.0], [7.2, 45.0], [7.3, 45.0], [7.4, 45.0], [7.5, 45.0], [7.6, 45.0], [7.7, 45.0], [7.8, 45.0], [7.9, 45.0], [8.0, 46.0], [8.1, 46.0], [8.2, 46.0], [8.3, 46.0], [8.4, 46.0], [8.5, 46.0], [8.6, 46.0], [8.7, 46.0], [8.8, 46.0], [8.9, 47.0], [9.0, 47.0], [9.1, 47.0], [9.2, 47.0], [9.3, 47.0], [9.4, 47.0], [9.5, 47.0], [9.6, 47.0], [9.7, 48.0], [9.8, 48.0], [9.9, 48.0], [10.0, 48.0], [10.1, 48.0], [10.2, 48.0], [10.3, 48.0], [10.4, 49.0], [10.5, 49.0], [10.6, 49.0], [10.7, 49.0], [10.8, 49.0], [10.9, 49.0], [11.0, 49.0], [11.1, 49.0], [11.2, 50.0], [11.3, 50.0], [11.4, 50.0], [11.5, 50.0], [11.6, 50.0], [11.7, 50.0], [11.8, 50.0], [11.9, 51.0], [12.0, 51.0], [12.1, 51.0], [12.2, 51.0], [12.3, 51.0], [12.4, 51.0], [12.5, 51.0], [12.6, 52.0], [12.7, 52.0], [12.8, 52.0], [12.9, 52.0], [13.0, 52.0], [13.1, 52.0], [13.2, 53.0], [13.3, 53.0], [13.4, 53.0], [13.5, 53.0], [13.6, 53.0], [13.7, 53.0], [13.8, 54.0], [13.9, 54.0], [14.0, 54.0], [14.1, 54.0], [14.2, 55.0], [14.3, 55.0], [14.4, 55.0], [14.5, 55.0], [14.6, 56.0], [14.7, 56.0], [14.8, 56.0], [14.9, 56.0], [15.0, 57.0], [15.1, 57.0], [15.2, 57.0], [15.3, 58.0], [15.4, 58.0], [15.5, 59.0], [15.6, 59.0], [15.7, 59.0], [15.8, 60.0], [15.9, 60.0], [16.0, 60.0], [16.1, 61.0], [16.2, 62.0], [16.3, 62.0], [16.4, 63.0], [16.5, 64.0], [16.6, 64.0], [16.7, 66.0], [16.8, 67.0], [16.9, 69.0], [17.0, 71.0], [17.1, 73.0], [17.2, 75.0], [17.3, 81.0], [17.4, 88.0], [17.5, 95.0], [17.6, 122.0], [17.7, 139.0], [17.8, 161.0], [17.9, 180.0], [18.0, 196.0], [18.1, 210.0], [18.2, 219.0], [18.3, 242.0], [18.4, 257.0], [18.5, 267.0], [18.6, 280.0], [18.7, 288.0], [18.8, 302.0], [18.9, 307.0], [19.0, 310.0], [19.1, 318.0], [19.2, 324.0], [19.3, 328.0], [19.4, 335.0], [19.5, 342.0], [19.6, 346.0], [19.7, 349.0], [19.8, 356.0], [19.9, 362.0], [20.0, 366.0], [20.1, 371.0], [20.2, 376.0], [20.3, 381.0], [20.4, 384.0], [20.5, 389.0], [20.6, 394.0], [20.7, 397.0], [20.8, 404.0], [20.9, 406.0], [21.0, 409.0], [21.1, 411.0], [21.2, 416.0], [21.3, 419.0], [21.4, 421.0], [21.5, 425.0], [21.6, 430.0], [21.7, 432.0], [21.8, 435.0], [21.9, 438.0], [22.0, 441.0], [22.1, 443.0], [22.2, 446.0], [22.3, 450.0], [22.4, 452.0], [22.5, 457.0], [22.6, 459.0], [22.7, 462.0], [22.8, 464.0], [22.9, 466.0], [23.0, 470.0], [23.1, 473.0], [23.2, 475.0], [23.3, 478.0], [23.4, 481.0], [23.5, 484.0], [23.6, 488.0], [23.7, 490.0], [23.8, 494.0], [23.9, 495.0], [24.0, 498.0], [24.1, 501.0], [24.2, 503.0], [24.3, 507.0], [24.4, 508.0], [24.5, 511.0], [24.6, 513.0], [24.7, 515.0], [24.8, 517.0], [24.9, 520.0], [25.0, 522.0], [25.1, 524.0], [25.2, 526.0], [25.3, 528.0], [25.4, 530.0], [25.5, 531.0], [25.6, 533.0], [25.7, 535.0], [25.8, 537.0], [25.9, 538.0], [26.0, 540.0], [26.1, 543.0], [26.2, 544.0], [26.3, 547.0], [26.4, 551.0], [26.5, 553.0], [26.6, 556.0], [26.7, 557.0], [26.8, 560.0], [26.9, 562.0], [27.0, 565.0], [27.1, 568.0], [27.2, 570.0], [27.3, 572.0], [27.4, 574.0], [27.5, 576.0], [27.6, 579.0], [27.7, 580.0], [27.8, 584.0], [27.9, 585.0], [28.0, 586.0], [28.1, 588.0], [28.2, 590.0], [28.3, 592.0], [28.4, 594.0], [28.5, 596.0], [28.6, 597.0], [28.7, 598.0], [28.8, 600.0], [28.9, 603.0], [29.0, 604.0], [29.1, 606.0], [29.2, 609.0], [29.3, 610.0], [29.4, 611.0], [29.5, 613.0], [29.6, 614.0], [29.7, 616.0], [29.8, 618.0], [29.9, 620.0], [30.0, 622.0], [30.1, 624.0], [30.2, 625.0], [30.3, 627.0], [30.4, 629.0], [30.5, 630.0], [30.6, 631.0], [30.7, 633.0], [30.8, 634.0], [30.9, 635.0], [31.0, 636.0], [31.1, 637.0], [31.2, 639.0], [31.3, 639.0], [31.4, 641.0], [31.5, 643.0], [31.6, 645.0], [31.7, 646.0], [31.8, 648.0], [31.9, 650.0], [32.0, 651.0], [32.1, 653.0], [32.2, 654.0], [32.3, 657.0], [32.4, 658.0], [32.5, 660.0], [32.6, 661.0], [32.7, 663.0], [32.8, 664.0], [32.9, 665.0], [33.0, 666.0], [33.1, 669.0], [33.2, 670.0], [33.3, 671.0], [33.4, 675.0], [33.5, 677.0], [33.6, 678.0], [33.7, 681.0], [33.8, 682.0], [33.9, 684.0], [34.0, 686.0], [34.1, 687.0], [34.2, 689.0], [34.3, 690.0], [34.4, 692.0], [34.5, 693.0], [34.6, 694.0], [34.7, 696.0], [34.8, 698.0], [34.9, 698.0], [35.0, 700.0], [35.1, 701.0], [35.2, 703.0], [35.3, 704.0], [35.4, 706.0], [35.5, 708.0], [35.6, 710.0], [35.7, 711.0], [35.8, 712.0], [35.9, 714.0], [36.0, 716.0], [36.1, 718.0], [36.2, 719.0], [36.3, 720.0], [36.4, 722.0], [36.5, 723.0], [36.6, 725.0], [36.7, 726.0], [36.8, 728.0], [36.9, 730.0], [37.0, 731.0], [37.1, 732.0], [37.2, 733.0], [37.3, 735.0], [37.4, 736.0], [37.5, 737.0], [37.6, 738.0], [37.7, 739.0], [37.8, 740.0], [37.9, 742.0], [38.0, 743.0], [38.1, 745.0], [38.2, 747.0], [38.3, 748.0], [38.4, 750.0], [38.5, 751.0], [38.6, 753.0], [38.7, 754.0], [38.8, 755.0], [38.9, 756.0], [39.0, 757.0], [39.1, 758.0], [39.2, 760.0], [39.3, 762.0], [39.4, 763.0], [39.5, 765.0], [39.6, 767.0], [39.7, 768.0], [39.8, 769.0], [39.9, 770.0], [40.0, 771.0], [40.1, 772.0], [40.2, 773.0], [40.3, 774.0], [40.4, 775.0], [40.5, 776.0], [40.6, 778.0], [40.7, 779.0], [40.8, 780.0], [40.9, 781.0], [41.0, 782.0], [41.1, 784.0], [41.2, 785.0], [41.3, 786.0], [41.4, 788.0], [41.5, 789.0], [41.6, 791.0], [41.7, 792.0], [41.8, 793.0], [41.9, 794.0], [42.0, 795.0], [42.1, 796.0], [42.2, 798.0], [42.3, 800.0], [42.4, 801.0], [42.5, 802.0], [42.6, 804.0], [42.7, 805.0], [42.8, 806.0], [42.9, 808.0], [43.0, 810.0], [43.1, 811.0], [43.2, 812.0], [43.3, 813.0], [43.4, 814.0], [43.5, 816.0], [43.6, 816.0], [43.7, 817.0], [43.8, 819.0], [43.9, 820.0], [44.0, 820.0], [44.1, 822.0], [44.2, 823.0], [44.3, 824.0], [44.4, 826.0], [44.5, 828.0], [44.6, 830.0], [44.7, 831.0], [44.8, 833.0], [44.9, 834.0], [45.0, 835.0], [45.1, 836.0], [45.2, 837.0], [45.3, 839.0], [45.4, 840.0], [45.5, 841.0], [45.6, 843.0], [45.7, 845.0], [45.8, 845.0], [45.9, 847.0], [46.0, 848.0], [46.1, 849.0], [46.2, 851.0], [46.3, 852.0], [46.4, 853.0], [46.5, 854.0], [46.6, 855.0], [46.7, 856.0], [46.8, 858.0], [46.9, 858.0], [47.0, 860.0], [47.1, 861.0], [47.2, 862.0], [47.3, 863.0], [47.4, 864.0], [47.5, 866.0], [47.6, 867.0], [47.7, 868.0], [47.8, 869.0], [47.9, 871.0], [48.0, 872.0], [48.1, 873.0], [48.2, 874.0], [48.3, 875.0], [48.4, 876.0], [48.5, 877.0], [48.6, 878.0], [48.7, 879.0], [48.8, 881.0], [48.9, 882.0], [49.0, 883.0], [49.1, 885.0], [49.2, 887.0], [49.3, 888.0], [49.4, 889.0], [49.5, 890.0], [49.6, 892.0], [49.7, 893.0], [49.8, 894.0], [49.9, 895.0], [50.0, 896.0], [50.1, 897.0], [50.2, 899.0], [50.3, 900.0], [50.4, 901.0], [50.5, 902.0], [50.6, 904.0], [50.7, 905.0], [50.8, 907.0], [50.9, 909.0], [51.0, 910.0], [51.1, 912.0], [51.2, 913.0], [51.3, 914.0], [51.4, 916.0], [51.5, 917.0], [51.6, 919.0], [51.7, 921.0], [51.8, 921.0], [51.9, 922.0], [52.0, 923.0], [52.1, 925.0], [52.2, 926.0], [52.3, 928.0], [52.4, 929.0], [52.5, 930.0], [52.6, 931.0], [52.7, 933.0], [52.8, 934.0], [52.9, 936.0], [53.0, 937.0], [53.1, 939.0], [53.2, 940.0], [53.3, 941.0], [53.4, 942.0], [53.5, 944.0], [53.6, 945.0], [53.7, 947.0], [53.8, 949.0], [53.9, 950.0], [54.0, 950.0], [54.1, 951.0], [54.2, 953.0], [54.3, 954.0], [54.4, 955.0], [54.5, 956.0], [54.6, 957.0], [54.7, 959.0], [54.8, 961.0], [54.9, 962.0], [55.0, 963.0], [55.1, 964.0], [55.2, 965.0], [55.3, 966.0], [55.4, 967.0], [55.5, 968.0], [55.6, 970.0], [55.7, 971.0], [55.8, 972.0], [55.9, 973.0], [56.0, 974.0], [56.1, 976.0], [56.2, 977.0], [56.3, 979.0], [56.4, 980.0], [56.5, 981.0], [56.6, 982.0], [56.7, 984.0], [56.8, 984.0], [56.9, 986.0], [57.0, 988.0], [57.1, 989.0], [57.2, 990.0], [57.3, 991.0], [57.4, 993.0], [57.5, 995.0], [57.6, 996.0], [57.7, 997.0], [57.8, 998.0], [57.9, 1000.0], [58.0, 1001.0], [58.1, 1003.0], [58.2, 1004.0], [58.3, 1006.0], [58.4, 1008.0], [58.5, 1008.0], [58.6, 1010.0], [58.7, 1011.0], [58.8, 1012.0], [58.9, 1013.0], [59.0, 1015.0], [59.1, 1016.0], [59.2, 1017.0], [59.3, 1018.0], [59.4, 1020.0], [59.5, 1022.0], [59.6, 1023.0], [59.7, 1025.0], [59.8, 1026.0], [59.9, 1028.0], [60.0, 1029.0], [60.1, 1031.0], [60.2, 1032.0], [60.3, 1032.0], [60.4, 1035.0], [60.5, 1036.0], [60.6, 1038.0], [60.7, 1039.0], [60.8, 1041.0], [60.9, 1042.0], [61.0, 1044.0], [61.1, 1045.0], [61.2, 1046.0], [61.3, 1047.0], [61.4, 1048.0], [61.5, 1049.0], [61.6, 1051.0], [61.7, 1052.0], [61.8, 1053.0], [61.9, 1054.0], [62.0, 1056.0], [62.1, 1058.0], [62.2, 1059.0], [62.3, 1060.0], [62.4, 1061.0], [62.5, 1062.0], [62.6, 1063.0], [62.7, 1063.0], [62.8, 1065.0], [62.9, 1066.0], [63.0, 1068.0], [63.1, 1069.0], [63.2, 1071.0], [63.3, 1073.0], [63.4, 1074.0], [63.5, 1075.0], [63.6, 1076.0], [63.7, 1077.0], [63.8, 1079.0], [63.9, 1080.0], [64.0, 1082.0], [64.1, 1083.0], [64.2, 1085.0], [64.3, 1087.0], [64.4, 1088.0], [64.5, 1090.0], [64.6, 1091.0], [64.7, 1093.0], [64.8, 1094.0], [64.9, 1095.0], [65.0, 1097.0], [65.1, 1098.0], [65.2, 1100.0], [65.3, 1101.0], [65.4, 1103.0], [65.5, 1104.0], [65.6, 1105.0], [65.7, 1106.0], [65.8, 1108.0], [65.9, 1109.0], [66.0, 1111.0], [66.1, 1113.0], [66.2, 1114.0], [66.3, 1115.0], [66.4, 1117.0], [66.5, 1117.0], [66.6, 1119.0], [66.7, 1121.0], [66.8, 1122.0], [66.9, 1123.0], [67.0, 1124.0], [67.1, 1125.0], [67.2, 1126.0], [67.3, 1128.0], [67.4, 1129.0], [67.5, 1130.0], [67.6, 1132.0], [67.7, 1134.0], [67.8, 1135.0], [67.9, 1137.0], [68.0, 1139.0], [68.1, 1140.0], [68.2, 1141.0], [68.3, 1143.0], [68.4, 1144.0], [68.5, 1144.0], [68.6, 1146.0], [68.7, 1147.0], [68.8, 1149.0], [68.9, 1150.0], [69.0, 1151.0], [69.1, 1152.0], [69.2, 1153.0], [69.3, 1154.0], [69.4, 1155.0], [69.5, 1156.0], [69.6, 1157.0], [69.7, 1159.0], [69.8, 1160.0], [69.9, 1162.0], [70.0, 1163.0], [70.1, 1165.0], [70.2, 1166.0], [70.3, 1167.0], [70.4, 1167.0], [70.5, 1169.0], [70.6, 1170.0], [70.7, 1171.0], [70.8, 1172.0], [70.9, 1174.0], [71.0, 1174.0], [71.1, 1176.0], [71.2, 1177.0], [71.3, 1178.0], [71.4, 1179.0], [71.5, 1180.0], [71.6, 1182.0], [71.7, 1183.0], [71.8, 1185.0], [71.9, 1186.0], [72.0, 1188.0], [72.1, 1190.0], [72.2, 1191.0], [72.3, 1192.0], [72.4, 1193.0], [72.5, 1194.0], [72.6, 1195.0], [72.7, 1197.0], [72.8, 1198.0], [72.9, 1200.0], [73.0, 1202.0], [73.1, 1202.0], [73.2, 1204.0], [73.3, 1205.0], [73.4, 1206.0], [73.5, 1207.0], [73.6, 1209.0], [73.7, 1210.0], [73.8, 1212.0], [73.9, 1213.0], [74.0, 1215.0], [74.1, 1216.0], [74.2, 1217.0], [74.3, 1219.0], [74.4, 1220.0], [74.5, 1221.0], [74.6, 1223.0], [74.7, 1225.0], [74.8, 1226.0], [74.9, 1228.0], [75.0, 1230.0], [75.1, 1232.0], [75.2, 1233.0], [75.3, 1235.0], [75.4, 1237.0], [75.5, 1240.0], [75.6, 1241.0], [75.7, 1244.0], [75.8, 1245.0], [75.9, 1247.0], [76.0, 1248.0], [76.1, 1249.0], [76.2, 1251.0], [76.3, 1254.0], [76.4, 1256.0], [76.5, 1257.0], [76.6, 1259.0], [76.7, 1260.0], [76.8, 1262.0], [76.9, 1264.0], [77.0, 1266.0], [77.1, 1267.0], [77.2, 1269.0], [77.3, 1270.0], [77.4, 1271.0], [77.5, 1272.0], [77.6, 1273.0], [77.7, 1275.0], [77.8, 1277.0], [77.9, 1279.0], [78.0, 1280.0], [78.1, 1282.0], [78.2, 1283.0], [78.3, 1284.0], [78.4, 1286.0], [78.5, 1287.0], [78.6, 1289.0], [78.7, 1291.0], [78.8, 1292.0], [78.9, 1294.0], [79.0, 1295.0], [79.1, 1296.0], [79.2, 1298.0], [79.3, 1300.0], [79.4, 1302.0], [79.5, 1305.0], [79.6, 1307.0], [79.7, 1310.0], [79.8, 1312.0], [79.9, 1314.0], [80.0, 1317.0], [80.1, 1318.0], [80.2, 1320.0], [80.3, 1322.0], [80.4, 1323.0], [80.5, 1324.0], [80.6, 1326.0], [80.7, 1328.0], [80.8, 1330.0], [80.9, 1331.0], [81.0, 1334.0], [81.1, 1336.0], [81.2, 1337.0], [81.3, 1340.0], [81.4, 1341.0], [81.5, 1343.0], [81.6, 1345.0], [81.7, 1347.0], [81.8, 1349.0], [81.9, 1351.0], [82.0, 1353.0], [82.1, 1355.0], [82.2, 1357.0], [82.3, 1359.0], [82.4, 1362.0], [82.5, 1364.0], [82.6, 1367.0], [82.7, 1369.0], [82.8, 1371.0], [82.9, 1373.0], [83.0, 1376.0], [83.1, 1379.0], [83.2, 1382.0], [83.3, 1385.0], [83.4, 1387.0], [83.5, 1387.0], [83.6, 1390.0], [83.7, 1393.0], [83.8, 1396.0], [83.9, 1398.0], [84.0, 1400.0], [84.1, 1402.0], [84.2, 1404.0], [84.3, 1405.0], [84.4, 1408.0], [84.5, 1410.0], [84.6, 1413.0], [84.7, 1414.0], [84.8, 1416.0], [84.9, 1418.0], [85.0, 1419.0], [85.1, 1424.0], [85.2, 1425.0], [85.3, 1427.0], [85.4, 1429.0], [85.5, 1432.0], [85.6, 1435.0], [85.7, 1438.0], [85.8, 1439.0], [85.9, 1441.0], [86.0, 1443.0], [86.1, 1445.0], [86.2, 1447.0], [86.3, 1449.0], [86.4, 1453.0], [86.5, 1455.0], [86.6, 1457.0], [86.7, 1459.0], [86.8, 1461.0], [86.9, 1464.0], [87.0, 1468.0], [87.1, 1470.0], [87.2, 1473.0], [87.3, 1476.0], [87.4, 1478.0], [87.5, 1481.0], [87.6, 1484.0], [87.7, 1486.0], [87.8, 1489.0], [87.9, 1491.0], [88.0, 1495.0], [88.1, 1498.0], [88.2, 1500.0], [88.3, 1502.0], [88.4, 1506.0], [88.5, 1509.0], [88.6, 1511.0], [88.7, 1514.0], [88.8, 1516.0], [88.9, 1519.0], [89.0, 1523.0], [89.1, 1525.0], [89.2, 1528.0], [89.3, 1531.0], [89.4, 1533.0], [89.5, 1535.0], [89.6, 1540.0], [89.7, 1542.0], [89.8, 1545.0], [89.9, 1549.0], [90.0, 1551.0], [90.1, 1555.0], [90.2, 1558.0], [90.3, 1561.0], [90.4, 1565.0], [90.5, 1568.0], [90.6, 1570.0], [90.7, 1574.0], [90.8, 1578.0], [90.9, 1580.0], [91.0, 1584.0], [91.1, 1587.0], [91.2, 1588.0], [91.3, 1591.0], [91.4, 1594.0], [91.5, 1598.0], [91.6, 1602.0], [91.7, 1606.0], [91.8, 1609.0], [91.9, 1612.0], [92.0, 1616.0], [92.1, 1620.0], [92.2, 1623.0], [92.3, 1627.0], [92.4, 1630.0], [92.5, 1633.0], [92.6, 1639.0], [92.7, 1643.0], [92.8, 1647.0], [92.9, 1652.0], [93.0, 1657.0], [93.1, 1660.0], [93.2, 1664.0], [93.3, 1667.0], [93.4, 1670.0], [93.5, 1674.0], [93.6, 1677.0], [93.7, 1682.0], [93.8, 1685.0], [93.9, 1688.0], [94.0, 1695.0], [94.1, 1699.0], [94.2, 1702.0], [94.3, 1705.0], [94.4, 1711.0], [94.5, 1719.0], [94.6, 1726.0], [94.7, 1730.0], [94.8, 1737.0], [94.9, 1741.0], [95.0, 1745.0], [95.1, 1754.0], [95.2, 1759.0], [95.3, 1762.0], [95.4, 1764.0], [95.5, 1770.0], [95.6, 1774.0], [95.7, 1779.0], [95.8, 1785.0], [95.9, 1791.0], [96.0, 1799.0], [96.1, 1804.0], [96.2, 1807.0], [96.3, 1815.0], [96.4, 1820.0], [96.5, 1829.0], [96.6, 1835.0], [96.7, 1840.0], [96.8, 1848.0], [96.9, 1856.0], [97.0, 1865.0], [97.1, 1870.0], [97.2, 1878.0], [97.3, 1882.0], [97.4, 1893.0], [97.5, 1905.0], [97.6, 1918.0], [97.7, 1925.0], [97.8, 1932.0], [97.9, 1941.0], [98.0, 1953.0], [98.1, 1973.0], [98.2, 1980.0], [98.3, 1989.0], [98.4, 2007.0], [98.5, 2015.0], [98.6, 2027.0], [98.7, 2039.0], [98.8, 2057.0], [98.9, 2069.0], [99.0, 2094.0], [99.1, 2120.0], [99.2, 2160.0], [99.3, 2184.0], [99.4, 2217.0], [99.5, 2250.0], [99.6, 2331.0], [99.7, 2405.0], [99.8, 2482.0], [99.9, 2598.0], [100.0, 3357.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1926.0, "series": [{"data": [[0.0, 1921.0], [600.0, 659.0], [700.0, 812.0], [800.0, 823.0], [900.0, 876.0], [1000.0, 828.0], [1100.0, 734.0], [1200.0, 688.0], [1300.0, 577.0], [1400.0, 470.0], [1500.0, 383.0], [100.0, 77.0], [1600.0, 277.0], [1700.0, 193.0], [1800.0, 149.0], [1900.0, 100.0], [2000.0, 76.0], [2100.0, 47.0], [2200.0, 27.0], [2300.0, 16.0], [2400.0, 16.0], [2500.0, 4.0], [2600.0, 5.0], [2800.0, 2.0], [2700.0, 1.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 1.0], [200.0, 110.0], [300.0, 197.0], [400.0, 380.0], [500.0, 548.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[300.0, 1.0], [200.0, 10.0], [100.0, 96.0], [400.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1926.0], [600.0, 680.0], [700.0, 803.0], [800.0, 881.0], [900.0, 835.0], [1000.0, 804.0], [1100.0, 846.0], [1200.0, 704.0], [1300.0, 515.0], [1400.0, 462.0], [1500.0, 370.0], [100.0, 57.0], [1600.0, 285.0], [1700.0, 211.0], [1800.0, 154.0], [1900.0, 100.0], [2000.0, 74.0], [2100.0, 33.0], [2200.0, 24.0], [2300.0, 16.0], [2400.0, 15.0], [2500.0, 9.0], [2600.0, 4.0], [2800.0, 1.0], [2700.0, 2.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [200.0, 82.0], [3300.0, 1.0], [300.0, 217.0], [400.0, 363.0], [500.0, 523.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2594.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 14070.0, "series": [{"data": [[0.0, 5446.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 14070.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2594.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.58542554E12, "maxY": 110.0, "series": [{"data": [[1.58542572E12, 110.0], [1.58542602E12, 110.0], [1.5854259E12, 110.0], [1.58542584E12, 110.0], [1.58542554E12, 13.445783132530117], [1.5854262E12, 1.0], [1.58542566E12, 110.0], [1.58542608E12, 109.69573874950225], [1.5854256E12, 80.73159739609405], [1.58542614E12, 71.49445129469775], [1.58542578E12, 110.0], [1.58542596E12, 110.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854262E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 33.0, "minX": 1.0, "maxY": 1131.6153846153845, "series": [{"data": [[5.0, 44.2], [6.0, 54.5], [8.0, 49.333333333333336], [9.0, 42.0], [10.0, 54.5], [11.0, 50.8], [12.0, 50.5], [13.0, 47.0], [14.0, 52.0], [15.0, 49.75], [16.0, 39.25], [17.0, 54.5], [18.0, 41.2], [19.0, 46.5625], [20.0, 54.333333333333336], [21.0, 33.0], [22.0, 44.333333333333336], [23.0, 55.25], [24.0, 55.0909090909091], [25.0, 48.5], [26.0, 41.285714285714285], [27.0, 50.166666666666664], [28.0, 42.5], [29.0, 51.12500000000001], [30.0, 42.5], [31.0, 51.642857142857146], [32.0, 44.25], [33.0, 46.5], [34.0, 46.9], [35.0, 45.1111111111111], [36.0, 44.800000000000004], [37.0, 44.666666666666664], [38.0, 47.00000000000001], [39.0, 45.2], [40.0, 53.15384615384616], [41.0, 47.2], [42.0, 42.8], [43.0, 52.285714285714285], [44.0, 45.333333333333336], [45.0, 49.57142857142857], [46.0, 47.800000000000004], [47.0, 43.44444444444444], [48.0, 47.35294117647059], [49.0, 43.199999999999996], [50.0, 49.5], [51.0, 50.714285714285715], [52.0, 46.5], [53.0, 45.5], [54.0, 43.333333333333336], [55.0, 45.9591836734694], [56.0, 47.111111111111114], [57.0, 42.550000000000004], [58.0, 47.66666666666667], [59.0, 48.0], [61.0, 834.0909090909092], [60.0, 848.0344827586205], [62.0, 56.0], [63.0, 49.34782608695652], [64.0, 38.4375], [65.0, 48.89473684210526], [66.0, 49.8], [67.0, 48.2], [68.0, 49.294117647058826], [69.0, 49.41176470588236], [70.0, 111.78124999999999], [71.0, 127.4090909090909], [72.0, 41.16666666666666], [73.0, 42.59090909090908], [74.0, 43.79999999999999], [75.0, 73.25], [76.0, 80.765625], [77.0, 152.50000000000003], [78.0, 522.0], [79.0, 398.4285714285714], [80.0, 48.08333333333333], [81.0, 42.526315789473685], [82.0, 49.5], [83.0, 48.62499999999999], [84.0, 88.0], [85.0, 43.72222222222222], [86.0, 45.5], [87.0, 42.92857142857142], [88.0, 49.8095238095238], [89.0, 44.92307692307692], [90.0, 43.583333333333336], [91.0, 46.51666666666668], [92.0, 46.68181818181819], [93.0, 46.406779661016955], [94.0, 47.44444444444445], [95.0, 49.599999999999994], [96.0, 43.00000000000001], [97.0, 47.3], [98.0, 49.766666666666666], [99.0, 186.0], [100.0, 218.4], [101.0, 495.60606060606085], [102.0, 1131.6153846153845], [103.0, 518.1199999999999], [104.0, 287.3809523809524], [105.0, 530.3529411764706], [106.0, 311.9166666666667], [107.0, 88.31506849315066], [108.0, 119.87417218543044], [109.0, 553.5000000000001], [110.0, 1009.7527312060579], [1.0, 48.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[104.37536363636336, 869.9862727272682]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[2.0, 204.0], [3.0, 168.0], [4.0, 179.0], [5.0, 160.0], [6.0, 172.0], [7.0, 166.0], [8.0, 245.0], [9.0, 162.0], [10.0, 199.0], [11.0, 168.0], [12.0, 182.0], [13.0, 177.0], [14.0, 167.0], [15.0, 163.0], [16.0, 164.0], [17.0, 172.0], [18.0, 164.0], [19.0, 170.0], [20.0, 182.0], [21.0, 160.0], [22.0, 176.0], [23.0, 176.0], [24.0, 163.0], [25.0, 165.0], [26.0, 169.0], [27.0, 149.0], [28.0, 162.0], [29.0, 174.0], [30.0, 163.0], [31.0, 189.0], [32.0, 157.0], [33.0, 171.0], [34.0, 179.0], [35.0, 159.0], [36.0, 157.0], [37.0, 150.0], [38.0, 151.0], [39.0, 157.0], [40.0, 210.0], [41.0, 160.0], [42.0, 159.0], [43.0, 154.0], [44.0, 164.0], [45.0, 163.0], [46.0, 149.0], [47.0, 165.0], [48.0, 172.0], [49.0, 177.0], [50.0, 166.0], [51.0, 176.0], [52.0, 160.0], [53.0, 158.0], [54.0, 172.0], [55.0, 161.0], [56.0, 168.0], [57.0, 162.0], [58.0, 169.0], [59.0, 527.0], [60.0, 180.0], [61.0, 165.0], [62.0, 170.0], [63.0, 173.0], [64.0, 188.0], [65.0, 157.0], [66.0, 182.0], [67.0, 176.0], [68.0, 147.0], [69.0, 170.0], [70.0, 174.0], [71.0, 159.0], [72.0, 180.0], [73.0, 159.0], [74.0, 167.0], [75.0, 206.0], [76.0, 192.0], [77.0, 184.0], [78.0, 160.0], [79.0, 157.0], [80.0, 152.0], [81.0, 221.0], [82.0, 155.0], [83.0, 153.0], [84.0, 163.0], [85.0, 182.0], [86.0, 203.0], [87.0, 163.0], [88.0, 185.0], [89.0, 154.0], [90.0, 176.0], [91.0, 238.0], [92.0, 164.0], [93.0, 169.0], [94.0, 164.0], [95.0, 170.0], [96.0, 175.0], [97.0, 177.0], [98.0, 169.0], [99.0, 528.0], [100.0, 161.0], [101.0, 473.0], [102.0, 152.0], [103.0, 305.0], [104.0, 165.0], [105.0, 195.0], [106.0, 161.0], [107.0, 185.0], [108.0, 224.0], [109.0, 207.0], [110.0, 168.0], [1.0, 223.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[55.5, 182.8090909090909]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[3.0, 61.0], [4.0, 48.0], [5.0, 46.75], [6.0, 44.666666666666664], [7.0, 54.0], [8.0, 62.0], [9.0, 49.0], [10.0, 46.0], [11.0, 65.2], [12.0, 47.666666666666664], [13.0, 55.2], [14.0, 52.5], [15.0, 44.333333333333336], [16.0, 42.0], [17.0, 53.666666666666664], [18.0, 49.333333333333336], [19.0, 56.10000000000001], [20.0, 51.50000000000001], [21.0, 44.666666666666664], [22.0, 44.0], [23.0, 40.0], [24.0, 46.83333333333333], [25.0, 47.6], [26.0, 49.0], [27.0, 47.25], [28.0, 49.125], [29.0, 45.153846153846146], [30.0, 47.57142857142857], [31.0, 57.57142857142857], [32.0, 46.285714285714285], [33.0, 45.0], [34.0, 42.5], [35.0, 54.5], [36.0, 44.37499999999999], [37.0, 52.4], [38.0, 46.61111111111111], [39.0, 51.25], [40.0, 47.25], [41.0, 48.040000000000006], [42.0, 47.1875], [43.0, 46.875], [44.0, 43.14285714285714], [45.0, 55.0], [46.0, 51.0], [47.0, 44.57142857142857], [48.0, 48.69230769230768], [49.0, 47.46153846153846], [50.0, 44.857142857142854], [51.0, 50.1], [52.0, 44.4], [53.0, 43.0], [54.0, 43.10526315789473], [55.0, 48.025641025641036], [56.0, 50.888888888888886], [57.0, 47.45000000000001], [58.0, 67.33333333333333], [60.0, 692.7837837837839], [61.0, 641.2187499999999], [62.0, 42.42857142857143], [63.0, 48.142857142857146], [64.0, 48.400000000000006], [65.0, 46.916666666666664], [66.0, 53.1], [67.0, 47.84615384615385], [68.0, 48.27272727272728], [69.0, 46.88000000000001], [70.0, 189.00000000000003], [71.0, 137.33333333333334], [72.0, 45.5], [73.0, 44.37500000000001], [74.0, 46.56], [75.0, 56.33333333333333], [76.0, 87.75], [77.0, 162.7368421052631], [78.0, 266.5833333333333], [79.0, 287.32142857142867], [80.0, 46.24999999999999], [81.0, 42.25], [82.0, 46.529411764705884], [83.0, 47.29411764705882], [84.0, 93.57142857142856], [85.0, 42.0], [86.0, 45.88235294117647], [87.0, 47.8], [88.0, 49.6923076923077], [89.0, 43.37499999999999], [90.0, 43.84999999999999], [91.0, 47.54761904761905], [92.0, 45.800000000000004], [93.0, 47.63934426229507], [94.0, 50.5], [95.0, 48.777777777777786], [96.0, 47.45], [97.0, 48.42857142857143], [98.0, 49.592592592592595], [99.0, 241.99999999999997], [100.0, 284.02500000000015], [101.0, 393.5312499999999], [102.0, 965.2], [103.0, 520.0], [104.0, 517.4545454545455], [105.0, 452.611111111111], [106.0, 369.54545454545456], [107.0, 97.92592592592591], [108.0, 123.3809523809524], [109.0, 390.29411764705884], [110.0, 1012.6819952391294], [1.0, 46.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[104.3703636363639, 871.8569999999988]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 110.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7.166666666666667, "minX": 1.58542554E12, "maxY": 297572.95, "series": [{"data": [[1.58542572E12, 273276.2833333333], [1.58542602E12, 269367.9666666667], [1.5854259E12, 269603.01666666666], [1.58542584E12, 267714.75], [1.58542554E12, 7810.3], [1.5854262E12, 118.01666666666667], [1.58542566E12, 272927.15], [1.58542608E12, 297572.95], [1.5854256E12, 228074.28333333333], [1.58542614E12, 192200.85], [1.58542578E12, 259654.21666666667], [1.58542596E12, 271267.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58542572E12, 16488.033333333333], [1.58542602E12, 16252.0], [1.5854259E12, 16266.366666666667], [1.58542584E12, 16151.7], [1.58542554E12, 522.9666666666667], [1.5854262E12, 7.166666666666667], [1.58542566E12, 16466.366666666665], [1.58542608E12, 17953.7], [1.5854256E12, 13979.866666666667], [1.58542614E12, 11597.966666666667], [1.58542578E12, 15665.566666666668], [1.58542596E12, 16366.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854262E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 46.88888888888888, "minX": 1.58542554E12, "maxY": 1143.611111111111, "series": [{"data": [[1.58542572E12, 973.3197925669841], [1.58542602E12, 1011.0272407732867], [1.5854259E12, 1018.9474145486423], [1.58542584E12, 1052.0097777777776], [1.58542554E12, 46.88888888888888], [1.5854262E12, 48.0], [1.58542566E12, 984.8616187989552], [1.58542608E12, 763.9522673031032], [1.5854256E12, 412.6119402985073], [1.58542614E12, 80.6462093862816], [1.58542578E12, 1133.6797804208609], [1.58542596E12, 1015.4610673665801]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542554E12, 178.4285714285714], [1.5854256E12, 183.84269662921344]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542572E12, 984.1636205396002], [1.58542602E12, 1028.549779735682], [1.5854259E12, 1036.0555555555545], [1.58542584E12, 1060.291887125222], [1.58542554E12, 53.08571428571429], [1.58542566E12, 963.4766031195841], [1.58542608E12, 767.2001594896343], [1.5854256E12, 394.2979381443292], [1.58542614E12, 78.82048040455119], [1.58542578E12, 1143.611111111111], [1.58542596E12, 993.6134380453742]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854262E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 46.7037037037037, "minX": 1.58542554E12, "maxY": 1143.379781420766, "series": [{"data": [[1.58542572E12, 973.093344857387], [1.58542602E12, 1010.7934973637965], [1.5854259E12, 1018.7081507449607], [1.58542584E12, 1051.7760000000005], [1.58542554E12, 46.7037037037037], [1.5854262E12, 47.0], [1.58542566E12, 984.6684073107045], [1.58542608E12, 763.6865552903721], [1.5854256E12, 412.41471215351817], [1.58542614E12, 80.39711191335742], [1.58542578E12, 1133.462946020126], [1.58542596E12, 1015.1977252843421]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542554E12, 178.04761904761904], [1.5854256E12, 183.39325842696633]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542572E12, 983.9643167972148], [1.58542602E12, 1028.3013215859028], [1.5854259E12, 1035.8007054673722], [1.58542584E12, 1060.071428571428], [1.58542554E12, 52.97142857142856], [1.58542566E12, 963.2772963604854], [1.58542608E12, 766.9784688995206], [1.5854256E12, 394.1072164948456], [1.58542614E12, 78.54740834386844], [1.58542578E12, 1143.379781420766], [1.58542596E12, 993.3560209424098]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854262E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58542554E12, "maxY": 2.1904761904761907, "series": [{"data": [[1.58542572E12, 0.46067415730337075], [1.58542602E12, 0.428822495606327], [1.5854259E12, 0.43382997370727433], [1.58542584E12, 0.46133333333333315], [1.58542554E12, 0.777777777777778], [1.5854262E12, 0.0], [1.58542566E12, 0.4821583986074843], [1.58542608E12, 0.296738265712013], [1.5854256E12, 0.2707889125799572], [1.58542614E12, 0.010830324909747297], [1.58542578E12, 0.5169258920402559], [1.58542596E12, 0.3849518810148733]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542554E12, 2.1904761904761907], [1.5854256E12, 0.9101123595505617]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542572E12, 0.6771105308964323], [1.58542602E12, 0.5735682819383264], [1.5854259E12, 0.5687830687830684], [1.58542584E12, 0.5934744268077607], [1.58542554E12, 0.6285714285714286], [1.58542566E12, 0.6767764298093578], [1.58542608E12, 0.5502392344497605], [1.5854256E12, 0.7525773195876287], [1.58542614E12, 0.5954487989886218], [1.58542578E12, 0.6174863387978132], [1.58542596E12, 0.5628272251308906]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854262E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.58542554E12, "maxY": 3357.0, "series": [{"data": [[1.58542572E12, 2954.0], [1.58542602E12, 3150.0], [1.5854259E12, 3357.0], [1.58542584E12, 3015.0], [1.58542554E12, 245.0], [1.5854262E12, 48.0], [1.58542566E12, 3171.0], [1.58542608E12, 2994.0], [1.5854256E12, 2277.0], [1.58542614E12, 1558.0], [1.58542578E12, 2848.0], [1.58542596E12, 2538.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58542572E12, 33.0], [1.58542602E12, 29.0], [1.5854259E12, 116.0], [1.58542584E12, 105.0], [1.58542554E12, 30.0], [1.5854262E12, 48.0], [1.58542566E12, 32.0], [1.58542608E12, 30.0], [1.5854256E12, 27.0], [1.58542614E12, 28.0], [1.58542578E12, 114.0], [1.58542596E12, 89.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58542572E12, 1604.0], [1.58542602E12, 1641.2000000000003], [1.5854259E12, 1534.0], [1.58542584E12, 1607.0], [1.58542554E12, 175.00000000000006], [1.5854262E12, 48.0], [1.58542566E12, 1589.6], [1.58542608E12, 1523.000000000001], [1.5854256E12, 1165.2], [1.58542614E12, 63.700000000000045], [1.58542578E12, 1687.3999999999999], [1.58542596E12, 1542.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58542572E12, 2144.649999999999], [1.58542602E12, 2331.4399999999896], [1.5854259E12, 2235.559999999996], [1.58542584E12, 2130.6000000000004], [1.58542554E12, 245.0], [1.5854262E12, 48.0], [1.58542566E12, 2046.88], [1.58542608E12, 2112.1600000000008], [1.5854256E12, 1776.12], [1.58542614E12, 1042.199999999999], [1.58542578E12, 2220.16], [1.58542596E12, 2029.9999999999973]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58542572E12, 1787.6000000000004], [1.58542602E12, 1857.5999999999995], [1.5854259E12, 1748.199999999998], [1.58542584E12, 1803.0], [1.58542554E12, 195.59999999999997], [1.5854262E12, 48.0], [1.58542566E12, 1762.3999999999992], [1.58542608E12, 1735.8000000000002], [1.5854256E12, 1352.4999999999995], [1.58542614E12, 136.09999999999764], [1.58542578E12, 1865.4000000000005], [1.58542596E12, 1719.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854262E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 43.0, "minX": 1.0, "maxY": 1114.0, "series": [{"data": [[2.0, 48.0], [3.0, 61.0], [4.0, 46.5], [5.0, 50.0], [6.0, 56.0], [8.0, 68.0], [9.0, 49.5], [10.0, 57.0], [11.0, 46.0], [12.0, 45.0], [13.0, 53.5], [14.0, 51.0], [15.0, 44.0], [16.0, 61.0], [17.0, 51.0], [18.0, 49.5], [19.0, 227.0], [20.0, 225.5], [21.0, 888.0], [22.0, 335.0], [23.0, 49.0], [24.0, 562.5], [25.0, 379.0], [26.0, 1032.5], [27.0, 858.0], [28.0, 1045.5], [29.0, 1023.0], [30.0, 1114.0], [31.0, 950.0], [32.0, 899.5], [33.0, 1075.0], [34.0, 1059.0], [35.0, 984.0], [36.0, 1023.5], [37.0, 1047.0], [39.0, 989.5], [38.0, 935.5], [40.0, 1062.0], [41.0, 957.0], [43.0, 964.5], [42.0, 1019.5], [44.0, 917.0], [45.0, 1052.0], [47.0, 887.0], [46.0, 826.0], [49.0, 589.5], [48.0, 782.0], [51.0, 525.0], [50.0, 682.0], [53.0, 522.0], [52.0, 49.5], [55.0, 453.0], [54.0, 642.0], [57.0, 49.0], [56.0, 44.0], [59.0, 53.0], [58.0, 950.0], [60.0, 47.0], [61.0, 47.0], [63.0, 875.0], [62.0, 48.0], [64.0, 783.5], [65.0, 412.0], [70.0, 396.5], [69.0, 346.0], [68.0, 46.0], [73.0, 43.0], [1.0, 52.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 73.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 43.0, "minX": 1.0, "maxY": 1113.5, "series": [{"data": [[2.0, 48.0], [3.0, 61.0], [4.0, 46.5], [5.0, 50.0], [6.0, 55.5], [8.0, 67.5], [9.0, 49.5], [10.0, 57.0], [11.0, 46.0], [12.0, 45.0], [13.0, 53.0], [14.0, 51.0], [15.0, 44.0], [16.0, 60.5], [17.0, 51.0], [18.0, 49.5], [19.0, 227.0], [20.0, 225.5], [21.0, 888.0], [22.0, 334.0], [23.0, 49.0], [24.0, 562.5], [25.0, 379.0], [26.0, 1032.0], [27.0, 857.0], [28.0, 1045.0], [29.0, 1023.0], [30.0, 1113.5], [31.0, 949.5], [32.0, 899.5], [33.0, 1075.0], [34.0, 1059.0], [35.0, 983.0], [36.0, 1023.5], [37.0, 1047.0], [39.0, 989.5], [38.0, 935.0], [40.0, 1061.5], [41.0, 957.0], [43.0, 964.5], [42.0, 1019.0], [44.0, 917.0], [45.0, 1051.0], [47.0, 887.0], [46.0, 826.0], [49.0, 589.5], [48.0, 782.0], [51.0, 525.0], [50.0, 682.0], [53.0, 522.0], [52.0, 49.0], [55.0, 452.0], [54.0, 642.0], [57.0, 49.0], [56.0, 44.0], [59.0, 52.0], [58.0, 949.5], [60.0, 47.0], [61.0, 47.0], [63.0, 875.0], [62.0, 48.0], [64.0, 783.5], [65.0, 411.0], [70.0, 396.5], [69.0, 346.0], [68.0, 45.5], [73.0, 43.0], [1.0, 52.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 73.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58542554E12, "maxY": 41.25, "series": [{"data": [[1.58542572E12, 38.55], [1.58542602E12, 37.916666666666664], [1.5854259E12, 37.733333333333334], [1.58542584E12, 37.56666666666667], [1.58542554E12, 1.3833333333333333], [1.5854262E12, 0.016666666666666666], [1.58542566E12, 38.483333333333334], [1.58542608E12, 41.25], [1.5854256E12, 33.78333333333333], [1.58542614E12, 27.016666666666666], [1.58542578E12, 36.56666666666667], [1.58542596E12, 38.233333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854262E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58542554E12, "maxY": 41.85, "series": [{"data": [[1.58542572E12, 38.43333333333333], [1.58542602E12, 37.88333333333333], [1.5854259E12, 37.916666666666664], [1.58542584E12, 37.65], [1.58542554E12, 1.3833333333333333], [1.5854262E12, 0.016666666666666666], [1.58542566E12, 38.38333333333333], [1.58542608E12, 41.85], [1.5854256E12, 33.28333333333333], [1.58542614E12, 27.033333333333335], [1.58542578E12, 36.516666666666666], [1.58542596E12, 38.15]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854262E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58542554E12, "maxY": 20.95, "series": [{"data": [[1.58542554E12, 0.35], [1.5854256E12, 1.4833333333333334]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58542572E12, 19.283333333333335], [1.58542602E12, 18.966666666666665], [1.5854259E12, 19.016666666666666], [1.58542584E12, 18.75], [1.58542554E12, 0.45], [1.5854262E12, 0.016666666666666666], [1.58542566E12, 19.15], [1.58542608E12, 20.95], [1.5854256E12, 15.633333333333333], [1.58542614E12, 13.85], [1.58542578E12, 18.216666666666665], [1.58542596E12, 19.05]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58542572E12, 19.15], [1.58542602E12, 18.916666666666668], [1.5854259E12, 18.9], [1.58542584E12, 18.9], [1.58542554E12, 0.5833333333333334], [1.58542566E12, 19.233333333333334], [1.58542608E12, 20.9], [1.5854256E12, 16.166666666666668], [1.58542614E12, 13.183333333333334], [1.58542578E12, 18.3], [1.58542596E12, 19.1]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854262E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58542554E12, "maxY": 41.85, "series": [{"data": [[1.58542572E12, 38.43333333333333], [1.58542602E12, 37.88333333333333], [1.5854259E12, 37.916666666666664], [1.58542584E12, 37.65], [1.58542554E12, 1.3833333333333333], [1.5854262E12, 0.016666666666666666], [1.58542566E12, 38.38333333333333], [1.58542608E12, 41.85], [1.5854256E12, 33.28333333333333], [1.58542614E12, 27.033333333333335], [1.58542578E12, 36.516666666666666], [1.58542596E12, 38.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854262E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

