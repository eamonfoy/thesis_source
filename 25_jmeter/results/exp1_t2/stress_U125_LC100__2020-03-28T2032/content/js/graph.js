/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 7930.0, "series": [{"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 2.0], [0.3, 4.0], [0.4, 6.0], [0.5, 6.0], [0.6, 7.0], [0.7, 7.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 9.0], [1.2, 9.0], [1.3, 10.0], [1.4, 10.0], [1.5, 11.0], [1.6, 13.0], [1.7, 14.0], [1.8, 17.0], [1.9, 26.0], [2.0, 30.0], [2.1, 32.0], [2.2, 34.0], [2.3, 35.0], [2.4, 35.0], [2.5, 36.0], [2.6, 37.0], [2.7, 37.0], [2.8, 38.0], [2.9, 38.0], [3.0, 39.0], [3.1, 39.0], [3.2, 40.0], [3.3, 40.0], [3.4, 41.0], [3.5, 41.0], [3.6, 41.0], [3.7, 41.0], [3.8, 42.0], [3.9, 42.0], [4.0, 42.0], [4.1, 43.0], [4.2, 43.0], [4.3, 43.0], [4.4, 43.0], [4.5, 44.0], [4.6, 44.0], [4.7, 44.0], [4.8, 44.0], [4.9, 45.0], [5.0, 45.0], [5.1, 46.0], [5.2, 46.0], [5.3, 46.0], [5.4, 46.0], [5.5, 47.0], [5.6, 47.0], [5.7, 47.0], [5.8, 47.0], [5.9, 48.0], [6.0, 48.0], [6.1, 48.0], [6.2, 48.0], [6.3, 49.0], [6.4, 49.0], [6.5, 49.0], [6.6, 50.0], [6.7, 50.0], [6.8, 50.0], [6.9, 50.0], [7.0, 50.0], [7.1, 51.0], [7.2, 51.0], [7.3, 51.0], [7.4, 52.0], [7.5, 52.0], [7.6, 52.0], [7.7, 53.0], [7.8, 53.0], [7.9, 53.0], [8.0, 54.0], [8.1, 54.0], [8.2, 54.0], [8.3, 55.0], [8.4, 55.0], [8.5, 55.0], [8.6, 56.0], [8.7, 56.0], [8.8, 56.0], [8.9, 57.0], [9.0, 57.0], [9.1, 58.0], [9.2, 58.0], [9.3, 58.0], [9.4, 59.0], [9.5, 59.0], [9.6, 60.0], [9.7, 60.0], [9.8, 60.0], [9.9, 61.0], [10.0, 61.0], [10.1, 62.0], [10.2, 63.0], [10.3, 64.0], [10.4, 64.0], [10.5, 65.0], [10.6, 66.0], [10.7, 67.0], [10.8, 68.0], [10.9, 69.0], [11.0, 70.0], [11.1, 71.0], [11.2, 72.0], [11.3, 73.0], [11.4, 75.0], [11.5, 77.0], [11.6, 79.0], [11.7, 81.0], [11.8, 83.0], [11.9, 85.0], [12.0, 86.0], [12.1, 89.0], [12.2, 92.0], [12.3, 96.0], [12.4, 99.0], [12.5, 102.0], [12.6, 110.0], [12.7, 113.0], [12.8, 125.0], [12.9, 136.0], [13.0, 145.0], [13.1, 155.0], [13.2, 163.0], [13.3, 170.0], [13.4, 180.0], [13.5, 188.0], [13.6, 197.0], [13.7, 204.0], [13.8, 210.0], [13.9, 214.0], [14.0, 221.0], [14.1, 233.0], [14.2, 238.0], [14.3, 249.0], [14.4, 254.0], [14.5, 265.0], [14.6, 271.0], [14.7, 280.0], [14.8, 287.0], [14.9, 295.0], [15.0, 306.0], [15.1, 311.0], [15.2, 317.0], [15.3, 321.0], [15.4, 329.0], [15.5, 336.0], [15.6, 342.0], [15.7, 345.0], [15.8, 353.0], [15.9, 359.0], [16.0, 365.0], [16.1, 369.0], [16.2, 373.0], [16.3, 379.0], [16.4, 386.0], [16.5, 393.0], [16.6, 397.0], [16.7, 402.0], [16.8, 411.0], [16.9, 415.0], [17.0, 420.0], [17.1, 424.0], [17.2, 430.0], [17.3, 435.0], [17.4, 439.0], [17.5, 442.0], [17.6, 447.0], [17.7, 451.0], [17.8, 458.0], [17.9, 460.0], [18.0, 464.0], [18.1, 468.0], [18.2, 475.0], [18.3, 479.0], [18.4, 485.0], [18.5, 489.0], [18.6, 496.0], [18.7, 498.0], [18.8, 505.0], [18.9, 509.0], [19.0, 512.0], [19.1, 516.0], [19.2, 521.0], [19.3, 525.0], [19.4, 528.0], [19.5, 533.0], [19.6, 539.0], [19.7, 541.0], [19.8, 545.0], [19.9, 549.0], [20.0, 553.0], [20.1, 556.0], [20.2, 559.0], [20.3, 563.0], [20.4, 565.0], [20.5, 570.0], [20.6, 572.0], [20.7, 576.0], [20.8, 580.0], [20.9, 583.0], [21.0, 586.0], [21.1, 589.0], [21.2, 592.0], [21.3, 595.0], [21.4, 597.0], [21.5, 601.0], [21.6, 604.0], [21.7, 607.0], [21.8, 609.0], [21.9, 615.0], [22.0, 618.0], [22.1, 621.0], [22.2, 625.0], [22.3, 628.0], [22.4, 630.0], [22.5, 634.0], [22.6, 637.0], [22.7, 640.0], [22.8, 645.0], [22.9, 646.0], [23.0, 649.0], [23.1, 653.0], [23.2, 655.0], [23.3, 656.0], [23.4, 661.0], [23.5, 664.0], [23.6, 667.0], [23.7, 669.0], [23.8, 672.0], [23.9, 675.0], [24.0, 679.0], [24.1, 681.0], [24.2, 683.0], [24.3, 686.0], [24.4, 689.0], [24.5, 691.0], [24.6, 693.0], [24.7, 696.0], [24.8, 700.0], [24.9, 702.0], [25.0, 704.0], [25.1, 707.0], [25.2, 709.0], [25.3, 711.0], [25.4, 714.0], [25.5, 717.0], [25.6, 719.0], [25.7, 722.0], [25.8, 724.0], [25.9, 726.0], [26.0, 728.0], [26.1, 731.0], [26.2, 733.0], [26.3, 735.0], [26.4, 738.0], [26.5, 740.0], [26.6, 742.0], [26.7, 745.0], [26.8, 748.0], [26.9, 751.0], [27.0, 754.0], [27.1, 755.0], [27.2, 759.0], [27.3, 761.0], [27.4, 764.0], [27.5, 768.0], [27.6, 771.0], [27.7, 773.0], [27.8, 776.0], [27.9, 778.0], [28.0, 782.0], [28.1, 782.0], [28.2, 784.0], [28.3, 786.0], [28.4, 789.0], [28.5, 791.0], [28.6, 793.0], [28.7, 794.0], [28.8, 795.0], [28.9, 797.0], [29.0, 799.0], [29.1, 800.0], [29.2, 802.0], [29.3, 805.0], [29.4, 808.0], [29.5, 810.0], [29.6, 813.0], [29.7, 815.0], [29.8, 817.0], [29.9, 819.0], [30.0, 822.0], [30.1, 825.0], [30.2, 827.0], [30.3, 828.0], [30.4, 830.0], [30.5, 832.0], [30.6, 833.0], [30.7, 835.0], [30.8, 838.0], [30.9, 840.0], [31.0, 842.0], [31.1, 844.0], [31.2, 848.0], [31.3, 852.0], [31.4, 854.0], [31.5, 855.0], [31.6, 859.0], [31.7, 860.0], [31.8, 862.0], [31.9, 864.0], [32.0, 867.0], [32.1, 869.0], [32.2, 871.0], [32.3, 874.0], [32.4, 876.0], [32.5, 879.0], [32.6, 881.0], [32.7, 883.0], [32.8, 884.0], [32.9, 885.0], [33.0, 887.0], [33.1, 889.0], [33.2, 890.0], [33.3, 893.0], [33.4, 895.0], [33.5, 896.0], [33.6, 898.0], [33.7, 900.0], [33.8, 902.0], [33.9, 904.0], [34.0, 905.0], [34.1, 907.0], [34.2, 909.0], [34.3, 911.0], [34.4, 913.0], [34.5, 915.0], [34.6, 918.0], [34.7, 921.0], [34.8, 924.0], [34.9, 925.0], [35.0, 926.0], [35.1, 929.0], [35.2, 932.0], [35.3, 934.0], [35.4, 935.0], [35.5, 937.0], [35.6, 940.0], [35.7, 943.0], [35.8, 945.0], [35.9, 947.0], [36.0, 949.0], [36.1, 952.0], [36.2, 954.0], [36.3, 957.0], [36.4, 960.0], [36.5, 962.0], [36.6, 964.0], [36.7, 967.0], [36.8, 970.0], [36.9, 972.0], [37.0, 973.0], [37.1, 975.0], [37.2, 976.0], [37.3, 977.0], [37.4, 979.0], [37.5, 980.0], [37.6, 983.0], [37.7, 984.0], [37.8, 987.0], [37.9, 989.0], [38.0, 991.0], [38.1, 993.0], [38.2, 995.0], [38.3, 996.0], [38.4, 998.0], [38.5, 999.0], [38.6, 1001.0], [38.7, 1003.0], [38.8, 1006.0], [38.9, 1006.0], [39.0, 1008.0], [39.1, 1011.0], [39.2, 1013.0], [39.3, 1015.0], [39.4, 1017.0], [39.5, 1018.0], [39.6, 1021.0], [39.7, 1023.0], [39.8, 1024.0], [39.9, 1026.0], [40.0, 1027.0], [40.1, 1028.0], [40.2, 1030.0], [40.3, 1031.0], [40.4, 1033.0], [40.5, 1034.0], [40.6, 1036.0], [40.7, 1038.0], [40.8, 1040.0], [40.9, 1041.0], [41.0, 1044.0], [41.1, 1045.0], [41.2, 1046.0], [41.3, 1049.0], [41.4, 1051.0], [41.5, 1052.0], [41.6, 1053.0], [41.7, 1055.0], [41.8, 1057.0], [41.9, 1060.0], [42.0, 1061.0], [42.1, 1063.0], [42.2, 1065.0], [42.3, 1067.0], [42.4, 1068.0], [42.5, 1070.0], [42.6, 1072.0], [42.7, 1073.0], [42.8, 1076.0], [42.9, 1077.0], [43.0, 1078.0], [43.1, 1079.0], [43.2, 1082.0], [43.3, 1086.0], [43.4, 1088.0], [43.5, 1089.0], [43.6, 1091.0], [43.7, 1091.0], [43.8, 1093.0], [43.9, 1095.0], [44.0, 1097.0], [44.1, 1099.0], [44.2, 1101.0], [44.3, 1102.0], [44.4, 1104.0], [44.5, 1105.0], [44.6, 1107.0], [44.7, 1109.0], [44.8, 1111.0], [44.9, 1112.0], [45.0, 1115.0], [45.1, 1116.0], [45.2, 1118.0], [45.3, 1119.0], [45.4, 1122.0], [45.5, 1124.0], [45.6, 1125.0], [45.7, 1127.0], [45.8, 1129.0], [45.9, 1131.0], [46.0, 1133.0], [46.1, 1136.0], [46.2, 1138.0], [46.3, 1139.0], [46.4, 1141.0], [46.5, 1142.0], [46.6, 1144.0], [46.7, 1146.0], [46.8, 1148.0], [46.9, 1149.0], [47.0, 1152.0], [47.1, 1154.0], [47.2, 1155.0], [47.3, 1156.0], [47.4, 1157.0], [47.5, 1158.0], [47.6, 1160.0], [47.7, 1161.0], [47.8, 1163.0], [47.9, 1165.0], [48.0, 1167.0], [48.1, 1169.0], [48.2, 1170.0], [48.3, 1172.0], [48.4, 1174.0], [48.5, 1175.0], [48.6, 1177.0], [48.7, 1178.0], [48.8, 1180.0], [48.9, 1181.0], [49.0, 1182.0], [49.1, 1184.0], [49.2, 1185.0], [49.3, 1187.0], [49.4, 1188.0], [49.5, 1190.0], [49.6, 1191.0], [49.7, 1193.0], [49.8, 1195.0], [49.9, 1196.0], [50.0, 1197.0], [50.1, 1199.0], [50.2, 1201.0], [50.3, 1202.0], [50.4, 1204.0], [50.5, 1206.0], [50.6, 1207.0], [50.7, 1209.0], [50.8, 1210.0], [50.9, 1212.0], [51.0, 1214.0], [51.1, 1217.0], [51.2, 1219.0], [51.3, 1221.0], [51.4, 1221.0], [51.5, 1222.0], [51.6, 1224.0], [51.7, 1225.0], [51.8, 1227.0], [51.9, 1229.0], [52.0, 1230.0], [52.1, 1233.0], [52.2, 1235.0], [52.3, 1237.0], [52.4, 1241.0], [52.5, 1242.0], [52.6, 1244.0], [52.7, 1247.0], [52.8, 1250.0], [52.9, 1251.0], [53.0, 1254.0], [53.1, 1255.0], [53.2, 1258.0], [53.3, 1260.0], [53.4, 1262.0], [53.5, 1264.0], [53.6, 1265.0], [53.7, 1266.0], [53.8, 1269.0], [53.9, 1270.0], [54.0, 1272.0], [54.1, 1275.0], [54.2, 1276.0], [54.3, 1277.0], [54.4, 1280.0], [54.5, 1282.0], [54.6, 1284.0], [54.7, 1285.0], [54.8, 1287.0], [54.9, 1288.0], [55.0, 1290.0], [55.1, 1292.0], [55.2, 1294.0], [55.3, 1296.0], [55.4, 1298.0], [55.5, 1300.0], [55.6, 1302.0], [55.7, 1305.0], [55.8, 1306.0], [55.9, 1308.0], [56.0, 1310.0], [56.1, 1312.0], [56.2, 1314.0], [56.3, 1316.0], [56.4, 1317.0], [56.5, 1319.0], [56.6, 1320.0], [56.7, 1323.0], [56.8, 1324.0], [56.9, 1327.0], [57.0, 1329.0], [57.1, 1331.0], [57.2, 1333.0], [57.3, 1335.0], [57.4, 1337.0], [57.5, 1339.0], [57.6, 1341.0], [57.7, 1342.0], [57.8, 1343.0], [57.9, 1345.0], [58.0, 1347.0], [58.1, 1349.0], [58.2, 1351.0], [58.3, 1352.0], [58.4, 1354.0], [58.5, 1355.0], [58.6, 1358.0], [58.7, 1359.0], [58.8, 1361.0], [58.9, 1363.0], [59.0, 1365.0], [59.1, 1367.0], [59.2, 1369.0], [59.3, 1370.0], [59.4, 1372.0], [59.5, 1373.0], [59.6, 1375.0], [59.7, 1377.0], [59.8, 1378.0], [59.9, 1380.0], [60.0, 1381.0], [60.1, 1383.0], [60.2, 1385.0], [60.3, 1386.0], [60.4, 1388.0], [60.5, 1390.0], [60.6, 1392.0], [60.7, 1394.0], [60.8, 1396.0], [60.9, 1398.0], [61.0, 1400.0], [61.1, 1401.0], [61.2, 1403.0], [61.3, 1404.0], [61.4, 1406.0], [61.5, 1408.0], [61.6, 1410.0], [61.7, 1411.0], [61.8, 1413.0], [61.9, 1414.0], [62.0, 1416.0], [62.1, 1417.0], [62.2, 1419.0], [62.3, 1420.0], [62.4, 1423.0], [62.5, 1425.0], [62.6, 1427.0], [62.7, 1428.0], [62.8, 1429.0], [62.9, 1430.0], [63.0, 1432.0], [63.1, 1436.0], [63.2, 1438.0], [63.3, 1440.0], [63.4, 1442.0], [63.5, 1444.0], [63.6, 1445.0], [63.7, 1447.0], [63.8, 1449.0], [63.9, 1450.0], [64.0, 1452.0], [64.1, 1453.0], [64.2, 1456.0], [64.3, 1458.0], [64.4, 1460.0], [64.5, 1461.0], [64.6, 1463.0], [64.7, 1466.0], [64.8, 1468.0], [64.9, 1470.0], [65.0, 1472.0], [65.1, 1474.0], [65.2, 1475.0], [65.3, 1476.0], [65.4, 1478.0], [65.5, 1479.0], [65.6, 1482.0], [65.7, 1484.0], [65.8, 1487.0], [65.9, 1488.0], [66.0, 1490.0], [66.1, 1492.0], [66.2, 1495.0], [66.3, 1497.0], [66.4, 1498.0], [66.5, 1500.0], [66.6, 1503.0], [66.7, 1504.0], [66.8, 1506.0], [66.9, 1508.0], [67.0, 1509.0], [67.1, 1511.0], [67.2, 1513.0], [67.3, 1516.0], [67.4, 1517.0], [67.5, 1518.0], [67.6, 1520.0], [67.7, 1523.0], [67.8, 1526.0], [67.9, 1529.0], [68.0, 1531.0], [68.1, 1533.0], [68.2, 1535.0], [68.3, 1536.0], [68.4, 1538.0], [68.5, 1540.0], [68.6, 1541.0], [68.7, 1543.0], [68.8, 1545.0], [68.9, 1548.0], [69.0, 1550.0], [69.1, 1551.0], [69.2, 1552.0], [69.3, 1554.0], [69.4, 1556.0], [69.5, 1559.0], [69.6, 1561.0], [69.7, 1564.0], [69.8, 1567.0], [69.9, 1568.0], [70.0, 1572.0], [70.1, 1574.0], [70.2, 1576.0], [70.3, 1578.0], [70.4, 1579.0], [70.5, 1581.0], [70.6, 1582.0], [70.7, 1583.0], [70.8, 1585.0], [70.9, 1587.0], [71.0, 1588.0], [71.1, 1589.0], [71.2, 1591.0], [71.3, 1593.0], [71.4, 1595.0], [71.5, 1596.0], [71.6, 1598.0], [71.7, 1600.0], [71.8, 1603.0], [71.9, 1605.0], [72.0, 1608.0], [72.1, 1611.0], [72.2, 1612.0], [72.3, 1614.0], [72.4, 1615.0], [72.5, 1617.0], [72.6, 1619.0], [72.7, 1621.0], [72.8, 1623.0], [72.9, 1625.0], [73.0, 1626.0], [73.1, 1628.0], [73.2, 1630.0], [73.3, 1632.0], [73.4, 1634.0], [73.5, 1636.0], [73.6, 1638.0], [73.7, 1641.0], [73.8, 1644.0], [73.9, 1646.0], [74.0, 1647.0], [74.1, 1650.0], [74.2, 1653.0], [74.3, 1655.0], [74.4, 1656.0], [74.5, 1658.0], [74.6, 1660.0], [74.7, 1662.0], [74.8, 1665.0], [74.9, 1666.0], [75.0, 1668.0], [75.1, 1670.0], [75.2, 1672.0], [75.3, 1674.0], [75.4, 1676.0], [75.5, 1678.0], [75.6, 1680.0], [75.7, 1683.0], [75.8, 1685.0], [75.9, 1687.0], [76.0, 1688.0], [76.1, 1690.0], [76.2, 1692.0], [76.3, 1694.0], [76.4, 1696.0], [76.5, 1697.0], [76.6, 1701.0], [76.7, 1703.0], [76.8, 1705.0], [76.9, 1707.0], [77.0, 1710.0], [77.1, 1712.0], [77.2, 1714.0], [77.3, 1716.0], [77.4, 1717.0], [77.5, 1720.0], [77.6, 1721.0], [77.7, 1723.0], [77.8, 1725.0], [77.9, 1727.0], [78.0, 1730.0], [78.1, 1731.0], [78.2, 1733.0], [78.3, 1736.0], [78.4, 1739.0], [78.5, 1742.0], [78.6, 1744.0], [78.7, 1747.0], [78.8, 1749.0], [78.9, 1752.0], [79.0, 1756.0], [79.1, 1759.0], [79.2, 1761.0], [79.3, 1765.0], [79.4, 1766.0], [79.5, 1769.0], [79.6, 1772.0], [79.7, 1775.0], [79.8, 1777.0], [79.9, 1780.0], [80.0, 1782.0], [80.1, 1786.0], [80.2, 1788.0], [80.3, 1790.0], [80.4, 1791.0], [80.5, 1795.0], [80.6, 1798.0], [80.7, 1802.0], [80.8, 1806.0], [80.9, 1808.0], [81.0, 1812.0], [81.1, 1815.0], [81.2, 1818.0], [81.3, 1821.0], [81.4, 1824.0], [81.5, 1826.0], [81.6, 1829.0], [81.7, 1832.0], [81.8, 1836.0], [81.9, 1839.0], [82.0, 1842.0], [82.1, 1845.0], [82.2, 1847.0], [82.3, 1848.0], [82.4, 1849.0], [82.5, 1854.0], [82.6, 1857.0], [82.7, 1859.0], [82.8, 1862.0], [82.9, 1864.0], [83.0, 1869.0], [83.1, 1872.0], [83.2, 1874.0], [83.3, 1877.0], [83.4, 1879.0], [83.5, 1883.0], [83.6, 1887.0], [83.7, 1890.0], [83.8, 1894.0], [83.9, 1896.0], [84.0, 1898.0], [84.1, 1904.0], [84.2, 1907.0], [84.3, 1909.0], [84.4, 1912.0], [84.5, 1915.0], [84.6, 1918.0], [84.7, 1921.0], [84.8, 1924.0], [84.9, 1927.0], [85.0, 1930.0], [85.1, 1932.0], [85.2, 1936.0], [85.3, 1941.0], [85.4, 1944.0], [85.5, 1948.0], [85.6, 1951.0], [85.7, 1953.0], [85.8, 1957.0], [85.9, 1960.0], [86.0, 1964.0], [86.1, 1967.0], [86.2, 1969.0], [86.3, 1972.0], [86.4, 1975.0], [86.5, 1980.0], [86.6, 1985.0], [86.7, 1988.0], [86.8, 1990.0], [86.9, 1993.0], [87.0, 1997.0], [87.1, 2001.0], [87.2, 2005.0], [87.3, 2008.0], [87.4, 2012.0], [87.5, 2016.0], [87.6, 2020.0], [87.7, 2025.0], [87.8, 2028.0], [87.9, 2032.0], [88.0, 2037.0], [88.1, 2040.0], [88.2, 2048.0], [88.3, 2054.0], [88.4, 2061.0], [88.5, 2065.0], [88.6, 2072.0], [88.7, 2077.0], [88.8, 2082.0], [88.9, 2088.0], [89.0, 2091.0], [89.1, 2097.0], [89.2, 2102.0], [89.3, 2106.0], [89.4, 2111.0], [89.5, 2116.0], [89.6, 2124.0], [89.7, 2129.0], [89.8, 2136.0], [89.9, 2140.0], [90.0, 2144.0], [90.1, 2150.0], [90.2, 2152.0], [90.3, 2158.0], [90.4, 2162.0], [90.5, 2167.0], [90.6, 2173.0], [90.7, 2177.0], [90.8, 2182.0], [90.9, 2188.0], [91.0, 2194.0], [91.1, 2198.0], [91.2, 2202.0], [91.3, 2208.0], [91.4, 2216.0], [91.5, 2221.0], [91.6, 2227.0], [91.7, 2233.0], [91.8, 2240.0], [91.9, 2243.0], [92.0, 2249.0], [92.1, 2254.0], [92.2, 2264.0], [92.3, 2270.0], [92.4, 2278.0], [92.5, 2287.0], [92.6, 2295.0], [92.7, 2304.0], [92.8, 2315.0], [92.9, 2324.0], [93.0, 2328.0], [93.1, 2338.0], [93.2, 2344.0], [93.3, 2349.0], [93.4, 2355.0], [93.5, 2360.0], [93.6, 2372.0], [93.7, 2377.0], [93.8, 2384.0], [93.9, 2391.0], [94.0, 2395.0], [94.1, 2406.0], [94.2, 2415.0], [94.3, 2424.0], [94.4, 2433.0], [94.5, 2438.0], [94.6, 2446.0], [94.7, 2453.0], [94.8, 2466.0], [94.9, 2479.0], [95.0, 2487.0], [95.1, 2499.0], [95.2, 2505.0], [95.3, 2516.0], [95.4, 2525.0], [95.5, 2528.0], [95.6, 2536.0], [95.7, 2546.0], [95.8, 2555.0], [95.9, 2565.0], [96.0, 2575.0], [96.1, 2587.0], [96.2, 2595.0], [96.3, 2607.0], [96.4, 2618.0], [96.5, 2631.0], [96.6, 2646.0], [96.7, 2655.0], [96.8, 2664.0], [96.9, 2680.0], [97.0, 2700.0], [97.1, 2713.0], [97.2, 2726.0], [97.3, 2740.0], [97.4, 2752.0], [97.5, 2770.0], [97.6, 2785.0], [97.7, 2813.0], [97.8, 2840.0], [97.9, 2860.0], [98.0, 2887.0], [98.1, 2912.0], [98.2, 2946.0], [98.3, 2961.0], [98.4, 2984.0], [98.5, 3002.0], [98.6, 3034.0], [98.7, 3089.0], [98.8, 3121.0], [98.9, 3159.0], [99.0, 3191.0], [99.1, 3256.0], [99.2, 3334.0], [99.3, 3401.0], [99.4, 3459.0], [99.5, 3504.0], [99.6, 3655.0], [99.7, 4162.0], [99.8, 4792.0], [99.9, 5125.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 148.0], [0.1, 148.0], [0.2, 148.0], [0.3, 148.0], [0.4, 148.0], [0.5, 148.0], [0.6, 148.0], [0.7, 148.0], [0.8, 150.0], [0.9, 150.0], [1.0, 150.0], [1.1, 150.0], [1.2, 150.0], [1.3, 150.0], [1.4, 150.0], [1.5, 150.0], [1.6, 150.0], [1.7, 150.0], [1.8, 150.0], [1.9, 150.0], [2.0, 150.0], [2.1, 150.0], [2.2, 150.0], [2.3, 150.0], [2.4, 150.0], [2.5, 151.0], [2.6, 151.0], [2.7, 151.0], [2.8, 151.0], [2.9, 151.0], [3.0, 151.0], [3.1, 151.0], [3.2, 151.0], [3.3, 151.0], [3.4, 151.0], [3.5, 151.0], [3.6, 151.0], [3.7, 151.0], [3.8, 151.0], [3.9, 151.0], [4.0, 153.0], [4.1, 153.0], [4.2, 153.0], [4.3, 153.0], [4.4, 153.0], [4.5, 153.0], [4.6, 153.0], [4.7, 153.0], [4.8, 153.0], [4.9, 153.0], [5.0, 153.0], [5.1, 153.0], [5.2, 153.0], [5.3, 153.0], [5.4, 153.0], [5.5, 153.0], [5.6, 154.0], [5.7, 154.0], [5.8, 154.0], [5.9, 154.0], [6.0, 154.0], [6.1, 154.0], [6.2, 154.0], [6.3, 154.0], [6.4, 154.0], [6.5, 154.0], [6.6, 154.0], [6.7, 154.0], [6.8, 154.0], [6.9, 154.0], [7.0, 154.0], [7.1, 154.0], [7.2, 154.0], [7.3, 154.0], [7.4, 154.0], [7.5, 154.0], [7.6, 154.0], [7.7, 154.0], [7.8, 154.0], [7.9, 154.0], [8.0, 155.0], [8.1, 155.0], [8.2, 155.0], [8.3, 155.0], [8.4, 155.0], [8.5, 155.0], [8.6, 155.0], [8.7, 155.0], [8.8, 155.0], [8.9, 155.0], [9.0, 155.0], [9.1, 155.0], [9.2, 155.0], [9.3, 155.0], [9.4, 155.0], [9.5, 155.0], [9.6, 156.0], [9.7, 156.0], [9.8, 156.0], [9.9, 156.0], [10.0, 156.0], [10.1, 156.0], [10.2, 156.0], [10.3, 156.0], [10.4, 156.0], [10.5, 156.0], [10.6, 156.0], [10.7, 156.0], [10.8, 156.0], [10.9, 156.0], [11.0, 156.0], [11.1, 156.0], [11.2, 156.0], [11.3, 156.0], [11.4, 156.0], [11.5, 156.0], [11.6, 156.0], [11.7, 156.0], [11.8, 156.0], [11.9, 156.0], [12.0, 156.0], [12.1, 156.0], [12.2, 156.0], [12.3, 156.0], [12.4, 156.0], [12.5, 156.0], [12.6, 156.0], [12.7, 156.0], [12.8, 156.0], [12.9, 156.0], [13.0, 156.0], [13.1, 156.0], [13.2, 156.0], [13.3, 156.0], [13.4, 156.0], [13.5, 156.0], [13.6, 157.0], [13.7, 157.0], [13.8, 157.0], [13.9, 157.0], [14.0, 157.0], [14.1, 157.0], [14.2, 157.0], [14.3, 157.0], [14.4, 157.0], [14.5, 157.0], [14.6, 157.0], [14.7, 157.0], [14.8, 157.0], [14.9, 157.0], [15.0, 157.0], [15.1, 157.0], [15.2, 157.0], [15.3, 157.0], [15.4, 157.0], [15.5, 157.0], [15.6, 157.0], [15.7, 157.0], [15.8, 157.0], [15.9, 157.0], [16.0, 157.0], [16.1, 157.0], [16.2, 157.0], [16.3, 157.0], [16.4, 157.0], [16.5, 157.0], [16.6, 157.0], [16.7, 157.0], [16.8, 157.0], [16.9, 157.0], [17.0, 157.0], [17.1, 157.0], [17.2, 157.0], [17.3, 157.0], [17.4, 157.0], [17.5, 157.0], [17.6, 157.0], [17.7, 157.0], [17.8, 157.0], [17.9, 157.0], [18.0, 157.0], [18.1, 157.0], [18.2, 157.0], [18.3, 157.0], [18.4, 158.0], [18.5, 158.0], [18.6, 158.0], [18.7, 158.0], [18.8, 158.0], [18.9, 158.0], [19.0, 158.0], [19.1, 158.0], [19.2, 158.0], [19.3, 158.0], [19.4, 158.0], [19.5, 158.0], [19.6, 158.0], [19.7, 158.0], [19.8, 158.0], [19.9, 158.0], [20.0, 158.0], [20.1, 158.0], [20.2, 158.0], [20.3, 158.0], [20.4, 158.0], [20.5, 158.0], [20.6, 158.0], [20.7, 158.0], [20.8, 158.0], [20.9, 158.0], [21.0, 158.0], [21.1, 158.0], [21.2, 158.0], [21.3, 158.0], [21.4, 158.0], [21.5, 158.0], [21.6, 159.0], [21.7, 159.0], [21.8, 159.0], [21.9, 159.0], [22.0, 159.0], [22.1, 159.0], [22.2, 159.0], [22.3, 159.0], [22.4, 159.0], [22.5, 159.0], [22.6, 159.0], [22.7, 159.0], [22.8, 159.0], [22.9, 159.0], [23.0, 159.0], [23.1, 159.0], [23.2, 159.0], [23.3, 159.0], [23.4, 159.0], [23.5, 159.0], [23.6, 159.0], [23.7, 159.0], [23.8, 159.0], [23.9, 159.0], [24.0, 159.0], [24.1, 159.0], [24.2, 159.0], [24.3, 159.0], [24.4, 159.0], [24.5, 159.0], [24.6, 159.0], [24.7, 159.0], [24.8, 159.0], [24.9, 159.0], [25.0, 159.0], [25.1, 159.0], [25.2, 159.0], [25.3, 159.0], [25.4, 159.0], [25.5, 159.0], [25.6, 160.0], [25.7, 160.0], [25.8, 160.0], [25.9, 160.0], [26.0, 160.0], [26.1, 160.0], [26.2, 160.0], [26.3, 160.0], [26.4, 160.0], [26.5, 160.0], [26.6, 160.0], [26.7, 160.0], [26.8, 160.0], [26.9, 160.0], [27.0, 160.0], [27.1, 160.0], [27.2, 160.0], [27.3, 160.0], [27.4, 160.0], [27.5, 160.0], [27.6, 160.0], [27.7, 160.0], [27.8, 160.0], [27.9, 160.0], [28.0, 160.0], [28.1, 160.0], [28.2, 160.0], [28.3, 160.0], [28.4, 160.0], [28.5, 160.0], [28.6, 160.0], [28.7, 160.0], [28.8, 161.0], [28.9, 161.0], [29.0, 161.0], [29.1, 161.0], [29.2, 161.0], [29.3, 161.0], [29.4, 161.0], [29.5, 161.0], [29.6, 161.0], [29.7, 161.0], [29.8, 161.0], [29.9, 161.0], [30.0, 161.0], [30.1, 161.0], [30.2, 161.0], [30.3, 161.0], [30.4, 162.0], [30.5, 162.0], [30.6, 162.0], [30.7, 162.0], [30.8, 162.0], [30.9, 162.0], [31.0, 162.0], [31.1, 162.0], [31.2, 162.0], [31.3, 162.0], [31.4, 162.0], [31.5, 162.0], [31.6, 162.0], [31.7, 162.0], [31.8, 162.0], [31.9, 162.0], [32.0, 162.0], [32.1, 162.0], [32.2, 162.0], [32.3, 162.0], [32.4, 162.0], [32.5, 162.0], [32.6, 162.0], [32.7, 162.0], [32.8, 162.0], [32.9, 162.0], [33.0, 162.0], [33.1, 162.0], [33.2, 162.0], [33.3, 162.0], [33.4, 162.0], [33.5, 162.0], [33.6, 163.0], [33.7, 163.0], [33.8, 163.0], [33.9, 163.0], [34.0, 163.0], [34.1, 163.0], [34.2, 163.0], [34.3, 163.0], [34.4, 163.0], [34.5, 163.0], [34.6, 163.0], [34.7, 163.0], [34.8, 163.0], [34.9, 163.0], [35.0, 163.0], [35.1, 163.0], [35.2, 164.0], [35.3, 164.0], [35.4, 164.0], [35.5, 164.0], [35.6, 164.0], [35.7, 164.0], [35.8, 164.0], [35.9, 164.0], [36.0, 165.0], [36.1, 165.0], [36.2, 165.0], [36.3, 165.0], [36.4, 165.0], [36.5, 165.0], [36.6, 165.0], [36.7, 165.0], [36.8, 165.0], [36.9, 165.0], [37.0, 165.0], [37.1, 165.0], [37.2, 165.0], [37.3, 165.0], [37.4, 165.0], [37.5, 165.0], [37.6, 166.0], [37.7, 166.0], [37.8, 166.0], [37.9, 166.0], [38.0, 166.0], [38.1, 166.0], [38.2, 166.0], [38.3, 166.0], [38.4, 166.0], [38.5, 166.0], [38.6, 166.0], [38.7, 166.0], [38.8, 166.0], [38.9, 166.0], [39.0, 166.0], [39.1, 166.0], [39.2, 166.0], [39.3, 166.0], [39.4, 166.0], [39.5, 166.0], [39.6, 166.0], [39.7, 166.0], [39.8, 166.0], [39.9, 166.0], [40.0, 167.0], [40.1, 167.0], [40.2, 167.0], [40.3, 167.0], [40.4, 167.0], [40.5, 167.0], [40.6, 167.0], [40.7, 167.0], [40.8, 167.0], [40.9, 167.0], [41.0, 167.0], [41.1, 167.0], [41.2, 167.0], [41.3, 167.0], [41.4, 167.0], [41.5, 167.0], [41.6, 168.0], [41.7, 168.0], [41.8, 168.0], [41.9, 168.0], [42.0, 168.0], [42.1, 168.0], [42.2, 168.0], [42.3, 168.0], [42.4, 168.0], [42.5, 168.0], [42.6, 168.0], [42.7, 168.0], [42.8, 168.0], [42.9, 168.0], [43.0, 168.0], [43.1, 168.0], [43.2, 168.0], [43.3, 168.0], [43.4, 168.0], [43.5, 168.0], [43.6, 168.0], [43.7, 168.0], [43.8, 168.0], [43.9, 168.0], [44.0, 168.0], [44.1, 168.0], [44.2, 168.0], [44.3, 168.0], [44.4, 168.0], [44.5, 168.0], [44.6, 168.0], [44.7, 168.0], [44.8, 168.0], [44.9, 168.0], [45.0, 168.0], [45.1, 168.0], [45.2, 168.0], [45.3, 168.0], [45.4, 168.0], [45.5, 168.0], [45.6, 169.0], [45.7, 169.0], [45.8, 169.0], [45.9, 169.0], [46.0, 169.0], [46.1, 169.0], [46.2, 169.0], [46.3, 169.0], [46.4, 169.0], [46.5, 169.0], [46.6, 169.0], [46.7, 169.0], [46.8, 169.0], [46.9, 169.0], [47.0, 169.0], [47.1, 169.0], [47.2, 169.0], [47.3, 169.0], [47.4, 169.0], [47.5, 169.0], [47.6, 169.0], [47.7, 169.0], [47.8, 169.0], [47.9, 169.0], [48.0, 169.0], [48.1, 169.0], [48.2, 169.0], [48.3, 169.0], [48.4, 169.0], [48.5, 169.0], [48.6, 169.0], [48.7, 169.0], [48.8, 169.0], [48.9, 169.0], [49.0, 169.0], [49.1, 169.0], [49.2, 169.0], [49.3, 169.0], [49.4, 169.0], [49.5, 169.0], [49.6, 170.0], [49.7, 170.0], [49.8, 170.0], [49.9, 170.0], [50.0, 170.0], [50.1, 170.0], [50.2, 170.0], [50.3, 170.0], [50.4, 170.0], [50.5, 170.0], [50.6, 170.0], [50.7, 170.0], [50.8, 170.0], [50.9, 170.0], [51.0, 170.0], [51.1, 170.0], [51.2, 170.0], [51.3, 170.0], [51.4, 170.0], [51.5, 170.0], [51.6, 170.0], [51.7, 170.0], [51.8, 170.0], [51.9, 170.0], [52.0, 170.0], [52.1, 170.0], [52.2, 170.0], [52.3, 170.0], [52.4, 170.0], [52.5, 170.0], [52.6, 170.0], [52.7, 170.0], [52.8, 170.0], [52.9, 172.0], [53.0, 172.0], [53.1, 172.0], [53.2, 172.0], [53.3, 172.0], [53.4, 172.0], [53.5, 172.0], [53.6, 172.0], [53.7, 172.0], [53.8, 172.0], [53.9, 172.0], [54.0, 172.0], [54.1, 172.0], [54.2, 172.0], [54.3, 172.0], [54.4, 172.0], [54.5, 172.0], [54.6, 172.0], [54.7, 172.0], [54.8, 172.0], [54.9, 172.0], [55.0, 172.0], [55.1, 172.0], [55.2, 172.0], [55.3, 172.0], [55.4, 172.0], [55.5, 172.0], [55.6, 172.0], [55.7, 172.0], [55.8, 172.0], [55.9, 172.0], [56.0, 172.0], [56.1, 172.0], [56.2, 172.0], [56.3, 172.0], [56.4, 172.0], [56.5, 172.0], [56.6, 172.0], [56.7, 172.0], [56.8, 172.0], [56.9, 172.0], [57.0, 172.0], [57.1, 172.0], [57.2, 172.0], [57.3, 172.0], [57.4, 172.0], [57.5, 172.0], [57.6, 173.0], [57.7, 173.0], [57.8, 173.0], [57.9, 173.0], [58.0, 173.0], [58.1, 173.0], [58.2, 173.0], [58.3, 173.0], [58.4, 173.0], [58.5, 173.0], [58.6, 173.0], [58.7, 173.0], [58.8, 173.0], [58.9, 173.0], [59.0, 173.0], [59.1, 173.0], [59.2, 174.0], [59.3, 174.0], [59.4, 174.0], [59.5, 174.0], [59.6, 174.0], [59.7, 174.0], [59.8, 174.0], [59.9, 174.0], [60.0, 174.0], [60.1, 174.0], [60.2, 174.0], [60.3, 174.0], [60.4, 174.0], [60.5, 174.0], [60.6, 174.0], [60.7, 174.0], [60.8, 174.0], [60.9, 174.0], [61.0, 174.0], [61.1, 174.0], [61.2, 174.0], [61.3, 174.0], [61.4, 174.0], [61.5, 174.0], [61.6, 175.0], [61.7, 175.0], [61.8, 175.0], [61.9, 175.0], [62.0, 175.0], [62.1, 175.0], [62.2, 175.0], [62.3, 175.0], [62.4, 175.0], [62.5, 175.0], [62.6, 175.0], [62.7, 175.0], [62.8, 175.0], [62.9, 175.0], [63.0, 175.0], [63.1, 175.0], [63.2, 176.0], [63.3, 176.0], [63.4, 176.0], [63.5, 176.0], [63.6, 176.0], [63.7, 176.0], [63.8, 176.0], [63.9, 176.0], [64.0, 176.0], [64.1, 176.0], [64.2, 176.0], [64.3, 176.0], [64.4, 176.0], [64.5, 176.0], [64.6, 176.0], [64.7, 176.0], [64.8, 177.0], [64.9, 177.0], [65.0, 177.0], [65.1, 177.0], [65.2, 177.0], [65.3, 177.0], [65.4, 177.0], [65.5, 177.0], [65.6, 177.0], [65.7, 177.0], [65.8, 177.0], [65.9, 177.0], [66.0, 177.0], [66.1, 177.0], [66.2, 177.0], [66.3, 177.0], [66.4, 177.0], [66.5, 177.0], [66.6, 177.0], [66.7, 177.0], [66.8, 177.0], [66.9, 177.0], [67.0, 177.0], [67.1, 177.0], [67.2, 177.0], [67.3, 177.0], [67.4, 177.0], [67.5, 177.0], [67.6, 177.0], [67.7, 177.0], [67.8, 177.0], [67.9, 177.0], [68.0, 178.0], [68.1, 178.0], [68.2, 178.0], [68.3, 178.0], [68.4, 178.0], [68.5, 178.0], [68.6, 178.0], [68.7, 178.0], [68.8, 179.0], [68.9, 179.0], [69.0, 179.0], [69.1, 179.0], [69.2, 179.0], [69.3, 179.0], [69.4, 179.0], [69.5, 179.0], [69.6, 180.0], [69.7, 180.0], [69.8, 180.0], [69.9, 180.0], [70.0, 180.0], [70.1, 180.0], [70.2, 180.0], [70.3, 180.0], [70.4, 181.0], [70.5, 181.0], [70.6, 181.0], [70.7, 181.0], [70.8, 181.0], [70.9, 181.0], [71.0, 181.0], [71.1, 181.0], [71.2, 181.0], [71.3, 181.0], [71.4, 181.0], [71.5, 181.0], [71.6, 181.0], [71.7, 181.0], [71.8, 181.0], [71.9, 181.0], [72.0, 182.0], [72.1, 182.0], [72.2, 182.0], [72.3, 182.0], [72.4, 182.0], [72.5, 182.0], [72.6, 182.0], [72.7, 182.0], [72.8, 183.0], [72.9, 183.0], [73.0, 183.0], [73.1, 183.0], [73.2, 183.0], [73.3, 183.0], [73.4, 183.0], [73.5, 183.0], [73.6, 184.0], [73.7, 184.0], [73.8, 184.0], [73.9, 184.0], [74.0, 184.0], [74.1, 184.0], [74.2, 184.0], [74.3, 184.0], [74.4, 184.0], [74.5, 184.0], [74.6, 184.0], [74.7, 184.0], [74.8, 184.0], [74.9, 184.0], [75.0, 184.0], [75.1, 184.0], [75.2, 184.0], [75.3, 184.0], [75.4, 184.0], [75.5, 184.0], [75.6, 184.0], [75.7, 184.0], [75.8, 184.0], [75.9, 184.0], [76.0, 185.0], [76.1, 185.0], [76.2, 185.0], [76.3, 185.0], [76.4, 185.0], [76.5, 185.0], [76.6, 185.0], [76.7, 185.0], [76.8, 186.0], [76.9, 186.0], [77.0, 186.0], [77.1, 186.0], [77.2, 186.0], [77.3, 186.0], [77.4, 186.0], [77.5, 186.0], [77.6, 186.0], [77.7, 186.0], [77.8, 186.0], [77.9, 186.0], [78.0, 186.0], [78.1, 186.0], [78.2, 186.0], [78.3, 186.0], [78.4, 186.0], [78.5, 186.0], [78.6, 186.0], [78.7, 186.0], [78.8, 186.0], [78.9, 186.0], [79.0, 186.0], [79.1, 186.0], [79.2, 187.0], [79.3, 187.0], [79.4, 187.0], [79.5, 187.0], [79.6, 187.0], [79.7, 187.0], [79.8, 187.0], [79.9, 187.0], [80.0, 187.0], [80.1, 187.0], [80.2, 187.0], [80.3, 187.0], [80.4, 187.0], [80.5, 187.0], [80.6, 187.0], [80.7, 187.0], [80.8, 189.0], [80.9, 189.0], [81.0, 189.0], [81.1, 189.0], [81.2, 189.0], [81.3, 189.0], [81.4, 189.0], [81.5, 189.0], [81.6, 191.0], [81.7, 191.0], [81.8, 191.0], [81.9, 191.0], [82.0, 191.0], [82.1, 191.0], [82.2, 191.0], [82.3, 191.0], [82.4, 193.0], [82.5, 193.0], [82.6, 193.0], [82.7, 193.0], [82.8, 193.0], [82.9, 193.0], [83.0, 193.0], [83.1, 193.0], [83.2, 194.0], [83.3, 194.0], [83.4, 194.0], [83.5, 194.0], [83.6, 194.0], [83.7, 194.0], [83.8, 194.0], [83.9, 194.0], [84.0, 196.0], [84.1, 196.0], [84.2, 196.0], [84.3, 196.0], [84.4, 196.0], [84.5, 196.0], [84.6, 196.0], [84.7, 196.0], [84.8, 196.0], [84.9, 196.0], [85.0, 196.0], [85.1, 196.0], [85.2, 196.0], [85.3, 196.0], [85.4, 196.0], [85.5, 196.0], [85.6, 196.0], [85.7, 196.0], [85.8, 196.0], [85.9, 196.0], [86.0, 196.0], [86.1, 196.0], [86.2, 196.0], [86.3, 196.0], [86.4, 196.0], [86.5, 196.0], [86.6, 196.0], [86.7, 196.0], [86.8, 196.0], [86.9, 196.0], [87.0, 196.0], [87.1, 196.0], [87.2, 198.0], [87.3, 198.0], [87.4, 198.0], [87.5, 198.0], [87.6, 198.0], [87.7, 198.0], [87.8, 198.0], [87.9, 198.0], [88.0, 199.0], [88.1, 199.0], [88.2, 199.0], [88.3, 199.0], [88.4, 199.0], [88.5, 199.0], [88.6, 199.0], [88.7, 199.0], [88.8, 202.0], [88.9, 202.0], [89.0, 202.0], [89.1, 202.0], [89.2, 202.0], [89.3, 202.0], [89.4, 202.0], [89.5, 202.0], [89.6, 205.0], [89.7, 205.0], [89.8, 205.0], [89.9, 205.0], [90.0, 205.0], [90.1, 205.0], [90.2, 205.0], [90.3, 205.0], [90.4, 206.0], [90.5, 206.0], [90.6, 206.0], [90.7, 206.0], [90.8, 206.0], [90.9, 206.0], [91.0, 206.0], [91.1, 206.0], [91.2, 206.0], [91.3, 206.0], [91.4, 206.0], [91.5, 206.0], [91.6, 206.0], [91.7, 206.0], [91.8, 206.0], [91.9, 206.0], [92.0, 217.0], [92.1, 217.0], [92.2, 217.0], [92.3, 217.0], [92.4, 217.0], [92.5, 217.0], [92.6, 217.0], [92.7, 217.0], [92.8, 219.0], [92.9, 219.0], [93.0, 219.0], [93.1, 219.0], [93.2, 219.0], [93.3, 219.0], [93.4, 219.0], [93.5, 219.0], [93.6, 226.0], [93.7, 226.0], [93.8, 226.0], [93.9, 226.0], [94.0, 226.0], [94.1, 226.0], [94.2, 226.0], [94.3, 226.0], [94.4, 227.0], [94.5, 227.0], [94.6, 227.0], [94.7, 227.0], [94.8, 227.0], [94.9, 227.0], [95.0, 227.0], [95.1, 227.0], [95.2, 235.0], [95.3, 235.0], [95.4, 235.0], [95.5, 235.0], [95.6, 235.0], [95.7, 235.0], [95.8, 235.0], [95.9, 235.0], [96.0, 244.0], [96.1, 244.0], [96.2, 244.0], [96.3, 244.0], [96.4, 244.0], [96.5, 244.0], [96.6, 244.0], [96.7, 244.0], [96.8, 287.0], [96.9, 287.0], [97.0, 287.0], [97.1, 287.0], [97.2, 287.0], [97.3, 287.0], [97.4, 287.0], [97.5, 287.0], [97.6, 367.0], [97.7, 367.0], [97.8, 367.0], [97.9, 367.0], [98.0, 367.0], [98.1, 367.0], [98.2, 367.0], [98.3, 367.0], [98.4, 371.0], [98.5, 371.0], [98.6, 371.0], [98.7, 371.0], [98.8, 371.0], [98.9, 371.0], [99.0, 371.0], [99.1, 371.0], [99.2, 692.0], [99.3, 692.0], [99.4, 692.0], [99.5, 692.0], [99.6, 692.0], [99.7, 692.0], [99.8, 692.0], [99.9, 692.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 2.0], [0.1, 4.0], [0.2, 7.0], [0.3, 7.0], [0.4, 8.0], [0.5, 8.0], [0.6, 9.0], [0.7, 9.0], [0.8, 10.0], [0.9, 10.0], [1.0, 11.0], [1.1, 11.0], [1.2, 12.0], [1.3, 13.0], [1.4, 16.0], [1.5, 19.0], [1.6, 26.0], [1.7, 30.0], [1.8, 31.0], [1.9, 33.0], [2.0, 34.0], [2.1, 35.0], [2.2, 35.0], [2.3, 36.0], [2.4, 36.0], [2.5, 37.0], [2.6, 38.0], [2.7, 38.0], [2.8, 39.0], [2.9, 39.0], [3.0, 39.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 41.0], [3.5, 41.0], [3.6, 41.0], [3.7, 42.0], [3.8, 42.0], [3.9, 42.0], [4.0, 42.0], [4.1, 43.0], [4.2, 43.0], [4.3, 43.0], [4.4, 44.0], [4.5, 44.0], [4.6, 45.0], [4.7, 45.0], [4.8, 45.0], [4.9, 45.0], [5.0, 46.0], [5.1, 46.0], [5.2, 46.0], [5.3, 46.0], [5.4, 47.0], [5.5, 47.0], [5.6, 47.0], [5.7, 47.0], [5.8, 48.0], [5.9, 48.0], [6.0, 48.0], [6.1, 48.0], [6.2, 49.0], [6.3, 49.0], [6.4, 49.0], [6.5, 50.0], [6.6, 50.0], [6.7, 50.0], [6.8, 50.0], [6.9, 51.0], [7.0, 51.0], [7.1, 51.0], [7.2, 52.0], [7.3, 52.0], [7.4, 52.0], [7.5, 53.0], [7.6, 53.0], [7.7, 53.0], [7.8, 54.0], [7.9, 54.0], [8.0, 54.0], [8.1, 55.0], [8.2, 55.0], [8.3, 55.0], [8.4, 55.0], [8.5, 56.0], [8.6, 56.0], [8.7, 56.0], [8.8, 57.0], [8.9, 57.0], [9.0, 58.0], [9.1, 58.0], [9.2, 59.0], [9.3, 59.0], [9.4, 59.0], [9.5, 60.0], [9.6, 60.0], [9.7, 61.0], [9.8, 61.0], [9.9, 62.0], [10.0, 63.0], [10.1, 63.0], [10.2, 64.0], [10.3, 65.0], [10.4, 66.0], [10.5, 67.0], [10.6, 68.0], [10.7, 69.0], [10.8, 70.0], [10.9, 71.0], [11.0, 73.0], [11.1, 74.0], [11.2, 77.0], [11.3, 80.0], [11.4, 83.0], [11.5, 86.0], [11.6, 88.0], [11.7, 91.0], [11.8, 95.0], [11.9, 98.0], [12.0, 101.0], [12.1, 105.0], [12.2, 111.0], [12.3, 118.0], [12.4, 125.0], [12.5, 131.0], [12.6, 136.0], [12.7, 147.0], [12.8, 158.0], [12.9, 171.0], [13.0, 177.0], [13.1, 186.0], [13.2, 194.0], [13.3, 207.0], [13.4, 215.0], [13.5, 225.0], [13.6, 239.0], [13.7, 246.0], [13.8, 259.0], [13.9, 264.0], [14.0, 270.0], [14.1, 286.0], [14.2, 295.0], [14.3, 300.0], [14.4, 311.0], [14.5, 321.0], [14.6, 327.0], [14.7, 334.0], [14.8, 339.0], [14.9, 347.0], [15.0, 350.0], [15.1, 358.0], [15.2, 366.0], [15.3, 372.0], [15.4, 380.0], [15.5, 387.0], [15.6, 394.0], [15.7, 399.0], [15.8, 406.0], [15.9, 410.0], [16.0, 418.0], [16.1, 421.0], [16.2, 428.0], [16.3, 434.0], [16.4, 440.0], [16.5, 444.0], [16.6, 449.0], [16.7, 455.0], [16.8, 460.0], [16.9, 464.0], [17.0, 467.0], [17.1, 474.0], [17.2, 478.0], [17.3, 481.0], [17.4, 484.0], [17.5, 487.0], [17.6, 493.0], [17.7, 496.0], [17.8, 500.0], [17.9, 505.0], [18.0, 508.0], [18.1, 512.0], [18.2, 514.0], [18.3, 519.0], [18.4, 524.0], [18.5, 527.0], [18.6, 532.0], [18.7, 537.0], [18.8, 541.0], [18.9, 544.0], [19.0, 546.0], [19.1, 549.0], [19.2, 553.0], [19.3, 557.0], [19.4, 559.0], [19.5, 563.0], [19.6, 566.0], [19.7, 570.0], [19.8, 574.0], [19.9, 577.0], [20.0, 580.0], [20.1, 585.0], [20.2, 589.0], [20.3, 592.0], [20.4, 595.0], [20.5, 598.0], [20.6, 601.0], [20.7, 603.0], [20.8, 606.0], [20.9, 609.0], [21.0, 610.0], [21.1, 613.0], [21.2, 616.0], [21.3, 618.0], [21.4, 620.0], [21.5, 624.0], [21.6, 626.0], [21.7, 629.0], [21.8, 632.0], [21.9, 634.0], [22.0, 636.0], [22.1, 639.0], [22.2, 643.0], [22.3, 644.0], [22.4, 647.0], [22.5, 650.0], [22.6, 653.0], [22.7, 655.0], [22.8, 657.0], [22.9, 660.0], [23.0, 663.0], [23.1, 666.0], [23.2, 668.0], [23.3, 670.0], [23.4, 672.0], [23.5, 675.0], [23.6, 678.0], [23.7, 681.0], [23.8, 684.0], [23.9, 687.0], [24.0, 689.0], [24.1, 691.0], [24.2, 695.0], [24.3, 697.0], [24.4, 699.0], [24.5, 703.0], [24.6, 706.0], [24.7, 708.0], [24.8, 711.0], [24.9, 714.0], [25.0, 718.0], [25.1, 719.0], [25.2, 720.0], [25.3, 722.0], [25.4, 725.0], [25.5, 728.0], [25.6, 731.0], [25.7, 734.0], [25.8, 736.0], [25.9, 738.0], [26.0, 741.0], [26.1, 745.0], [26.2, 747.0], [26.3, 749.0], [26.4, 750.0], [26.5, 753.0], [26.6, 755.0], [26.7, 758.0], [26.8, 762.0], [26.9, 764.0], [27.0, 767.0], [27.1, 769.0], [27.2, 772.0], [27.3, 774.0], [27.4, 776.0], [27.5, 777.0], [27.6, 778.0], [27.7, 781.0], [27.8, 782.0], [27.9, 784.0], [28.0, 785.0], [28.1, 787.0], [28.2, 790.0], [28.3, 792.0], [28.4, 795.0], [28.5, 797.0], [28.6, 799.0], [28.7, 802.0], [28.8, 804.0], [28.9, 805.0], [29.0, 808.0], [29.1, 810.0], [29.2, 812.0], [29.3, 814.0], [29.4, 816.0], [29.5, 818.0], [29.6, 820.0], [29.7, 821.0], [29.8, 823.0], [29.9, 826.0], [30.0, 829.0], [30.1, 831.0], [30.2, 833.0], [30.3, 835.0], [30.4, 837.0], [30.5, 839.0], [30.6, 841.0], [30.7, 843.0], [30.8, 844.0], [30.9, 846.0], [31.0, 850.0], [31.1, 851.0], [31.2, 853.0], [31.3, 854.0], [31.4, 856.0], [31.5, 858.0], [31.6, 859.0], [31.7, 862.0], [31.8, 864.0], [31.9, 866.0], [32.0, 867.0], [32.1, 869.0], [32.2, 872.0], [32.3, 874.0], [32.4, 877.0], [32.5, 879.0], [32.6, 881.0], [32.7, 882.0], [32.8, 883.0], [32.9, 885.0], [33.0, 887.0], [33.1, 888.0], [33.2, 891.0], [33.3, 892.0], [33.4, 895.0], [33.5, 896.0], [33.6, 900.0], [33.7, 903.0], [33.8, 905.0], [33.9, 908.0], [34.0, 911.0], [34.1, 912.0], [34.2, 914.0], [34.3, 917.0], [34.4, 919.0], [34.5, 921.0], [34.6, 923.0], [34.7, 925.0], [34.8, 927.0], [34.9, 929.0], [35.0, 932.0], [35.1, 934.0], [35.2, 936.0], [35.3, 938.0], [35.4, 940.0], [35.5, 942.0], [35.6, 944.0], [35.7, 946.0], [35.8, 949.0], [35.9, 951.0], [36.0, 953.0], [36.1, 954.0], [36.2, 957.0], [36.3, 960.0], [36.4, 962.0], [36.5, 965.0], [36.6, 966.0], [36.7, 969.0], [36.8, 972.0], [36.9, 973.0], [37.0, 975.0], [37.1, 977.0], [37.2, 979.0], [37.3, 980.0], [37.4, 982.0], [37.5, 984.0], [37.6, 986.0], [37.7, 988.0], [37.8, 989.0], [37.9, 991.0], [38.0, 992.0], [38.1, 994.0], [38.2, 995.0], [38.3, 996.0], [38.4, 998.0], [38.5, 1000.0], [38.6, 1001.0], [38.7, 1002.0], [38.8, 1004.0], [38.9, 1005.0], [39.0, 1007.0], [39.1, 1010.0], [39.2, 1010.0], [39.3, 1012.0], [39.4, 1015.0], [39.5, 1018.0], [39.6, 1021.0], [39.7, 1023.0], [39.8, 1024.0], [39.9, 1026.0], [40.0, 1028.0], [40.1, 1029.0], [40.2, 1031.0], [40.3, 1032.0], [40.4, 1034.0], [40.5, 1035.0], [40.6, 1038.0], [40.7, 1040.0], [40.8, 1042.0], [40.9, 1043.0], [41.0, 1046.0], [41.1, 1048.0], [41.2, 1049.0], [41.3, 1051.0], [41.4, 1053.0], [41.5, 1055.0], [41.6, 1056.0], [41.7, 1058.0], [41.8, 1060.0], [41.9, 1062.0], [42.0, 1062.0], [42.1, 1065.0], [42.2, 1067.0], [42.3, 1069.0], [42.4, 1071.0], [42.5, 1073.0], [42.6, 1075.0], [42.7, 1077.0], [42.8, 1079.0], [42.9, 1081.0], [43.0, 1083.0], [43.1, 1085.0], [43.2, 1087.0], [43.3, 1089.0], [43.4, 1090.0], [43.5, 1091.0], [43.6, 1092.0], [43.7, 1094.0], [43.8, 1095.0], [43.9, 1096.0], [44.0, 1097.0], [44.1, 1099.0], [44.2, 1101.0], [44.3, 1103.0], [44.4, 1105.0], [44.5, 1106.0], [44.6, 1108.0], [44.7, 1110.0], [44.8, 1111.0], [44.9, 1113.0], [45.0, 1115.0], [45.1, 1117.0], [45.2, 1118.0], [45.3, 1121.0], [45.4, 1123.0], [45.5, 1124.0], [45.6, 1125.0], [45.7, 1126.0], [45.8, 1128.0], [45.9, 1130.0], [46.0, 1131.0], [46.1, 1134.0], [46.2, 1137.0], [46.3, 1138.0], [46.4, 1140.0], [46.5, 1142.0], [46.6, 1143.0], [46.7, 1144.0], [46.8, 1146.0], [46.9, 1147.0], [47.0, 1148.0], [47.1, 1150.0], [47.2, 1152.0], [47.3, 1153.0], [47.4, 1154.0], [47.5, 1157.0], [47.6, 1159.0], [47.7, 1161.0], [47.8, 1162.0], [47.9, 1164.0], [48.0, 1165.0], [48.1, 1167.0], [48.2, 1169.0], [48.3, 1172.0], [48.4, 1174.0], [48.5, 1176.0], [48.6, 1178.0], [48.7, 1181.0], [48.8, 1182.0], [48.9, 1184.0], [49.0, 1186.0], [49.1, 1188.0], [49.2, 1190.0], [49.3, 1192.0], [49.4, 1194.0], [49.5, 1195.0], [49.6, 1197.0], [49.7, 1199.0], [49.8, 1201.0], [49.9, 1202.0], [50.0, 1203.0], [50.1, 1204.0], [50.2, 1206.0], [50.3, 1206.0], [50.4, 1210.0], [50.5, 1211.0], [50.6, 1213.0], [50.7, 1215.0], [50.8, 1216.0], [50.9, 1218.0], [51.0, 1220.0], [51.1, 1222.0], [51.2, 1223.0], [51.3, 1224.0], [51.4, 1226.0], [51.5, 1228.0], [51.6, 1229.0], [51.7, 1230.0], [51.8, 1232.0], [51.9, 1234.0], [52.0, 1236.0], [52.1, 1237.0], [52.2, 1238.0], [52.3, 1239.0], [52.4, 1243.0], [52.5, 1245.0], [52.6, 1246.0], [52.7, 1248.0], [52.8, 1250.0], [52.9, 1252.0], [53.0, 1255.0], [53.1, 1256.0], [53.2, 1258.0], [53.3, 1261.0], [53.4, 1262.0], [53.5, 1263.0], [53.6, 1265.0], [53.7, 1266.0], [53.8, 1268.0], [53.9, 1270.0], [54.0, 1272.0], [54.1, 1274.0], [54.2, 1275.0], [54.3, 1277.0], [54.4, 1278.0], [54.5, 1280.0], [54.6, 1282.0], [54.7, 1283.0], [54.8, 1285.0], [54.9, 1286.0], [55.0, 1288.0], [55.1, 1290.0], [55.2, 1293.0], [55.3, 1295.0], [55.4, 1296.0], [55.5, 1298.0], [55.6, 1299.0], [55.7, 1302.0], [55.8, 1304.0], [55.9, 1306.0], [56.0, 1309.0], [56.1, 1312.0], [56.2, 1313.0], [56.3, 1314.0], [56.4, 1317.0], [56.5, 1318.0], [56.6, 1319.0], [56.7, 1321.0], [56.8, 1322.0], [56.9, 1324.0], [57.0, 1326.0], [57.1, 1327.0], [57.2, 1329.0], [57.3, 1331.0], [57.4, 1333.0], [57.5, 1334.0], [57.6, 1336.0], [57.7, 1337.0], [57.8, 1338.0], [57.9, 1340.0], [58.0, 1342.0], [58.1, 1343.0], [58.2, 1347.0], [58.3, 1349.0], [58.4, 1351.0], [58.5, 1353.0], [58.6, 1355.0], [58.7, 1356.0], [58.8, 1358.0], [58.9, 1361.0], [59.0, 1361.0], [59.1, 1363.0], [59.2, 1364.0], [59.3, 1365.0], [59.4, 1367.0], [59.5, 1368.0], [59.6, 1369.0], [59.7, 1370.0], [59.8, 1372.0], [59.9, 1374.0], [60.0, 1376.0], [60.1, 1378.0], [60.2, 1379.0], [60.3, 1381.0], [60.4, 1383.0], [60.5, 1384.0], [60.6, 1386.0], [60.7, 1387.0], [60.8, 1388.0], [60.9, 1390.0], [61.0, 1393.0], [61.1, 1394.0], [61.2, 1397.0], [61.3, 1399.0], [61.4, 1401.0], [61.5, 1401.0], [61.6, 1403.0], [61.7, 1404.0], [61.8, 1406.0], [61.9, 1408.0], [62.0, 1409.0], [62.1, 1410.0], [62.2, 1412.0], [62.3, 1413.0], [62.4, 1415.0], [62.5, 1416.0], [62.6, 1418.0], [62.7, 1420.0], [62.8, 1421.0], [62.9, 1423.0], [63.0, 1426.0], [63.1, 1428.0], [63.2, 1429.0], [63.3, 1431.0], [63.4, 1433.0], [63.5, 1435.0], [63.6, 1437.0], [63.7, 1439.0], [63.8, 1441.0], [63.9, 1444.0], [64.0, 1445.0], [64.1, 1447.0], [64.2, 1450.0], [64.3, 1452.0], [64.4, 1453.0], [64.5, 1456.0], [64.6, 1457.0], [64.7, 1459.0], [64.8, 1461.0], [64.9, 1463.0], [65.0, 1466.0], [65.1, 1467.0], [65.2, 1469.0], [65.3, 1471.0], [65.4, 1473.0], [65.5, 1476.0], [65.6, 1477.0], [65.7, 1480.0], [65.8, 1481.0], [65.9, 1482.0], [66.0, 1485.0], [66.1, 1487.0], [66.2, 1489.0], [66.3, 1491.0], [66.4, 1494.0], [66.5, 1495.0], [66.6, 1498.0], [66.7, 1500.0], [66.8, 1502.0], [66.9, 1504.0], [67.0, 1507.0], [67.1, 1508.0], [67.2, 1510.0], [67.3, 1513.0], [67.4, 1516.0], [67.5, 1518.0], [67.6, 1520.0], [67.7, 1522.0], [67.8, 1524.0], [67.9, 1525.0], [68.0, 1527.0], [68.1, 1529.0], [68.2, 1530.0], [68.3, 1531.0], [68.4, 1533.0], [68.5, 1536.0], [68.6, 1539.0], [68.7, 1541.0], [68.8, 1543.0], [68.9, 1545.0], [69.0, 1547.0], [69.1, 1548.0], [69.2, 1550.0], [69.3, 1552.0], [69.4, 1554.0], [69.5, 1556.0], [69.6, 1558.0], [69.7, 1560.0], [69.8, 1562.0], [69.9, 1564.0], [70.0, 1566.0], [70.1, 1568.0], [70.2, 1569.0], [70.3, 1570.0], [70.4, 1573.0], [70.5, 1575.0], [70.6, 1578.0], [70.7, 1579.0], [70.8, 1582.0], [70.9, 1584.0], [71.0, 1586.0], [71.1, 1588.0], [71.2, 1590.0], [71.3, 1593.0], [71.4, 1595.0], [71.5, 1597.0], [71.6, 1599.0], [71.7, 1600.0], [71.8, 1602.0], [71.9, 1605.0], [72.0, 1606.0], [72.1, 1608.0], [72.2, 1611.0], [72.3, 1612.0], [72.4, 1614.0], [72.5, 1616.0], [72.6, 1618.0], [72.7, 1619.0], [72.8, 1621.0], [72.9, 1623.0], [73.0, 1626.0], [73.1, 1629.0], [73.2, 1631.0], [73.3, 1633.0], [73.4, 1636.0], [73.5, 1637.0], [73.6, 1639.0], [73.7, 1641.0], [73.8, 1643.0], [73.9, 1645.0], [74.0, 1647.0], [74.1, 1650.0], [74.2, 1652.0], [74.3, 1655.0], [74.4, 1658.0], [74.5, 1660.0], [74.6, 1664.0], [74.7, 1665.0], [74.8, 1669.0], [74.9, 1671.0], [75.0, 1673.0], [75.1, 1675.0], [75.2, 1677.0], [75.3, 1679.0], [75.4, 1682.0], [75.5, 1683.0], [75.6, 1685.0], [75.7, 1686.0], [75.8, 1688.0], [75.9, 1690.0], [76.0, 1693.0], [76.1, 1695.0], [76.2, 1698.0], [76.3, 1699.0], [76.4, 1702.0], [76.5, 1704.0], [76.6, 1705.0], [76.7, 1709.0], [76.8, 1710.0], [76.9, 1713.0], [77.0, 1716.0], [77.1, 1720.0], [77.2, 1721.0], [77.3, 1724.0], [77.4, 1726.0], [77.5, 1728.0], [77.6, 1730.0], [77.7, 1732.0], [77.8, 1734.0], [77.9, 1737.0], [78.0, 1739.0], [78.1, 1742.0], [78.2, 1743.0], [78.3, 1746.0], [78.4, 1748.0], [78.5, 1749.0], [78.6, 1753.0], [78.7, 1756.0], [78.8, 1758.0], [78.9, 1760.0], [79.0, 1762.0], [79.1, 1765.0], [79.2, 1769.0], [79.3, 1772.0], [79.4, 1775.0], [79.5, 1777.0], [79.6, 1780.0], [79.7, 1782.0], [79.8, 1784.0], [79.9, 1787.0], [80.0, 1789.0], [80.1, 1792.0], [80.2, 1794.0], [80.3, 1796.0], [80.4, 1798.0], [80.5, 1800.0], [80.6, 1804.0], [80.7, 1807.0], [80.8, 1811.0], [80.9, 1813.0], [81.0, 1815.0], [81.1, 1819.0], [81.2, 1821.0], [81.3, 1823.0], [81.4, 1826.0], [81.5, 1830.0], [81.6, 1835.0], [81.7, 1837.0], [81.8, 1839.0], [81.9, 1842.0], [82.0, 1844.0], [82.1, 1846.0], [82.2, 1849.0], [82.3, 1852.0], [82.4, 1855.0], [82.5, 1858.0], [82.6, 1861.0], [82.7, 1864.0], [82.8, 1867.0], [82.9, 1869.0], [83.0, 1871.0], [83.1, 1875.0], [83.2, 1877.0], [83.3, 1881.0], [83.4, 1884.0], [83.5, 1888.0], [83.6, 1890.0], [83.7, 1892.0], [83.8, 1897.0], [83.9, 1902.0], [84.0, 1905.0], [84.1, 1908.0], [84.2, 1910.0], [84.3, 1913.0], [84.4, 1916.0], [84.5, 1918.0], [84.6, 1921.0], [84.7, 1923.0], [84.8, 1927.0], [84.9, 1930.0], [85.0, 1933.0], [85.1, 1936.0], [85.2, 1939.0], [85.3, 1944.0], [85.4, 1947.0], [85.5, 1951.0], [85.6, 1956.0], [85.7, 1959.0], [85.8, 1962.0], [85.9, 1966.0], [86.0, 1969.0], [86.1, 1971.0], [86.2, 1974.0], [86.3, 1976.0], [86.4, 1978.0], [86.5, 1981.0], [86.6, 1986.0], [86.7, 1989.0], [86.8, 1993.0], [86.9, 1997.0], [87.0, 2000.0], [87.1, 2004.0], [87.2, 2008.0], [87.3, 2009.0], [87.4, 2012.0], [87.5, 2017.0], [87.6, 2021.0], [87.7, 2024.0], [87.8, 2029.0], [87.9, 2033.0], [88.0, 2037.0], [88.1, 2041.0], [88.2, 2047.0], [88.3, 2052.0], [88.4, 2055.0], [88.5, 2060.0], [88.6, 2064.0], [88.7, 2069.0], [88.8, 2072.0], [88.9, 2077.0], [89.0, 2081.0], [89.1, 2086.0], [89.2, 2090.0], [89.3, 2096.0], [89.4, 2100.0], [89.5, 2103.0], [89.6, 2107.0], [89.7, 2114.0], [89.8, 2120.0], [89.9, 2123.0], [90.0, 2129.0], [90.1, 2133.0], [90.2, 2138.0], [90.3, 2143.0], [90.4, 2148.0], [90.5, 2154.0], [90.6, 2157.0], [90.7, 2159.0], [90.8, 2165.0], [90.9, 2168.0], [91.0, 2174.0], [91.1, 2178.0], [91.2, 2185.0], [91.3, 2190.0], [91.4, 2196.0], [91.5, 2201.0], [91.6, 2207.0], [91.7, 2212.0], [91.8, 2217.0], [91.9, 2222.0], [92.0, 2227.0], [92.1, 2234.0], [92.2, 2239.0], [92.3, 2244.0], [92.4, 2247.0], [92.5, 2255.0], [92.6, 2260.0], [92.7, 2266.0], [92.8, 2277.0], [92.9, 2283.0], [93.0, 2289.0], [93.1, 2297.0], [93.2, 2304.0], [93.3, 2309.0], [93.4, 2313.0], [93.5, 2319.0], [93.6, 2329.0], [93.7, 2334.0], [93.8, 2344.0], [93.9, 2355.0], [94.0, 2365.0], [94.1, 2371.0], [94.2, 2379.0], [94.3, 2386.0], [94.4, 2393.0], [94.5, 2397.0], [94.6, 2406.0], [94.7, 2418.0], [94.8, 2428.0], [94.9, 2435.0], [95.0, 2441.0], [95.1, 2451.0], [95.2, 2465.0], [95.3, 2475.0], [95.4, 2487.0], [95.5, 2494.0], [95.6, 2502.0], [95.7, 2511.0], [95.8, 2519.0], [95.9, 2533.0], [96.0, 2540.0], [96.1, 2550.0], [96.2, 2564.0], [96.3, 2579.0], [96.4, 2594.0], [96.5, 2605.0], [96.6, 2619.0], [96.7, 2638.0], [96.8, 2647.0], [96.9, 2670.0], [97.0, 2684.0], [97.1, 2698.0], [97.2, 2711.0], [97.3, 2724.0], [97.4, 2738.0], [97.5, 2753.0], [97.6, 2780.0], [97.7, 2800.0], [97.8, 2827.0], [97.9, 2847.0], [98.0, 2880.0], [98.1, 2889.0], [98.2, 2907.0], [98.3, 2934.0], [98.4, 2963.0], [98.5, 2992.0], [98.6, 3020.0], [98.7, 3057.0], [98.8, 3087.0], [98.9, 3121.0], [99.0, 3168.0], [99.1, 3207.0], [99.2, 3294.0], [99.3, 3362.0], [99.4, 3408.0], [99.5, 3489.0], [99.6, 3598.0], [99.7, 3835.0], [99.8, 4334.0], [99.9, 4887.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1553.0, "series": [{"data": [[0.0, 1553.0], [600.0, 419.0], [700.0, 528.0], [800.0, 582.0], [900.0, 604.0], [1000.0, 704.0], [1100.0, 750.0], [1200.0, 666.0], [1300.0, 692.0], [1400.0, 683.0], [1500.0, 648.0], [1600.0, 613.0], [1700.0, 512.0], [1800.0, 421.0], [1900.0, 380.0], [2000.0, 262.0], [2100.0, 248.0], [2200.0, 192.0], [2300.0, 171.0], [2400.0, 133.0], [2500.0, 143.0], [2600.0, 94.0], [2700.0, 82.0], [2800.0, 51.0], [2900.0, 53.0], [3000.0, 32.0], [3100.0, 35.0], [3300.0, 17.0], [3200.0, 15.0], [3400.0, 25.0], [3500.0, 13.0], [3600.0, 4.0], [3700.0, 4.0], [3800.0, 1.0], [3900.0, 2.0], [4000.0, 3.0], [4100.0, 2.0], [4200.0, 3.0], [4300.0, 1.0], [4400.0, 2.0], [4500.0, 2.0], [4600.0, 2.0], [4800.0, 5.0], [4700.0, 2.0], [5100.0, 3.0], [5000.0, 3.0], [4900.0, 2.0], [5300.0, 1.0], [5200.0, 1.0], [5500.0, 3.0], [5400.0, 1.0], [5600.0, 2.0], [7300.0, 2.0], [7900.0, 1.0], [100.0, 151.0], [200.0, 164.0], [300.0, 214.0], [400.0, 256.0], [500.0, 342.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[300.0, 2.0], [600.0, 1.0], [200.0, 11.0], [100.0, 111.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1495.0], [600.0, 483.0], [700.0, 528.0], [800.0, 619.0], [900.0, 613.0], [1000.0, 704.0], [1100.0, 702.0], [1200.0, 734.0], [1300.0, 718.0], [1400.0, 663.0], [1500.0, 624.0], [1600.0, 582.0], [1700.0, 520.0], [1800.0, 422.0], [1900.0, 394.0], [2000.0, 295.0], [2100.0, 264.0], [2200.0, 209.0], [2300.0, 172.0], [2400.0, 130.0], [2500.0, 111.0], [2600.0, 85.0], [2700.0, 72.0], [2800.0, 59.0], [2900.0, 47.0], [3000.0, 36.0], [3100.0, 31.0], [3200.0, 16.0], [3300.0, 22.0], [3400.0, 15.0], [3500.0, 13.0], [3700.0, 6.0], [3600.0, 4.0], [3800.0, 5.0], [3900.0, 3.0], [4000.0, 1.0], [4100.0, 2.0], [4200.0, 2.0], [4300.0, 3.0], [4600.0, 3.0], [4400.0, 4.0], [4700.0, 2.0], [4800.0, 2.0], [4900.0, 1.0], [5100.0, 1.0], [5200.0, 4.0], [5400.0, 2.0], [6400.0, 1.0], [7100.0, 1.0], [7300.0, 1.0], [7800.0, 1.0], [100.0, 160.0], [200.0, 127.0], [300.0, 181.0], [400.0, 260.0], [500.0, 345.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 694.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 11990.0, "series": [{"data": [[0.0, 4228.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 11990.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 8213.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 694.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 45.8512110726644, "minX": 1.58542752E12, "maxY": 125.0, "series": [{"data": [[1.58542794E12, 125.0], [1.58542776E12, 125.0], [1.58542782E12, 125.0], [1.58542812E12, 107.72106430155226], [1.58542764E12, 125.0], [1.5854277E12, 125.0], [1.58542752E12, 62.87951807228919], [1.585428E12, 125.0], [1.58542818E12, 45.8512110726644], [1.58542758E12, 121.03327855382065], [1.58542788E12, 125.0], [1.58542806E12, 125.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58542818E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 29.0, "minX": 1.0, "maxY": 1662.0666666666666, "series": [{"data": [[5.0, 68.33333333333333], [6.0, 55.5], [7.0, 58.666666666666664], [8.0, 61.333333333333336], [9.0, 53.0], [11.0, 56.0], [12.0, 29.0], [13.0, 60.0], [14.0, 47.666666666666664], [15.0, 58.0], [16.0, 43.333333333333336], [17.0, 50.0], [18.0, 47.28571428571429], [19.0, 51.714285714285715], [20.0, 53.666666666666664], [21.0, 68.33333333333333], [22.0, 132.75], [23.0, 68.0], [24.0, 55.714285714285715], [25.0, 55.666666666666664], [26.0, 47.25], [27.0, 48.2], [28.0, 51.4], [29.0, 52.0], [30.0, 54.625], [31.0, 46.214285714285715], [32.0, 43.42857142857143], [33.0, 42.2], [34.0, 49.93333333333334], [35.0, 51.0], [36.0, 52.81818181818181], [37.0, 46.714285714285715], [38.0, 54.214285714285715], [39.0, 53.06666666666667], [40.0, 48.23809523809524], [41.0, 60.349999999999994], [42.0, 54.77777777777778], [43.0, 49.4], [44.0, 52.0], [45.0, 60.14285714285714], [46.0, 49.5], [47.0, 48.57142857142857], [48.0, 53.23076923076923], [49.0, 62.49999999999999], [50.0, 65.81818181818181], [51.0, 60.300000000000004], [52.0, 49.0], [53.0, 56.57142857142857], [54.0, 52.25], [55.0, 41.38461538461539], [56.0, 48.54545454545454], [57.0, 43.62500000000001], [58.0, 57.8], [59.0, 52.529411764705884], [60.0, 76.3529411764706], [61.0, 55.692307692307686], [62.0, 48.111111111111114], [63.0, 53.5], [64.0, 47.42857142857143], [65.0, 55.173913043478265], [66.0, 59.91666666666667], [67.0, 52.96], [68.0, 54.22222222222222], [69.0, 52.4], [70.0, 51.77777777777778], [71.0, 50.25], [72.0, 52.63636363636364], [73.0, 49.833333333333336], [74.0, 58.949999999999996], [75.0, 51.92307692307693], [76.0, 49.285714285714285], [77.0, 50.84], [78.0, 49.222222222222214], [79.0, 54.76923076923078], [80.0, 48.58823529411765], [81.0, 49.230769230769226], [82.0, 63.96551724137931], [83.0, 56.270270270270274], [84.0, 634.9117647058823], [85.0, 707.2083333333334], [86.0, 230.25], [87.0, 68.66666666666667], [88.0, 291.56521739130426], [89.0, 313.67857142857144], [90.0, 700.0666666666666], [91.0, 99.4], [92.0, 143.83720930232562], [93.0, 184.79999999999998], [94.0, 143.66666666666666], [95.0, 592.3461538461538], [96.0, 877.9743589743592], [97.0, 645.8148148148149], [98.0, 402.05], [99.0, 241.05555555555554], [100.0, 312.7692307692307], [101.0, 424.68421052631584], [102.0, 375.51515151515156], [103.0, 77.5], [104.0, 257.48750000000007], [105.0, 761.9230769230769], [106.0, 936.7241379310346], [107.0, 942.111111111111], [108.0, 1002.2777777777779], [109.0, 964.0], [110.0, 593.0], [111.0, 63.06666666666666], [112.0, 202.66666666666669], [113.0, 488.4516129032258], [114.0, 989.9583333333331], [115.0, 516.5], [116.0, 1485.9661016949158], [117.0, 127.375], [118.0, 769.5882352941176], [119.0, 1517.6981132075475], [120.0, 1057.4285714285716], [121.0, 1484.2063492063496], [122.0, 1321.9499999999998], [123.0, 1420.6181818181815], [124.0, 1662.0666666666666], [125.0, 1352.985858971911], [1.0, 44.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[118.42919999999991, 1208.1446400000063]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[2.0, 206.0], [3.0, 156.0], [4.0, 156.0], [5.0, 163.0], [6.0, 162.0], [7.0, 154.0], [8.0, 219.0], [9.0, 168.0], [10.0, 148.0], [11.0, 151.0], [12.0, 181.0], [13.0, 159.0], [14.0, 156.0], [15.0, 170.0], [16.0, 165.0], [17.0, 184.0], [18.0, 172.0], [19.0, 169.0], [20.0, 169.0], [21.0, 156.0], [22.0, 157.0], [23.0, 155.0], [24.0, 183.0], [25.0, 159.0], [26.0, 187.0], [27.0, 157.0], [28.0, 172.0], [29.0, 160.0], [30.0, 157.0], [31.0, 154.0], [32.0, 170.0], [33.0, 175.0], [34.0, 175.0], [35.0, 287.0], [36.0, 168.0], [37.0, 161.0], [38.0, 159.0], [39.0, 178.0], [40.0, 184.0], [41.0, 172.0], [42.0, 157.0], [43.0, 166.0], [44.0, 166.0], [45.0, 202.0], [46.0, 150.0], [47.0, 163.0], [48.0, 153.0], [49.0, 157.0], [50.0, 169.0], [51.0, 196.0], [52.0, 167.0], [53.0, 161.0], [54.0, 158.0], [55.0, 177.0], [56.0, 169.0], [57.0, 162.0], [58.0, 150.0], [59.0, 187.0], [60.0, 160.0], [61.0, 193.0], [62.0, 172.0], [63.0, 176.0], [64.0, 162.0], [65.0, 158.0], [66.0, 191.0], [67.0, 174.0], [68.0, 226.0], [69.0, 198.0], [70.0, 199.0], [71.0, 160.0], [72.0, 177.0], [73.0, 172.0], [74.0, 179.0], [75.0, 182.0], [76.0, 160.0], [77.0, 186.0], [78.0, 177.0], [79.0, 177.0], [80.0, 167.0], [81.0, 168.0], [82.0, 244.0], [83.0, 173.0], [84.0, 194.0], [85.0, 165.0], [86.0, 158.0], [87.0, 168.0], [88.0, 154.0], [89.0, 173.0], [90.0, 164.0], [91.0, 151.0], [92.0, 156.0], [93.0, 153.0], [94.0, 186.0], [95.0, 155.0], [96.0, 196.0], [97.0, 174.0], [98.0, 172.0], [99.0, 159.0], [100.0, 170.0], [101.0, 170.0], [102.0, 166.0], [103.0, 235.0], [104.0, 185.0], [105.0, 168.0], [106.0, 186.0], [107.0, 196.0], [108.0, 217.0], [109.0, 176.0], [110.0, 206.0], [111.0, 159.0], [112.0, 181.0], [113.0, 184.0], [114.0, 169.0], [115.0, 157.0], [116.0, 162.0], [117.0, 174.0], [118.0, 189.0], [119.0, 196.0], [120.0, 180.0], [121.0, 227.0], [122.0, 367.0], [123.0, 371.0], [124.0, 158.0], [125.0, 692.0], [1.0, 205.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[63.0, 181.59199999999996]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[4.0, 57.0], [5.0, 55.666666666666664], [6.0, 59.0], [7.0, 53.75], [8.0, 62.0], [10.0, 51.0], [12.0, 68.0], [13.0, 51.5], [14.0, 71.5], [15.0, 49.5], [16.0, 57.4], [17.0, 50.0], [18.0, 57.6], [19.0, 48.0], [20.0, 61.0], [21.0, 53.5], [22.0, 118.0], [23.0, 54.666666666666664], [24.0, 56.8], [25.0, 45.666666666666664], [26.0, 36.166666666666664], [27.0, 56.333333333333336], [28.0, 56.2], [29.0, 57.714285714285715], [30.0, 47.875], [31.0, 48.46153846153846], [32.0, 49.42857142857143], [33.0, 49.333333333333336], [34.0, 57.92307692307692], [35.0, 64.0], [36.0, 49.90909090909091], [37.0, 46.61538461538461], [38.0, 54.23809523809524], [39.0, 48.916666666666664], [40.0, 54.17391304347826], [41.0, 56.22727272727273], [42.0, 54.16666666666667], [43.0, 46.77777777777778], [44.0, 52.5], [45.0, 56.714285714285715], [46.0, 55.125], [47.0, 50.00000000000001], [48.0, 52.54545454545454], [49.0, 59.5], [50.0, 62.0], [51.0, 52.36363636363636], [52.0, 45.44444444444444], [53.0, 45.77777777777778], [54.0, 66.1], [55.0, 46.0], [56.0, 47.25], [57.0, 44.36363636363635], [58.0, 48.125], [59.0, 50.36363636363637], [60.0, 130.45454545454544], [61.0, 50.199999999999996], [62.0, 52.666666666666664], [63.0, 46.25], [64.0, 59.833333333333336], [65.0, 52.57142857142857], [66.0, 69.19047619047619], [67.0, 50.2142857142857], [68.0, 50.55555555555556], [69.0, 47.46153846153846], [70.0, 48.83333333333333], [71.0, 46.53846153846154], [72.0, 45.666666666666664], [73.0, 47.142857142857146], [74.0, 76.24000000000001], [75.0, 54.84615384615385], [76.0, 42.888888888888886], [77.0, 56.75000000000001], [78.0, 48.54545454545454], [79.0, 54.14285714285713], [80.0, 51.909090909090914], [81.0, 51.3], [82.0, 64.44], [83.0, 58.1], [84.0, 491.88636363636374], [85.0, 291.9230769230769], [86.0, 207.42857142857142], [87.0, 57.000000000000014], [88.0, 125.12500000000001], [89.0, 347.3], [90.0, 827.3392857142859], [91.0, 91.86666666666667], [92.0, 118.46938775510202], [93.0, 130.92857142857142], [94.0, 190.2], [95.0, 496.2592592592592], [96.0, 623.3939393939394], [97.0, 671.0], [98.0, 460.9473684210526], [99.0, 272.2352941176471], [100.0, 154.41666666666666], [101.0, 448.4242424242424], [102.0, 393.025641025641], [103.0, 83.68421052631581], [104.0, 327.63414634146346], [105.0, 760.3076923076924], [106.0, 1056.2727272727273], [107.0, 1088.1851851851854], [108.0, 1230.916666666667], [109.0, 945.5882352941177], [110.0, 780.3928571428571], [111.0, 51.2], [112.0, 639.3809523809524], [113.0, 504.7272727272727], [114.0, 1106.0217391304348], [115.0, 421.76], [116.0, 901.0185185185187], [117.0, 104.2], [118.0, 734.6666666666666], [119.0, 1473.0447761194034], [120.0, 975.6428571428571], [121.0, 1197.4400000000005], [122.0, 1454.6470588235295], [123.0, 1521.5116279069769], [124.0, 1607.4], [125.0, 1358.0515050167207]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[118.45424000000061, 1209.6315200000065]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 125.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4133.066666666667, "minX": 1.58542752E12, "maxY": 278996.1666666667, "series": [{"data": [[1.58542794E12, 278996.1666666667], [1.58542776E12, 274484.23333333334], [1.58542782E12, 273692.8333333333], [1.58542812E12, 267221.05], [1.58542764E12, 266186.1666666667], [1.5854277E12, 278824.23333333334], [1.58542752E12, 138280.88333333333], [1.585428E12, 234895.96666666667], [1.58542818E12, 68487.0], [1.58542758E12, 278822.6], [1.58542788E12, 271092.0], [1.58542806E12, 260942.16666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58542794E12, 18261.2], [1.58542776E12, 16566.466666666667], [1.58542782E12, 17066.9], [1.58542812E12, 16123.766666666666], [1.58542764E12, 16716.966666666667], [1.5854277E12, 17474.533333333333], [1.58542752E12, 8579.566666666668], [1.585428E12, 14642.8], [1.58542818E12, 4133.066666666667], [1.58542758E12, 17305.566666666666], [1.58542788E12, 16380.8], [1.58542806E12, 15729.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58542818E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 52.158783783783775, "minX": 1.58542752E12, "maxY": 1702.440922190204, "series": [{"data": [[1.58542794E12, 1065.4617187500012], [1.58542776E12, 1350.396193771626], [1.58542782E12, 1263.285954583683], [1.58542812E12, 1070.3482064741909], [1.58542764E12, 1368.3364485981285], [1.5854277E12, 1171.5909836065568], [1.58542752E12, 54.028725314183134], [1.585428E12, 1680.1092843326874], [1.58542818E12, 53.33333333333336], [1.58542758E12, 1100.6591099916043], [1.58542788E12, 1419.3034782608672], [1.58542806E12, 1527.851314596555]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542752E12, 172.42708333333331], [1.58542758E12, 211.9310344827586]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542794E12, 1068.5659340659345], [1.58542776E12, 1360.933677863909], [1.58542782E12, 1262.2679465776291], [1.58542812E12, 1053.866007194244], [1.58542764E12, 1397.3049095607253], [1.5854277E12, 1175.6045751633974], [1.58542752E12, 52.158783783783775], [1.585428E12, 1702.440922190204], [1.58542818E12, 56.568345323741], [1.58542758E12, 1107.222405271829], [1.58542788E12, 1403.6494303242773], [1.58542806E12, 1511.8777173913065]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58542818E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 51.91385135135135, "minX": 1.58542752E12, "maxY": 1702.1853986551394, "series": [{"data": [[1.58542794E12, 1065.2101562499986], [1.58542776E12, 1350.1721453287184], [1.58542782E12, 1263.0529857022684], [1.58542812E12, 1069.9518810148716], [1.58542764E12, 1368.119796091759], [1.5854277E12, 1171.392622950819], [1.58542752E12, 53.84380610412924], [1.585428E12, 1679.4584139264991], [1.58542818E12, 53.006666666666646], [1.58542758E12, 1100.4508816120929], [1.58542788E12, 1419.0721739130454], [1.58542806E12, 1527.6001813236644]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542752E12, 171.63541666666666], [1.58542758E12, 211.37931034482753]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542794E12, 1068.3226059654648], [1.58542776E12, 1360.719207579674], [1.58542782E12, 1262.0242070116867], [1.58542812E12, 1053.5008992805747], [1.58542764E12, 1397.0964685615822], [1.5854277E12, 1175.3709150326786], [1.58542752E12, 51.91385135135135], [1.585428E12, 1702.1853986551394], [1.58542818E12, 56.233812949640296], [1.58542758E12, 1106.9868204283348], [1.58542788E12, 1403.4066608238381], [1.58542806E12, 1511.6530797101432]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58542818E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58542752E12, "maxY": 1.2604166666666672, "series": [{"data": [[1.58542794E12, 0.36796875], [1.58542776E12, 0.6064013840830451], [1.58542782E12, 0.44911690496215306], [1.58542812E12, 0.3779527559055121], [1.58542764E12, 0.5548003398470689], [1.5854277E12, 0.44836065573770467], [1.58542752E12, 0.17594254937163378], [1.585428E12, 0.536750483558995], [1.58542818E12, 0.0], [1.58542758E12, 0.4466834592779177], [1.58542788E12, 0.6095652173913039], [1.58542806E12, 0.5049864007252958]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542752E12, 1.2604166666666672], [1.58542758E12, 0.7586206896551724]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542794E12, 0.5941915227629512], [1.58542776E12, 0.6606373815676141], [1.58542782E12, 0.5684474123539226], [1.58542812E12, 0.5701438848920869], [1.58542764E12, 0.6408268733850134], [1.5854277E12, 0.630718954248365], [1.58542752E12, 0.8462837837837842], [1.585428E12, 0.6224783861671471], [1.58542818E12, 0.6618705035971225], [1.58542758E12, 0.7001647446457984], [1.58542788E12, 0.6564417177914118], [1.58542806E12, 0.5661231884057971]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58542818E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.58542752E12, "maxY": 7896.0, "series": [{"data": [[1.58542794E12, 3262.0], [1.58542776E12, 3390.0], [1.58542782E12, 3636.0], [1.58542812E12, 4162.0], [1.58542764E12, 3759.0], [1.5854277E12, 3189.0], [1.58542752E12, 287.0], [1.585428E12, 7896.0], [1.58542818E12, 508.0], [1.58542758E12, 3472.0], [1.58542788E12, 3194.0], [1.58542806E12, 3730.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58542794E12, 27.0], [1.58542776E12, 130.0], [1.58542782E12, 92.0], [1.58542812E12, 32.0], [1.58542764E12, 38.0], [1.5854277E12, 38.0], [1.58542752E12, 26.0], [1.585428E12, 2.0], [1.58542818E12, 30.0], [1.58542758E12, 30.0], [1.58542788E12, 163.0], [1.58542806E12, 157.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58542794E12, 1863.0], [1.58542776E12, 2189.0], [1.58542782E12, 2154.0], [1.58542812E12, 2101.4], [1.58542764E12, 2244.5], [1.5854277E12, 1914.4000000000005], [1.58542752E12, 99.0], [1.585428E12, 2982.0], [1.58542818E12, 65.0], [1.58542758E12, 1960.0], [1.58542788E12, 2062.4000000000005], [1.58542806E12, 2446.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58542794E12, 2637.3000000000006], [1.58542776E12, 2853.1499999999996], [1.58542782E12, 2893.9600000000046], [1.58542812E12, 3048.720000000002], [1.58542764E12, 3133.25], [1.5854277E12, 2576.800000000003], [1.58542752E12, 193.53999999999996], [1.585428E12, 4908.4000000000015], [1.58542818E12, 185.67000000000098], [1.58542758E12, 2643.3999999999996], [1.58542788E12, 2647.3599999999997], [1.58542806E12, 3404.7899999999954]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58542794E12, 2145.0], [1.58542776E12, 2452.9000000000005], [1.58542782E12, 2419.549999999999], [1.58542812E12, 2411.999999999999], [1.58542764E12, 2527.75], [1.5854277E12, 2097.7], [1.58542752E12, 162.0], [1.585428E12, 3407.0], [1.58542818E12, 71.0], [1.58542758E12, 2188.75], [1.58542788E12, 2252.2], [1.58542806E12, 2777.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58542818E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 2081.0, "series": [{"data": [[2.0, 147.5], [3.0, 57.0], [5.0, 54.5], [6.0, 61.5], [9.0, 51.5], [10.0, 54.0], [11.0, 56.0], [12.0, 52.0], [14.0, 57.0], [15.0, 61.0], [16.0, 1132.0], [17.0, 1646.0], [18.0, 48.0], [19.0, 51.0], [20.0, 1854.0], [21.0, 54.5], [22.0, 1876.0], [23.0, 1731.0], [24.0, 1265.0], [25.0, 1271.0], [26.0, 1259.5], [27.0, 1278.0], [28.0, 1161.0], [29.0, 1254.0], [30.0, 1607.0], [31.0, 1297.5], [33.0, 1315.0], [32.0, 1431.0], [35.0, 1336.0], [34.0, 1199.0], [36.0, 1254.0], [37.0, 1465.0], [38.0, 1308.5], [39.0, 1287.0], [41.0, 1238.0], [40.0, 1233.0], [43.0, 1185.0], [42.0, 1323.0], [44.0, 1263.0], [45.0, 1283.5], [46.0, 1236.0], [47.0, 1168.0], [48.0, 755.0], [49.0, 942.0], [51.0, 819.0], [50.0, 1212.5], [53.0, 807.0], [52.0, 938.0], [54.0, 423.0], [55.0, 1011.0], [56.0, 303.0], [57.0, 671.0], [59.0, 1450.0], [58.0, 797.5], [61.0, 1091.0], [60.0, 955.0], [62.0, 63.0], [63.0, 468.0], [64.0, 325.5], [65.0, 139.0], [67.0, 709.0], [71.0, 816.0], [68.0, 535.5], [73.0, 971.5], [79.0, 500.5], [95.0, 477.5], [1.0, 44.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[35.0, 12.0], [34.0, 9.0], [39.0, 10.0], [40.0, 10.0], [41.0, 10.0], [43.0, 13.0], [42.0, 0.0], [44.0, 989.0], [46.0, 8.0], [47.0, 11.5], [49.0, 10.0], [50.0, 13.5], [53.0, 9.0], [52.0, 14.5], [55.0, 1947.5], [61.0, 584.0], [60.0, 12.5], [62.0, 10.0], [65.0, 9.0], [64.0, 992.5], [67.0, 8.0], [71.0, 13.0], [68.0, 8.0], [73.0, 823.0], [79.0, 9.0], [95.0, 1705.0], [28.0, 2081.0], [29.0, 9.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 95.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 2080.0, "series": [{"data": [[2.0, 145.5], [3.0, 56.5], [5.0, 54.5], [6.0, 61.0], [9.0, 51.0], [10.0, 53.5], [11.0, 56.0], [12.0, 51.5], [14.0, 57.0], [15.0, 60.5], [16.0, 1132.0], [17.0, 1646.0], [18.0, 48.0], [19.0, 51.0], [20.0, 1854.0], [21.0, 54.0], [22.0, 1875.5], [23.0, 1730.0], [24.0, 1264.5], [25.0, 1270.0], [26.0, 1259.0], [27.0, 1277.0], [28.0, 1161.0], [29.0, 1253.0], [30.0, 1607.0], [31.0, 1297.0], [33.0, 1314.5], [32.0, 1430.5], [35.0, 1336.0], [34.0, 1199.0], [36.0, 1254.0], [37.0, 1464.0], [38.0, 1308.5], [39.0, 1286.5], [41.0, 1238.0], [40.0, 1233.0], [43.0, 1185.0], [42.0, 1323.0], [44.0, 1263.0], [45.0, 1283.0], [46.0, 1236.0], [47.0, 1167.0], [48.0, 755.0], [49.0, 941.5], [51.0, 818.0], [50.0, 1212.0], [53.0, 807.0], [52.0, 938.0], [54.0, 423.0], [55.0, 1010.5], [56.0, 303.0], [57.0, 671.0], [59.0, 1450.0], [58.0, 797.5], [61.0, 1091.0], [60.0, 954.0], [62.0, 63.0], [63.0, 468.0], [64.0, 325.5], [65.0, 139.0], [67.0, 709.0], [71.0, 815.0], [68.0, 535.5], [73.0, 971.5], [79.0, 500.5], [95.0, 477.5], [1.0, 43.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[35.0, 12.0], [34.0, 9.0], [39.0, 9.5], [40.0, 10.0], [41.0, 10.0], [43.0, 12.0], [42.0, 0.0], [44.0, 989.0], [46.0, 8.0], [47.0, 11.0], [49.0, 10.0], [50.0, 13.0], [53.0, 9.0], [52.0, 14.5], [55.0, 1947.0], [61.0, 583.5], [60.0, 10.5], [62.0, 9.0], [65.0, 8.0], [64.0, 992.5], [67.0, 8.0], [71.0, 13.0], [68.0, 8.0], [73.0, 823.0], [79.0, 9.0], [95.0, 1705.0], [28.0, 2080.0], [29.0, 8.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 95.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.616666666666667, "minX": 1.58542752E12, "maxY": 42.45, "series": [{"data": [[1.58542794E12, 42.45], [1.58542776E12, 38.766666666666666], [1.58542782E12, 39.81666666666667], [1.58542812E12, 36.4], [1.58542764E12, 37.983333333333334], [1.5854277E12, 41.35], [1.58542752E12, 20.816666666666666], [1.585428E12, 35.06666666666667], [1.58542818E12, 9.616666666666667], [1.58542758E12, 41.61666666666667], [1.58542788E12, 38.0], [1.58542806E12, 36.86666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58542818E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58542752E12, "maxY": 39.4, "series": [{"data": [[1.58542794E12, 38.483333333333334], [1.58542776E12, 38.6], [1.58542782E12, 38.2], [1.58542812E12, 37.583333333333336], [1.58542764E12, 37.06666666666667], [1.5854277E12, 38.86666666666667], [1.58542752E12, 20.75], [1.585428E12, 33.81666666666667], [1.58542818E12, 9.633333333333333], [1.58542758E12, 39.4], [1.58542788E12, 38.11666666666667], [1.58542806E12, 36.666666666666664]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58542794E12, 4.083333333333333], [1.58542776E12, 0.016666666666666666], [1.58542782E12, 1.5833333333333333], [1.58542764E12, 1.9], [1.5854277E12, 1.85], [1.585428E12, 0.31666666666666665], [1.58542758E12, 1.1666666666666667], [1.58542788E12, 0.06666666666666667]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.585428E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.TruncatedChunkException", "isController": false}, {"data": [[1.5854277E12, 0.016666666666666666]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.585428E12, 0.31666666666666665], [1.58542806E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.585428E12, 0.11666666666666667], [1.58542806E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58542818E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58542752E12, "maxY": 19.666666666666668, "series": [{"data": [[1.58542752E12, 1.6], [1.58542758E12, 0.48333333333333334]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58542794E12, 19.133333333333333], [1.58542776E12, 19.266666666666666], [1.58542782E12, 19.1], [1.58542812E12, 19.05], [1.58542764E12, 18.6], [1.5854277E12, 19.383333333333333], [1.58542752E12, 9.283333333333333], [1.585428E12, 16.65], [1.58542818E12, 5.0], [1.58542758E12, 19.25], [1.58542788E12, 19.133333333333333], [1.58542806E12, 18.283333333333335]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58542794E12, 2.2], [1.58542782E12, 0.7166666666666667], [1.58542764E12, 1.0166666666666666], [1.5854277E12, 0.95], [1.585428E12, 0.5833333333333334], [1.58542758E12, 0.6], [1.58542788E12, 0.03333333333333333], [1.58542806E12, 0.1]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58542794E12, 19.35], [1.58542776E12, 19.333333333333332], [1.58542782E12, 19.1], [1.58542812E12, 18.533333333333335], [1.58542764E12, 18.466666666666665], [1.5854277E12, 19.483333333333334], [1.58542752E12, 9.866666666666667], [1.585428E12, 17.166666666666668], [1.58542818E12, 4.633333333333334], [1.58542758E12, 19.666666666666668], [1.58542788E12, 18.983333333333334], [1.58542806E12, 18.383333333333333]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.58542794E12, 1.8833333333333333], [1.58542776E12, 0.016666666666666666], [1.58542782E12, 0.8666666666666667], [1.58542764E12, 0.8833333333333333], [1.5854277E12, 0.9166666666666666], [1.585428E12, 0.18333333333333332], [1.58542758E12, 0.5666666666666667], [1.58542788E12, 0.03333333333333333], [1.58542806E12, 0.016666666666666666]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58542818E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58542752E12, "maxY": 39.4, "series": [{"data": [[1.58542794E12, 38.483333333333334], [1.58542776E12, 38.6], [1.58542782E12, 38.2], [1.58542812E12, 37.583333333333336], [1.58542764E12, 37.06666666666667], [1.5854277E12, 38.86666666666667], [1.58542752E12, 20.75], [1.585428E12, 33.81666666666667], [1.58542818E12, 9.633333333333333], [1.58542758E12, 39.4], [1.58542788E12, 38.11666666666667], [1.58542806E12, 36.666666666666664]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58542794E12, 4.083333333333333], [1.58542776E12, 0.016666666666666666], [1.58542782E12, 1.5833333333333333], [1.58542764E12, 1.9], [1.5854277E12, 1.8666666666666667], [1.585428E12, 0.7666666666666667], [1.58542758E12, 1.1666666666666667], [1.58542788E12, 0.06666666666666667], [1.58542806E12, 0.11666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58542818E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

