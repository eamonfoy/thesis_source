/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 5290.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 4.0], [3.9, 4.0], [4.0, 4.0], [4.1, 4.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 6.0], [4.7, 6.0], [4.8, 7.0], [4.9, 10.0], [5.0, 13.0], [5.1, 16.0], [5.2, 28.0], [5.3, 32.0], [5.4, 35.0], [5.5, 36.0], [5.6, 37.0], [5.7, 37.0], [5.8, 38.0], [5.9, 39.0], [6.0, 40.0], [6.1, 40.0], [6.2, 40.0], [6.3, 41.0], [6.4, 41.0], [6.5, 42.0], [6.6, 43.0], [6.7, 43.0], [6.8, 44.0], [6.9, 44.0], [7.0, 44.0], [7.1, 45.0], [7.2, 45.0], [7.3, 46.0], [7.4, 46.0], [7.5, 47.0], [7.6, 47.0], [7.7, 48.0], [7.8, 48.0], [7.9, 48.0], [8.0, 49.0], [8.1, 49.0], [8.2, 49.0], [8.3, 50.0], [8.4, 50.0], [8.5, 50.0], [8.6, 51.0], [8.7, 51.0], [8.8, 52.0], [8.9, 53.0], [9.0, 53.0], [9.1, 53.0], [9.2, 54.0], [9.3, 55.0], [9.4, 55.0], [9.5, 56.0], [9.6, 57.0], [9.7, 57.0], [9.8, 58.0], [9.9, 59.0], [10.0, 60.0], [10.1, 61.0], [10.2, 61.0], [10.3, 63.0], [10.4, 63.0], [10.5, 64.0], [10.6, 65.0], [10.7, 66.0], [10.8, 67.0], [10.9, 69.0], [11.0, 71.0], [11.1, 72.0], [11.2, 74.0], [11.3, 76.0], [11.4, 78.0], [11.5, 80.0], [11.6, 81.0], [11.7, 84.0], [11.8, 85.0], [11.9, 88.0], [12.0, 90.0], [12.1, 93.0], [12.2, 96.0], [12.3, 101.0], [12.4, 105.0], [12.5, 108.0], [12.6, 113.0], [12.7, 119.0], [12.8, 126.0], [12.9, 131.0], [13.0, 141.0], [13.1, 152.0], [13.2, 161.0], [13.3, 184.0], [13.4, 200.0], [13.5, 218.0], [13.6, 248.0], [13.7, 259.0], [13.8, 274.0], [13.9, 285.0], [14.0, 305.0], [14.1, 324.0], [14.2, 340.0], [14.3, 351.0], [14.4, 358.0], [14.5, 368.0], [14.6, 380.0], [14.7, 385.0], [14.8, 399.0], [14.9, 409.0], [15.0, 420.0], [15.1, 429.0], [15.2, 441.0], [15.3, 452.0], [15.4, 461.0], [15.5, 469.0], [15.6, 477.0], [15.7, 485.0], [15.8, 492.0], [15.9, 497.0], [16.0, 506.0], [16.1, 513.0], [16.2, 522.0], [16.3, 530.0], [16.4, 535.0], [16.5, 541.0], [16.6, 548.0], [16.7, 553.0], [16.8, 565.0], [16.9, 572.0], [17.0, 579.0], [17.1, 587.0], [17.2, 594.0], [17.3, 603.0], [17.4, 608.0], [17.5, 614.0], [17.6, 624.0], [17.7, 630.0], [17.8, 636.0], [17.9, 642.0], [18.0, 649.0], [18.1, 656.0], [18.2, 662.0], [18.3, 666.0], [18.4, 675.0], [18.5, 681.0], [18.6, 687.0], [18.7, 691.0], [18.8, 699.0], [18.9, 706.0], [19.0, 712.0], [19.1, 717.0], [19.2, 725.0], [19.3, 734.0], [19.4, 741.0], [19.5, 746.0], [19.6, 753.0], [19.7, 756.0], [19.8, 761.0], [19.9, 768.0], [20.0, 776.0], [20.1, 783.0], [20.2, 791.0], [20.3, 797.0], [20.4, 802.0], [20.5, 809.0], [20.6, 816.0], [20.7, 820.0], [20.8, 825.0], [20.9, 831.0], [21.0, 837.0], [21.1, 842.0], [21.2, 849.0], [21.3, 856.0], [21.4, 859.0], [21.5, 864.0], [21.6, 871.0], [21.7, 875.0], [21.8, 880.0], [21.9, 885.0], [22.0, 889.0], [22.1, 893.0], [22.2, 898.0], [22.3, 904.0], [22.4, 908.0], [22.5, 914.0], [22.6, 919.0], [22.7, 924.0], [22.8, 926.0], [22.9, 929.0], [23.0, 933.0], [23.1, 937.0], [23.2, 941.0], [23.3, 948.0], [23.4, 954.0], [23.5, 957.0], [23.6, 963.0], [23.7, 968.0], [23.8, 973.0], [23.9, 976.0], [24.0, 980.0], [24.1, 983.0], [24.2, 989.0], [24.3, 992.0], [24.4, 996.0], [24.5, 1001.0], [24.6, 1005.0], [24.7, 1009.0], [24.8, 1015.0], [24.9, 1018.0], [25.0, 1021.0], [25.1, 1026.0], [25.2, 1029.0], [25.3, 1034.0], [25.4, 1037.0], [25.5, 1041.0], [25.6, 1045.0], [25.7, 1051.0], [25.8, 1054.0], [25.9, 1057.0], [26.0, 1061.0], [26.1, 1064.0], [26.2, 1068.0], [26.3, 1071.0], [26.4, 1076.0], [26.5, 1081.0], [26.6, 1086.0], [26.7, 1090.0], [26.8, 1094.0], [26.9, 1097.0], [27.0, 1099.0], [27.1, 1104.0], [27.2, 1108.0], [27.3, 1112.0], [27.4, 1117.0], [27.5, 1120.0], [27.6, 1123.0], [27.7, 1126.0], [27.8, 1131.0], [27.9, 1135.0], [28.0, 1139.0], [28.1, 1145.0], [28.2, 1149.0], [28.3, 1153.0], [28.4, 1156.0], [28.5, 1161.0], [28.6, 1163.0], [28.7, 1168.0], [28.8, 1171.0], [28.9, 1175.0], [29.0, 1177.0], [29.1, 1182.0], [29.2, 1186.0], [29.3, 1190.0], [29.4, 1193.0], [29.5, 1197.0], [29.6, 1204.0], [29.7, 1208.0], [29.8, 1213.0], [29.9, 1216.0], [30.0, 1219.0], [30.1, 1222.0], [30.2, 1226.0], [30.3, 1228.0], [30.4, 1232.0], [30.5, 1235.0], [30.6, 1240.0], [30.7, 1245.0], [30.8, 1248.0], [30.9, 1252.0], [31.0, 1255.0], [31.1, 1258.0], [31.2, 1261.0], [31.3, 1264.0], [31.4, 1267.0], [31.5, 1273.0], [31.6, 1277.0], [31.7, 1279.0], [31.8, 1284.0], [31.9, 1286.0], [32.0, 1290.0], [32.1, 1293.0], [32.2, 1295.0], [32.3, 1299.0], [32.4, 1301.0], [32.5, 1305.0], [32.6, 1307.0], [32.7, 1311.0], [32.8, 1313.0], [32.9, 1317.0], [33.0, 1319.0], [33.1, 1324.0], [33.2, 1326.0], [33.3, 1330.0], [33.4, 1333.0], [33.5, 1336.0], [33.6, 1338.0], [33.7, 1342.0], [33.8, 1345.0], [33.9, 1350.0], [34.0, 1353.0], [34.1, 1357.0], [34.2, 1360.0], [34.3, 1364.0], [34.4, 1366.0], [34.5, 1369.0], [34.6, 1371.0], [34.7, 1375.0], [34.8, 1377.0], [34.9, 1382.0], [35.0, 1385.0], [35.1, 1387.0], [35.2, 1392.0], [35.3, 1396.0], [35.4, 1398.0], [35.5, 1402.0], [35.6, 1403.0], [35.7, 1407.0], [35.8, 1410.0], [35.9, 1413.0], [36.0, 1416.0], [36.1, 1419.0], [36.2, 1422.0], [36.3, 1424.0], [36.4, 1427.0], [36.5, 1430.0], [36.6, 1433.0], [36.7, 1436.0], [36.8, 1438.0], [36.9, 1441.0], [37.0, 1444.0], [37.1, 1448.0], [37.2, 1451.0], [37.3, 1454.0], [37.4, 1457.0], [37.5, 1460.0], [37.6, 1463.0], [37.7, 1467.0], [37.8, 1469.0], [37.9, 1472.0], [38.0, 1475.0], [38.1, 1479.0], [38.2, 1481.0], [38.3, 1485.0], [38.4, 1486.0], [38.5, 1489.0], [38.6, 1491.0], [38.7, 1494.0], [38.8, 1496.0], [38.9, 1498.0], [39.0, 1501.0], [39.1, 1506.0], [39.2, 1508.0], [39.3, 1510.0], [39.4, 1512.0], [39.5, 1517.0], [39.6, 1519.0], [39.7, 1522.0], [39.8, 1525.0], [39.9, 1528.0], [40.0, 1531.0], [40.1, 1534.0], [40.2, 1536.0], [40.3, 1539.0], [40.4, 1542.0], [40.5, 1545.0], [40.6, 1547.0], [40.7, 1550.0], [40.8, 1551.0], [40.9, 1554.0], [41.0, 1556.0], [41.1, 1559.0], [41.2, 1562.0], [41.3, 1564.0], [41.4, 1566.0], [41.5, 1567.0], [41.6, 1569.0], [41.7, 1571.0], [41.8, 1575.0], [41.9, 1577.0], [42.0, 1580.0], [42.1, 1581.0], [42.2, 1584.0], [42.3, 1586.0], [42.4, 1590.0], [42.5, 1593.0], [42.6, 1596.0], [42.7, 1599.0], [42.8, 1600.0], [42.9, 1603.0], [43.0, 1605.0], [43.1, 1606.0], [43.2, 1608.0], [43.3, 1611.0], [43.4, 1614.0], [43.5, 1616.0], [43.6, 1618.0], [43.7, 1621.0], [43.8, 1624.0], [43.9, 1629.0], [44.0, 1630.0], [44.1, 1632.0], [44.2, 1636.0], [44.3, 1637.0], [44.4, 1639.0], [44.5, 1641.0], [44.6, 1644.0], [44.7, 1646.0], [44.8, 1648.0], [44.9, 1650.0], [45.0, 1652.0], [45.1, 1654.0], [45.2, 1656.0], [45.3, 1658.0], [45.4, 1661.0], [45.5, 1664.0], [45.6, 1666.0], [45.7, 1668.0], [45.8, 1670.0], [45.9, 1672.0], [46.0, 1675.0], [46.1, 1678.0], [46.2, 1679.0], [46.3, 1681.0], [46.4, 1683.0], [46.5, 1685.0], [46.6, 1687.0], [46.7, 1690.0], [46.8, 1692.0], [46.9, 1694.0], [47.0, 1697.0], [47.1, 1698.0], [47.2, 1700.0], [47.3, 1702.0], [47.4, 1704.0], [47.5, 1706.0], [47.6, 1707.0], [47.7, 1710.0], [47.8, 1711.0], [47.9, 1713.0], [48.0, 1716.0], [48.1, 1717.0], [48.2, 1718.0], [48.3, 1720.0], [48.4, 1722.0], [48.5, 1724.0], [48.6, 1726.0], [48.7, 1727.0], [48.8, 1729.0], [48.9, 1731.0], [49.0, 1731.0], [49.1, 1734.0], [49.2, 1735.0], [49.3, 1736.0], [49.4, 1739.0], [49.5, 1741.0], [49.6, 1743.0], [49.7, 1745.0], [49.8, 1747.0], [49.9, 1749.0], [50.0, 1750.0], [50.1, 1752.0], [50.2, 1754.0], [50.3, 1757.0], [50.4, 1758.0], [50.5, 1760.0], [50.6, 1761.0], [50.7, 1763.0], [50.8, 1765.0], [50.9, 1767.0], [51.0, 1768.0], [51.1, 1770.0], [51.2, 1772.0], [51.3, 1775.0], [51.4, 1777.0], [51.5, 1779.0], [51.6, 1781.0], [51.7, 1784.0], [51.8, 1786.0], [51.9, 1788.0], [52.0, 1791.0], [52.1, 1793.0], [52.2, 1795.0], [52.3, 1796.0], [52.4, 1798.0], [52.5, 1800.0], [52.6, 1801.0], [52.7, 1803.0], [52.8, 1804.0], [52.9, 1806.0], [53.0, 1808.0], [53.1, 1810.0], [53.2, 1811.0], [53.3, 1812.0], [53.4, 1816.0], [53.5, 1817.0], [53.6, 1819.0], [53.7, 1820.0], [53.8, 1822.0], [53.9, 1824.0], [54.0, 1825.0], [54.1, 1827.0], [54.2, 1829.0], [54.3, 1832.0], [54.4, 1834.0], [54.5, 1836.0], [54.6, 1837.0], [54.7, 1840.0], [54.8, 1841.0], [54.9, 1843.0], [55.0, 1844.0], [55.1, 1846.0], [55.2, 1848.0], [55.3, 1850.0], [55.4, 1852.0], [55.5, 1853.0], [55.6, 1854.0], [55.7, 1855.0], [55.8, 1857.0], [55.9, 1859.0], [56.0, 1860.0], [56.1, 1862.0], [56.2, 1864.0], [56.3, 1866.0], [56.4, 1868.0], [56.5, 1870.0], [56.6, 1872.0], [56.7, 1873.0], [56.8, 1875.0], [56.9, 1876.0], [57.0, 1878.0], [57.1, 1879.0], [57.2, 1881.0], [57.3, 1882.0], [57.4, 1884.0], [57.5, 1887.0], [57.6, 1888.0], [57.7, 1891.0], [57.8, 1893.0], [57.9, 1894.0], [58.0, 1895.0], [58.1, 1897.0], [58.2, 1899.0], [58.3, 1900.0], [58.4, 1901.0], [58.5, 1903.0], [58.6, 1904.0], [58.7, 1906.0], [58.8, 1908.0], [58.9, 1910.0], [59.0, 1911.0], [59.1, 1912.0], [59.2, 1914.0], [59.3, 1915.0], [59.4, 1917.0], [59.5, 1918.0], [59.6, 1921.0], [59.7, 1923.0], [59.8, 1924.0], [59.9, 1926.0], [60.0, 1927.0], [60.1, 1929.0], [60.2, 1931.0], [60.3, 1932.0], [60.4, 1934.0], [60.5, 1937.0], [60.6, 1939.0], [60.7, 1940.0], [60.8, 1943.0], [60.9, 1945.0], [61.0, 1947.0], [61.1, 1948.0], [61.2, 1950.0], [61.3, 1951.0], [61.4, 1952.0], [61.5, 1954.0], [61.6, 1956.0], [61.7, 1957.0], [61.8, 1959.0], [61.9, 1960.0], [62.0, 1963.0], [62.1, 1964.0], [62.2, 1966.0], [62.3, 1968.0], [62.4, 1969.0], [62.5, 1970.0], [62.6, 1971.0], [62.7, 1973.0], [62.8, 1975.0], [62.9, 1976.0], [63.0, 1978.0], [63.1, 1980.0], [63.2, 1981.0], [63.3, 1983.0], [63.4, 1985.0], [63.5, 1987.0], [63.6, 1989.0], [63.7, 1990.0], [63.8, 1994.0], [63.9, 1995.0], [64.0, 1997.0], [64.1, 1998.0], [64.2, 1999.0], [64.3, 2000.0], [64.4, 2003.0], [64.5, 2005.0], [64.6, 2008.0], [64.7, 2010.0], [64.8, 2012.0], [64.9, 2013.0], [65.0, 2015.0], [65.1, 2017.0], [65.2, 2019.0], [65.3, 2021.0], [65.4, 2023.0], [65.5, 2025.0], [65.6, 2026.0], [65.7, 2028.0], [65.8, 2029.0], [65.9, 2031.0], [66.0, 2032.0], [66.1, 2033.0], [66.2, 2036.0], [66.3, 2037.0], [66.4, 2040.0], [66.5, 2042.0], [66.6, 2043.0], [66.7, 2044.0], [66.8, 2046.0], [66.9, 2048.0], [67.0, 2049.0], [67.1, 2051.0], [67.2, 2053.0], [67.3, 2055.0], [67.4, 2056.0], [67.5, 2058.0], [67.6, 2059.0], [67.7, 2061.0], [67.8, 2062.0], [67.9, 2064.0], [68.0, 2066.0], [68.1, 2068.0], [68.2, 2070.0], [68.3, 2072.0], [68.4, 2073.0], [68.5, 2074.0], [68.6, 2076.0], [68.7, 2077.0], [68.8, 2078.0], [68.9, 2079.0], [69.0, 2082.0], [69.1, 2084.0], [69.2, 2085.0], [69.3, 2087.0], [69.4, 2089.0], [69.5, 2091.0], [69.6, 2093.0], [69.7, 2095.0], [69.8, 2097.0], [69.9, 2098.0], [70.0, 2100.0], [70.1, 2102.0], [70.2, 2104.0], [70.3, 2105.0], [70.4, 2108.0], [70.5, 2109.0], [70.6, 2111.0], [70.7, 2113.0], [70.8, 2116.0], [70.9, 2118.0], [71.0, 2121.0], [71.1, 2123.0], [71.2, 2124.0], [71.3, 2126.0], [71.4, 2128.0], [71.5, 2129.0], [71.6, 2130.0], [71.7, 2132.0], [71.8, 2133.0], [71.9, 2136.0], [72.0, 2138.0], [72.1, 2139.0], [72.2, 2141.0], [72.3, 2143.0], [72.4, 2145.0], [72.5, 2146.0], [72.6, 2147.0], [72.7, 2149.0], [72.8, 2151.0], [72.9, 2153.0], [73.0, 2154.0], [73.1, 2155.0], [73.2, 2158.0], [73.3, 2159.0], [73.4, 2161.0], [73.5, 2162.0], [73.6, 2163.0], [73.7, 2166.0], [73.8, 2167.0], [73.9, 2169.0], [74.0, 2170.0], [74.1, 2173.0], [74.2, 2176.0], [74.3, 2179.0], [74.4, 2182.0], [74.5, 2183.0], [74.6, 2185.0], [74.7, 2186.0], [74.8, 2188.0], [74.9, 2190.0], [75.0, 2191.0], [75.1, 2193.0], [75.2, 2195.0], [75.3, 2196.0], [75.4, 2198.0], [75.5, 2201.0], [75.6, 2203.0], [75.7, 2206.0], [75.8, 2208.0], [75.9, 2209.0], [76.0, 2211.0], [76.1, 2214.0], [76.2, 2216.0], [76.3, 2218.0], [76.4, 2221.0], [76.5, 2223.0], [76.6, 2225.0], [76.7, 2228.0], [76.8, 2230.0], [76.9, 2232.0], [77.0, 2234.0], [77.1, 2236.0], [77.2, 2238.0], [77.3, 2240.0], [77.4, 2241.0], [77.5, 2244.0], [77.6, 2245.0], [77.7, 2247.0], [77.8, 2250.0], [77.9, 2252.0], [78.0, 2254.0], [78.1, 2255.0], [78.2, 2257.0], [78.3, 2260.0], [78.4, 2262.0], [78.5, 2264.0], [78.6, 2266.0], [78.7, 2269.0], [78.8, 2271.0], [78.9, 2273.0], [79.0, 2275.0], [79.1, 2277.0], [79.2, 2280.0], [79.3, 2282.0], [79.4, 2283.0], [79.5, 2286.0], [79.6, 2288.0], [79.7, 2291.0], [79.8, 2293.0], [79.9, 2295.0], [80.0, 2299.0], [80.1, 2301.0], [80.2, 2304.0], [80.3, 2306.0], [80.4, 2308.0], [80.5, 2310.0], [80.6, 2311.0], [80.7, 2312.0], [80.8, 2315.0], [80.9, 2318.0], [81.0, 2321.0], [81.1, 2324.0], [81.2, 2327.0], [81.3, 2329.0], [81.4, 2330.0], [81.5, 2334.0], [81.6, 2335.0], [81.7, 2339.0], [81.8, 2341.0], [81.9, 2344.0], [82.0, 2346.0], [82.1, 2348.0], [82.2, 2350.0], [82.3, 2353.0], [82.4, 2357.0], [82.5, 2360.0], [82.6, 2362.0], [82.7, 2365.0], [82.8, 2368.0], [82.9, 2371.0], [83.0, 2373.0], [83.1, 2377.0], [83.2, 2378.0], [83.3, 2381.0], [83.4, 2383.0], [83.5, 2386.0], [83.6, 2388.0], [83.7, 2391.0], [83.8, 2393.0], [83.9, 2396.0], [84.0, 2398.0], [84.1, 2402.0], [84.2, 2405.0], [84.3, 2408.0], [84.4, 2411.0], [84.5, 2412.0], [84.6, 2416.0], [84.7, 2419.0], [84.8, 2422.0], [84.9, 2425.0], [85.0, 2427.0], [85.1, 2432.0], [85.2, 2436.0], [85.3, 2437.0], [85.4, 2440.0], [85.5, 2443.0], [85.6, 2446.0], [85.7, 2448.0], [85.8, 2450.0], [85.9, 2453.0], [86.0, 2456.0], [86.1, 2459.0], [86.2, 2463.0], [86.3, 2465.0], [86.4, 2468.0], [86.5, 2472.0], [86.6, 2474.0], [86.7, 2476.0], [86.8, 2480.0], [86.9, 2484.0], [87.0, 2489.0], [87.1, 2492.0], [87.2, 2495.0], [87.3, 2498.0], [87.4, 2502.0], [87.5, 2506.0], [87.6, 2510.0], [87.7, 2513.0], [87.8, 2517.0], [87.9, 2519.0], [88.0, 2522.0], [88.1, 2526.0], [88.2, 2529.0], [88.3, 2531.0], [88.4, 2534.0], [88.5, 2540.0], [88.6, 2542.0], [88.7, 2546.0], [88.8, 2552.0], [88.9, 2556.0], [89.0, 2561.0], [89.1, 2564.0], [89.2, 2569.0], [89.3, 2572.0], [89.4, 2576.0], [89.5, 2579.0], [89.6, 2582.0], [89.7, 2586.0], [89.8, 2589.0], [89.9, 2592.0], [90.0, 2596.0], [90.1, 2599.0], [90.2, 2604.0], [90.3, 2609.0], [90.4, 2613.0], [90.5, 2618.0], [90.6, 2622.0], [90.7, 2629.0], [90.8, 2635.0], [90.9, 2638.0], [91.0, 2643.0], [91.1, 2649.0], [91.2, 2653.0], [91.3, 2658.0], [91.4, 2662.0], [91.5, 2668.0], [91.6, 2675.0], [91.7, 2680.0], [91.8, 2684.0], [91.9, 2690.0], [92.0, 2697.0], [92.1, 2703.0], [92.2, 2707.0], [92.3, 2710.0], [92.4, 2715.0], [92.5, 2719.0], [92.6, 2723.0], [92.7, 2728.0], [92.8, 2732.0], [92.9, 2738.0], [93.0, 2744.0], [93.1, 2752.0], [93.2, 2756.0], [93.3, 2762.0], [93.4, 2764.0], [93.5, 2772.0], [93.6, 2780.0], [93.7, 2787.0], [93.8, 2791.0], [93.9, 2801.0], [94.0, 2807.0], [94.1, 2815.0], [94.2, 2819.0], [94.3, 2826.0], [94.4, 2834.0], [94.5, 2840.0], [94.6, 2844.0], [94.7, 2849.0], [94.8, 2854.0], [94.9, 2861.0], [95.0, 2869.0], [95.1, 2875.0], [95.2, 2881.0], [95.3, 2888.0], [95.4, 2895.0], [95.5, 2902.0], [95.6, 2909.0], [95.7, 2920.0], [95.8, 2926.0], [95.9, 2937.0], [96.0, 2948.0], [96.1, 2958.0], [96.2, 2968.0], [96.3, 2981.0], [96.4, 2991.0], [96.5, 2998.0], [96.6, 3008.0], [96.7, 3022.0], [96.8, 3033.0], [96.9, 3048.0], [97.0, 3064.0], [97.1, 3080.0], [97.2, 3095.0], [97.3, 3112.0], [97.4, 3125.0], [97.5, 3143.0], [97.6, 3158.0], [97.7, 3178.0], [97.8, 3186.0], [97.9, 3206.0], [98.0, 3224.0], [98.1, 3238.0], [98.2, 3257.0], [98.3, 3274.0], [98.4, 3294.0], [98.5, 3315.0], [98.6, 3330.0], [98.7, 3370.0], [98.8, 3397.0], [98.9, 3412.0], [99.0, 3449.0], [99.1, 3496.0], [99.2, 3517.0], [99.3, 3558.0], [99.4, 3601.0], [99.5, 3676.0], [99.6, 3718.0], [99.7, 3777.0], [99.8, 3890.0], [99.9, 4119.0], [100.0, 5149.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 146.0], [0.1, 146.0], [0.2, 146.0], [0.3, 146.0], [0.4, 146.0], [0.5, 146.0], [0.6, 146.0], [0.7, 149.0], [0.8, 149.0], [0.9, 149.0], [1.0, 149.0], [1.1, 149.0], [1.2, 149.0], [1.3, 149.0], [1.4, 152.0], [1.5, 152.0], [1.6, 152.0], [1.7, 152.0], [1.8, 152.0], [1.9, 152.0], [2.0, 152.0], [2.1, 155.0], [2.2, 155.0], [2.3, 155.0], [2.4, 155.0], [2.5, 155.0], [2.6, 155.0], [2.7, 155.0], [2.8, 157.0], [2.9, 157.0], [3.0, 157.0], [3.1, 157.0], [3.2, 157.0], [3.3, 157.0], [3.4, 157.0], [3.5, 157.0], [3.6, 157.0], [3.7, 157.0], [3.8, 157.0], [3.9, 157.0], [4.0, 157.0], [4.1, 157.0], [4.2, 159.0], [4.3, 159.0], [4.4, 159.0], [4.5, 159.0], [4.6, 159.0], [4.7, 159.0], [4.8, 159.0], [4.9, 159.0], [5.0, 159.0], [5.1, 159.0], [5.2, 159.0], [5.3, 159.0], [5.4, 159.0], [5.5, 159.0], [5.6, 160.0], [5.7, 160.0], [5.8, 160.0], [5.9, 160.0], [6.0, 160.0], [6.1, 160.0], [6.2, 160.0], [6.3, 161.0], [6.4, 161.0], [6.5, 161.0], [6.6, 161.0], [6.7, 161.0], [6.8, 161.0], [6.9, 161.0], [7.0, 161.0], [7.1, 161.0], [7.2, 161.0], [7.3, 161.0], [7.4, 161.0], [7.5, 161.0], [7.6, 162.0], [7.7, 162.0], [7.8, 162.0], [7.9, 162.0], [8.0, 162.0], [8.1, 162.0], [8.2, 162.0], [8.3, 162.0], [8.4, 162.0], [8.5, 162.0], [8.6, 162.0], [8.7, 162.0], [8.8, 162.0], [8.9, 162.0], [9.0, 162.0], [9.1, 162.0], [9.2, 162.0], [9.3, 162.0], [9.4, 162.0], [9.5, 162.0], [9.6, 162.0], [9.7, 162.0], [9.8, 162.0], [9.9, 162.0], [10.0, 162.0], [10.1, 162.0], [10.2, 162.0], [10.3, 162.0], [10.4, 163.0], [10.5, 163.0], [10.6, 163.0], [10.7, 163.0], [10.8, 163.0], [10.9, 163.0], [11.0, 163.0], [11.1, 163.0], [11.2, 163.0], [11.3, 163.0], [11.4, 163.0], [11.5, 163.0], [11.6, 163.0], [11.7, 163.0], [11.8, 163.0], [11.9, 163.0], [12.0, 163.0], [12.1, 163.0], [12.2, 163.0], [12.3, 163.0], [12.4, 163.0], [12.5, 164.0], [12.6, 164.0], [12.7, 164.0], [12.8, 164.0], [12.9, 164.0], [13.0, 164.0], [13.1, 164.0], [13.2, 164.0], [13.3, 164.0], [13.4, 164.0], [13.5, 164.0], [13.6, 164.0], [13.7, 164.0], [13.8, 165.0], [13.9, 165.0], [14.0, 165.0], [14.1, 165.0], [14.2, 165.0], [14.3, 165.0], [14.4, 165.0], [14.5, 165.0], [14.6, 165.0], [14.7, 165.0], [14.8, 165.0], [14.9, 165.0], [15.0, 165.0], [15.1, 165.0], [15.2, 168.0], [15.3, 168.0], [15.4, 168.0], [15.5, 168.0], [15.6, 168.0], [15.7, 168.0], [15.8, 168.0], [15.9, 168.0], [16.0, 168.0], [16.1, 168.0], [16.2, 168.0], [16.3, 168.0], [16.4, 168.0], [16.5, 168.0], [16.6, 168.0], [16.7, 168.0], [16.8, 168.0], [16.9, 168.0], [17.0, 168.0], [17.1, 168.0], [17.2, 168.0], [17.3, 169.0], [17.4, 169.0], [17.5, 169.0], [17.6, 169.0], [17.7, 169.0], [17.8, 169.0], [17.9, 169.0], [18.0, 169.0], [18.1, 169.0], [18.2, 169.0], [18.3, 169.0], [18.4, 169.0], [18.5, 169.0], [18.6, 169.0], [18.7, 169.0], [18.8, 169.0], [18.9, 169.0], [19.0, 169.0], [19.1, 169.0], [19.2, 169.0], [19.3, 169.0], [19.4, 170.0], [19.5, 170.0], [19.6, 170.0], [19.7, 170.0], [19.8, 170.0], [19.9, 170.0], [20.0, 170.0], [20.1, 170.0], [20.2, 170.0], [20.3, 170.0], [20.4, 170.0], [20.5, 170.0], [20.6, 170.0], [20.7, 170.0], [20.8, 170.0], [20.9, 170.0], [21.0, 170.0], [21.1, 170.0], [21.2, 170.0], [21.3, 170.0], [21.4, 170.0], [21.5, 170.0], [21.6, 170.0], [21.7, 170.0], [21.8, 170.0], [21.9, 170.0], [22.0, 170.0], [22.1, 171.0], [22.2, 171.0], [22.3, 171.0], [22.4, 171.0], [22.5, 171.0], [22.6, 171.0], [22.7, 171.0], [22.8, 171.0], [22.9, 171.0], [23.0, 171.0], [23.1, 171.0], [23.2, 171.0], [23.3, 171.0], [23.4, 171.0], [23.5, 171.0], [23.6, 171.0], [23.7, 171.0], [23.8, 171.0], [23.9, 171.0], [24.0, 171.0], [24.1, 171.0], [24.2, 171.0], [24.3, 171.0], [24.4, 171.0], [24.5, 171.0], [24.6, 171.0], [24.7, 171.0], [24.8, 171.0], [24.9, 172.0], [25.0, 172.0], [25.1, 172.0], [25.2, 172.0], [25.3, 172.0], [25.4, 172.0], [25.5, 172.0], [25.6, 172.0], [25.7, 172.0], [25.8, 172.0], [25.9, 172.0], [26.0, 172.0], [26.1, 172.0], [26.2, 172.0], [26.3, 172.0], [26.4, 172.0], [26.5, 172.0], [26.6, 172.0], [26.7, 172.0], [26.8, 172.0], [26.9, 172.0], [27.0, 172.0], [27.1, 172.0], [27.2, 172.0], [27.3, 172.0], [27.4, 172.0], [27.5, 172.0], [27.6, 173.0], [27.7, 173.0], [27.8, 173.0], [27.9, 173.0], [28.0, 173.0], [28.1, 173.0], [28.2, 173.0], [28.3, 173.0], [28.4, 173.0], [28.5, 173.0], [28.6, 173.0], [28.7, 173.0], [28.8, 173.0], [28.9, 173.0], [29.0, 173.0], [29.1, 173.0], [29.2, 173.0], [29.3, 173.0], [29.4, 173.0], [29.5, 173.0], [29.6, 173.0], [29.7, 173.0], [29.8, 173.0], [29.9, 173.0], [30.0, 173.0], [30.1, 173.0], [30.2, 173.0], [30.3, 173.0], [30.4, 173.0], [30.5, 173.0], [30.6, 173.0], [30.7, 173.0], [30.8, 173.0], [30.9, 173.0], [31.0, 173.0], [31.1, 174.0], [31.2, 174.0], [31.3, 174.0], [31.4, 174.0], [31.5, 174.0], [31.6, 174.0], [31.7, 174.0], [31.8, 174.0], [31.9, 174.0], [32.0, 174.0], [32.1, 174.0], [32.2, 174.0], [32.3, 174.0], [32.4, 174.0], [32.5, 175.0], [32.6, 175.0], [32.7, 175.0], [32.8, 175.0], [32.9, 175.0], [33.0, 175.0], [33.1, 175.0], [33.2, 175.0], [33.3, 175.0], [33.4, 175.0], [33.5, 175.0], [33.6, 175.0], [33.7, 175.0], [33.8, 175.0], [33.9, 175.0], [34.0, 175.0], [34.1, 175.0], [34.2, 175.0], [34.3, 175.0], [34.4, 175.0], [34.5, 176.0], [34.6, 176.0], [34.7, 176.0], [34.8, 176.0], [34.9, 176.0], [35.0, 176.0], [35.1, 176.0], [35.2, 176.0], [35.3, 176.0], [35.4, 176.0], [35.5, 176.0], [35.6, 176.0], [35.7, 176.0], [35.8, 176.0], [35.9, 176.0], [36.0, 176.0], [36.1, 176.0], [36.2, 176.0], [36.3, 176.0], [36.4, 176.0], [36.5, 176.0], [36.6, 177.0], [36.7, 177.0], [36.8, 177.0], [36.9, 177.0], [37.0, 177.0], [37.1, 177.0], [37.2, 177.0], [37.3, 177.0], [37.4, 177.0], [37.5, 177.0], [37.6, 177.0], [37.7, 177.0], [37.8, 177.0], [37.9, 177.0], [38.0, 177.0], [38.1, 177.0], [38.2, 177.0], [38.3, 177.0], [38.4, 177.0], [38.5, 177.0], [38.6, 177.0], [38.7, 179.0], [38.8, 179.0], [38.9, 179.0], [39.0, 179.0], [39.1, 179.0], [39.2, 179.0], [39.3, 179.0], [39.4, 180.0], [39.5, 180.0], [39.6, 180.0], [39.7, 180.0], [39.8, 180.0], [39.9, 180.0], [40.0, 180.0], [40.1, 180.0], [40.2, 180.0], [40.3, 180.0], [40.4, 180.0], [40.5, 180.0], [40.6, 180.0], [40.7, 180.0], [40.8, 180.0], [40.9, 180.0], [41.0, 180.0], [41.1, 180.0], [41.2, 180.0], [41.3, 180.0], [41.4, 181.0], [41.5, 181.0], [41.6, 181.0], [41.7, 181.0], [41.8, 181.0], [41.9, 181.0], [42.0, 181.0], [42.1, 182.0], [42.2, 182.0], [42.3, 182.0], [42.4, 182.0], [42.5, 182.0], [42.6, 182.0], [42.7, 182.0], [42.8, 183.0], [42.9, 183.0], [43.0, 183.0], [43.1, 183.0], [43.2, 183.0], [43.3, 183.0], [43.4, 183.0], [43.5, 183.0], [43.6, 183.0], [43.7, 183.0], [43.8, 183.0], [43.9, 183.0], [44.0, 183.0], [44.1, 183.0], [44.2, 184.0], [44.3, 184.0], [44.4, 184.0], [44.5, 184.0], [44.6, 184.0], [44.7, 184.0], [44.8, 184.0], [44.9, 186.0], [45.0, 186.0], [45.1, 186.0], [45.2, 186.0], [45.3, 186.0], [45.4, 186.0], [45.5, 186.0], [45.6, 186.0], [45.7, 186.0], [45.8, 186.0], [45.9, 186.0], [46.0, 186.0], [46.1, 186.0], [46.2, 186.0], [46.3, 187.0], [46.4, 187.0], [46.5, 187.0], [46.6, 187.0], [46.7, 187.0], [46.8, 187.0], [46.9, 187.0], [47.0, 187.0], [47.1, 187.0], [47.2, 187.0], [47.3, 187.0], [47.4, 187.0], [47.5, 187.0], [47.6, 187.0], [47.7, 187.0], [47.8, 187.0], [47.9, 187.0], [48.0, 187.0], [48.1, 187.0], [48.2, 187.0], [48.3, 187.0], [48.4, 187.0], [48.5, 187.0], [48.6, 187.0], [48.7, 187.0], [48.8, 187.0], [48.9, 187.0], [49.0, 187.0], [49.1, 187.0], [49.2, 187.0], [49.3, 187.0], [49.4, 187.0], [49.5, 187.0], [49.6, 187.0], [49.7, 187.0], [49.8, 187.0], [49.9, 187.0], [50.0, 187.0], [50.1, 187.0], [50.2, 187.0], [50.3, 187.0], [50.4, 188.0], [50.5, 188.0], [50.6, 188.0], [50.7, 188.0], [50.8, 188.0], [50.9, 188.0], [51.0, 188.0], [51.1, 188.0], [51.2, 188.0], [51.3, 188.0], [51.4, 188.0], [51.5, 188.0], [51.6, 188.0], [51.7, 188.0], [51.8, 188.0], [51.9, 188.0], [52.0, 188.0], [52.1, 188.0], [52.2, 188.0], [52.3, 188.0], [52.4, 188.0], [52.5, 188.0], [52.6, 188.0], [52.7, 188.0], [52.8, 188.0], [52.9, 188.0], [53.0, 188.0], [53.1, 188.0], [53.2, 189.0], [53.3, 189.0], [53.4, 189.0], [53.5, 189.0], [53.6, 189.0], [53.7, 189.0], [53.8, 190.0], [53.9, 190.0], [54.0, 190.0], [54.1, 190.0], [54.2, 190.0], [54.3, 190.0], [54.4, 190.0], [54.5, 190.0], [54.6, 190.0], [54.7, 190.0], [54.8, 190.0], [54.9, 190.0], [55.0, 190.0], [55.1, 190.0], [55.2, 190.0], [55.3, 190.0], [55.4, 190.0], [55.5, 190.0], [55.6, 190.0], [55.7, 190.0], [55.8, 190.0], [55.9, 192.0], [56.0, 192.0], [56.1, 192.0], [56.2, 192.0], [56.3, 192.0], [56.4, 192.0], [56.5, 192.0], [56.6, 192.0], [56.7, 192.0], [56.8, 192.0], [56.9, 192.0], [57.0, 192.0], [57.1, 192.0], [57.2, 192.0], [57.3, 193.0], [57.4, 193.0], [57.5, 193.0], [57.6, 193.0], [57.7, 193.0], [57.8, 193.0], [57.9, 193.0], [58.0, 194.0], [58.1, 194.0], [58.2, 194.0], [58.3, 194.0], [58.4, 194.0], [58.5, 194.0], [58.6, 194.0], [58.7, 195.0], [58.8, 195.0], [58.9, 195.0], [59.0, 195.0], [59.1, 195.0], [59.2, 195.0], [59.3, 195.0], [59.4, 196.0], [59.5, 196.0], [59.6, 196.0], [59.7, 196.0], [59.8, 196.0], [59.9, 196.0], [60.0, 196.0], [60.1, 197.0], [60.2, 197.0], [60.3, 197.0], [60.4, 197.0], [60.5, 197.0], [60.6, 197.0], [60.7, 198.0], [60.8, 198.0], [60.9, 198.0], [61.0, 198.0], [61.1, 198.0], [61.2, 198.0], [61.3, 198.0], [61.4, 199.0], [61.5, 199.0], [61.6, 199.0], [61.7, 199.0], [61.8, 199.0], [61.9, 199.0], [62.0, 199.0], [62.1, 203.0], [62.2, 203.0], [62.3, 203.0], [62.4, 203.0], [62.5, 203.0], [62.6, 203.0], [62.7, 203.0], [62.8, 205.0], [62.9, 205.0], [63.0, 205.0], [63.1, 205.0], [63.2, 205.0], [63.3, 205.0], [63.4, 205.0], [63.5, 205.0], [63.6, 205.0], [63.7, 205.0], [63.8, 205.0], [63.9, 205.0], [64.0, 205.0], [64.1, 205.0], [64.2, 205.0], [64.3, 205.0], [64.4, 205.0], [64.5, 205.0], [64.6, 205.0], [64.7, 205.0], [64.8, 205.0], [64.9, 206.0], [65.0, 206.0], [65.1, 206.0], [65.2, 206.0], [65.3, 206.0], [65.4, 206.0], [65.5, 206.0], [65.6, 207.0], [65.7, 207.0], [65.8, 207.0], [65.9, 207.0], [66.0, 207.0], [66.1, 207.0], [66.2, 207.0], [66.3, 208.0], [66.4, 208.0], [66.5, 208.0], [66.6, 208.0], [66.7, 208.0], [66.8, 208.0], [66.9, 211.0], [67.0, 211.0], [67.1, 211.0], [67.2, 211.0], [67.3, 211.0], [67.4, 211.0], [67.5, 211.0], [67.6, 213.0], [67.7, 213.0], [67.8, 213.0], [67.9, 213.0], [68.0, 213.0], [68.1, 213.0], [68.2, 213.0], [68.3, 213.0], [68.4, 213.0], [68.5, 213.0], [68.6, 213.0], [68.7, 213.0], [68.8, 213.0], [68.9, 213.0], [69.0, 216.0], [69.1, 216.0], [69.2, 216.0], [69.3, 216.0], [69.4, 216.0], [69.5, 216.0], [69.6, 216.0], [69.7, 218.0], [69.8, 218.0], [69.9, 218.0], [70.0, 218.0], [70.1, 218.0], [70.2, 218.0], [70.3, 218.0], [70.4, 221.0], [70.5, 221.0], [70.6, 221.0], [70.7, 221.0], [70.8, 221.0], [70.9, 221.0], [71.0, 221.0], [71.1, 223.0], [71.2, 223.0], [71.3, 223.0], [71.4, 223.0], [71.5, 223.0], [71.6, 223.0], [71.7, 223.0], [71.8, 228.0], [71.9, 228.0], [72.0, 228.0], [72.1, 228.0], [72.2, 228.0], [72.3, 228.0], [72.4, 228.0], [72.5, 230.0], [72.6, 230.0], [72.7, 230.0], [72.8, 230.0], [72.9, 230.0], [73.0, 230.0], [73.1, 230.0], [73.2, 235.0], [73.3, 235.0], [73.4, 235.0], [73.5, 235.0], [73.6, 235.0], [73.7, 235.0], [73.8, 236.0], [73.9, 236.0], [74.0, 236.0], [74.1, 236.0], [74.2, 236.0], [74.3, 236.0], [74.4, 236.0], [74.5, 238.0], [74.6, 238.0], [74.7, 238.0], [74.8, 238.0], [74.9, 238.0], [75.0, 238.0], [75.1, 238.0], [75.2, 241.0], [75.3, 241.0], [75.4, 241.0], [75.5, 241.0], [75.6, 241.0], [75.7, 241.0], [75.8, 241.0], [75.9, 248.0], [76.0, 248.0], [76.1, 248.0], [76.2, 248.0], [76.3, 248.0], [76.4, 248.0], [76.5, 248.0], [76.6, 258.0], [76.7, 258.0], [76.8, 258.0], [76.9, 258.0], [77.0, 258.0], [77.1, 258.0], [77.2, 258.0], [77.3, 259.0], [77.4, 259.0], [77.5, 259.0], [77.6, 259.0], [77.7, 259.0], [77.8, 259.0], [77.9, 259.0], [78.0, 260.0], [78.1, 260.0], [78.2, 260.0], [78.3, 260.0], [78.4, 260.0], [78.5, 260.0], [78.6, 260.0], [78.7, 277.0], [78.8, 277.0], [78.9, 277.0], [79.0, 277.0], [79.1, 277.0], [79.2, 277.0], [79.3, 277.0], [79.4, 302.0], [79.5, 302.0], [79.6, 302.0], [79.7, 302.0], [79.8, 302.0], [79.9, 302.0], [80.0, 302.0], [80.1, 319.0], [80.2, 319.0], [80.3, 319.0], [80.4, 319.0], [80.5, 319.0], [80.6, 319.0], [80.7, 339.0], [80.8, 339.0], [80.9, 339.0], [81.0, 339.0], [81.1, 339.0], [81.2, 339.0], [81.3, 339.0], [81.4, 368.0], [81.5, 368.0], [81.6, 368.0], [81.7, 368.0], [81.8, 368.0], [81.9, 368.0], [82.0, 368.0], [82.1, 408.0], [82.2, 408.0], [82.3, 408.0], [82.4, 408.0], [82.5, 408.0], [82.6, 408.0], [82.7, 408.0], [82.8, 442.0], [82.9, 442.0], [83.0, 442.0], [83.1, 442.0], [83.2, 442.0], [83.3, 442.0], [83.4, 442.0], [83.5, 484.0], [83.6, 484.0], [83.7, 484.0], [83.8, 484.0], [83.9, 484.0], [84.0, 484.0], [84.1, 484.0], [84.2, 511.0], [84.3, 511.0], [84.4, 511.0], [84.5, 511.0], [84.6, 511.0], [84.7, 511.0], [84.8, 511.0], [84.9, 514.0], [85.0, 514.0], [85.1, 514.0], [85.2, 514.0], [85.3, 514.0], [85.4, 514.0], [85.5, 514.0], [85.6, 550.0], [85.7, 550.0], [85.8, 550.0], [85.9, 550.0], [86.0, 550.0], [86.1, 550.0], [86.2, 550.0], [86.3, 572.0], [86.4, 572.0], [86.5, 572.0], [86.6, 572.0], [86.7, 572.0], [86.8, 572.0], [86.9, 583.0], [87.0, 583.0], [87.1, 583.0], [87.2, 583.0], [87.3, 583.0], [87.4, 583.0], [87.5, 583.0], [87.6, 702.0], [87.7, 702.0], [87.8, 702.0], [87.9, 702.0], [88.0, 702.0], [88.1, 702.0], [88.2, 702.0], [88.3, 736.0], [88.4, 736.0], [88.5, 736.0], [88.6, 736.0], [88.7, 736.0], [88.8, 736.0], [88.9, 736.0], [89.0, 806.0], [89.1, 806.0], [89.2, 806.0], [89.3, 806.0], [89.4, 806.0], [89.5, 806.0], [89.6, 806.0], [89.7, 811.0], [89.8, 811.0], [89.9, 811.0], [90.0, 811.0], [90.1, 811.0], [90.2, 811.0], [90.3, 811.0], [90.4, 863.0], [90.5, 863.0], [90.6, 863.0], [90.7, 863.0], [90.8, 863.0], [90.9, 863.0], [91.0, 863.0], [91.1, 869.0], [91.2, 869.0], [91.3, 869.0], [91.4, 869.0], [91.5, 869.0], [91.6, 869.0], [91.7, 869.0], [91.8, 875.0], [91.9, 875.0], [92.0, 875.0], [92.1, 875.0], [92.2, 875.0], [92.3, 875.0], [92.4, 875.0], [92.5, 901.0], [92.6, 901.0], [92.7, 901.0], [92.8, 901.0], [92.9, 901.0], [93.0, 901.0], [93.1, 901.0], [93.2, 918.0], [93.3, 918.0], [93.4, 918.0], [93.5, 918.0], [93.6, 918.0], [93.7, 918.0], [93.8, 940.0], [93.9, 940.0], [94.0, 940.0], [94.1, 940.0], [94.2, 940.0], [94.3, 940.0], [94.4, 940.0], [94.5, 1001.0], [94.6, 1001.0], [94.7, 1001.0], [94.8, 1001.0], [94.9, 1001.0], [95.0, 1001.0], [95.1, 1001.0], [95.2, 1028.0], [95.3, 1028.0], [95.4, 1028.0], [95.5, 1028.0], [95.6, 1028.0], [95.7, 1028.0], [95.8, 1028.0], [95.9, 1129.0], [96.0, 1129.0], [96.1, 1129.0], [96.2, 1129.0], [96.3, 1129.0], [96.4, 1129.0], [96.5, 1129.0], [96.6, 1203.0], [96.7, 1203.0], [96.8, 1203.0], [96.9, 1203.0], [97.0, 1203.0], [97.1, 1203.0], [97.2, 1203.0], [97.3, 1262.0], [97.4, 1262.0], [97.5, 1262.0], [97.6, 1262.0], [97.7, 1262.0], [97.8, 1262.0], [97.9, 1262.0], [98.0, 1445.0], [98.1, 1445.0], [98.2, 1445.0], [98.3, 1445.0], [98.4, 1445.0], [98.5, 1445.0], [98.6, 1445.0], [98.7, 1484.0], [98.8, 1484.0], [98.9, 1484.0], [99.0, 1484.0], [99.1, 1484.0], [99.2, 1484.0], [99.3, 1484.0], [99.4, 2030.0], [99.5, 2030.0], [99.6, 2030.0], [99.7, 2030.0], [99.8, 2030.0], [99.9, 2030.0], [100.0, 2030.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 6.0], [1.8, 6.0], [1.9, 7.0], [2.0, 8.0], [2.1, 9.0], [2.2, 13.0], [2.3, 19.0], [2.4, 25.0], [2.5, 34.0], [2.6, 37.0], [2.7, 37.0], [2.8, 38.0], [2.9, 39.0], [3.0, 40.0], [3.1, 41.0], [3.2, 41.0], [3.3, 42.0], [3.4, 42.0], [3.5, 43.0], [3.6, 44.0], [3.7, 44.0], [3.8, 44.0], [3.9, 45.0], [4.0, 45.0], [4.1, 46.0], [4.2, 46.0], [4.3, 46.0], [4.4, 46.0], [4.5, 47.0], [4.6, 47.0], [4.7, 48.0], [4.8, 48.0], [4.9, 49.0], [5.0, 49.0], [5.1, 49.0], [5.2, 50.0], [5.3, 50.0], [5.4, 51.0], [5.5, 51.0], [5.6, 51.0], [5.7, 52.0], [5.8, 52.0], [5.9, 53.0], [6.0, 53.0], [6.1, 54.0], [6.2, 54.0], [6.3, 55.0], [6.4, 55.0], [6.5, 56.0], [6.6, 56.0], [6.7, 57.0], [6.8, 57.0], [6.9, 58.0], [7.0, 59.0], [7.1, 59.0], [7.2, 60.0], [7.3, 60.0], [7.4, 61.0], [7.5, 62.0], [7.6, 63.0], [7.7, 64.0], [7.8, 65.0], [7.9, 65.0], [8.0, 67.0], [8.1, 68.0], [8.2, 69.0], [8.3, 70.0], [8.4, 72.0], [8.5, 74.0], [8.6, 75.0], [8.7, 77.0], [8.8, 79.0], [8.9, 81.0], [9.0, 83.0], [9.1, 86.0], [9.2, 89.0], [9.3, 92.0], [9.4, 95.0], [9.5, 98.0], [9.6, 102.0], [9.7, 106.0], [9.8, 111.0], [9.9, 117.0], [10.0, 123.0], [10.1, 131.0], [10.2, 138.0], [10.3, 147.0], [10.4, 156.0], [10.5, 174.0], [10.6, 183.0], [10.7, 198.0], [10.8, 208.0], [10.9, 222.0], [11.0, 243.0], [11.1, 261.0], [11.2, 284.0], [11.3, 296.0], [11.4, 306.0], [11.5, 324.0], [11.6, 338.0], [11.7, 347.0], [11.8, 361.0], [11.9, 377.0], [12.0, 386.0], [12.1, 394.0], [12.2, 405.0], [12.3, 416.0], [12.4, 424.0], [12.5, 435.0], [12.6, 444.0], [12.7, 452.0], [12.8, 457.0], [12.9, 465.0], [13.0, 474.0], [13.1, 483.0], [13.2, 488.0], [13.3, 498.0], [13.4, 508.0], [13.5, 516.0], [13.6, 523.0], [13.7, 532.0], [13.8, 543.0], [13.9, 552.0], [14.0, 559.0], [14.1, 566.0], [14.2, 572.0], [14.3, 579.0], [14.4, 586.0], [14.5, 592.0], [14.6, 601.0], [14.7, 605.0], [14.8, 611.0], [14.9, 618.0], [15.0, 625.0], [15.1, 634.0], [15.2, 640.0], [15.3, 646.0], [15.4, 651.0], [15.5, 657.0], [15.6, 663.0], [15.7, 666.0], [15.8, 673.0], [15.9, 681.0], [16.0, 690.0], [16.1, 694.0], [16.2, 700.0], [16.3, 709.0], [16.4, 714.0], [16.5, 719.0], [16.6, 726.0], [16.7, 732.0], [16.8, 737.0], [16.9, 740.0], [17.0, 745.0], [17.1, 749.0], [17.2, 755.0], [17.3, 760.0], [17.4, 767.0], [17.5, 771.0], [17.6, 778.0], [17.7, 783.0], [17.8, 790.0], [17.9, 800.0], [18.0, 808.0], [18.1, 816.0], [18.2, 821.0], [18.3, 825.0], [18.4, 830.0], [18.5, 835.0], [18.6, 839.0], [18.7, 844.0], [18.8, 849.0], [18.9, 853.0], [19.0, 858.0], [19.1, 861.0], [19.2, 867.0], [19.3, 873.0], [19.4, 876.0], [19.5, 879.0], [19.6, 884.0], [19.7, 888.0], [19.8, 897.0], [19.9, 901.0], [20.0, 906.0], [20.1, 909.0], [20.2, 915.0], [20.3, 922.0], [20.4, 926.0], [20.5, 930.0], [20.6, 935.0], [20.7, 939.0], [20.8, 944.0], [20.9, 949.0], [21.0, 952.0], [21.1, 955.0], [21.2, 959.0], [21.3, 963.0], [21.4, 967.0], [21.5, 971.0], [21.6, 975.0], [21.7, 979.0], [21.8, 985.0], [21.9, 991.0], [22.0, 996.0], [22.1, 999.0], [22.2, 1003.0], [22.3, 1006.0], [22.4, 1012.0], [22.5, 1015.0], [22.6, 1020.0], [22.7, 1023.0], [22.8, 1027.0], [22.9, 1031.0], [23.0, 1034.0], [23.1, 1038.0], [23.2, 1042.0], [23.3, 1045.0], [23.4, 1049.0], [23.5, 1051.0], [23.6, 1053.0], [23.7, 1056.0], [23.8, 1059.0], [23.9, 1062.0], [24.0, 1065.0], [24.1, 1068.0], [24.2, 1071.0], [24.3, 1074.0], [24.4, 1079.0], [24.5, 1081.0], [24.6, 1086.0], [24.7, 1089.0], [24.8, 1095.0], [24.9, 1097.0], [25.0, 1100.0], [25.1, 1105.0], [25.2, 1111.0], [25.3, 1113.0], [25.4, 1116.0], [25.5, 1119.0], [25.6, 1122.0], [25.7, 1127.0], [25.8, 1131.0], [25.9, 1135.0], [26.0, 1140.0], [26.1, 1143.0], [26.2, 1148.0], [26.3, 1151.0], [26.4, 1155.0], [26.5, 1157.0], [26.6, 1160.0], [26.7, 1164.0], [26.8, 1169.0], [26.9, 1172.0], [27.0, 1179.0], [27.1, 1184.0], [27.2, 1189.0], [27.3, 1192.0], [27.4, 1195.0], [27.5, 1201.0], [27.6, 1204.0], [27.7, 1207.0], [27.8, 1211.0], [27.9, 1215.0], [28.0, 1218.0], [28.1, 1219.0], [28.2, 1224.0], [28.3, 1227.0], [28.4, 1231.0], [28.5, 1235.0], [28.6, 1239.0], [28.7, 1244.0], [28.8, 1247.0], [28.9, 1249.0], [29.0, 1252.0], [29.1, 1255.0], [29.2, 1257.0], [29.3, 1260.0], [29.4, 1263.0], [29.5, 1265.0], [29.6, 1268.0], [29.7, 1272.0], [29.8, 1277.0], [29.9, 1280.0], [30.0, 1284.0], [30.1, 1287.0], [30.2, 1290.0], [30.3, 1293.0], [30.4, 1296.0], [30.5, 1300.0], [30.6, 1304.0], [30.7, 1308.0], [30.8, 1312.0], [30.9, 1315.0], [31.0, 1319.0], [31.1, 1323.0], [31.2, 1326.0], [31.3, 1327.0], [31.4, 1331.0], [31.5, 1335.0], [31.6, 1339.0], [31.7, 1340.0], [31.8, 1343.0], [31.9, 1345.0], [32.0, 1352.0], [32.1, 1355.0], [32.2, 1357.0], [32.3, 1359.0], [32.4, 1362.0], [32.5, 1364.0], [32.6, 1367.0], [32.7, 1370.0], [32.8, 1372.0], [32.9, 1375.0], [33.0, 1378.0], [33.1, 1380.0], [33.2, 1383.0], [33.3, 1386.0], [33.4, 1390.0], [33.5, 1394.0], [33.6, 1397.0], [33.7, 1401.0], [33.8, 1403.0], [33.9, 1406.0], [34.0, 1409.0], [34.1, 1411.0], [34.2, 1414.0], [34.3, 1418.0], [34.4, 1420.0], [34.5, 1423.0], [34.6, 1425.0], [34.7, 1428.0], [34.8, 1432.0], [34.9, 1434.0], [35.0, 1438.0], [35.1, 1442.0], [35.2, 1446.0], [35.3, 1449.0], [35.4, 1452.0], [35.5, 1455.0], [35.6, 1457.0], [35.7, 1460.0], [35.8, 1463.0], [35.9, 1466.0], [36.0, 1468.0], [36.1, 1472.0], [36.2, 1475.0], [36.3, 1478.0], [36.4, 1481.0], [36.5, 1485.0], [36.6, 1487.0], [36.7, 1489.0], [36.8, 1491.0], [36.9, 1494.0], [37.0, 1496.0], [37.1, 1499.0], [37.2, 1503.0], [37.3, 1506.0], [37.4, 1509.0], [37.5, 1511.0], [37.6, 1514.0], [37.7, 1516.0], [37.8, 1519.0], [37.9, 1521.0], [38.0, 1524.0], [38.1, 1525.0], [38.2, 1528.0], [38.3, 1530.0], [38.4, 1533.0], [38.5, 1535.0], [38.6, 1538.0], [38.7, 1541.0], [38.8, 1542.0], [38.9, 1545.0], [39.0, 1546.0], [39.1, 1548.0], [39.2, 1551.0], [39.3, 1554.0], [39.4, 1556.0], [39.5, 1558.0], [39.6, 1561.0], [39.7, 1562.0], [39.8, 1565.0], [39.9, 1567.0], [40.0, 1570.0], [40.1, 1572.0], [40.2, 1574.0], [40.3, 1576.0], [40.4, 1579.0], [40.5, 1581.0], [40.6, 1584.0], [40.7, 1585.0], [40.8, 1588.0], [40.9, 1590.0], [41.0, 1593.0], [41.1, 1596.0], [41.2, 1598.0], [41.3, 1600.0], [41.4, 1602.0], [41.5, 1604.0], [41.6, 1606.0], [41.7, 1608.0], [41.8, 1610.0], [41.9, 1612.0], [42.0, 1615.0], [42.1, 1617.0], [42.2, 1619.0], [42.3, 1621.0], [42.4, 1623.0], [42.5, 1624.0], [42.6, 1626.0], [42.7, 1627.0], [42.8, 1630.0], [42.9, 1633.0], [43.0, 1634.0], [43.1, 1637.0], [43.2, 1639.0], [43.3, 1640.0], [43.4, 1643.0], [43.5, 1645.0], [43.6, 1647.0], [43.7, 1649.0], [43.8, 1651.0], [43.9, 1652.0], [44.0, 1655.0], [44.1, 1657.0], [44.2, 1659.0], [44.3, 1662.0], [44.4, 1663.0], [44.5, 1665.0], [44.6, 1667.0], [44.7, 1669.0], [44.8, 1670.0], [44.9, 1672.0], [45.0, 1674.0], [45.1, 1676.0], [45.2, 1678.0], [45.3, 1680.0], [45.4, 1682.0], [45.5, 1684.0], [45.6, 1685.0], [45.7, 1687.0], [45.8, 1689.0], [45.9, 1692.0], [46.0, 1694.0], [46.1, 1696.0], [46.2, 1698.0], [46.3, 1700.0], [46.4, 1703.0], [46.5, 1706.0], [46.6, 1708.0], [46.7, 1710.0], [46.8, 1712.0], [46.9, 1714.0], [47.0, 1715.0], [47.1, 1717.0], [47.2, 1719.0], [47.3, 1720.0], [47.4, 1721.0], [47.5, 1724.0], [47.6, 1727.0], [47.7, 1729.0], [47.8, 1731.0], [47.9, 1733.0], [48.0, 1735.0], [48.1, 1736.0], [48.2, 1737.0], [48.3, 1739.0], [48.4, 1741.0], [48.5, 1743.0], [48.6, 1744.0], [48.7, 1746.0], [48.8, 1749.0], [48.9, 1751.0], [49.0, 1754.0], [49.1, 1756.0], [49.2, 1757.0], [49.3, 1760.0], [49.4, 1762.0], [49.5, 1764.0], [49.6, 1766.0], [49.7, 1768.0], [49.8, 1770.0], [49.9, 1772.0], [50.0, 1774.0], [50.1, 1775.0], [50.2, 1777.0], [50.3, 1779.0], [50.4, 1781.0], [50.5, 1782.0], [50.6, 1784.0], [50.7, 1785.0], [50.8, 1786.0], [50.9, 1788.0], [51.0, 1790.0], [51.1, 1792.0], [51.2, 1793.0], [51.3, 1795.0], [51.4, 1797.0], [51.5, 1798.0], [51.6, 1801.0], [51.7, 1802.0], [51.8, 1804.0], [51.9, 1805.0], [52.0, 1807.0], [52.1, 1811.0], [52.2, 1812.0], [52.3, 1813.0], [52.4, 1814.0], [52.5, 1816.0], [52.6, 1818.0], [52.7, 1819.0], [52.8, 1820.0], [52.9, 1822.0], [53.0, 1824.0], [53.1, 1825.0], [53.2, 1826.0], [53.3, 1828.0], [53.4, 1831.0], [53.5, 1832.0], [53.6, 1833.0], [53.7, 1835.0], [53.8, 1836.0], [53.9, 1837.0], [54.0, 1839.0], [54.1, 1841.0], [54.2, 1842.0], [54.3, 1843.0], [54.4, 1845.0], [54.5, 1846.0], [54.6, 1848.0], [54.7, 1850.0], [54.8, 1852.0], [54.9, 1853.0], [55.0, 1855.0], [55.1, 1856.0], [55.2, 1858.0], [55.3, 1860.0], [55.4, 1862.0], [55.5, 1863.0], [55.6, 1866.0], [55.7, 1867.0], [55.8, 1869.0], [55.9, 1871.0], [56.0, 1874.0], [56.1, 1876.0], [56.2, 1877.0], [56.3, 1879.0], [56.4, 1881.0], [56.5, 1882.0], [56.6, 1884.0], [56.7, 1886.0], [56.8, 1887.0], [56.9, 1889.0], [57.0, 1890.0], [57.1, 1892.0], [57.2, 1894.0], [57.3, 1895.0], [57.4, 1897.0], [57.5, 1899.0], [57.6, 1901.0], [57.7, 1903.0], [57.8, 1906.0], [57.9, 1908.0], [58.0, 1909.0], [58.1, 1910.0], [58.2, 1912.0], [58.3, 1914.0], [58.4, 1915.0], [58.5, 1916.0], [58.6, 1917.0], [58.7, 1919.0], [58.8, 1921.0], [58.9, 1923.0], [59.0, 1924.0], [59.1, 1926.0], [59.2, 1927.0], [59.3, 1929.0], [59.4, 1930.0], [59.5, 1932.0], [59.6, 1934.0], [59.7, 1936.0], [59.8, 1937.0], [59.9, 1939.0], [60.0, 1940.0], [60.1, 1942.0], [60.2, 1943.0], [60.3, 1944.0], [60.4, 1945.0], [60.5, 1947.0], [60.6, 1948.0], [60.7, 1950.0], [60.8, 1952.0], [60.9, 1954.0], [61.0, 1955.0], [61.1, 1957.0], [61.2, 1958.0], [61.3, 1960.0], [61.4, 1962.0], [61.5, 1964.0], [61.6, 1965.0], [61.7, 1966.0], [61.8, 1968.0], [61.9, 1969.0], [62.0, 1971.0], [62.1, 1973.0], [62.2, 1975.0], [62.3, 1976.0], [62.4, 1978.0], [62.5, 1979.0], [62.6, 1980.0], [62.7, 1982.0], [62.8, 1984.0], [62.9, 1985.0], [63.0, 1987.0], [63.1, 1989.0], [63.2, 1991.0], [63.3, 1992.0], [63.4, 1993.0], [63.5, 1995.0], [63.6, 1997.0], [63.7, 1998.0], [63.8, 1999.0], [63.9, 2000.0], [64.0, 2002.0], [64.1, 2003.0], [64.2, 2004.0], [64.3, 2005.0], [64.4, 2006.0], [64.5, 2007.0], [64.6, 2010.0], [64.7, 2011.0], [64.8, 2013.0], [64.9, 2015.0], [65.0, 2016.0], [65.1, 2018.0], [65.2, 2020.0], [65.3, 2022.0], [65.4, 2024.0], [65.5, 2025.0], [65.6, 2028.0], [65.7, 2030.0], [65.8, 2031.0], [65.9, 2033.0], [66.0, 2035.0], [66.1, 2036.0], [66.2, 2037.0], [66.3, 2039.0], [66.4, 2040.0], [66.5, 2042.0], [66.6, 2045.0], [66.7, 2047.0], [66.8, 2048.0], [66.9, 2050.0], [67.0, 2052.0], [67.1, 2053.0], [67.2, 2054.0], [67.3, 2056.0], [67.4, 2058.0], [67.5, 2060.0], [67.6, 2061.0], [67.7, 2062.0], [67.8, 2064.0], [67.9, 2066.0], [68.0, 2067.0], [68.1, 2068.0], [68.2, 2069.0], [68.3, 2071.0], [68.4, 2073.0], [68.5, 2075.0], [68.6, 2077.0], [68.7, 2079.0], [68.8, 2082.0], [68.9, 2083.0], [69.0, 2086.0], [69.1, 2087.0], [69.2, 2089.0], [69.3, 2090.0], [69.4, 2092.0], [69.5, 2094.0], [69.6, 2096.0], [69.7, 2097.0], [69.8, 2098.0], [69.9, 2100.0], [70.0, 2102.0], [70.1, 2103.0], [70.2, 2106.0], [70.3, 2108.0], [70.4, 2110.0], [70.5, 2112.0], [70.6, 2114.0], [70.7, 2115.0], [70.8, 2117.0], [70.9, 2118.0], [71.0, 2120.0], [71.1, 2121.0], [71.2, 2123.0], [71.3, 2124.0], [71.4, 2126.0], [71.5, 2128.0], [71.6, 2130.0], [71.7, 2131.0], [71.8, 2133.0], [71.9, 2134.0], [72.0, 2136.0], [72.1, 2138.0], [72.2, 2140.0], [72.3, 2142.0], [72.4, 2143.0], [72.5, 2145.0], [72.6, 2147.0], [72.7, 2149.0], [72.8, 2150.0], [72.9, 2151.0], [73.0, 2153.0], [73.1, 2155.0], [73.2, 2158.0], [73.3, 2160.0], [73.4, 2162.0], [73.5, 2164.0], [73.6, 2166.0], [73.7, 2167.0], [73.8, 2168.0], [73.9, 2170.0], [74.0, 2172.0], [74.1, 2174.0], [74.2, 2176.0], [74.3, 2179.0], [74.4, 2181.0], [74.5, 2182.0], [74.6, 2183.0], [74.7, 2186.0], [74.8, 2187.0], [74.9, 2188.0], [75.0, 2190.0], [75.1, 2191.0], [75.2, 2193.0], [75.3, 2195.0], [75.4, 2198.0], [75.5, 2199.0], [75.6, 2202.0], [75.7, 2204.0], [75.8, 2207.0], [75.9, 2209.0], [76.0, 2212.0], [76.1, 2214.0], [76.2, 2216.0], [76.3, 2218.0], [76.4, 2220.0], [76.5, 2223.0], [76.6, 2225.0], [76.7, 2227.0], [76.8, 2230.0], [76.9, 2230.0], [77.0, 2232.0], [77.1, 2235.0], [77.2, 2238.0], [77.3, 2240.0], [77.4, 2243.0], [77.5, 2246.0], [77.6, 2248.0], [77.7, 2252.0], [77.8, 2254.0], [77.9, 2256.0], [78.0, 2258.0], [78.1, 2260.0], [78.2, 2263.0], [78.3, 2266.0], [78.4, 2267.0], [78.5, 2270.0], [78.6, 2273.0], [78.7, 2275.0], [78.8, 2278.0], [78.9, 2280.0], [79.0, 2284.0], [79.1, 2286.0], [79.2, 2288.0], [79.3, 2290.0], [79.4, 2292.0], [79.5, 2294.0], [79.6, 2297.0], [79.7, 2298.0], [79.8, 2301.0], [79.9, 2304.0], [80.0, 2307.0], [80.1, 2309.0], [80.2, 2311.0], [80.3, 2313.0], [80.4, 2315.0], [80.5, 2318.0], [80.6, 2321.0], [80.7, 2323.0], [80.8, 2326.0], [80.9, 2328.0], [81.0, 2330.0], [81.1, 2333.0], [81.2, 2335.0], [81.3, 2337.0], [81.4, 2340.0], [81.5, 2342.0], [81.6, 2344.0], [81.7, 2348.0], [81.8, 2351.0], [81.9, 2354.0], [82.0, 2356.0], [82.1, 2359.0], [82.2, 2362.0], [82.3, 2365.0], [82.4, 2366.0], [82.5, 2368.0], [82.6, 2370.0], [82.7, 2371.0], [82.8, 2374.0], [82.9, 2376.0], [83.0, 2378.0], [83.1, 2380.0], [83.2, 2383.0], [83.3, 2387.0], [83.4, 2390.0], [83.5, 2393.0], [83.6, 2396.0], [83.7, 2398.0], [83.8, 2401.0], [83.9, 2404.0], [84.0, 2407.0], [84.1, 2409.0], [84.2, 2411.0], [84.3, 2413.0], [84.4, 2415.0], [84.5, 2417.0], [84.6, 2420.0], [84.7, 2422.0], [84.8, 2425.0], [84.9, 2429.0], [85.0, 2431.0], [85.1, 2434.0], [85.2, 2437.0], [85.3, 2440.0], [85.4, 2443.0], [85.5, 2447.0], [85.6, 2450.0], [85.7, 2452.0], [85.8, 2455.0], [85.9, 2458.0], [86.0, 2461.0], [86.1, 2464.0], [86.2, 2466.0], [86.3, 2468.0], [86.4, 2471.0], [86.5, 2474.0], [86.6, 2477.0], [86.7, 2479.0], [86.8, 2482.0], [86.9, 2486.0], [87.0, 2489.0], [87.1, 2492.0], [87.2, 2497.0], [87.3, 2501.0], [87.4, 2505.0], [87.5, 2508.0], [87.6, 2512.0], [87.7, 2514.0], [87.8, 2518.0], [87.9, 2523.0], [88.0, 2526.0], [88.1, 2529.0], [88.2, 2533.0], [88.3, 2538.0], [88.4, 2541.0], [88.5, 2545.0], [88.6, 2550.0], [88.7, 2554.0], [88.8, 2558.0], [88.9, 2560.0], [89.0, 2565.0], [89.1, 2568.0], [89.2, 2573.0], [89.3, 2576.0], [89.4, 2581.0], [89.5, 2583.0], [89.6, 2587.0], [89.7, 2591.0], [89.8, 2596.0], [89.9, 2598.0], [90.0, 2602.0], [90.1, 2606.0], [90.2, 2612.0], [90.3, 2617.0], [90.4, 2621.0], [90.5, 2626.0], [90.6, 2632.0], [90.7, 2637.0], [90.8, 2642.0], [90.9, 2647.0], [91.0, 2653.0], [91.1, 2656.0], [91.2, 2660.0], [91.3, 2665.0], [91.4, 2671.0], [91.5, 2678.0], [91.6, 2681.0], [91.7, 2687.0], [91.8, 2693.0], [91.9, 2697.0], [92.0, 2701.0], [92.1, 2706.0], [92.2, 2711.0], [92.3, 2716.0], [92.4, 2723.0], [92.5, 2727.0], [92.6, 2732.0], [92.7, 2736.0], [92.8, 2739.0], [92.9, 2744.0], [93.0, 2751.0], [93.1, 2759.0], [93.2, 2766.0], [93.3, 2774.0], [93.4, 2780.0], [93.5, 2785.0], [93.6, 2792.0], [93.7, 2796.0], [93.8, 2804.0], [93.9, 2809.0], [94.0, 2814.0], [94.1, 2820.0], [94.2, 2825.0], [94.3, 2833.0], [94.4, 2842.0], [94.5, 2845.0], [94.6, 2854.0], [94.7, 2865.0], [94.8, 2871.0], [94.9, 2880.0], [95.0, 2887.0], [95.1, 2895.0], [95.2, 2904.0], [95.3, 2911.0], [95.4, 2916.0], [95.5, 2923.0], [95.6, 2933.0], [95.7, 2944.0], [95.8, 2953.0], [95.9, 2962.0], [96.0, 2972.0], [96.1, 2985.0], [96.2, 2993.0], [96.3, 3001.0], [96.4, 3008.0], [96.5, 3019.0], [96.6, 3029.0], [96.7, 3043.0], [96.8, 3052.0], [96.9, 3070.0], [97.0, 3083.0], [97.1, 3098.0], [97.2, 3113.0], [97.3, 3132.0], [97.4, 3144.0], [97.5, 3155.0], [97.6, 3175.0], [97.7, 3191.0], [97.8, 3198.0], [97.9, 3216.0], [98.0, 3234.0], [98.1, 3259.0], [98.2, 3287.0], [98.3, 3314.0], [98.4, 3342.0], [98.5, 3365.0], [98.6, 3402.0], [98.7, 3434.0], [98.8, 3465.0], [98.9, 3493.0], [99.0, 3515.0], [99.1, 3546.0], [99.2, 3570.0], [99.3, 3662.0], [99.4, 3704.0], [99.5, 3772.0], [99.6, 3841.0], [99.7, 3939.0], [99.8, 4071.0], [99.9, 4313.0], [100.0, 5290.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1777.0, "series": [{"data": [[0.0, 1777.0], [600.0, 220.0], [700.0, 223.0], [800.0, 274.0], [900.0, 324.0], [1000.0, 368.0], [1100.0, 364.0], [1200.0, 411.0], [1300.0, 449.0], [1400.0, 507.0], [1500.0, 556.0], [100.0, 165.0], [1600.0, 637.0], [1700.0, 772.0], [1800.0, 830.0], [1900.0, 877.0], [2000.0, 826.0], [2100.0, 796.0], [2300.0, 581.0], [2200.0, 665.0], [2400.0, 474.0], [2500.0, 406.0], [2600.0, 278.0], [2700.0, 270.0], [2800.0, 228.0], [2900.0, 154.0], [3000.0, 103.0], [3100.0, 90.0], [200.0, 86.0], [3200.0, 86.0], [3300.0, 52.0], [3400.0, 43.0], [3500.0, 41.0], [3700.0, 27.0], [3600.0, 24.0], [3800.0, 9.0], [3900.0, 7.0], [4000.0, 6.0], [4100.0, 7.0], [4300.0, 2.0], [4400.0, 3.0], [4500.0, 1.0], [300.0, 119.0], [4700.0, 1.0], [5100.0, 1.0], [5000.0, 1.0], [400.0, 164.0], [500.0, 195.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[700.0, 2.0], [800.0, 5.0], [200.0, 25.0], [900.0, 3.0], [1000.0, 2.0], [1100.0, 1.0], [1200.0, 2.0], [300.0, 4.0], [1400.0, 2.0], [100.0, 90.0], [400.0, 3.0], [2000.0, 1.0], [500.0, 5.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1385.0], [600.0, 234.0], [700.0, 247.0], [800.0, 288.0], [900.0, 322.0], [1000.0, 414.0], [1100.0, 365.0], [1200.0, 435.0], [1300.0, 462.0], [1400.0, 499.0], [1500.0, 606.0], [1600.0, 721.0], [1700.0, 767.0], [1800.0, 866.0], [1900.0, 917.0], [2000.0, 874.0], [2100.0, 817.0], [2200.0, 614.0], [2300.0, 579.0], [2400.0, 512.0], [2500.0, 387.0], [2600.0, 291.0], [2800.0, 199.0], [2700.0, 265.0], [2900.0, 166.0], [3000.0, 120.0], [3100.0, 100.0], [3200.0, 66.0], [3300.0, 48.0], [3400.0, 53.0], [3500.0, 43.0], [3600.0, 21.0], [3700.0, 22.0], [3800.0, 14.0], [3900.0, 19.0], [4000.0, 5.0], [4100.0, 10.0], [4300.0, 6.0], [4200.0, 2.0], [4400.0, 2.0], [4500.0, 2.0], [4600.0, 1.0], [4700.0, 1.0], [5100.0, 1.0], [5200.0, 3.0], [100.0, 169.0], [200.0, 90.0], [300.0, 117.0], [400.0, 170.0], [500.0, 183.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 602.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 17772.0, "series": [{"data": [[0.0, 4031.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 6740.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 17772.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 602.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 27.627705627705634, "minX": 1.5854304E12, "maxY": 145.0, "series": [{"data": [[1.58543046E12, 110.21677704194249], [1.58543076E12, 145.0], [1.58543106E12, 144.90548122572307], [1.5854304E12, 27.627705627705634], [1.58543118E12, 44.30172413793103], [1.58543052E12, 145.0], [1.58543082E12, 145.0], [1.58543112E12, 113.18763604701762], [1.58543094E12, 145.0], [1.58543058E12, 145.0], [1.58543088E12, 145.0], [1.5854307E12, 145.0], [1.585431E12, 145.0], [1.58543064E12, 145.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543118E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 41.5, "minX": 2.0, "maxY": 2462.9591836734694, "series": [{"data": [[2.0, 48.0], [3.0, 48.0], [5.0, 46.666666666666664], [9.0, 51.0], [11.0, 62.5], [12.0, 60.666666666666664], [13.0, 45.0], [14.0, 54.666666666666664], [15.0, 48.5], [16.0, 58.0], [17.0, 49.0], [18.0, 63.0], [19.0, 60.0], [20.0, 60.5], [22.0, 57.57142857142857], [23.0, 56.42857142857142], [24.0, 57.0], [25.0, 53.5], [26.0, 75.16666666666666], [27.0, 42.0], [28.0, 77.5], [29.0, 139.4], [30.0, 124.0], [31.0, 84.2], [32.0, 54.42857142857142], [33.0, 49.666666666666664], [34.0, 57.71428571428571], [35.0, 57.7], [36.0, 53.0], [37.0, 45.666666666666664], [38.0, 46.30769230769231], [39.0, 47.2], [40.0, 64.83333333333333], [41.0, 62.099999999999994], [42.0, 52.0], [43.0, 58.0], [44.0, 65.83333333333333], [45.0, 49.0], [46.0, 51.285714285714285], [47.0, 54.125], [48.0, 66.84615384615384], [49.0, 56.24999999999999], [50.0, 47.0], [51.0, 49.10000000000001], [52.0, 50.0], [53.0, 49.333333333333336], [54.0, 69.88888888888889], [55.0, 61.5], [56.0, 61.5], [57.0, 91.27272727272728], [58.0, 58.66666666666666], [59.0, 67.16666666666667], [60.0, 56.846153846153854], [61.0, 46.666666666666664], [62.0, 53.800000000000004], [63.0, 49.368421052631575], [64.0, 189.8888888888889], [65.0, 66.66666666666667], [66.0, 71.76923076923076], [67.0, 68.3], [68.0, 84.0], [69.0, 45.333333333333336], [70.0, 52.68000000000001], [71.0, 73.875], [72.0, 61.55555555555556], [73.0, 57.878787878787875], [74.0, 61.375], [75.0, 72.81249999999999], [76.0, 53.023809523809526], [77.0, 54.8], [78.0, 84.22222222222223], [79.0, 55.900000000000006], [80.0, 56.45000000000001], [81.0, 107.53846153846155], [82.0, 394.66666666666663], [83.0, 182.00000000000003], [84.0, 55.03846153846154], [85.0, 59.111111111111114], [86.0, 52.24999999999999], [87.0, 168.12727272727273], [88.0, 439.91666666666674], [89.0, 287.5], [90.0, 115.0], [91.0, 575.6571428571427], [92.0, 586.7272727272727], [93.0, 145.25], [94.0, 305.7142857142857], [95.0, 340.3333333333333], [96.0, 469.20000000000005], [97.0, 573.9411764705883], [98.0, 686.0384615384615], [99.0, 767.3333333333333], [100.0, 899.0952380952381], [101.0, 994.2], [102.0, 875.3541666666667], [103.0, 801.8461538461538], [104.0, 772.6382978723403], [105.0, 471.04545454545456], [106.0, 545.7058823529412], [107.0, 923.7142857142858], [108.0, 702.5999999999999], [109.0, 836.967741935484], [110.0, 993.8823529411766], [111.0, 1198.1666666666663], [112.0, 1043.6923076923076], [113.0, 1212.0], [114.0, 1110.1904761904761], [115.0, 937.8571428571429], [116.0, 799.25], [117.0, 962.529411764706], [118.0, 1285.25], [119.0, 940.416666666667], [120.0, 1423.0833333333333], [121.0, 998.7777777777777], [122.0, 1608.2857142857142], [123.0, 1537.695652173913], [124.0, 1357.6285714285714], [125.0, 1507.5714285714284], [126.0, 1787.4666666666667], [127.0, 1910.6190476190475], [128.0, 1980.9375], [129.0, 1535.4444444444443], [130.0, 2352.1666666666665], [131.0, 2136.0000000000005], [132.0, 2410.0], [133.0, 2462.9591836734694], [134.0, 1941.857142857143], [135.0, 2283.9999999999995], [136.0, 2023.0], [137.0, 2235.888888888889], [138.0, 2107.3529411764707], [139.0, 2038.608695652174], [140.0, 1664.8148148148152], [141.0, 1620.1910112359553], [142.0, 1679.541666666666], [143.0, 1543.8245614035088], [144.0, 2044.629370629371], [145.0, 1717.0646847435485]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[137.96800000000007, 1591.5941379310373]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[3.0, 863.0], [5.0, 1646.0], [6.0, 585.0], [7.0, 236.0], [8.0, 169.0], [9.0, 184.0], [10.0, 162.0], [11.0, 175.0], [12.0, 187.0], [13.0, 160.0], [14.0, 175.0], [15.0, 162.0], [16.0, 164.0], [17.0, 181.0], [18.0, 169.0], [19.0, 302.0], [20.0, 339.0], [21.0, 173.0], [22.0, 205.0], [23.0, 172.0], [24.0, 187.0], [25.0, 159.0], [26.0, 180.0], [27.0, 198.0], [28.0, 186.0], [29.0, 183.0], [30.0, 168.0], [31.0, 188.0], [32.0, 190.0], [33.0, 170.0], [34.0, 188.0], [35.0, 182.0], [36.0, 165.0], [37.0, 187.0], [38.0, 172.0], [39.0, 187.0], [40.0, 176.0], [41.0, 171.0], [42.0, 192.0], [43.0, 165.0], [44.0, 218.0], [45.0, 177.0], [46.0, 173.0], [47.0, 146.0], [48.0, 177.0], [49.0, 205.0], [50.0, 173.0], [51.0, 188.0], [52.0, 163.0], [53.0, 196.0], [54.0, 190.0], [55.0, 228.0], [56.0, 187.0], [57.0, 188.0], [58.0, 186.0], [59.0, 173.0], [60.0, 161.0], [61.0, 190.0], [62.0, 180.0], [63.0, 163.0], [64.0, 189.0], [65.0, 174.0], [66.0, 180.0], [67.0, 199.0], [68.0, 172.0], [69.0, 161.0], [70.0, 168.0], [71.0, 248.0], [72.0, 208.0], [73.0, 216.0], [74.0, 152.0], [75.0, 162.0], [76.0, 213.0], [77.0, 176.0], [78.0, 193.0], [79.0, 170.0], [80.0, 171.0], [81.0, 172.0], [82.0, 171.0], [83.0, 197.0], [84.0, 206.0], [85.0, 168.0], [86.0, 211.0], [87.0, 174.0], [88.0, 238.0], [89.0, 164.0], [90.0, 173.0], [91.0, 157.0], [92.0, 187.0], [93.0, 203.0], [94.0, 170.0], [95.0, 175.0], [96.0, 277.0], [97.0, 221.0], [98.0, 179.0], [99.0, 194.0], [100.0, 260.0], [101.0, 192.0], [102.0, 176.0], [103.0, 149.0], [104.0, 155.0], [105.0, 319.0], [106.0, 183.0], [107.0, 169.0], [108.0, 163.0], [109.0, 213.0], [110.0, 259.0], [111.0, 170.0], [112.0, 205.0], [113.0, 159.0], [114.0, 177.0], [115.0, 195.0], [116.0, 230.0], [117.0, 241.0], [118.0, 235.0], [121.0, 638.5], [122.0, 572.0], [123.0, 702.0], [124.0, 371.0], [125.0, 157.0], [127.0, 207.0], [128.0, 1129.0], [131.0, 1445.0], [132.0, 1007.0], [133.0, 643.0], [135.0, 963.0], [136.0, 162.0], [137.0, 581.5], [139.0, 514.0], [141.0, 875.0], [142.0, 901.0], [143.0, 771.0], [144.0, 550.0], [145.0, 769.5]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[73.30344827586207, 316.0206896551724]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[5.0, 41.5], [6.0, 72.0], [8.0, 50.666666666666664], [9.0, 51.333333333333336], [10.0, 92.0], [11.0, 462.0], [12.0, 58.75], [13.0, 42.5], [14.0, 55.333333333333336], [15.0, 52.0], [16.0, 50.25], [17.0, 57.333333333333336], [18.0, 55.5], [19.0, 44.5], [20.0, 53.8], [21.0, 49.666666666666664], [22.0, 67.0], [23.0, 55.0], [24.0, 49.666666666666664], [25.0, 54.0], [26.0, 95.0], [27.0, 55.0], [28.0, 102.4], [29.0, 236.25], [30.0, 64.75], [31.0, 75.0], [32.0, 53.4], [33.0, 68.0], [34.0, 63.0], [35.0, 50.54545454545453], [36.0, 53.25000000000001], [37.0, 44.0], [38.0, 49.4], [39.0, 52.42857142857143], [40.0, 49.333333333333336], [41.0, 49.85714285714286], [42.0, 46.25], [43.0, 63.5], [44.0, 76.28571428571429], [45.0, 71.18181818181817], [46.0, 49.66666666666667], [47.0, 58.22222222222222], [48.0, 109.77777777777777], [49.0, 52.800000000000004], [50.0, 57.699999999999996], [51.0, 50.44444444444444], [52.0, 49.66666666666667], [53.0, 53.0], [54.0, 60.545454545454554], [55.0, 71.88888888888889], [56.0, 67.0], [57.0, 82.625], [58.0, 57.0], [59.0, 62.333333333333336], [60.0, 56.89999999999999], [61.0, 52.83333333333333], [62.0, 55.0], [63.0, 52.952380952380956], [64.0, 231.047619047619], [65.0, 68.58333333333333], [66.0, 74.29411764705883], [67.0, 112.07692307692307], [68.0, 81.21428571428571], [69.0, 44.57142857142858], [70.0, 52.75], [71.0, 59.857142857142854], [72.0, 59.5], [73.0, 60.91111111111113], [74.0, 60.090909090909086], [75.0, 75.76000000000002], [76.0, 55.72], [77.0, 54.75000000000001], [78.0, 83.5], [79.0, 73.18181818181817], [80.0, 54.777777777777786], [81.0, 171.54545454545456], [82.0, 448.735294117647], [83.0, 147.5625], [84.0, 59.21739130434782], [85.0, 57.666666666666664], [86.0, 55.85714285714286], [87.0, 166.72], [88.0, 314.57142857142856], [89.0, 309.6666666666667], [90.0, 197.75], [91.0, 649.8888888888887], [92.0, 431.68], [93.0, 233.0909090909091], [94.0, 271.40000000000003], [95.0, 437.7619047619048], [96.0, 438.3157894736842], [97.0, 500.4642857142857], [98.0, 817.3157894736842], [99.0, 668.1666666666666], [100.0, 1012.2727272727276], [101.0, 1158.2222222222222], [102.0, 837.6346153846155], [103.0, 805.48], [104.0, 673.0576923076924], [105.0, 464.00000000000006], [106.0, 597.4545454545455], [107.0, 703.3333333333334], [108.0, 603.5714285714286], [109.0, 885.3666666666664], [110.0, 1100.8947368421052], [111.0, 1192.7500000000002], [112.0, 1067.0357142857142], [113.0, 1038.095238095238], [114.0, 1024.6842105263158], [115.0, 883.4499999999999], [116.0, 850.6875], [117.0, 1023.4374999999999], [118.0, 974.4285714285714], [119.0, 1162.8333333333333], [120.0, 1245.9999999999998], [121.0, 1207.6666666666667], [122.0, 1625.6153846153848], [123.0, 1248.6111111111109], [124.0, 1612.9411764705883], [125.0, 1239.5], [126.0, 1768.7368421052633], [127.0, 1855.8518518518517], [128.0, 1913.5476190476193], [129.0, 1786.4285714285713], [130.0, 2078.636363636364], [131.0, 2127.189655172414], [132.0, 2103.4210526315787], [133.0, 2363.0487804878057], [134.0, 2000.9999999999998], [135.0, 2198.689655172414], [136.0, 2312.4615384615386], [137.0, 2369.1818181818185], [138.0, 2009.2105263157894], [139.0, 2283.75], [140.0, 1613.238095238095], [141.0, 1670.9076923076925], [142.0, 1604.257142857143], [143.0, 1421.645833333333], [144.0, 2108.2323943661963], [145.0, 1768.5499224426533]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[137.9743448275862, 1636.166068965525]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 145.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1510.7333333333333, "minX": 1.5854304E12, "maxY": 278606.6666666667, "series": [{"data": [[1.58543046E12, 248556.8], [1.58543076E12, 259490.18333333332], [1.58543106E12, 272740.11666666664], [1.5854304E12, 23322.166666666668], [1.58543118E12, 41128.05], [1.58543052E12, 274465.31666666665], [1.58543082E12, 259664.05], [1.58543112E12, 266225.51666666666], [1.58543094E12, 263339.05], [1.58543058E12, 264526.51666666666], [1.58543088E12, 275217.13333333336], [1.5854307E12, 276481.65], [1.585431E12, 278606.6666666667], [1.58543064E12, 262482.13333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58543046E12, 15849.1], [1.58543076E12, 16273.766666666666], [1.58543106E12, 16423.5], [1.5854304E12, 1510.7333333333333], [1.58543118E12, 2488.5666666666666], [1.58543052E12, 17538.1], [1.58543082E12, 15665.233333333334], [1.58543112E12, 16424.2], [1.58543094E12, 16437.7], [1.58543058E12, 16730.8], [1.58543088E12, 17080.866666666665], [1.5854307E12, 18123.666666666668], [1.585431E12, 17588.266666666666], [1.58543064E12, 16823.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543118E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 64.2756756756757, "minX": 1.5854304E12, "maxY": 2075.35087719298, "series": [{"data": [[1.58543046E12, 1080.5098777046085], [1.58543076E12, 1994.2156521739112], [1.58543106E12, 1857.2670111972434], [1.5854304E12, 69.95454545454548], [1.58543118E12, 64.2756756756757], [1.58543052E12, 1517.8757961783447], [1.58543082E12, 2075.35087719298], [1.58543112E12, 1121.8929794520536], [1.58543094E12, 1843.1492666091463], [1.58543058E12, 1665.8278145695367], [1.58543088E12, 1716.9942291838418], [1.5854307E12, 1263.1151241534992], [1.585431E12, 1538.3957006369424], [1.58543064E12, 1824.956816257408]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58543046E12, 322.02912621359224], [1.5854304E12, 301.2857142857142]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58543046E12, 1074.6396724294805], [1.58543076E12, 2018.6610619468972], [1.58543106E12, 1904.8918685121123], [1.5854304E12, 79.0990099009901], [1.58543118E12, 74.41104294478527], [1.58543052E12, 1596.5405405405409], [1.58543082E12, 2034.2761732851993], [1.58543112E12, 1133.9477413640395], [1.58543094E12, 1884.4168110918554], [1.58543058E12, 1747.862551440328], [1.58543088E12, 1709.8414133114209], [1.5854307E12, 1390.5530303030332], [1.585431E12, 1626.161520190023], [1.58543064E12, 1877.7986520640288]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543118E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 63.897297297297364, "minX": 1.5854304E12, "maxY": 2074.770083102492, "series": [{"data": [[1.58543046E12, 1080.1909689557863], [1.58543076E12, 1993.56956521739], [1.58543106E12, 1856.8001722652887], [1.5854304E12, 69.68181818181816], [1.58543118E12, 63.897297297297364], [1.58543052E12, 1517.5318471337564], [1.58543082E12, 2074.770083102492], [1.58543112E12, 1121.4794520547928], [1.58543094E12, 1842.581535806728], [1.58543058E12, 1664.8683774834449], [1.58543088E12, 1716.1154163231681], [1.5854307E12, 1262.3589164785549], [1.585431E12, 1537.947452229298], [1.58543064E12, 1824.44369178662]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58543046E12, 321.6019417475728], [1.5854304E12, 300.26190476190465]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58543046E12, 1074.3330300272978], [1.58543076E12, 2017.8442477876117], [1.58543106E12, 1904.4100346020743], [1.5854304E12, 78.84158415841581], [1.58543118E12, 74.01226993865029], [1.58543052E12, 1593.8418124006357], [1.58543082E12, 2033.7436823104695], [1.58543112E12, 1133.499557130206], [1.58543094E12, 1883.7772963604857], [1.58543058E12, 1737.1144032921802], [1.58543088E12, 1708.898931799507], [1.5854307E12, 1385.137878787879], [1.585431E12, 1625.6500395882822], [1.58543064E12, 1877.1912384161733]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543118E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5854304E12, "maxY": 25.547619047619044, "series": [{"data": [[1.58543046E12, 0.44496707431796817], [1.58543076E12, 0.5826086956521739], [1.58543106E12, 0.5839793281653752], [1.5854304E12, 0.4204545454545453], [1.58543118E12, 0.0], [1.58543052E12, 0.5581210191082799], [1.58543082E12, 0.5918744228993533], [1.58543112E12, 0.3741438356164378], [1.58543094E12, 0.524590163934426], [1.58543058E12, 0.5529801324503306], [1.58543088E12, 0.5581203627370167], [1.5854307E12, 0.48908954100827734], [1.585431E12, 0.5007961783439498], [1.58543064E12, 0.5469940728196433]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58543046E12, 0.8543689320388349], [1.5854304E12, 25.547619047619044]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58543046E12, 0.7461328480436751], [1.58543076E12, 0.588495575221239], [1.58543106E12, 0.5614186851211079], [1.5854304E12, 0.7425742574257427], [1.58543118E12, 0.5705521472392635], [1.58543052E12, 0.6804451510333871], [1.58543082E12, 0.5830324909747294], [1.58543112E12, 0.6333038086802468], [1.58543094E12, 0.5901213171577122], [1.58543058E12, 0.6312757201646093], [1.58543088E12, 0.5834018077239111], [1.5854307E12, 0.6310606060606055], [1.585431E12, 0.5938242280285035], [1.58543064E12, 0.9174389216512222]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543118E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.5854304E12, "maxY": 5290.0, "series": [{"data": [[1.58543046E12, 4414.0], [1.58543076E12, 4078.0], [1.58543106E12, 5056.0], [1.5854304E12, 2030.0], [1.58543118E12, 551.0], [1.58543052E12, 5290.0], [1.58543082E12, 3214.0], [1.58543112E12, 4184.0], [1.58543094E12, 5109.0], [1.58543058E12, 4760.0], [1.58543088E12, 3143.0], [1.5854307E12, 4319.0], [1.585431E12, 4651.0], [1.58543064E12, 4730.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58543046E12, 2.0], [1.58543076E12, 2.0], [1.58543106E12, 223.0], [1.5854304E12, 34.0], [1.58543118E12, 29.0], [1.58543052E12, 1.0], [1.58543082E12, 605.0], [1.58543112E12, 26.0], [1.58543094E12, 2.0], [1.58543058E12, 2.0], [1.58543088E12, 2.0], [1.5854307E12, 2.0], [1.585431E12, 2.0], [1.58543064E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58543046E12, 2472.0], [1.58543076E12, 2652.6000000000004], [1.58543106E12, 2921.4000000000005], [1.5854304E12, 187.0], [1.58543118E12, 84.39999999999998], [1.58543052E12, 2602.0], [1.58543082E12, 2559.8], [1.58543112E12, 2377.8999999999996], [1.58543094E12, 2985.8], [1.58543058E12, 2521.4000000000005], [1.58543088E12, 2300.2], [1.5854307E12, 2231.0], [1.585431E12, 2535.3999999999996], [1.58543064E12, 2843.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58543046E12, 3315.5], [1.58543076E12, 3560.36], [1.58543106E12, 3794.3999999999996], [1.5854304E12, 1178.4800000000018], [1.58543118E12, 421.5999999999999], [1.58543052E12, 3640.9199999999983], [1.58543082E12, 2864.3199999999997], [1.58543112E12, 3471.930000000001], [1.58543094E12, 3726.6999999999994], [1.58543058E12, 3176.319999999999], [1.58543088E12, 2757.05], [1.5854307E12, 2604.73], [1.585431E12, 3174.549999999999], [1.58543064E12, 3727.2300000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58543046E12, 2813.5], [1.58543076E12, 2910.0], [1.58543106E12, 3233.3999999999996], [1.5854304E12, 247.59999999999945], [1.58543118E12, 235.19999999999925], [1.58543052E12, 3002.2999999999997], [1.58543082E12, 2684.6000000000004], [1.58543112E12, 2727.0], [1.58543094E12, 3250.8999999999987], [1.58543058E12, 2763.2], [1.58543088E12, 2452.0], [1.5854307E12, 2355.3], [1.585431E12, 2749.5499999999997], [1.58543064E12, 3132.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543118E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 3008.0, "series": [{"data": [[2.0, 47.5], [3.0, 46.0], [6.0, 173.0], [8.0, 51.0], [9.0, 45.0], [10.0, 55.5], [11.0, 76.0], [13.0, 58.0], [14.0, 69.5], [15.0, 51.0], [16.0, 46.5], [17.0, 61.0], [18.0, 1020.0], [19.0, 73.0], [20.0, 1325.5], [21.0, 2185.5], [22.0, 519.0], [23.0, 47.0], [24.0, 1796.0], [25.0, 1071.0], [26.0, 1531.0], [27.0, 2126.5], [28.0, 1939.0], [29.0, 1743.0], [30.0, 1892.5], [31.0, 2011.0], [33.0, 1910.0], [32.0, 1817.0], [34.0, 1926.0], [35.0, 1899.5], [37.0, 1838.0], [36.0, 2053.0], [38.0, 1888.0], [39.0, 1980.5], [40.0, 1806.0], [41.0, 1947.0], [43.0, 1731.0], [42.0, 1838.0], [44.0, 1828.0], [45.0, 1844.5], [47.0, 1740.0], [46.0, 1759.5], [49.0, 1498.5], [48.0, 1284.0], [50.0, 1455.0], [51.0, 1574.0], [52.0, 1630.5], [53.0, 1587.0], [54.0, 766.0], [55.0, 1652.0], [56.0, 468.0], [58.0, 1598.0], [59.0, 583.0], [61.0, 955.0], [60.0, 146.0], [63.0, 126.0], [62.0, 58.0], [65.0, 756.0], [64.0, 1086.0], [66.0, 53.0], [71.0, 55.0], [75.0, 1450.0], [73.0, 305.0], [76.0, 1116.0], [77.0, 110.0], [79.0, 1328.0], [80.0, 723.0], [81.0, 942.5], [85.0, 88.0], [91.0, 638.0], [88.0, 767.0], [95.0, 1026.0], [1.0, 863.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 2282.0], [32.0, 2050.0], [35.0, 934.0], [34.0, 1571.5], [37.0, 1.0], [36.0, 970.0], [39.0, 1049.0], [38.0, 2359.0], [40.0, 2637.0], [42.0, 9.5], [43.0, 1019.0], [44.0, 1.0], [45.0, 21.0], [47.0, 1.0], [46.0, 14.0], [48.0, 1.0], [50.0, 1.0], [55.0, 2103.0], [59.0, 112.5], [61.0, 0.0], [60.0, 1.0], [63.0, 0.5], [62.0, 1.0], [64.0, 1.0], [66.0, 0.0], [71.0, 1.0], [73.0, 447.0], [76.0, 1461.0], [77.0, 0.0], [79.0, 2660.5], [80.0, 1.0], [81.0, 2108.0], [85.0, 2911.0], [91.0, 2006.0], [88.0, 2233.0], [95.0, 2042.5], [24.0, 3008.0], [26.0, 1.0], [27.0, 18.5], [31.0, 3005.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 95.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 2911.0, "series": [{"data": [[2.0, 46.5], [3.0, 46.0], [6.0, 172.5], [8.0, 50.5], [9.0, 45.0], [10.0, 55.0], [11.0, 75.0], [13.0, 58.0], [14.0, 69.5], [15.0, 50.5], [16.0, 46.5], [17.0, 61.0], [18.0, 1019.5], [19.0, 72.0], [20.0, 1325.5], [21.0, 2185.5], [22.0, 518.0], [23.0, 46.0], [24.0, 1796.0], [25.0, 1071.0], [26.0, 1531.0], [27.0, 2125.5], [28.0, 1938.5], [29.0, 1743.0], [30.0, 1892.5], [31.0, 2011.0], [33.0, 1910.0], [32.0, 1817.0], [34.0, 1925.0], [35.0, 1899.5], [37.0, 1836.0], [36.0, 2053.0], [38.0, 1888.0], [39.0, 1979.0], [40.0, 1805.0], [41.0, 1946.5], [43.0, 1730.5], [42.0, 1837.0], [44.0, 1828.0], [45.0, 1844.5], [47.0, 1740.0], [46.0, 1759.5], [49.0, 1498.5], [48.0, 1283.0], [50.0, 1454.5], [51.0, 1574.0], [52.0, 1630.0], [53.0, 1586.0], [54.0, 765.5], [55.0, 1652.0], [56.0, 467.5], [58.0, 1598.0], [59.0, 583.0], [61.0, 954.0], [60.0, 145.0], [63.0, 126.0], [62.0, 57.0], [65.0, 756.0], [64.0, 1085.5], [66.0, 52.0], [71.0, 54.5], [75.0, 1450.0], [73.0, 305.0], [76.0, 1114.5], [77.0, 109.0], [79.0, 1327.0], [80.0, 723.0], [81.0, 942.5], [85.0, 88.0], [91.0, 638.0], [88.0, 766.0], [95.0, 1026.0], [1.0, 860.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 2282.0], [32.0, 2050.0], [35.0, 862.0], [34.0, 1564.0], [37.0, 0.0], [36.0, 970.0], [39.0, 1049.0], [38.0, 2359.0], [40.0, 2636.0], [42.0, 9.0], [43.0, 1019.0], [44.0, 0.0], [45.0, 20.0], [47.0, 0.0], [46.0, 13.5], [48.0, 0.0], [50.0, 0.0], [55.0, 2103.0], [59.0, 109.5], [61.0, 0.0], [60.0, 0.0], [63.0, 0.0], [62.0, 0.0], [64.0, 0.0], [66.0, 0.0], [71.0, 0.0], [73.0, 447.0], [76.0, 1460.5], [77.0, 0.0], [79.0, 2660.0], [80.0, 0.0], [81.0, 2108.0], [85.0, 2911.0], [91.0, 2006.0], [88.0, 2233.0], [95.0, 2042.5], [24.0, 0.0], [26.0, 0.0], [27.0, 18.0], [31.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 95.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.85, "minX": 1.5854304E12, "maxY": 45.18333333333333, "series": [{"data": [[1.58543046E12, 38.36666666666667], [1.58543076E12, 37.266666666666666], [1.58543106E12, 38.55], [1.5854304E12, 3.85], [1.58543118E12, 5.733333333333333], [1.58543052E12, 42.38333333333333], [1.58543082E12, 37.083333333333336], [1.58543112E12, 37.266666666666666], [1.58543094E12, 38.63333333333333], [1.58543058E12, 40.53333333333333], [1.58543088E12, 40.45], [1.5854307E12, 45.18333333333333], [1.585431E12, 41.833333333333336], [1.58543064E12, 38.61666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543118E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5854304E12, "maxY": 42.1, "series": [{"data": [[1.58543046E12, 37.483333333333334], [1.58543076E12, 37.71666666666667], [1.58543106E12, 38.28333333333333], [1.5854304E12, 3.85], [1.58543118E12, 5.783333333333333], [1.58543052E12, 40.61666666666667], [1.58543082E12, 36.516666666666666], [1.58543112E12, 37.266666666666666], [1.58543094E12, 38.083333333333336], [1.58543058E12, 38.78333333333333], [1.58543088E12, 39.63333333333333], [1.5854307E12, 42.1], [1.585431E12, 40.8], [1.58543064E12, 38.8]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58543046E12, 0.26666666666666666], [1.58543094E12, 0.23333333333333334], [1.58543076E12, 0.21666666666666667], [1.58543058E12, 0.21666666666666667], [1.58543088E12, 0.18333333333333332], [1.5854307E12, 0.15], [1.58543118E12, 0.016666666666666666], [1.58543052E12, 0.26666666666666666], [1.585431E12, 0.2], [1.58543064E12, 0.4], [1.58543112E12, 1.0166666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.58543076E12, 0.016666666666666666], [1.58543058E12, 0.06666666666666667], [1.58543106E12, 0.016666666666666666], [1.585431E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.TruncatedChunkException", "isController": false}, {"data": [[1.58543094E12, 0.23333333333333334], [1.58543058E12, 0.55], [1.58543106E12, 0.06666666666666667], [1.58543088E12, 0.4166666666666667], [1.5854307E12, 1.8333333333333333], [1.58543052E12, 0.9], [1.585431E12, 0.5666666666666667], [1.58543064E12, 0.25]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.58543064E12, 0.016666666666666666]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.58543076E12, 0.05], [1.58543058E12, 0.7666666666666667], [1.58543106E12, 0.25], [1.58543088E12, 0.26666666666666666], [1.5854307E12, 0.06666666666666667], [1.58543052E12, 0.11666666666666667], [1.585431E12, 0.36666666666666664]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543118E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5854304E12, "maxY": 21.866666666666667, "series": [{"data": [[1.58543046E12, 1.7166666666666666], [1.5854304E12, 0.7]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58543046E12, 17.516666666666666], [1.58543076E12, 19.033333333333335], [1.58543106E12, 19.116666666666667], [1.5854304E12, 1.4666666666666666], [1.58543118E12, 3.0833333333333335], [1.58543052E12, 19.916666666666668], [1.58543082E12, 18.05], [1.58543112E12, 18.95], [1.58543094E12, 18.933333333333334], [1.58543058E12, 19.3], [1.58543088E12, 19.583333333333332], [1.5854307E12, 20.233333333333334], [1.585431E12, 19.966666666666665], [1.58543064E12, 19.183333333333334]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58543046E12, 0.2], [1.58543094E12, 0.38333333333333336], [1.58543076E12, 0.13333333333333333], [1.58543058E12, 0.8333333333333334], [1.58543106E12, 0.23333333333333334], [1.58543088E12, 0.6333333333333333], [1.5854307E12, 1.9166666666666667], [1.58543052E12, 1.0166666666666666], [1.585431E12, 0.9666666666666667], [1.58543064E12, 0.5], [1.58543112E12, 0.5166666666666667]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58543046E12, 18.25], [1.58543076E12, 18.683333333333334], [1.58543106E12, 19.166666666666668], [1.5854304E12, 1.6833333333333333], [1.58543118E12, 2.7], [1.58543052E12, 20.7], [1.58543082E12, 18.466666666666665], [1.58543112E12, 18.316666666666666], [1.58543094E12, 19.15], [1.58543058E12, 19.483333333333334], [1.58543088E12, 20.05], [1.5854307E12, 21.866666666666667], [1.585431E12, 20.833333333333332], [1.58543064E12, 19.616666666666667]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.58543046E12, 0.06666666666666667], [1.58543094E12, 0.08333333333333333], [1.58543076E12, 0.15], [1.58543058E12, 0.7666666666666667], [1.58543106E12, 0.1], [1.58543088E12, 0.23333333333333334], [1.5854307E12, 0.13333333333333333], [1.58543118E12, 0.016666666666666666], [1.58543052E12, 0.26666666666666666], [1.585431E12, 0.21666666666666667], [1.58543064E12, 0.16666666666666666], [1.58543112E12, 0.5]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543118E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5854304E12, "maxY": 42.1, "series": [{"data": [[1.58543046E12, 37.483333333333334], [1.58543076E12, 37.71666666666667], [1.58543106E12, 38.28333333333333], [1.5854304E12, 3.85], [1.58543118E12, 5.783333333333333], [1.58543052E12, 40.61666666666667], [1.58543082E12, 36.516666666666666], [1.58543112E12, 37.266666666666666], [1.58543094E12, 38.083333333333336], [1.58543058E12, 38.78333333333333], [1.58543088E12, 39.63333333333333], [1.5854307E12, 42.1], [1.585431E12, 40.8], [1.58543064E12, 38.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58543046E12, 0.26666666666666666], [1.58543094E12, 0.4666666666666667], [1.58543076E12, 0.2833333333333333], [1.58543058E12, 1.6], [1.58543106E12, 0.3333333333333333], [1.58543088E12, 0.8666666666666667], [1.5854307E12, 2.05], [1.58543118E12, 0.016666666666666666], [1.58543052E12, 1.2833333333333334], [1.585431E12, 1.1833333333333333], [1.58543064E12, 0.6666666666666666], [1.58543112E12, 1.0166666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543118E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

