/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 5997.0, "series": [{"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 2.0], [0.3, 3.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 5.0], [0.8, 5.0], [0.9, 5.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 5.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 7.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 8.0], [3.7, 8.0], [3.8, 8.0], [3.9, 8.0], [4.0, 8.0], [4.1, 8.0], [4.2, 8.0], [4.3, 9.0], [4.4, 9.0], [4.5, 9.0], [4.6, 9.0], [4.7, 9.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 12.0], [5.6, 13.0], [5.7, 14.0], [5.8, 15.0], [5.9, 17.0], [6.0, 22.0], [6.1, 26.0], [6.2, 31.0], [6.3, 34.0], [6.4, 35.0], [6.5, 36.0], [6.6, 37.0], [6.7, 37.0], [6.8, 38.0], [6.9, 38.0], [7.0, 39.0], [7.1, 39.0], [7.2, 40.0], [7.3, 40.0], [7.4, 41.0], [7.5, 41.0], [7.6, 41.0], [7.7, 42.0], [7.8, 42.0], [7.9, 42.0], [8.0, 43.0], [8.1, 43.0], [8.2, 43.0], [8.3, 44.0], [8.4, 44.0], [8.5, 44.0], [8.6, 45.0], [8.7, 45.0], [8.8, 45.0], [8.9, 45.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 47.0], [9.4, 47.0], [9.5, 47.0], [9.6, 47.0], [9.7, 48.0], [9.8, 48.0], [9.9, 48.0], [10.0, 49.0], [10.1, 49.0], [10.2, 49.0], [10.3, 50.0], [10.4, 50.0], [10.5, 50.0], [10.6, 50.0], [10.7, 51.0], [10.8, 51.0], [10.9, 51.0], [11.0, 52.0], [11.1, 52.0], [11.2, 52.0], [11.3, 53.0], [11.4, 53.0], [11.5, 54.0], [11.6, 54.0], [11.7, 54.0], [11.8, 54.0], [11.9, 55.0], [12.0, 55.0], [12.1, 55.0], [12.2, 56.0], [12.3, 56.0], [12.4, 56.0], [12.5, 57.0], [12.6, 57.0], [12.7, 58.0], [12.8, 58.0], [12.9, 59.0], [13.0, 59.0], [13.1, 60.0], [13.2, 60.0], [13.3, 61.0], [13.4, 61.0], [13.5, 62.0], [13.6, 62.0], [13.7, 63.0], [13.8, 64.0], [13.9, 64.0], [14.0, 65.0], [14.1, 66.0], [14.2, 67.0], [14.3, 68.0], [14.4, 69.0], [14.5, 70.0], [14.6, 71.0], [14.7, 73.0], [14.8, 76.0], [14.9, 78.0], [15.0, 81.0], [15.1, 87.0], [15.2, 92.0], [15.3, 100.0], [15.4, 109.0], [15.5, 119.0], [15.6, 128.0], [15.7, 151.0], [15.8, 167.0], [15.9, 185.0], [16.0, 218.0], [16.1, 235.0], [16.2, 251.0], [16.3, 267.0], [16.4, 288.0], [16.5, 313.0], [16.6, 326.0], [16.7, 339.0], [16.8, 348.0], [16.9, 361.0], [17.0, 368.0], [17.1, 387.0], [17.2, 398.0], [17.3, 405.0], [17.4, 418.0], [17.5, 425.0], [17.6, 434.0], [17.7, 441.0], [17.8, 449.0], [17.9, 459.0], [18.0, 472.0], [18.1, 480.0], [18.2, 492.0], [18.3, 496.0], [18.4, 505.0], [18.5, 513.0], [18.6, 521.0], [18.7, 525.0], [18.8, 531.0], [18.9, 539.0], [19.0, 544.0], [19.1, 548.0], [19.2, 555.0], [19.3, 560.0], [19.4, 565.0], [19.5, 570.0], [19.6, 577.0], [19.7, 582.0], [19.8, 587.0], [19.9, 593.0], [20.0, 597.0], [20.1, 603.0], [20.2, 609.0], [20.3, 616.0], [20.4, 623.0], [20.5, 629.0], [20.6, 633.0], [20.7, 637.0], [20.8, 641.0], [20.9, 645.0], [21.0, 653.0], [21.1, 657.0], [21.2, 662.0], [21.3, 667.0], [21.4, 671.0], [21.5, 674.0], [21.6, 678.0], [21.7, 683.0], [21.8, 686.0], [21.9, 690.0], [22.0, 692.0], [22.1, 696.0], [22.2, 700.0], [22.3, 704.0], [22.4, 708.0], [22.5, 713.0], [22.6, 716.0], [22.7, 720.0], [22.8, 724.0], [22.9, 728.0], [23.0, 732.0], [23.1, 735.0], [23.2, 739.0], [23.3, 742.0], [23.4, 747.0], [23.5, 750.0], [23.6, 753.0], [23.7, 757.0], [23.8, 760.0], [23.9, 761.0], [24.0, 765.0], [24.1, 770.0], [24.2, 774.0], [24.3, 777.0], [24.4, 782.0], [24.5, 786.0], [24.6, 788.0], [24.7, 792.0], [24.8, 796.0], [24.9, 800.0], [25.0, 803.0], [25.1, 807.0], [25.2, 810.0], [25.3, 813.0], [25.4, 816.0], [25.5, 821.0], [25.6, 824.0], [25.7, 826.0], [25.8, 828.0], [25.9, 830.0], [26.0, 835.0], [26.1, 838.0], [26.2, 842.0], [26.3, 844.0], [26.4, 848.0], [26.5, 850.0], [26.6, 853.0], [26.7, 857.0], [26.8, 861.0], [26.9, 864.0], [27.0, 867.0], [27.1, 869.0], [27.2, 873.0], [27.3, 876.0], [27.4, 880.0], [27.5, 883.0], [27.6, 885.0], [27.7, 890.0], [27.8, 893.0], [27.9, 895.0], [28.0, 897.0], [28.1, 901.0], [28.2, 903.0], [28.3, 905.0], [28.4, 908.0], [28.5, 911.0], [28.6, 915.0], [28.7, 920.0], [28.8, 922.0], [28.9, 923.0], [29.0, 927.0], [29.1, 929.0], [29.2, 933.0], [29.3, 935.0], [29.4, 938.0], [29.5, 941.0], [29.6, 944.0], [29.7, 947.0], [29.8, 950.0], [29.9, 952.0], [30.0, 954.0], [30.1, 958.0], [30.2, 961.0], [30.3, 964.0], [30.4, 965.0], [30.5, 969.0], [30.6, 971.0], [30.7, 974.0], [30.8, 976.0], [30.9, 977.0], [31.0, 980.0], [31.1, 983.0], [31.2, 985.0], [31.3, 989.0], [31.4, 991.0], [31.5, 994.0], [31.6, 995.0], [31.7, 998.0], [31.8, 1003.0], [31.9, 1006.0], [32.0, 1007.0], [32.1, 1010.0], [32.2, 1012.0], [32.3, 1014.0], [32.4, 1017.0], [32.5, 1020.0], [32.6, 1021.0], [32.7, 1023.0], [32.8, 1026.0], [32.9, 1029.0], [33.0, 1031.0], [33.1, 1033.0], [33.2, 1035.0], [33.3, 1038.0], [33.4, 1039.0], [33.5, 1041.0], [33.6, 1044.0], [33.7, 1047.0], [33.8, 1050.0], [33.9, 1052.0], [34.0, 1054.0], [34.1, 1056.0], [34.2, 1058.0], [34.3, 1061.0], [34.4, 1063.0], [34.5, 1066.0], [34.6, 1067.0], [34.7, 1070.0], [34.8, 1072.0], [34.9, 1075.0], [35.0, 1078.0], [35.1, 1079.0], [35.2, 1082.0], [35.3, 1084.0], [35.4, 1087.0], [35.5, 1089.0], [35.6, 1091.0], [35.7, 1093.0], [35.8, 1095.0], [35.9, 1097.0], [36.0, 1100.0], [36.1, 1102.0], [36.2, 1105.0], [36.3, 1106.0], [36.4, 1108.0], [36.5, 1113.0], [36.6, 1116.0], [36.7, 1117.0], [36.8, 1118.0], [36.9, 1121.0], [37.0, 1125.0], [37.1, 1128.0], [37.2, 1130.0], [37.3, 1133.0], [37.4, 1135.0], [37.5, 1137.0], [37.6, 1140.0], [37.7, 1143.0], [37.8, 1145.0], [37.9, 1147.0], [38.0, 1149.0], [38.1, 1152.0], [38.2, 1153.0], [38.3, 1155.0], [38.4, 1157.0], [38.5, 1158.0], [38.6, 1161.0], [38.7, 1162.0], [38.8, 1164.0], [38.9, 1167.0], [39.0, 1169.0], [39.1, 1171.0], [39.2, 1173.0], [39.3, 1175.0], [39.4, 1178.0], [39.5, 1180.0], [39.6, 1182.0], [39.7, 1183.0], [39.8, 1185.0], [39.9, 1188.0], [40.0, 1189.0], [40.1, 1191.0], [40.2, 1194.0], [40.3, 1196.0], [40.4, 1197.0], [40.5, 1199.0], [40.6, 1200.0], [40.7, 1202.0], [40.8, 1204.0], [40.9, 1206.0], [41.0, 1208.0], [41.1, 1211.0], [41.2, 1213.0], [41.3, 1214.0], [41.4, 1215.0], [41.5, 1217.0], [41.6, 1219.0], [41.7, 1222.0], [41.8, 1225.0], [41.9, 1226.0], [42.0, 1228.0], [42.1, 1231.0], [42.2, 1233.0], [42.3, 1234.0], [42.4, 1236.0], [42.5, 1238.0], [42.6, 1239.0], [42.7, 1242.0], [42.8, 1243.0], [42.9, 1245.0], [43.0, 1246.0], [43.1, 1248.0], [43.2, 1251.0], [43.3, 1252.0], [43.4, 1253.0], [43.5, 1254.0], [43.6, 1256.0], [43.7, 1259.0], [43.8, 1261.0], [43.9, 1264.0], [44.0, 1267.0], [44.1, 1268.0], [44.2, 1270.0], [44.3, 1271.0], [44.4, 1273.0], [44.5, 1275.0], [44.6, 1277.0], [44.7, 1279.0], [44.8, 1281.0], [44.9, 1283.0], [45.0, 1286.0], [45.1, 1287.0], [45.2, 1289.0], [45.3, 1290.0], [45.4, 1292.0], [45.5, 1294.0], [45.6, 1297.0], [45.7, 1300.0], [45.8, 1302.0], [45.9, 1303.0], [46.0, 1305.0], [46.1, 1307.0], [46.2, 1309.0], [46.3, 1310.0], [46.4, 1312.0], [46.5, 1314.0], [46.6, 1317.0], [46.7, 1319.0], [46.8, 1320.0], [46.9, 1322.0], [47.0, 1324.0], [47.1, 1326.0], [47.2, 1329.0], [47.3, 1330.0], [47.4, 1332.0], [47.5, 1333.0], [47.6, 1336.0], [47.7, 1337.0], [47.8, 1340.0], [47.9, 1341.0], [48.0, 1345.0], [48.1, 1347.0], [48.2, 1349.0], [48.3, 1350.0], [48.4, 1353.0], [48.5, 1353.0], [48.6, 1355.0], [48.7, 1357.0], [48.8, 1358.0], [48.9, 1360.0], [49.0, 1363.0], [49.1, 1365.0], [49.2, 1367.0], [49.3, 1369.0], [49.4, 1370.0], [49.5, 1371.0], [49.6, 1373.0], [49.7, 1375.0], [49.8, 1378.0], [49.9, 1380.0], [50.0, 1382.0], [50.1, 1384.0], [50.2, 1386.0], [50.3, 1387.0], [50.4, 1389.0], [50.5, 1391.0], [50.6, 1393.0], [50.7, 1395.0], [50.8, 1397.0], [50.9, 1399.0], [51.0, 1402.0], [51.1, 1404.0], [51.2, 1406.0], [51.3, 1407.0], [51.4, 1409.0], [51.5, 1411.0], [51.6, 1412.0], [51.7, 1414.0], [51.8, 1416.0], [51.9, 1417.0], [52.0, 1419.0], [52.1, 1422.0], [52.2, 1424.0], [52.3, 1425.0], [52.4, 1427.0], [52.5, 1429.0], [52.6, 1430.0], [52.7, 1432.0], [52.8, 1433.0], [52.9, 1434.0], [53.0, 1436.0], [53.1, 1437.0], [53.2, 1439.0], [53.3, 1440.0], [53.4, 1441.0], [53.5, 1442.0], [53.6, 1444.0], [53.7, 1445.0], [53.8, 1447.0], [53.9, 1449.0], [54.0, 1452.0], [54.1, 1453.0], [54.2, 1455.0], [54.3, 1456.0], [54.4, 1457.0], [54.5, 1459.0], [54.6, 1460.0], [54.7, 1462.0], [54.8, 1464.0], [54.9, 1466.0], [55.0, 1468.0], [55.1, 1471.0], [55.2, 1473.0], [55.3, 1474.0], [55.4, 1475.0], [55.5, 1477.0], [55.6, 1479.0], [55.7, 1480.0], [55.8, 1483.0], [55.9, 1485.0], [56.0, 1487.0], [56.1, 1488.0], [56.2, 1490.0], [56.3, 1492.0], [56.4, 1493.0], [56.5, 1495.0], [56.6, 1498.0], [56.7, 1499.0], [56.8, 1501.0], [56.9, 1502.0], [57.0, 1503.0], [57.1, 1505.0], [57.2, 1507.0], [57.3, 1510.0], [57.4, 1514.0], [57.5, 1516.0], [57.6, 1518.0], [57.7, 1519.0], [57.8, 1522.0], [57.9, 1523.0], [58.0, 1525.0], [58.1, 1526.0], [58.2, 1528.0], [58.3, 1531.0], [58.4, 1533.0], [58.5, 1535.0], [58.6, 1537.0], [58.7, 1538.0], [58.8, 1540.0], [58.9, 1542.0], [59.0, 1544.0], [59.1, 1547.0], [59.2, 1549.0], [59.3, 1551.0], [59.4, 1552.0], [59.5, 1554.0], [59.6, 1555.0], [59.7, 1558.0], [59.8, 1560.0], [59.9, 1562.0], [60.0, 1564.0], [60.1, 1567.0], [60.2, 1569.0], [60.3, 1571.0], [60.4, 1573.0], [60.5, 1574.0], [60.6, 1576.0], [60.7, 1577.0], [60.8, 1580.0], [60.9, 1582.0], [61.0, 1585.0], [61.1, 1586.0], [61.2, 1589.0], [61.3, 1591.0], [61.4, 1594.0], [61.5, 1595.0], [61.6, 1598.0], [61.7, 1600.0], [61.8, 1602.0], [61.9, 1604.0], [62.0, 1606.0], [62.1, 1608.0], [62.2, 1610.0], [62.3, 1611.0], [62.4, 1613.0], [62.5, 1614.0], [62.6, 1616.0], [62.7, 1617.0], [62.8, 1620.0], [62.9, 1621.0], [63.0, 1623.0], [63.1, 1625.0], [63.2, 1626.0], [63.3, 1628.0], [63.4, 1631.0], [63.5, 1632.0], [63.6, 1634.0], [63.7, 1635.0], [63.8, 1637.0], [63.9, 1638.0], [64.0, 1640.0], [64.1, 1643.0], [64.2, 1644.0], [64.3, 1647.0], [64.4, 1649.0], [64.5, 1650.0], [64.6, 1652.0], [64.7, 1653.0], [64.8, 1655.0], [64.9, 1657.0], [65.0, 1658.0], [65.1, 1659.0], [65.2, 1661.0], [65.3, 1664.0], [65.4, 1666.0], [65.5, 1669.0], [65.6, 1671.0], [65.7, 1673.0], [65.8, 1676.0], [65.9, 1677.0], [66.0, 1679.0], [66.1, 1681.0], [66.2, 1683.0], [66.3, 1684.0], [66.4, 1687.0], [66.5, 1689.0], [66.6, 1690.0], [66.7, 1692.0], [66.8, 1694.0], [66.9, 1696.0], [67.0, 1699.0], [67.1, 1701.0], [67.2, 1703.0], [67.3, 1707.0], [67.4, 1708.0], [67.5, 1710.0], [67.6, 1712.0], [67.7, 1714.0], [67.8, 1717.0], [67.9, 1719.0], [68.0, 1721.0], [68.1, 1723.0], [68.2, 1725.0], [68.3, 1727.0], [68.4, 1729.0], [68.5, 1731.0], [68.6, 1732.0], [68.7, 1733.0], [68.8, 1735.0], [68.9, 1736.0], [69.0, 1738.0], [69.1, 1741.0], [69.2, 1742.0], [69.3, 1745.0], [69.4, 1748.0], [69.5, 1751.0], [69.6, 1752.0], [69.7, 1755.0], [69.8, 1757.0], [69.9, 1760.0], [70.0, 1762.0], [70.1, 1764.0], [70.2, 1765.0], [70.3, 1767.0], [70.4, 1770.0], [70.5, 1773.0], [70.6, 1776.0], [70.7, 1779.0], [70.8, 1780.0], [70.9, 1783.0], [71.0, 1785.0], [71.1, 1787.0], [71.2, 1788.0], [71.3, 1791.0], [71.4, 1793.0], [71.5, 1795.0], [71.6, 1796.0], [71.7, 1798.0], [71.8, 1800.0], [71.9, 1802.0], [72.0, 1804.0], [72.1, 1807.0], [72.2, 1808.0], [72.3, 1810.0], [72.4, 1812.0], [72.5, 1814.0], [72.6, 1816.0], [72.7, 1818.0], [72.8, 1820.0], [72.9, 1823.0], [73.0, 1825.0], [73.1, 1826.0], [73.2, 1830.0], [73.3, 1831.0], [73.4, 1834.0], [73.5, 1835.0], [73.6, 1838.0], [73.7, 1840.0], [73.8, 1841.0], [73.9, 1845.0], [74.0, 1848.0], [74.1, 1850.0], [74.2, 1852.0], [74.3, 1854.0], [74.4, 1857.0], [74.5, 1859.0], [74.6, 1862.0], [74.7, 1865.0], [74.8, 1867.0], [74.9, 1869.0], [75.0, 1871.0], [75.1, 1873.0], [75.2, 1874.0], [75.3, 1876.0], [75.4, 1879.0], [75.5, 1881.0], [75.6, 1884.0], [75.7, 1886.0], [75.8, 1888.0], [75.9, 1890.0], [76.0, 1893.0], [76.1, 1894.0], [76.2, 1897.0], [76.3, 1899.0], [76.4, 1900.0], [76.5, 1902.0], [76.6, 1905.0], [76.7, 1906.0], [76.8, 1908.0], [76.9, 1912.0], [77.0, 1916.0], [77.1, 1920.0], [77.2, 1922.0], [77.3, 1925.0], [77.4, 1928.0], [77.5, 1930.0], [77.6, 1933.0], [77.7, 1935.0], [77.8, 1939.0], [77.9, 1940.0], [78.0, 1942.0], [78.1, 1944.0], [78.2, 1946.0], [78.3, 1949.0], [78.4, 1951.0], [78.5, 1953.0], [78.6, 1957.0], [78.7, 1959.0], [78.8, 1962.0], [78.9, 1964.0], [79.0, 1967.0], [79.1, 1969.0], [79.2, 1972.0], [79.3, 1974.0], [79.4, 1976.0], [79.5, 1979.0], [79.6, 1983.0], [79.7, 1986.0], [79.8, 1988.0], [79.9, 1991.0], [80.0, 1995.0], [80.1, 1998.0], [80.2, 2000.0], [80.3, 2004.0], [80.4, 2008.0], [80.5, 2011.0], [80.6, 2015.0], [80.7, 2019.0], [80.8, 2022.0], [80.9, 2025.0], [81.0, 2029.0], [81.1, 2031.0], [81.2, 2035.0], [81.3, 2039.0], [81.4, 2041.0], [81.5, 2043.0], [81.6, 2045.0], [81.7, 2049.0], [81.8, 2051.0], [81.9, 2052.0], [82.0, 2056.0], [82.1, 2059.0], [82.2, 2062.0], [82.3, 2065.0], [82.4, 2068.0], [82.5, 2072.0], [82.6, 2075.0], [82.7, 2079.0], [82.8, 2081.0], [82.9, 2084.0], [83.0, 2086.0], [83.1, 2091.0], [83.2, 2094.0], [83.3, 2096.0], [83.4, 2099.0], [83.5, 2101.0], [83.6, 2105.0], [83.7, 2107.0], [83.8, 2110.0], [83.9, 2115.0], [84.0, 2118.0], [84.1, 2122.0], [84.2, 2125.0], [84.3, 2127.0], [84.4, 2129.0], [84.5, 2131.0], [84.6, 2134.0], [84.7, 2138.0], [84.8, 2142.0], [84.9, 2146.0], [85.0, 2149.0], [85.1, 2152.0], [85.2, 2157.0], [85.3, 2161.0], [85.4, 2165.0], [85.5, 2170.0], [85.6, 2174.0], [85.7, 2178.0], [85.8, 2181.0], [85.9, 2184.0], [86.0, 2186.0], [86.1, 2191.0], [86.2, 2195.0], [86.3, 2201.0], [86.4, 2204.0], [86.5, 2207.0], [86.6, 2213.0], [86.7, 2217.0], [86.8, 2221.0], [86.9, 2226.0], [87.0, 2231.0], [87.1, 2234.0], [87.2, 2240.0], [87.3, 2243.0], [87.4, 2247.0], [87.5, 2252.0], [87.6, 2255.0], [87.7, 2260.0], [87.8, 2266.0], [87.9, 2272.0], [88.0, 2277.0], [88.1, 2283.0], [88.2, 2287.0], [88.3, 2293.0], [88.4, 2299.0], [88.5, 2305.0], [88.6, 2310.0], [88.7, 2314.0], [88.8, 2318.0], [88.9, 2323.0], [89.0, 2328.0], [89.1, 2333.0], [89.2, 2337.0], [89.3, 2343.0], [89.4, 2347.0], [89.5, 2352.0], [89.6, 2359.0], [89.7, 2363.0], [89.8, 2365.0], [89.9, 2368.0], [90.0, 2373.0], [90.1, 2380.0], [90.2, 2386.0], [90.3, 2391.0], [90.4, 2398.0], [90.5, 2402.0], [90.6, 2410.0], [90.7, 2414.0], [90.8, 2420.0], [90.9, 2425.0], [91.0, 2430.0], [91.1, 2434.0], [91.2, 2438.0], [91.3, 2444.0], [91.4, 2450.0], [91.5, 2453.0], [91.6, 2458.0], [91.7, 2462.0], [91.8, 2467.0], [91.9, 2473.0], [92.0, 2477.0], [92.1, 2482.0], [92.2, 2487.0], [92.3, 2494.0], [92.4, 2500.0], [92.5, 2507.0], [92.6, 2519.0], [92.7, 2525.0], [92.8, 2530.0], [92.9, 2539.0], [93.0, 2545.0], [93.1, 2551.0], [93.2, 2558.0], [93.3, 2565.0], [93.4, 2575.0], [93.5, 2583.0], [93.6, 2596.0], [93.7, 2603.0], [93.8, 2614.0], [93.9, 2625.0], [94.0, 2630.0], [94.1, 2636.0], [94.2, 2645.0], [94.3, 2650.0], [94.4, 2655.0], [94.5, 2667.0], [94.6, 2673.0], [94.7, 2681.0], [94.8, 2691.0], [94.9, 2701.0], [95.0, 2710.0], [95.1, 2720.0], [95.2, 2731.0], [95.3, 2746.0], [95.4, 2755.0], [95.5, 2767.0], [95.6, 2782.0], [95.7, 2799.0], [95.8, 2815.0], [95.9, 2822.0], [96.0, 2838.0], [96.1, 2851.0], [96.2, 2859.0], [96.3, 2870.0], [96.4, 2889.0], [96.5, 2899.0], [96.6, 2917.0], [96.7, 2930.0], [96.8, 2943.0], [96.9, 2957.0], [97.0, 2980.0], [97.1, 3004.0], [97.2, 3017.0], [97.3, 3038.0], [97.4, 3062.0], [97.5, 3085.0], [97.6, 3102.0], [97.7, 3130.0], [97.8, 3147.0], [97.9, 3171.0], [98.0, 3187.0], [98.1, 3210.0], [98.2, 3237.0], [98.3, 3250.0], [98.4, 3275.0], [98.5, 3297.0], [98.6, 3318.0], [98.7, 3364.0], [98.8, 3411.0], [98.9, 3450.0], [99.0, 3500.0], [99.1, 3541.0], [99.2, 3586.0], [99.3, 3651.0], [99.4, 3762.0], [99.5, 3852.0], [99.6, 3957.0], [99.7, 4054.0], [99.8, 4194.0], [99.9, 4444.0], [100.0, 5997.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 151.0], [0.1, 151.0], [0.2, 151.0], [0.3, 151.0], [0.4, 151.0], [0.5, 151.0], [0.6, 151.0], [0.7, 151.0], [0.8, 152.0], [0.9, 152.0], [1.0, 152.0], [1.1, 152.0], [1.2, 152.0], [1.3, 152.0], [1.4, 152.0], [1.5, 152.0], [1.6, 152.0], [1.7, 152.0], [1.8, 152.0], [1.9, 152.0], [2.0, 152.0], [2.1, 152.0], [2.2, 152.0], [2.3, 152.0], [2.4, 153.0], [2.5, 153.0], [2.6, 153.0], [2.7, 153.0], [2.8, 153.0], [2.9, 153.0], [3.0, 153.0], [3.1, 153.0], [3.2, 153.0], [3.3, 153.0], [3.4, 153.0], [3.5, 153.0], [3.6, 153.0], [3.7, 153.0], [3.8, 153.0], [3.9, 154.0], [4.0, 154.0], [4.1, 154.0], [4.2, 154.0], [4.3, 154.0], [4.4, 154.0], [4.5, 154.0], [4.6, 154.0], [4.7, 154.0], [4.8, 154.0], [4.9, 154.0], [5.0, 154.0], [5.1, 154.0], [5.2, 154.0], [5.3, 154.0], [5.4, 155.0], [5.5, 155.0], [5.6, 155.0], [5.7, 155.0], [5.8, 155.0], [5.9, 155.0], [6.0, 155.0], [6.1, 155.0], [6.2, 155.0], [6.3, 155.0], [6.4, 155.0], [6.5, 155.0], [6.6, 155.0], [6.7, 155.0], [6.8, 155.0], [6.9, 155.0], [7.0, 155.0], [7.1, 155.0], [7.2, 155.0], [7.3, 155.0], [7.4, 155.0], [7.5, 155.0], [7.6, 155.0], [7.7, 155.0], [7.8, 155.0], [7.9, 155.0], [8.0, 155.0], [8.1, 155.0], [8.2, 155.0], [8.3, 155.0], [8.4, 155.0], [8.5, 156.0], [8.6, 156.0], [8.7, 156.0], [8.8, 156.0], [8.9, 156.0], [9.0, 156.0], [9.1, 156.0], [9.2, 156.0], [9.3, 156.0], [9.4, 156.0], [9.5, 156.0], [9.6, 156.0], [9.7, 156.0], [9.8, 156.0], [9.9, 156.0], [10.0, 156.0], [10.1, 156.0], [10.2, 156.0], [10.3, 156.0], [10.4, 156.0], [10.5, 156.0], [10.6, 156.0], [10.7, 156.0], [10.8, 156.0], [10.9, 156.0], [11.0, 156.0], [11.1, 156.0], [11.2, 156.0], [11.3, 156.0], [11.4, 156.0], [11.5, 156.0], [11.6, 157.0], [11.7, 157.0], [11.8, 157.0], [11.9, 157.0], [12.0, 157.0], [12.1, 157.0], [12.2, 157.0], [12.3, 157.0], [12.4, 157.0], [12.5, 157.0], [12.6, 157.0], [12.7, 157.0], [12.8, 157.0], [12.9, 157.0], [13.0, 157.0], [13.1, 157.0], [13.2, 157.0], [13.3, 157.0], [13.4, 157.0], [13.5, 157.0], [13.6, 157.0], [13.7, 157.0], [13.8, 157.0], [13.9, 157.0], [14.0, 157.0], [14.1, 157.0], [14.2, 157.0], [14.3, 157.0], [14.4, 157.0], [14.5, 157.0], [14.6, 157.0], [14.7, 158.0], [14.8, 158.0], [14.9, 158.0], [15.0, 158.0], [15.1, 158.0], [15.2, 158.0], [15.3, 158.0], [15.4, 158.0], [15.5, 158.0], [15.6, 158.0], [15.7, 158.0], [15.8, 158.0], [15.9, 158.0], [16.0, 158.0], [16.1, 158.0], [16.2, 158.0], [16.3, 158.0], [16.4, 158.0], [16.5, 158.0], [16.6, 158.0], [16.7, 158.0], [16.8, 158.0], [16.9, 158.0], [17.0, 160.0], [17.1, 160.0], [17.2, 160.0], [17.3, 160.0], [17.4, 160.0], [17.5, 160.0], [17.6, 160.0], [17.7, 160.0], [17.8, 160.0], [17.9, 160.0], [18.0, 160.0], [18.1, 160.0], [18.2, 160.0], [18.3, 160.0], [18.4, 160.0], [18.5, 160.0], [18.6, 160.0], [18.7, 160.0], [18.8, 160.0], [18.9, 160.0], [19.0, 160.0], [19.1, 160.0], [19.2, 160.0], [19.3, 161.0], [19.4, 161.0], [19.5, 161.0], [19.6, 161.0], [19.7, 161.0], [19.8, 161.0], [19.9, 161.0], [20.0, 161.0], [20.1, 161.0], [20.2, 161.0], [20.3, 161.0], [20.4, 161.0], [20.5, 161.0], [20.6, 161.0], [20.7, 161.0], [20.8, 161.0], [20.9, 161.0], [21.0, 161.0], [21.1, 161.0], [21.2, 161.0], [21.3, 161.0], [21.4, 161.0], [21.5, 161.0], [21.6, 161.0], [21.7, 161.0], [21.8, 161.0], [21.9, 161.0], [22.0, 161.0], [22.1, 161.0], [22.2, 161.0], [22.3, 161.0], [22.4, 161.0], [22.5, 161.0], [22.6, 161.0], [22.7, 161.0], [22.8, 161.0], [22.9, 161.0], [23.0, 161.0], [23.1, 161.0], [23.2, 161.0], [23.3, 161.0], [23.4, 161.0], [23.5, 161.0], [23.6, 161.0], [23.7, 161.0], [23.8, 161.0], [23.9, 162.0], [24.0, 162.0], [24.1, 162.0], [24.2, 162.0], [24.3, 162.0], [24.4, 162.0], [24.5, 162.0], [24.6, 162.0], [24.7, 163.0], [24.8, 163.0], [24.9, 163.0], [25.0, 163.0], [25.1, 163.0], [25.2, 163.0], [25.3, 163.0], [25.4, 163.0], [25.5, 163.0], [25.6, 163.0], [25.7, 163.0], [25.8, 163.0], [25.9, 163.0], [26.0, 163.0], [26.1, 163.0], [26.2, 163.0], [26.3, 163.0], [26.4, 163.0], [26.5, 163.0], [26.6, 163.0], [26.7, 163.0], [26.8, 163.0], [26.9, 163.0], [27.0, 164.0], [27.1, 164.0], [27.2, 164.0], [27.3, 164.0], [27.4, 164.0], [27.5, 164.0], [27.6, 164.0], [27.7, 164.0], [27.8, 164.0], [27.9, 164.0], [28.0, 164.0], [28.1, 164.0], [28.2, 164.0], [28.3, 164.0], [28.4, 164.0], [28.5, 165.0], [28.6, 165.0], [28.7, 165.0], [28.8, 165.0], [28.9, 165.0], [29.0, 165.0], [29.1, 165.0], [29.2, 165.0], [29.3, 166.0], [29.4, 166.0], [29.5, 166.0], [29.6, 166.0], [29.7, 166.0], [29.8, 166.0], [29.9, 166.0], [30.0, 166.0], [30.1, 166.0], [30.2, 166.0], [30.3, 166.0], [30.4, 166.0], [30.5, 166.0], [30.6, 166.0], [30.7, 166.0], [30.8, 167.0], [30.9, 167.0], [31.0, 167.0], [31.1, 167.0], [31.2, 167.0], [31.3, 167.0], [31.4, 167.0], [31.5, 167.0], [31.6, 167.0], [31.7, 167.0], [31.8, 167.0], [31.9, 167.0], [32.0, 167.0], [32.1, 167.0], [32.2, 167.0], [32.3, 167.0], [32.4, 167.0], [32.5, 167.0], [32.6, 167.0], [32.7, 167.0], [32.8, 167.0], [32.9, 167.0], [33.0, 167.0], [33.1, 168.0], [33.2, 168.0], [33.3, 168.0], [33.4, 168.0], [33.5, 168.0], [33.6, 168.0], [33.7, 168.0], [33.8, 168.0], [33.9, 168.0], [34.0, 168.0], [34.1, 168.0], [34.2, 168.0], [34.3, 168.0], [34.4, 168.0], [34.5, 168.0], [34.6, 168.0], [34.7, 168.0], [34.8, 168.0], [34.9, 168.0], [35.0, 168.0], [35.1, 168.0], [35.2, 168.0], [35.3, 168.0], [35.4, 168.0], [35.5, 168.0], [35.6, 168.0], [35.7, 168.0], [35.8, 168.0], [35.9, 168.0], [36.0, 168.0], [36.1, 168.0], [36.2, 169.0], [36.3, 169.0], [36.4, 169.0], [36.5, 169.0], [36.6, 169.0], [36.7, 169.0], [36.8, 169.0], [36.9, 169.0], [37.0, 169.0], [37.1, 169.0], [37.2, 169.0], [37.3, 169.0], [37.4, 169.0], [37.5, 169.0], [37.6, 169.0], [37.7, 170.0], [37.8, 170.0], [37.9, 170.0], [38.0, 170.0], [38.1, 170.0], [38.2, 170.0], [38.3, 170.0], [38.4, 170.0], [38.5, 170.0], [38.6, 170.0], [38.7, 170.0], [38.8, 170.0], [38.9, 170.0], [39.0, 170.0], [39.1, 170.0], [39.2, 170.0], [39.3, 172.0], [39.4, 172.0], [39.5, 172.0], [39.6, 172.0], [39.7, 172.0], [39.8, 172.0], [39.9, 172.0], [40.0, 172.0], [40.1, 173.0], [40.2, 173.0], [40.3, 173.0], [40.4, 173.0], [40.5, 173.0], [40.6, 173.0], [40.7, 173.0], [40.8, 173.0], [40.9, 173.0], [41.0, 173.0], [41.1, 173.0], [41.2, 173.0], [41.3, 173.0], [41.4, 173.0], [41.5, 173.0], [41.6, 173.0], [41.7, 173.0], [41.8, 173.0], [41.9, 173.0], [42.0, 173.0], [42.1, 173.0], [42.2, 173.0], [42.3, 173.0], [42.4, 173.0], [42.5, 173.0], [42.6, 173.0], [42.7, 173.0], [42.8, 173.0], [42.9, 173.0], [43.0, 173.0], [43.1, 174.0], [43.2, 174.0], [43.3, 174.0], [43.4, 174.0], [43.5, 174.0], [43.6, 174.0], [43.7, 174.0], [43.8, 174.0], [43.9, 175.0], [44.0, 175.0], [44.1, 175.0], [44.2, 175.0], [44.3, 175.0], [44.4, 175.0], [44.5, 175.0], [44.6, 175.0], [44.7, 176.0], [44.8, 176.0], [44.9, 176.0], [45.0, 176.0], [45.1, 176.0], [45.2, 176.0], [45.3, 176.0], [45.4, 176.0], [45.5, 176.0], [45.6, 176.0], [45.7, 176.0], [45.8, 176.0], [45.9, 176.0], [46.0, 176.0], [46.1, 176.0], [46.2, 176.0], [46.3, 176.0], [46.4, 176.0], [46.5, 176.0], [46.6, 176.0], [46.7, 176.0], [46.8, 176.0], [46.9, 176.0], [47.0, 177.0], [47.1, 177.0], [47.2, 177.0], [47.3, 177.0], [47.4, 177.0], [47.5, 177.0], [47.6, 177.0], [47.7, 177.0], [47.8, 177.0], [47.9, 177.0], [48.0, 177.0], [48.1, 177.0], [48.2, 177.0], [48.3, 177.0], [48.4, 177.0], [48.5, 177.0], [48.6, 177.0], [48.7, 177.0], [48.8, 177.0], [48.9, 177.0], [49.0, 177.0], [49.1, 177.0], [49.2, 177.0], [49.3, 179.0], [49.4, 179.0], [49.5, 179.0], [49.6, 179.0], [49.7, 179.0], [49.8, 179.0], [49.9, 179.0], [50.0, 179.0], [50.1, 179.0], [50.2, 179.0], [50.3, 179.0], [50.4, 179.0], [50.5, 179.0], [50.6, 179.0], [50.7, 179.0], [50.8, 180.0], [50.9, 180.0], [51.0, 180.0], [51.1, 180.0], [51.2, 180.0], [51.3, 180.0], [51.4, 180.0], [51.5, 180.0], [51.6, 180.0], [51.7, 180.0], [51.8, 180.0], [51.9, 180.0], [52.0, 180.0], [52.1, 180.0], [52.2, 180.0], [52.3, 180.0], [52.4, 180.0], [52.5, 180.0], [52.6, 180.0], [52.7, 180.0], [52.8, 180.0], [52.9, 180.0], [53.0, 180.0], [53.1, 180.0], [53.2, 180.0], [53.3, 180.0], [53.4, 180.0], [53.5, 180.0], [53.6, 180.0], [53.7, 180.0], [53.8, 180.0], [53.9, 180.0], [54.0, 180.0], [54.1, 180.0], [54.2, 180.0], [54.3, 180.0], [54.4, 180.0], [54.5, 180.0], [54.6, 180.0], [54.7, 181.0], [54.8, 181.0], [54.9, 181.0], [55.0, 181.0], [55.1, 181.0], [55.2, 181.0], [55.3, 181.0], [55.4, 181.0], [55.5, 181.0], [55.6, 181.0], [55.7, 181.0], [55.8, 181.0], [55.9, 181.0], [56.0, 181.0], [56.1, 181.0], [56.2, 184.0], [56.3, 184.0], [56.4, 184.0], [56.5, 184.0], [56.6, 184.0], [56.7, 184.0], [56.8, 184.0], [56.9, 184.0], [57.0, 185.0], [57.1, 185.0], [57.2, 185.0], [57.3, 185.0], [57.4, 185.0], [57.5, 185.0], [57.6, 185.0], [57.7, 185.0], [57.8, 185.0], [57.9, 185.0], [58.0, 185.0], [58.1, 185.0], [58.2, 185.0], [58.3, 185.0], [58.4, 185.0], [58.5, 186.0], [58.6, 186.0], [58.7, 186.0], [58.8, 186.0], [58.9, 186.0], [59.0, 186.0], [59.1, 186.0], [59.2, 186.0], [59.3, 189.0], [59.4, 189.0], [59.5, 189.0], [59.6, 189.0], [59.7, 189.0], [59.8, 189.0], [59.9, 189.0], [60.0, 190.0], [60.1, 190.0], [60.2, 190.0], [60.3, 190.0], [60.4, 190.0], [60.5, 190.0], [60.6, 190.0], [60.7, 190.0], [60.8, 191.0], [60.9, 191.0], [61.0, 191.0], [61.1, 191.0], [61.2, 191.0], [61.3, 191.0], [61.4, 191.0], [61.5, 191.0], [61.6, 191.0], [61.7, 191.0], [61.8, 191.0], [61.9, 191.0], [62.0, 191.0], [62.1, 191.0], [62.2, 191.0], [62.3, 191.0], [62.4, 192.0], [62.5, 192.0], [62.6, 192.0], [62.7, 192.0], [62.8, 192.0], [62.9, 192.0], [63.0, 192.0], [63.1, 192.0], [63.2, 192.0], [63.3, 192.0], [63.4, 192.0], [63.5, 192.0], [63.6, 192.0], [63.7, 192.0], [63.8, 192.0], [63.9, 192.0], [64.0, 192.0], [64.1, 192.0], [64.2, 192.0], [64.3, 192.0], [64.4, 192.0], [64.5, 192.0], [64.6, 192.0], [64.7, 193.0], [64.8, 193.0], [64.9, 193.0], [65.0, 193.0], [65.1, 193.0], [65.2, 193.0], [65.3, 193.0], [65.4, 193.0], [65.5, 193.0], [65.6, 193.0], [65.7, 193.0], [65.8, 193.0], [65.9, 193.0], [66.0, 193.0], [66.1, 193.0], [66.2, 193.0], [66.3, 193.0], [66.4, 193.0], [66.5, 193.0], [66.6, 193.0], [66.7, 193.0], [66.8, 193.0], [66.9, 193.0], [67.0, 194.0], [67.1, 194.0], [67.2, 194.0], [67.3, 194.0], [67.4, 194.0], [67.5, 194.0], [67.6, 194.0], [67.7, 196.0], [67.8, 196.0], [67.9, 196.0], [68.0, 196.0], [68.1, 196.0], [68.2, 196.0], [68.3, 196.0], [68.4, 196.0], [68.5, 197.0], [68.6, 197.0], [68.7, 197.0], [68.8, 197.0], [68.9, 197.0], [69.0, 197.0], [69.1, 197.0], [69.2, 197.0], [69.3, 198.0], [69.4, 198.0], [69.5, 198.0], [69.6, 198.0], [69.7, 198.0], [69.8, 198.0], [69.9, 198.0], [70.0, 198.0], [70.1, 200.0], [70.2, 200.0], [70.3, 200.0], [70.4, 200.0], [70.5, 200.0], [70.6, 200.0], [70.7, 200.0], [70.8, 202.0], [70.9, 202.0], [71.0, 202.0], [71.1, 202.0], [71.2, 202.0], [71.3, 202.0], [71.4, 202.0], [71.5, 202.0], [71.6, 203.0], [71.7, 203.0], [71.8, 203.0], [71.9, 203.0], [72.0, 203.0], [72.1, 203.0], [72.2, 203.0], [72.3, 203.0], [72.4, 203.0], [72.5, 203.0], [72.6, 203.0], [72.7, 203.0], [72.8, 203.0], [72.9, 203.0], [73.0, 203.0], [73.1, 204.0], [73.2, 204.0], [73.3, 204.0], [73.4, 204.0], [73.5, 204.0], [73.6, 204.0], [73.7, 204.0], [73.8, 204.0], [73.9, 205.0], [74.0, 205.0], [74.1, 205.0], [74.2, 205.0], [74.3, 205.0], [74.4, 205.0], [74.5, 205.0], [74.6, 205.0], [74.7, 206.0], [74.8, 206.0], [74.9, 206.0], [75.0, 206.0], [75.1, 206.0], [75.2, 206.0], [75.3, 206.0], [75.4, 208.0], [75.5, 208.0], [75.6, 208.0], [75.7, 208.0], [75.8, 208.0], [75.9, 208.0], [76.0, 208.0], [76.1, 208.0], [76.2, 210.0], [76.3, 210.0], [76.4, 210.0], [76.5, 210.0], [76.6, 210.0], [76.7, 210.0], [76.8, 210.0], [76.9, 210.0], [77.0, 213.0], [77.1, 213.0], [77.2, 213.0], [77.3, 213.0], [77.4, 213.0], [77.5, 213.0], [77.6, 213.0], [77.7, 214.0], [77.8, 214.0], [77.9, 214.0], [78.0, 214.0], [78.1, 214.0], [78.2, 214.0], [78.3, 214.0], [78.4, 214.0], [78.5, 215.0], [78.6, 215.0], [78.7, 215.0], [78.8, 215.0], [78.9, 215.0], [79.0, 215.0], [79.1, 215.0], [79.2, 215.0], [79.3, 215.0], [79.4, 215.0], [79.5, 215.0], [79.6, 215.0], [79.7, 215.0], [79.8, 215.0], [79.9, 215.0], [80.0, 215.0], [80.1, 231.0], [80.2, 231.0], [80.3, 231.0], [80.4, 231.0], [80.5, 231.0], [80.6, 231.0], [80.7, 231.0], [80.8, 231.0], [80.9, 231.0], [81.0, 231.0], [81.1, 231.0], [81.2, 231.0], [81.3, 231.0], [81.4, 231.0], [81.5, 231.0], [81.6, 238.0], [81.7, 238.0], [81.8, 238.0], [81.9, 238.0], [82.0, 238.0], [82.1, 238.0], [82.2, 238.0], [82.3, 238.0], [82.4, 243.0], [82.5, 243.0], [82.6, 243.0], [82.7, 243.0], [82.8, 243.0], [82.9, 243.0], [83.0, 243.0], [83.1, 244.0], [83.2, 244.0], [83.3, 244.0], [83.4, 244.0], [83.5, 244.0], [83.6, 244.0], [83.7, 244.0], [83.8, 244.0], [83.9, 247.0], [84.0, 247.0], [84.1, 247.0], [84.2, 247.0], [84.3, 247.0], [84.4, 247.0], [84.5, 247.0], [84.6, 247.0], [84.7, 249.0], [84.8, 249.0], [84.9, 249.0], [85.0, 249.0], [85.1, 249.0], [85.2, 249.0], [85.3, 249.0], [85.4, 250.0], [85.5, 250.0], [85.6, 250.0], [85.7, 250.0], [85.8, 250.0], [85.9, 250.0], [86.0, 250.0], [86.1, 250.0], [86.2, 259.0], [86.3, 259.0], [86.4, 259.0], [86.5, 259.0], [86.6, 259.0], [86.7, 259.0], [86.8, 259.0], [86.9, 259.0], [87.0, 273.0], [87.1, 273.0], [87.2, 273.0], [87.3, 273.0], [87.4, 273.0], [87.5, 273.0], [87.6, 273.0], [87.7, 280.0], [87.8, 280.0], [87.9, 280.0], [88.0, 280.0], [88.1, 280.0], [88.2, 280.0], [88.3, 280.0], [88.4, 280.0], [88.5, 280.0], [88.6, 280.0], [88.7, 280.0], [88.8, 280.0], [88.9, 280.0], [89.0, 280.0], [89.1, 280.0], [89.2, 280.0], [89.3, 286.0], [89.4, 286.0], [89.5, 286.0], [89.6, 286.0], [89.7, 286.0], [89.8, 286.0], [89.9, 286.0], [90.0, 286.0], [90.1, 287.0], [90.2, 287.0], [90.3, 287.0], [90.4, 287.0], [90.5, 287.0], [90.6, 287.0], [90.7, 287.0], [90.8, 311.0], [90.9, 311.0], [91.0, 311.0], [91.1, 311.0], [91.2, 311.0], [91.3, 311.0], [91.4, 311.0], [91.5, 311.0], [91.6, 313.0], [91.7, 313.0], [91.8, 313.0], [91.9, 313.0], [92.0, 313.0], [92.1, 313.0], [92.2, 313.0], [92.3, 313.0], [92.4, 322.0], [92.5, 322.0], [92.6, 322.0], [92.7, 322.0], [92.8, 322.0], [92.9, 322.0], [93.0, 322.0], [93.1, 329.0], [93.2, 329.0], [93.3, 329.0], [93.4, 329.0], [93.5, 329.0], [93.6, 329.0], [93.7, 329.0], [93.8, 329.0], [93.9, 343.0], [94.0, 343.0], [94.1, 343.0], [94.2, 343.0], [94.3, 343.0], [94.4, 343.0], [94.5, 343.0], [94.6, 343.0], [94.7, 344.0], [94.8, 344.0], [94.9, 344.0], [95.0, 344.0], [95.1, 344.0], [95.2, 344.0], [95.3, 344.0], [95.4, 351.0], [95.5, 351.0], [95.6, 351.0], [95.7, 351.0], [95.8, 351.0], [95.9, 351.0], [96.0, 351.0], [96.1, 351.0], [96.2, 510.0], [96.3, 510.0], [96.4, 510.0], [96.5, 510.0], [96.6, 510.0], [96.7, 510.0], [96.8, 510.0], [96.9, 510.0], [97.0, 647.0], [97.1, 647.0], [97.2, 647.0], [97.3, 647.0], [97.4, 647.0], [97.5, 647.0], [97.6, 647.0], [97.7, 1094.0], [97.8, 1094.0], [97.9, 1094.0], [98.0, 1094.0], [98.1, 1094.0], [98.2, 1094.0], [98.3, 1094.0], [98.4, 1094.0], [98.5, 1283.0], [98.6, 1283.0], [98.7, 1283.0], [98.8, 1283.0], [98.9, 1283.0], [99.0, 1283.0], [99.1, 1283.0], [99.2, 1283.0], [99.3, 1455.0], [99.4, 1455.0], [99.5, 1455.0], [99.6, 1455.0], [99.7, 1455.0], [99.8, 1455.0], [99.9, 1455.0], [100.0, 1455.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 3.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 7.0], [1.2, 7.0], [1.3, 7.0], [1.4, 7.0], [1.5, 7.0], [1.6, 7.0], [1.7, 7.0], [1.8, 7.0], [1.9, 7.0], [2.0, 8.0], [2.1, 8.0], [2.2, 8.0], [2.3, 8.0], [2.4, 8.0], [2.5, 8.0], [2.6, 8.0], [2.7, 8.0], [2.8, 8.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 9.0], [3.6, 9.0], [3.7, 10.0], [3.8, 10.0], [3.9, 10.0], [4.0, 10.0], [4.1, 10.0], [4.2, 10.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 12.0], [4.7, 12.0], [4.8, 12.0], [4.9, 13.0], [5.0, 14.0], [5.1, 15.0], [5.2, 16.0], [5.3, 18.0], [5.4, 21.0], [5.5, 24.0], [5.6, 29.0], [5.7, 32.0], [5.8, 34.0], [5.9, 36.0], [6.0, 37.0], [6.1, 37.0], [6.2, 38.0], [6.3, 38.0], [6.4, 39.0], [6.5, 39.0], [6.6, 40.0], [6.7, 40.0], [6.8, 41.0], [6.9, 41.0], [7.0, 42.0], [7.1, 42.0], [7.2, 43.0], [7.3, 43.0], [7.4, 43.0], [7.5, 43.0], [7.6, 44.0], [7.7, 44.0], [7.8, 44.0], [7.9, 45.0], [8.0, 45.0], [8.1, 45.0], [8.2, 45.0], [8.3, 45.0], [8.4, 46.0], [8.5, 46.0], [8.6, 46.0], [8.7, 46.0], [8.8, 47.0], [8.9, 47.0], [9.0, 47.0], [9.1, 47.0], [9.2, 48.0], [9.3, 48.0], [9.4, 48.0], [9.5, 48.0], [9.6, 48.0], [9.7, 49.0], [9.8, 49.0], [9.9, 49.0], [10.0, 49.0], [10.1, 50.0], [10.2, 50.0], [10.3, 50.0], [10.4, 51.0], [10.5, 51.0], [10.6, 51.0], [10.7, 52.0], [10.8, 52.0], [10.9, 52.0], [11.0, 53.0], [11.1, 53.0], [11.2, 53.0], [11.3, 54.0], [11.4, 54.0], [11.5, 54.0], [11.6, 55.0], [11.7, 55.0], [11.8, 55.0], [11.9, 56.0], [12.0, 56.0], [12.1, 57.0], [12.2, 57.0], [12.3, 58.0], [12.4, 58.0], [12.5, 58.0], [12.6, 59.0], [12.7, 59.0], [12.8, 60.0], [12.9, 61.0], [13.0, 61.0], [13.1, 62.0], [13.2, 63.0], [13.3, 64.0], [13.4, 65.0], [13.5, 66.0], [13.6, 67.0], [13.7, 68.0], [13.8, 69.0], [13.9, 71.0], [14.0, 73.0], [14.1, 77.0], [14.2, 80.0], [14.3, 82.0], [14.4, 86.0], [14.5, 93.0], [14.6, 98.0], [14.7, 107.0], [14.8, 118.0], [14.9, 133.0], [15.0, 151.0], [15.1, 164.0], [15.2, 188.0], [15.3, 211.0], [15.4, 238.0], [15.5, 254.0], [15.6, 271.0], [15.7, 279.0], [15.8, 292.0], [15.9, 305.0], [16.0, 323.0], [16.1, 330.0], [16.2, 341.0], [16.3, 358.0], [16.4, 370.0], [16.5, 388.0], [16.6, 400.0], [16.7, 406.0], [16.8, 414.0], [16.9, 427.0], [17.0, 438.0], [17.1, 447.0], [17.2, 454.0], [17.3, 462.0], [17.4, 470.0], [17.5, 478.0], [17.6, 482.0], [17.7, 489.0], [17.8, 495.0], [17.9, 503.0], [18.0, 510.0], [18.1, 516.0], [18.2, 522.0], [18.3, 527.0], [18.4, 530.0], [18.5, 535.0], [18.6, 538.0], [18.7, 544.0], [18.8, 550.0], [18.9, 559.0], [19.0, 564.0], [19.1, 570.0], [19.2, 575.0], [19.3, 582.0], [19.4, 588.0], [19.5, 592.0], [19.6, 597.0], [19.7, 604.0], [19.8, 609.0], [19.9, 616.0], [20.0, 622.0], [20.1, 628.0], [20.2, 631.0], [20.3, 637.0], [20.4, 644.0], [20.5, 649.0], [20.6, 652.0], [20.7, 657.0], [20.8, 661.0], [20.9, 667.0], [21.0, 674.0], [21.1, 678.0], [21.2, 684.0], [21.3, 688.0], [21.4, 693.0], [21.5, 697.0], [21.6, 700.0], [21.7, 703.0], [21.8, 707.0], [21.9, 710.0], [22.0, 713.0], [22.1, 719.0], [22.2, 722.0], [22.3, 727.0], [22.4, 732.0], [22.5, 735.0], [22.6, 740.0], [22.7, 743.0], [22.8, 747.0], [22.9, 750.0], [23.0, 753.0], [23.1, 759.0], [23.2, 763.0], [23.3, 767.0], [23.4, 770.0], [23.5, 774.0], [23.6, 777.0], [23.7, 781.0], [23.8, 784.0], [23.9, 789.0], [24.0, 792.0], [24.1, 797.0], [24.2, 801.0], [24.3, 803.0], [24.4, 806.0], [24.5, 809.0], [24.6, 811.0], [24.7, 814.0], [24.8, 817.0], [24.9, 821.0], [25.0, 823.0], [25.1, 825.0], [25.2, 830.0], [25.3, 833.0], [25.4, 837.0], [25.5, 840.0], [25.6, 844.0], [25.7, 848.0], [25.8, 851.0], [25.9, 857.0], [26.0, 862.0], [26.1, 866.0], [26.2, 869.0], [26.3, 871.0], [26.4, 874.0], [26.5, 876.0], [26.6, 880.0], [26.7, 882.0], [26.8, 885.0], [26.9, 890.0], [27.0, 892.0], [27.1, 895.0], [27.2, 898.0], [27.3, 901.0], [27.4, 906.0], [27.5, 909.0], [27.6, 912.0], [27.7, 914.0], [27.8, 917.0], [27.9, 921.0], [28.0, 923.0], [28.1, 926.0], [28.2, 930.0], [28.3, 932.0], [28.4, 934.0], [28.5, 938.0], [28.6, 941.0], [28.7, 946.0], [28.8, 948.0], [28.9, 951.0], [29.0, 955.0], [29.1, 958.0], [29.2, 960.0], [29.3, 962.0], [29.4, 964.0], [29.5, 966.0], [29.6, 969.0], [29.7, 972.0], [29.8, 975.0], [29.9, 979.0], [30.0, 982.0], [30.1, 984.0], [30.2, 987.0], [30.3, 989.0], [30.4, 991.0], [30.5, 995.0], [30.6, 998.0], [30.7, 1001.0], [30.8, 1004.0], [30.9, 1005.0], [31.0, 1008.0], [31.1, 1011.0], [31.2, 1014.0], [31.3, 1016.0], [31.4, 1019.0], [31.5, 1021.0], [31.6, 1024.0], [31.7, 1026.0], [31.8, 1028.0], [31.9, 1030.0], [32.0, 1032.0], [32.1, 1034.0], [32.2, 1037.0], [32.3, 1039.0], [32.4, 1041.0], [32.5, 1043.0], [32.6, 1046.0], [32.7, 1048.0], [32.8, 1050.0], [32.9, 1051.0], [33.0, 1054.0], [33.1, 1055.0], [33.2, 1057.0], [33.3, 1060.0], [33.4, 1061.0], [33.5, 1063.0], [33.6, 1066.0], [33.7, 1069.0], [33.8, 1070.0], [33.9, 1072.0], [34.0, 1074.0], [34.1, 1076.0], [34.2, 1079.0], [34.3, 1081.0], [34.4, 1083.0], [34.5, 1085.0], [34.6, 1086.0], [34.7, 1088.0], [34.8, 1090.0], [34.9, 1091.0], [35.0, 1093.0], [35.1, 1095.0], [35.2, 1098.0], [35.3, 1101.0], [35.4, 1102.0], [35.5, 1105.0], [35.6, 1106.0], [35.7, 1108.0], [35.8, 1110.0], [35.9, 1111.0], [36.0, 1114.0], [36.1, 1116.0], [36.2, 1118.0], [36.3, 1121.0], [36.4, 1123.0], [36.5, 1126.0], [36.6, 1127.0], [36.7, 1129.0], [36.8, 1131.0], [36.9, 1133.0], [37.0, 1135.0], [37.1, 1137.0], [37.2, 1139.0], [37.3, 1140.0], [37.4, 1141.0], [37.5, 1142.0], [37.6, 1144.0], [37.7, 1146.0], [37.8, 1149.0], [37.9, 1152.0], [38.0, 1154.0], [38.1, 1156.0], [38.2, 1158.0], [38.3, 1160.0], [38.4, 1162.0], [38.5, 1165.0], [38.6, 1168.0], [38.7, 1170.0], [38.8, 1173.0], [38.9, 1175.0], [39.0, 1177.0], [39.1, 1179.0], [39.2, 1181.0], [39.3, 1184.0], [39.4, 1185.0], [39.5, 1187.0], [39.6, 1189.0], [39.7, 1191.0], [39.8, 1193.0], [39.9, 1195.0], [40.0, 1197.0], [40.1, 1199.0], [40.2, 1201.0], [40.3, 1203.0], [40.4, 1206.0], [40.5, 1207.0], [40.6, 1209.0], [40.7, 1211.0], [40.8, 1214.0], [40.9, 1216.0], [41.0, 1218.0], [41.1, 1220.0], [41.2, 1222.0], [41.3, 1224.0], [41.4, 1225.0], [41.5, 1226.0], [41.6, 1228.0], [41.7, 1230.0], [41.8, 1232.0], [41.9, 1234.0], [42.0, 1236.0], [42.1, 1238.0], [42.2, 1241.0], [42.3, 1242.0], [42.4, 1244.0], [42.5, 1246.0], [42.6, 1249.0], [42.7, 1251.0], [42.8, 1253.0], [42.9, 1257.0], [43.0, 1259.0], [43.1, 1261.0], [43.2, 1263.0], [43.3, 1264.0], [43.4, 1267.0], [43.5, 1269.0], [43.6, 1270.0], [43.7, 1273.0], [43.8, 1275.0], [43.9, 1277.0], [44.0, 1279.0], [44.1, 1280.0], [44.2, 1281.0], [44.3, 1283.0], [44.4, 1285.0], [44.5, 1287.0], [44.6, 1289.0], [44.7, 1291.0], [44.8, 1293.0], [44.9, 1295.0], [45.0, 1296.0], [45.1, 1298.0], [45.2, 1301.0], [45.3, 1303.0], [45.4, 1304.0], [45.5, 1305.0], [45.6, 1307.0], [45.7, 1309.0], [45.8, 1311.0], [45.9, 1313.0], [46.0, 1315.0], [46.1, 1316.0], [46.2, 1319.0], [46.3, 1320.0], [46.4, 1321.0], [46.5, 1324.0], [46.6, 1325.0], [46.7, 1326.0], [46.8, 1328.0], [46.9, 1330.0], [47.0, 1332.0], [47.1, 1335.0], [47.2, 1336.0], [47.3, 1339.0], [47.4, 1341.0], [47.5, 1343.0], [47.6, 1344.0], [47.7, 1346.0], [47.8, 1349.0], [47.9, 1351.0], [48.0, 1352.0], [48.1, 1354.0], [48.2, 1356.0], [48.3, 1358.0], [48.4, 1360.0], [48.5, 1362.0], [48.6, 1365.0], [48.7, 1366.0], [48.8, 1367.0], [48.9, 1369.0], [49.0, 1370.0], [49.1, 1372.0], [49.2, 1374.0], [49.3, 1375.0], [49.4, 1378.0], [49.5, 1380.0], [49.6, 1381.0], [49.7, 1383.0], [49.8, 1386.0], [49.9, 1386.0], [50.0, 1389.0], [50.1, 1390.0], [50.2, 1392.0], [50.3, 1394.0], [50.4, 1397.0], [50.5, 1398.0], [50.6, 1399.0], [50.7, 1402.0], [50.8, 1405.0], [50.9, 1407.0], [51.0, 1408.0], [51.1, 1409.0], [51.2, 1412.0], [51.3, 1413.0], [51.4, 1415.0], [51.5, 1417.0], [51.6, 1419.0], [51.7, 1421.0], [51.8, 1424.0], [51.9, 1427.0], [52.0, 1429.0], [52.1, 1431.0], [52.2, 1432.0], [52.3, 1434.0], [52.4, 1436.0], [52.5, 1438.0], [52.6, 1440.0], [52.7, 1441.0], [52.8, 1442.0], [52.9, 1444.0], [53.0, 1446.0], [53.1, 1448.0], [53.2, 1450.0], [53.3, 1453.0], [53.4, 1455.0], [53.5, 1457.0], [53.6, 1458.0], [53.7, 1460.0], [53.8, 1462.0], [53.9, 1463.0], [54.0, 1466.0], [54.1, 1468.0], [54.2, 1470.0], [54.3, 1471.0], [54.4, 1472.0], [54.5, 1475.0], [54.6, 1477.0], [54.7, 1479.0], [54.8, 1481.0], [54.9, 1482.0], [55.0, 1485.0], [55.1, 1486.0], [55.2, 1488.0], [55.3, 1490.0], [55.4, 1492.0], [55.5, 1493.0], [55.6, 1495.0], [55.7, 1498.0], [55.8, 1500.0], [55.9, 1502.0], [56.0, 1503.0], [56.1, 1505.0], [56.2, 1507.0], [56.3, 1508.0], [56.4, 1510.0], [56.5, 1512.0], [56.6, 1514.0], [56.7, 1517.0], [56.8, 1520.0], [56.9, 1522.0], [57.0, 1524.0], [57.1, 1525.0], [57.2, 1526.0], [57.3, 1529.0], [57.4, 1532.0], [57.5, 1533.0], [57.6, 1535.0], [57.7, 1537.0], [57.8, 1538.0], [57.9, 1540.0], [58.0, 1542.0], [58.1, 1544.0], [58.2, 1546.0], [58.3, 1548.0], [58.4, 1549.0], [58.5, 1551.0], [58.6, 1554.0], [58.7, 1555.0], [58.8, 1556.0], [58.9, 1558.0], [59.0, 1559.0], [59.1, 1561.0], [59.2, 1564.0], [59.3, 1565.0], [59.4, 1568.0], [59.5, 1569.0], [59.6, 1570.0], [59.7, 1572.0], [59.8, 1573.0], [59.9, 1575.0], [60.0, 1577.0], [60.1, 1578.0], [60.2, 1580.0], [60.3, 1582.0], [60.4, 1585.0], [60.5, 1586.0], [60.6, 1588.0], [60.7, 1590.0], [60.8, 1592.0], [60.9, 1594.0], [61.0, 1596.0], [61.1, 1598.0], [61.2, 1599.0], [61.3, 1600.0], [61.4, 1602.0], [61.5, 1604.0], [61.6, 1607.0], [61.7, 1610.0], [61.8, 1611.0], [61.9, 1613.0], [62.0, 1616.0], [62.1, 1617.0], [62.2, 1619.0], [62.3, 1621.0], [62.4, 1623.0], [62.5, 1626.0], [62.6, 1628.0], [62.7, 1630.0], [62.8, 1632.0], [62.9, 1634.0], [63.0, 1636.0], [63.1, 1637.0], [63.2, 1639.0], [63.3, 1640.0], [63.4, 1643.0], [63.5, 1646.0], [63.6, 1647.0], [63.7, 1649.0], [63.8, 1651.0], [63.9, 1653.0], [64.0, 1654.0], [64.1, 1655.0], [64.2, 1657.0], [64.3, 1660.0], [64.4, 1663.0], [64.5, 1667.0], [64.6, 1668.0], [64.7, 1671.0], [64.8, 1672.0], [64.9, 1673.0], [65.0, 1675.0], [65.1, 1678.0], [65.2, 1680.0], [65.3, 1681.0], [65.4, 1683.0], [65.5, 1686.0], [65.6, 1689.0], [65.7, 1691.0], [65.8, 1693.0], [65.9, 1696.0], [66.0, 1699.0], [66.1, 1701.0], [66.2, 1702.0], [66.3, 1705.0], [66.4, 1706.0], [66.5, 1708.0], [66.6, 1709.0], [66.7, 1713.0], [66.8, 1714.0], [66.9, 1715.0], [67.0, 1717.0], [67.1, 1719.0], [67.2, 1722.0], [67.3, 1724.0], [67.4, 1726.0], [67.5, 1729.0], [67.6, 1731.0], [67.7, 1734.0], [67.8, 1736.0], [67.9, 1738.0], [68.0, 1739.0], [68.1, 1741.0], [68.2, 1743.0], [68.3, 1745.0], [68.4, 1747.0], [68.5, 1749.0], [68.6, 1752.0], [68.7, 1753.0], [68.8, 1756.0], [68.9, 1759.0], [69.0, 1761.0], [69.1, 1763.0], [69.2, 1765.0], [69.3, 1767.0], [69.4, 1768.0], [69.5, 1771.0], [69.6, 1773.0], [69.7, 1774.0], [69.8, 1776.0], [69.9, 1778.0], [70.0, 1780.0], [70.1, 1783.0], [70.2, 1785.0], [70.3, 1787.0], [70.4, 1789.0], [70.5, 1791.0], [70.6, 1793.0], [70.7, 1795.0], [70.8, 1797.0], [70.9, 1798.0], [71.0, 1801.0], [71.1, 1803.0], [71.2, 1805.0], [71.3, 1807.0], [71.4, 1809.0], [71.5, 1812.0], [71.6, 1814.0], [71.7, 1815.0], [71.8, 1818.0], [71.9, 1821.0], [72.0, 1824.0], [72.1, 1826.0], [72.2, 1830.0], [72.3, 1832.0], [72.4, 1833.0], [72.5, 1836.0], [72.6, 1839.0], [72.7, 1843.0], [72.8, 1844.0], [72.9, 1847.0], [73.0, 1849.0], [73.1, 1850.0], [73.2, 1854.0], [73.3, 1856.0], [73.4, 1857.0], [73.5, 1859.0], [73.6, 1861.0], [73.7, 1863.0], [73.8, 1866.0], [73.9, 1869.0], [74.0, 1871.0], [74.1, 1875.0], [74.2, 1877.0], [74.3, 1879.0], [74.4, 1881.0], [74.5, 1883.0], [74.6, 1885.0], [74.7, 1888.0], [74.8, 1889.0], [74.9, 1892.0], [75.0, 1893.0], [75.1, 1895.0], [75.2, 1897.0], [75.3, 1899.0], [75.4, 1901.0], [75.5, 1903.0], [75.6, 1906.0], [75.7, 1908.0], [75.8, 1912.0], [75.9, 1915.0], [76.0, 1917.0], [76.1, 1919.0], [76.2, 1922.0], [76.3, 1925.0], [76.4, 1928.0], [76.5, 1932.0], [76.6, 1935.0], [76.7, 1938.0], [76.8, 1940.0], [76.9, 1942.0], [77.0, 1945.0], [77.1, 1948.0], [77.2, 1950.0], [77.3, 1952.0], [77.4, 1954.0], [77.5, 1959.0], [77.6, 1961.0], [77.7, 1964.0], [77.8, 1967.0], [77.9, 1969.0], [78.0, 1972.0], [78.1, 1976.0], [78.2, 1979.0], [78.3, 1981.0], [78.4, 1984.0], [78.5, 1987.0], [78.6, 1990.0], [78.7, 1992.0], [78.8, 1995.0], [78.9, 1997.0], [79.0, 2000.0], [79.1, 2003.0], [79.2, 2005.0], [79.3, 2007.0], [79.4, 2011.0], [79.5, 2013.0], [79.6, 2016.0], [79.7, 2019.0], [79.8, 2023.0], [79.9, 2026.0], [80.0, 2028.0], [80.1, 2030.0], [80.2, 2032.0], [80.3, 2034.0], [80.4, 2036.0], [80.5, 2039.0], [80.6, 2042.0], [80.7, 2043.0], [80.8, 2046.0], [80.9, 2048.0], [81.0, 2051.0], [81.1, 2054.0], [81.2, 2058.0], [81.3, 2061.0], [81.4, 2063.0], [81.5, 2067.0], [81.6, 2069.0], [81.7, 2071.0], [81.8, 2073.0], [81.9, 2075.0], [82.0, 2078.0], [82.1, 2082.0], [82.2, 2084.0], [82.3, 2086.0], [82.4, 2089.0], [82.5, 2093.0], [82.6, 2098.0], [82.7, 2102.0], [82.8, 2105.0], [82.9, 2109.0], [83.0, 2112.0], [83.1, 2116.0], [83.2, 2118.0], [83.3, 2121.0], [83.4, 2123.0], [83.5, 2126.0], [83.6, 2129.0], [83.7, 2132.0], [83.8, 2135.0], [83.9, 2137.0], [84.0, 2142.0], [84.1, 2145.0], [84.2, 2149.0], [84.3, 2152.0], [84.4, 2154.0], [84.5, 2157.0], [84.6, 2160.0], [84.7, 2163.0], [84.8, 2167.0], [84.9, 2169.0], [85.0, 2173.0], [85.1, 2179.0], [85.2, 2182.0], [85.3, 2187.0], [85.4, 2191.0], [85.5, 2194.0], [85.6, 2199.0], [85.7, 2205.0], [85.8, 2211.0], [85.9, 2215.0], [86.0, 2220.0], [86.1, 2224.0], [86.2, 2228.0], [86.3, 2230.0], [86.4, 2236.0], [86.5, 2238.0], [86.6, 2241.0], [86.7, 2245.0], [86.8, 2249.0], [86.9, 2253.0], [87.0, 2258.0], [87.1, 2265.0], [87.2, 2268.0], [87.3, 2270.0], [87.4, 2276.0], [87.5, 2280.0], [87.6, 2283.0], [87.7, 2286.0], [87.8, 2291.0], [87.9, 2295.0], [88.0, 2300.0], [88.1, 2303.0], [88.2, 2307.0], [88.3, 2310.0], [88.4, 2316.0], [88.5, 2320.0], [88.6, 2324.0], [88.7, 2328.0], [88.8, 2333.0], [88.9, 2338.0], [89.0, 2348.0], [89.1, 2352.0], [89.2, 2357.0], [89.3, 2363.0], [89.4, 2370.0], [89.5, 2376.0], [89.6, 2382.0], [89.7, 2385.0], [89.8, 2389.0], [89.9, 2394.0], [90.0, 2398.0], [90.1, 2402.0], [90.2, 2409.0], [90.3, 2413.0], [90.4, 2419.0], [90.5, 2424.0], [90.6, 2430.0], [90.7, 2438.0], [90.8, 2444.0], [90.9, 2450.0], [91.0, 2454.0], [91.1, 2459.0], [91.2, 2462.0], [91.3, 2470.0], [91.4, 2477.0], [91.5, 2484.0], [91.6, 2488.0], [91.7, 2494.0], [91.8, 2499.0], [91.9, 2504.0], [92.0, 2511.0], [92.1, 2518.0], [92.2, 2522.0], [92.3, 2527.0], [92.4, 2531.0], [92.5, 2538.0], [92.6, 2545.0], [92.7, 2550.0], [92.8, 2563.0], [92.9, 2569.0], [93.0, 2574.0], [93.1, 2584.0], [93.2, 2590.0], [93.3, 2598.0], [93.4, 2606.0], [93.5, 2614.0], [93.6, 2620.0], [93.7, 2627.0], [93.8, 2631.0], [93.9, 2639.0], [94.0, 2645.0], [94.1, 2661.0], [94.2, 2669.0], [94.3, 2676.0], [94.4, 2685.0], [94.5, 2697.0], [94.6, 2705.0], [94.7, 2712.0], [94.8, 2719.0], [94.9, 2728.0], [95.0, 2740.0], [95.1, 2747.0], [95.2, 2759.0], [95.3, 2774.0], [95.4, 2782.0], [95.5, 2790.0], [95.6, 2801.0], [95.7, 2808.0], [95.8, 2818.0], [95.9, 2824.0], [96.0, 2836.0], [96.1, 2848.0], [96.2, 2858.0], [96.3, 2869.0], [96.4, 2879.0], [96.5, 2894.0], [96.6, 2903.0], [96.7, 2918.0], [96.8, 2932.0], [96.9, 2949.0], [97.0, 2963.0], [97.1, 2983.0], [97.2, 3000.0], [97.3, 3012.0], [97.4, 3024.0], [97.5, 3036.0], [97.6, 3063.0], [97.7, 3091.0], [97.8, 3107.0], [97.9, 3127.0], [98.0, 3144.0], [98.1, 3183.0], [98.2, 3200.0], [98.3, 3240.0], [98.4, 3257.0], [98.5, 3287.0], [98.6, 3307.0], [98.7, 3324.0], [98.8, 3361.0], [98.9, 3397.0], [99.0, 3447.0], [99.1, 3505.0], [99.2, 3550.0], [99.3, 3585.0], [99.4, 3653.0], [99.5, 3788.0], [99.6, 3874.0], [99.7, 4012.0], [99.8, 4134.0], [99.9, 4411.0], [100.0, 5046.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1986.0, "series": [{"data": [[0.0, 1986.0], [600.0, 275.0], [700.0, 356.0], [800.0, 414.0], [900.0, 474.0], [1000.0, 556.0], [1100.0, 587.0], [1200.0, 670.0], [1300.0, 682.0], [1400.0, 755.0], [1500.0, 645.0], [1600.0, 698.0], [1700.0, 616.0], [1800.0, 595.0], [1900.0, 495.0], [2000.0, 422.0], [2100.0, 372.0], [2200.0, 281.0], [2300.0, 260.0], [2400.0, 254.0], [2500.0, 162.0], [2600.0, 158.0], [2700.0, 112.0], [2800.0, 104.0], [2900.0, 73.0], [3000.0, 65.0], [3100.0, 61.0], [3200.0, 61.0], [3300.0, 34.0], [3400.0, 28.0], [3500.0, 32.0], [3600.0, 11.0], [3700.0, 14.0], [3800.0, 12.0], [3900.0, 15.0], [4000.0, 13.0], [4100.0, 8.0], [4300.0, 3.0], [4200.0, 8.0], [4400.0, 3.0], [4600.0, 5.0], [4500.0, 3.0], [4800.0, 2.0], [5000.0, 1.0], [5900.0, 1.0], [100.0, 86.0], [200.0, 65.0], [300.0, 100.0], [400.0, 144.0], [500.0, 223.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1200.0, 1.0], [300.0, 7.0], [600.0, 1.0], [1400.0, 1.0], [200.0, 27.0], [100.0, 91.0], [1000.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1902.0], [600.0, 249.0], [700.0, 342.0], [800.0, 397.0], [900.0, 443.0], [1000.0, 599.0], [1100.0, 631.0], [1200.0, 658.0], [1300.0, 707.0], [1400.0, 674.0], [1500.0, 712.0], [1600.0, 621.0], [1700.0, 636.0], [1800.0, 573.0], [1900.0, 472.0], [2000.0, 477.0], [2100.0, 386.0], [2200.0, 307.0], [2300.0, 267.0], [2400.0, 231.0], [2500.0, 196.0], [2600.0, 157.0], [2700.0, 140.0], [2800.0, 124.0], [2900.0, 84.0], [3000.0, 72.0], [3100.0, 58.0], [3200.0, 46.0], [3300.0, 47.0], [3400.0, 22.0], [3500.0, 31.0], [3600.0, 16.0], [3700.0, 10.0], [3800.0, 12.0], [3900.0, 10.0], [4000.0, 11.0], [4100.0, 4.0], [4200.0, 8.0], [4300.0, 4.0], [4400.0, 4.0], [4500.0, 4.0], [4600.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5000.0, 2.0], [100.0, 81.0], [200.0, 79.0], [300.0, 94.0], [400.0, 163.0], [500.0, 233.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1671.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 11286.0, "series": [{"data": [[0.0, 3306.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 9867.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 11286.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1671.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 31.604790419161674, "minX": 1.58542818E12, "maxY": 130.0, "series": [{"data": [[1.58542872E12, 130.0], [1.58542842E12, 130.0], [1.58542878E12, 130.0], [1.58542866E12, 130.0], [1.58542836E12, 130.0], [1.58542824E12, 104.96954096954109], [1.5854289E12, 37.21282798833822], [1.5854286E12, 130.0], [1.5854283E12, 130.0], [1.58542848E12, 130.0], [1.58542818E12, 31.604790419161674], [1.58542884E12, 104.2472837896566], [1.58542854E12, 130.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854289E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 31.0, "minX": 1.0, "maxY": 1755.2592592592591, "series": [{"data": [[3.0, 45.333333333333336], [4.0, 62.0], [6.0, 60.0], [7.0, 63.5], [8.0, 58.333333333333336], [9.0, 43.5], [10.0, 73.0], [11.0, 58.5], [12.0, 56.2], [13.0, 31.0], [15.0, 52.5], [16.0, 54.2], [17.0, 54.0], [18.0, 57.333333333333336], [19.0, 57.0], [20.0, 45.4], [21.0, 48.090909090909086], [22.0, 41.0], [23.0, 55.5], [24.0, 43.0], [25.0, 46.16666666666667], [26.0, 49.3], [27.0, 61.333333333333336], [28.0, 54.909090909090914], [29.0, 51.0], [30.0, 55.0], [31.0, 52.125], [32.0, 42.333333333333336], [33.0, 112.30000000000001], [34.0, 46.42857142857142], [35.0, 53.0], [36.0, 49.0], [37.0, 47.4], [38.0, 58.4], [39.0, 52.375], [41.0, 158.43999999999994], [40.0, 59.0], [42.0, 121.66666666666667], [43.0, 56.4], [44.0, 50.6], [45.0, 53.22222222222222], [46.0, 49.12500000000001], [47.0, 52.42857142857143], [48.0, 50.25], [49.0, 57.6], [50.0, 72.21052631578947], [51.0, 55.08333333333333], [52.0, 46.08333333333333], [53.0, 44.44444444444445], [54.0, 56.4], [55.0, 50.75], [56.0, 44.57142857142857], [57.0, 46.24999999999999], [58.0, 49.666666666666664], [59.0, 53.83333333333332], [60.0, 50.45454545454545], [61.0, 51.0], [62.0, 68.6923076923077], [63.0, 52.16666666666667], [64.0, 51.01960784313726], [65.0, 52.384615384615394], [66.0, 51.875], [67.0, 47.43478260869565], [68.0, 58.18518518518518], [69.0, 113.92857142857143], [70.0, 164.42857142857142], [71.0, 52.714285714285715], [72.0, 58.25], [73.0, 58.642857142857146], [74.0, 50.611111111111114], [75.0, 76.85714285714285], [76.0, 51.666666666666664], [77.0, 66.90909090909092], [78.0, 107.5], [79.0, 50.714285714285715], [80.0, 51.03448275862068], [81.0, 67.41379310344826], [82.0, 281.4], [83.0, 651.0], [84.0, 789.1538461538462], [85.0, 575.5454545454545], [86.0, 48.64705882352941], [87.0, 50.6875], [88.0, 53.39024390243903], [89.0, 274.57142857142856], [90.0, 643.764705882353], [91.0, 163.27777777777777], [92.0, 53.99999999999999], [93.0, 57.62500000000001], [94.0, 52.80000000000001], [95.0, 465.80357142857133], [96.0, 237.64705882352942], [97.0, 110.0], [98.0, 449.59999999999997], [99.0, 470.2307692307693], [100.0, 733.9324324324323], [101.0, 640.6666666666666], [102.0, 366.4117647058824], [103.0, 486.50000000000006], [104.0, 344.6153846153846], [105.0, 217.58823529411765], [106.0, 128.2], [107.0, 299.9473684210526], [108.0, 745.0], [109.0, 585.8421052631579], [110.0, 638.2], [111.0, 1009.1666666666666], [112.0, 930.9166666666667], [113.0, 1206.125], [114.0, 1116.8695652173913], [115.0, 1514.0833333333335], [116.0, 1384.8823529411766], [117.0, 1046.125], [118.0, 1554.05], [119.0, 1506.2222222222224], [120.0, 1317.3999999999999], [121.0, 1414.8333333333335], [122.0, 1396.5714285714284], [123.0, 1423.6190476190475], [124.0, 1547.2], [125.0, 1755.2592592592591], [126.0, 1467.4888888888893], [127.0, 1678.5357142857138], [128.0, 1435.7692307692307], [129.0, 1746.6666666666665], [130.0, 1492.8137387998872], [1.0, 78.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[123.30800000000053, 1343.4571538461578]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[3.0, 176.0], [4.0, 725.0], [5.0, 156.0], [6.0, 157.0], [7.0, 191.0], [8.0, 161.0], [9.0, 158.0], [10.0, 152.0], [11.0, 158.0], [12.0, 155.0], [13.0, 161.0], [14.0, 165.0], [15.0, 244.0], [16.0, 157.0], [17.0, 154.0], [18.0, 184.0], [19.0, 155.0], [20.0, 200.0], [21.0, 155.0], [22.0, 168.0], [23.0, 168.0], [24.0, 155.0], [25.0, 166.0], [26.0, 161.0], [27.0, 167.0], [28.0, 170.0], [29.0, 168.0], [30.0, 231.0], [31.0, 189.0], [32.0, 185.0], [33.0, 156.0], [34.0, 193.0], [35.0, 173.0], [36.0, 203.0], [37.0, 170.0], [38.0, 168.0], [39.0, 286.0], [40.0, 177.0], [41.0, 163.0], [42.0, 181.0], [43.0, 152.0], [44.0, 174.0], [45.0, 210.0], [46.0, 176.0], [47.0, 250.0], [48.0, 153.0], [49.0, 247.0], [50.0, 280.0], [51.0, 163.0], [52.0, 173.0], [53.0, 193.0], [54.0, 177.0], [55.0, 161.0], [56.0, 164.0], [57.0, 205.0], [58.0, 202.0], [59.0, 243.0], [60.0, 151.0], [61.0, 273.0], [62.0, 287.0], [63.0, 197.0], [64.0, 192.0], [65.0, 196.0], [66.0, 185.0], [67.0, 180.0], [68.0, 215.0], [69.0, 181.0], [70.0, 180.0], [71.0, 206.0], [72.0, 166.0], [73.0, 198.0], [74.0, 160.0], [75.0, 173.0], [76.0, 157.0], [77.0, 351.0], [78.0, 173.0], [79.0, 204.0], [80.0, 175.0], [81.0, 167.0], [82.0, 176.0], [83.0, 163.0], [84.0, 162.0], [85.0, 343.0], [86.0, 154.0], [87.0, 208.0], [88.0, 193.0], [89.0, 313.0], [90.0, 179.0], [91.0, 203.0], [92.0, 190.0], [93.0, 186.0], [94.0, 180.0], [95.0, 180.0], [96.0, 194.0], [97.0, 179.0], [98.0, 215.0], [99.0, 191.0], [100.0, 177.0], [101.0, 238.0], [102.0, 156.0], [103.0, 180.0], [104.0, 169.0], [105.0, 249.0], [106.0, 164.0], [107.0, 259.0], [108.0, 161.0], [109.0, 160.0], [110.0, 161.0], [111.0, 192.0], [112.0, 169.0], [113.0, 156.0], [115.0, 495.5], [116.0, 322.0], [117.0, 158.0], [118.0, 192.0], [119.0, 172.0], [120.0, 280.0], [123.0, 702.5], [124.0, 153.0], [125.0, 892.0], [126.0, 214.0], [128.0, 370.5], [129.0, 160.0], [130.0, 157.0], [1.0, 213.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[65.56923076923078, 223.99230769230763]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[3.0, 47.0], [4.0, 56.0], [5.0, 55.0], [6.0, 58.5], [7.0, 58.0], [8.0, 52.5], [9.0, 46.0], [10.0, 56.0], [11.0, 46.0], [12.0, 52.0], [13.0, 49.0], [15.0, 47.0], [16.0, 44.0], [17.0, 52.0], [18.0, 46.0], [19.0, 54.0], [20.0, 45.75], [21.0, 47.0], [22.0, 54.0], [23.0, 45.699999999999996], [24.0, 42.666666666666664], [25.0, 42.0], [26.0, 52.142857142857146], [27.0, 60.0], [28.0, 60.00000000000001], [29.0, 41.33333333333334], [30.0, 57.8], [31.0, 49.83333333333333], [32.0, 49.2], [33.0, 82.04347826086956], [34.0, 52.25], [35.0, 54.2], [36.0, 51.111111111111114], [37.0, 46.699999999999996], [38.0, 51.75], [39.0, 58.50000000000001], [40.0, 58.5], [41.0, 165.88235294117644], [42.0, 135.41666666666669], [43.0, 56.0], [44.0, 52.2], [45.0, 52.666666666666664], [46.0, 50.285714285714285], [47.0, 52.70588235294118], [48.0, 49.666666666666664], [49.0, 63.71428571428572], [50.0, 56.11111111111111], [51.0, 66.84615384615385], [52.0, 43.25], [53.0, 46.75], [54.0, 45.4], [55.0, 49.733333333333334], [56.0, 43.625], [57.0, 48.92857142857143], [58.0, 56.18181818181818], [59.0, 47.94736842105264], [60.0, 45.64285714285714], [61.0, 48.09090909090909], [62.0, 62.18181818181819], [63.0, 48.09090909090909], [64.0, 51.070175438596486], [65.0, 65.5], [66.0, 48.8], [67.0, 46.9375], [68.0, 67.8181818181818], [69.0, 136.0], [70.0, 150.11111111111111], [71.0, 49.315789473684205], [72.0, 60.5], [73.0, 67.06666666666668], [74.0, 52.9375], [75.0, 68.36363636363637], [76.0, 51.33333333333334], [77.0, 56.0], [78.0, 83.71428571428571], [79.0, 49.71428571428571], [80.0, 55.14285714285714], [81.0, 65.98529411764707], [82.0, 184.92307692307688], [83.0, 582.0], [84.0, 768.4444444444445], [85.0, 499.95652173913044], [86.0, 49.666666666666664], [87.0, 49.5], [88.0, 54.666666666666664], [89.0, 264.92307692307685], [90.0, 584.3260869565217], [91.0, 151.14999999999998], [92.0, 51.53846153846155], [93.0, 69.46666666666667], [94.0, 52.80851063829788], [95.0, 556.490566037736], [96.0, 274.8333333333333], [97.0, 230.6315789473684], [98.0, 366.2857142857143], [99.0, 280.52380952380946], [100.0, 792.6349206349207], [101.0, 747.4423076923076], [102.0, 342.5217391304348], [103.0, 451.7391304347826], [104.0, 368.375], [105.0, 171.27272727272725], [106.0, 146.6086956521739], [107.0, 483.2173913043478], [108.0, 571.5909090909091], [109.0, 641.4], [110.0, 769.5384615384617], [111.0, 960.75], [112.0, 970.5882352941173], [113.0, 1066.9230769230767], [114.0, 1154.5294117647059], [115.0, 1335.0555555555554], [116.0, 1380.5172413793107], [117.0, 1240.6], [118.0, 1411.8823529411766], [119.0, 1580.103448275862], [120.0, 1440.4375], [121.0, 1391.8], [122.0, 1275.1428571428573], [123.0, 1570.7586206896553], [124.0, 1475.2307692307695], [125.0, 1696.1860465116283], [126.0, 1500.558823529412], [127.0, 1268.6000000000004], [128.0, 1541.0], [129.0, 1514.0555555555557], [130.0, 1512.7388160867608], [1.0, 65.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[123.31376923076918, 1360.1233846153818]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 130.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2223.6, "minX": 1.58542818E12, "maxY": 280449.81666666665, "series": [{"data": [[1.58542872E12, 262609.55], [1.58542842E12, 234856.38333333333], [1.58542878E12, 266286.75], [1.58542866E12, 266998.7833333333], [1.58542836E12, 207848.71666666667], [1.58542824E12, 268434.25], [1.5854289E12, 40637.05], [1.5854286E12, 260202.43333333332], [1.5854283E12, 262222.6], [1.58542848E12, 250186.86666666667], [1.58542818E12, 34855.85], [1.58542884E12, 272675.38333333336], [1.58542854E12, 280449.81666666665]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58542872E12, 15844.566666666668], [1.58542842E12, 14965.0], [1.58542878E12, 16066.1], [1.58542866E12, 16108.966666666667], [1.58542836E12, 20971.133333333335], [1.58542824E12, 16394.6], [1.5854289E12, 2452.8333333333335], [1.5854286E12, 15694.133333333333], [1.5854283E12, 16380.766666666666], [1.58542848E12, 15357.933333333332], [1.58542818E12, 2223.6], [1.58542884E12, 16452.566666666666], [1.58542854E12, 17238.266666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854289E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 53.00000000000001, "minX": 1.58542818E12, "maxY": 1810.9809160305347, "series": [{"data": [[1.58542872E12, 1615.9586702605566], [1.58542842E12, 1810.9809160305347], [1.58542878E12, 1560.0915555555546], [1.58542866E12, 1606.8970718722267], [1.58542836E12, 794.2710597826086], [1.58542824E12, 881.1376811594203], [1.5854289E12, 61.4098360655738], [1.5854286E12, 1619.5789954337902], [1.5854283E12, 1530.375979112272], [1.58542848E12, 1786.2485928705462], [1.58542818E12, 78.84848484848486], [1.58542884E12, 905.0214961306972], [1.58542854E12, 1267.609157808666]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542824E12, 237.74074074074073], [1.58542818E12, 201.26530612244895]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542872E12, 1633.7805983680862], [1.58542842E12, 1806.1454545454535], [1.58542878E12, 1592.0543672014264], [1.58542866E12, 1617.421847246894], [1.58542836E12, 810.8466803559207], [1.58542824E12, 843.1239092495637], [1.5854289E12, 53.00000000000001], [1.5854286E12, 1661.0970081595635], [1.5854283E12, 1531.2697022767084], [1.58542848E12, 1773.592421441776], [1.58542818E12, 72.54248366013071], [1.58542884E12, 919.4420035149402], [1.58542854E12, 1368.2707136997535]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854289E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 52.63125000000001, "minX": 1.58542818E12, "maxY": 1810.6879770992352, "series": [{"data": [[1.58542872E12, 1615.6639712488768], [1.58542842E12, 1810.6879770992352], [1.58542878E12, 1559.7600000000004], [1.58542866E12, 1606.5891748003557], [1.58542836E12, 793.934103260871], [1.58542824E12, 880.8306159420288], [1.5854289E12, 61.11475409836065], [1.5854286E12, 1619.165296803653], [1.5854283E12, 1530.116623150565], [1.58542848E12, 1785.9437148217642], [1.58542818E12, 78.64393939393939], [1.58542884E12, 904.732588134135], [1.58542854E12, 1267.3859362224048]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542824E12, 237.28395061728398], [1.58542818E12, 201.02040816326527]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542872E12, 1633.4932003626482], [1.58542842E12, 1805.866028708135], [1.58542878E12, 1591.778074866313], [1.58542866E12, 1617.0968028419193], [1.58542836E12, 810.522245037646], [1.58542824E12, 842.8699825479925], [1.5854289E12, 52.63125000000001], [1.5854286E12, 1660.6990027198524], [1.5854283E12, 1530.9868651488628], [1.58542848E12, 1773.280036968575], [1.58542818E12, 72.3071895424837], [1.58542884E12, 919.1335676625652], [1.58542854E12, 1368.0738310090246]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854289E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58542818E12, "maxY": 1.4897959183673466, "series": [{"data": [[1.58542872E12, 0.5633423180593], [1.58542842E12, 0.5820610687022896], [1.58542878E12, 0.5564444444444439], [1.58542866E12, 0.5492457852706291], [1.58542836E12, 0.35937500000000083], [1.58542824E12, 0.37771739130434756], [1.5854289E12, 0.0], [1.5854286E12, 0.5652968036529672], [1.5854283E12, 0.6362053959965175], [1.58542848E12, 0.51313320825516], [1.58542818E12, 0.37121212121212127], [1.58542884E12, 0.3852106620808262], [1.58542854E12, 0.49386753883892065]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542824E12, 0.9135802469135801], [1.58542818E12, 1.4897959183673466]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542872E12, 0.5902085222121475], [1.58542842E12, 0.7511961722488036], [1.58542878E12, 0.5962566844919791], [1.58542866E12, 0.5772646536412075], [1.58542836E12, 0.6926762491444222], [1.58542824E12, 0.7373472949389172], [1.5854289E12, 0.6124999999999999], [1.5854286E12, 0.5838621940163187], [1.5854283E12, 0.6795096322241682], [1.58542848E12, 0.5582255083179297], [1.58542818E12, 0.7581699346405232], [1.58542884E12, 0.6379613356766249], [1.58542854E12, 0.7219031993437245]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854289E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.58542818E12, "maxY": 4831.0, "series": [{"data": [[1.58542872E12, 4392.0], [1.58542842E12, 4831.0], [1.58542878E12, 4068.0], [1.58542866E12, 3688.0], [1.58542836E12, 3475.0], [1.58542824E12, 3901.0], [1.5854289E12, 525.0], [1.5854286E12, 4308.0], [1.5854283E12, 3594.0], [1.58542848E12, 4459.0], [1.58542818E12, 1283.0], [1.58542884E12, 3469.0], [1.58542854E12, 4002.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58542872E12, 224.0], [1.58542842E12, 216.0], [1.58542878E12, 197.0], [1.58542866E12, 185.0], [1.58542836E12, 17.0], [1.58542824E12, 29.0], [1.5854289E12, 31.0], [1.5854286E12, 150.0], [1.5854283E12, 196.0], [1.58542848E12, 4.0], [1.58542818E12, 34.0], [1.58542884E12, 29.0], [1.58542854E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58542872E12, 2441.6], [1.58542842E12, 3417.2000000000003], [1.58542878E12, 2330.4000000000005], [1.58542866E12, 2360.6000000000004], [1.58542836E12, 2155.4000000000005], [1.58542824E12, 2110.0], [1.5854289E12, 65.60000000000002], [1.5854286E12, 2561.800000000001], [1.5854283E12, 2322.4], [1.58542848E12, 2828.0000000000005], [1.58542818E12, 176.5], [1.58542884E12, 1950.6000000000004], [1.58542854E12, 2110.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58542872E12, 3225.2999999999993], [1.58542842E12, 4402.6799999999985], [1.58542878E12, 3186.2799999999997], [1.58542866E12, 3112.120000000001], [1.58542836E12, 2855.9199999999996], [1.58542824E12, 3000.1999999999975], [1.5854289E12, 429.44000000000034], [1.5854286E12, 3425.959999999998], [1.5854283E12, 2926.8399999999992], [1.58542848E12, 3544.8399999999992], [1.58542818E12, 637.6999999999982], [1.58542884E12, 2778.7000000000003], [1.58542854E12, 2682.4000000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58542872E12, 2710.0], [1.58542842E12, 3833.7999999999997], [1.58542878E12, 2635.6], [1.58542866E12, 2627.5999999999995], [1.58542836E12, 2414.3999999999996], [1.58542824E12, 2450.8], [1.5854289E12, 70.80000000000001], [1.5854286E12, 2855.5999999999995], [1.5854283E12, 2525.7999999999993], [1.58542848E12, 3103.2], [1.58542818E12, 244.5], [1.58542884E12, 2227.0], [1.58542854E12, 2317.8]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854289E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 1985.0, "series": [{"data": [[2.0, 58.5], [3.0, 47.0], [4.0, 57.5], [5.0, 68.0], [7.0, 59.0], [8.0, 52.0], [9.0, 56.0], [10.0, 46.0], [11.0, 53.0], [12.0, 540.5], [14.0, 48.0], [16.0, 62.5], [17.0, 48.0], [18.0, 51.0], [19.0, 52.5], [20.0, 1139.0], [21.0, 1461.0], [22.0, 272.5], [23.0, 1167.0], [24.0, 1788.5], [25.0, 1845.0], [26.0, 1985.0], [27.0, 1500.0], [28.0, 1677.0], [29.0, 1652.0], [30.0, 1541.5], [31.0, 1572.0], [32.0, 1458.0], [33.0, 1596.0], [35.0, 1493.0], [34.0, 1577.5], [37.0, 1538.0], [36.0, 1533.0], [39.0, 1458.5], [38.0, 1525.0], [40.0, 1504.5], [41.0, 1524.0], [43.0, 1423.0], [42.0, 1440.0], [45.0, 1522.5], [44.0, 1407.0], [47.0, 1265.0], [46.0, 1351.0], [49.0, 1281.0], [48.0, 1366.5], [51.0, 1310.0], [50.0, 917.0], [53.0, 761.5], [52.0, 762.5], [55.0, 125.5], [54.0, 1528.5], [56.0, 202.0], [57.0, 1088.0], [58.0, 756.0], [59.0, 73.0], [61.0, 753.5], [60.0, 693.0], [62.0, 1078.0], [64.0, 43.0], [65.0, 667.0], [68.0, 519.0], [74.0, 661.0], [75.0, 277.0], [84.0, 1323.5], [87.0, 1586.5], [1.0, 66.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[35.0, 206.0], [39.0, 6.0], [38.0, 0.0], [41.0, 48.0], [40.0, 1527.5], [42.0, 12.0], [44.0, 11.5], [49.0, 7.0], [51.0, 66.5], [50.0, 12.0], [52.0, 10.0], [53.0, 6.0], [55.0, 8.0], [56.0, 7.0], [57.0, 7.0], [58.0, 9.0], [59.0, 6.0], [61.0, 7.5], [60.0, 8.0], [62.0, 10.0], [64.0, 8.0], [68.0, 8.0], [69.0, 7.0], [74.0, 7.0], [72.0, 7.0], [75.0, 1.0], [83.0, 8.0], [84.0, 832.5], [87.0, 953.0], [92.0, 9.0], [25.0, 2.0], [26.0, 1819.0], [28.0, 11.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 92.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 1985.0, "series": [{"data": [[2.0, 58.0], [3.0, 47.0], [4.0, 57.5], [5.0, 68.0], [7.0, 58.0], [8.0, 52.0], [9.0, 56.0], [10.0, 45.5], [11.0, 52.5], [12.0, 540.0], [14.0, 48.0], [16.0, 62.0], [17.0, 48.0], [18.0, 51.0], [19.0, 52.5], [20.0, 1138.5], [21.0, 1461.0], [22.0, 272.5], [23.0, 1167.0], [24.0, 1788.5], [25.0, 1845.0], [26.0, 1985.0], [27.0, 1499.5], [28.0, 1677.0], [29.0, 1652.0], [30.0, 1541.0], [31.0, 1570.0], [32.0, 1457.5], [33.0, 1596.0], [35.0, 1493.0], [34.0, 1577.5], [37.0, 1538.0], [36.0, 1533.0], [39.0, 1458.0], [38.0, 1525.0], [40.0, 1504.0], [41.0, 1523.5], [43.0, 1423.0], [42.0, 1440.0], [45.0, 1522.5], [44.0, 1407.0], [47.0, 1265.0], [46.0, 1351.0], [49.0, 1281.0], [48.0, 1366.0], [51.0, 1310.0], [50.0, 917.0], [53.0, 761.5], [52.0, 762.5], [55.0, 125.0], [54.0, 1528.5], [56.0, 201.0], [57.0, 1088.0], [58.0, 756.0], [59.0, 73.0], [61.0, 753.5], [60.0, 692.0], [62.0, 1078.0], [64.0, 43.0], [65.0, 667.0], [68.0, 518.0], [74.0, 661.0], [75.0, 277.0], [84.0, 1323.5], [87.0, 1586.5], [1.0, 66.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[35.0, 205.0], [39.0, 6.0], [38.0, 0.0], [41.0, 48.0], [40.0, 1527.0], [42.0, 11.0], [44.0, 11.0], [49.0, 6.0], [51.0, 66.0], [50.0, 12.0], [52.0, 10.0], [53.0, 6.0], [55.0, 7.0], [56.0, 7.0], [57.0, 6.0], [58.0, 9.0], [59.0, 6.0], [61.0, 7.0], [60.0, 8.0], [62.0, 10.0], [64.0, 7.0], [68.0, 8.0], [69.0, 7.0], [74.0, 7.0], [72.0, 7.0], [75.0, 0.0], [83.0, 7.0], [84.0, 832.5], [87.0, 953.0], [92.0, 9.0], [25.0, 0.0], [26.0, 1819.0], [28.0, 10.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 92.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 5.6, "minX": 1.58542818E12, "maxY": 48.416666666666664, "series": [{"data": [[1.58542872E12, 37.21666666666667], [1.58542842E12, 35.35], [1.58542878E12, 37.65], [1.58542866E12, 37.18333333333333], [1.58542836E12, 48.416666666666664], [1.58542824E12, 39.7], [1.5854289E12, 5.7], [1.5854286E12, 36.983333333333334], [1.5854283E12, 38.21666666666667], [1.58542848E12, 35.56666666666667], [1.58542818E12, 5.6], [1.58542884E12, 37.083333333333336], [1.58542854E12, 40.833333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854289E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.58542818E12, "maxY": 40.18333333333333, "series": [{"data": [[1.58542872E12, 36.93333333333333], [1.58542842E12, 32.71666666666667], [1.58542878E12, 37.45], [1.58542866E12, 37.55], [1.58542836E12, 25.583333333333332], [1.58542824E12, 38.85], [1.5854289E12, 5.716666666666667], [1.5854286E12, 36.583333333333336], [1.5854283E12, 36.583333333333336], [1.58542848E12, 35.583333333333336], [1.58542818E12, 5.566666666666666], [1.58542884E12, 38.35], [1.58542854E12, 40.18333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58542842E12, 2.1666666666666665], [1.5854283E12, 1.6], [1.58542848E12, 0.21666666666666667], [1.58542836E12, 23.266666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.58542854E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.TruncatedChunkException", "isController": false}, {"data": [[1.58542836E12, 0.03333333333333333]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.58542854E12, 0.38333333333333336]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.5854286E12, 0.05], [1.58542854E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854289E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58542818E12, "maxY": 20.283333333333335, "series": [{"data": [[1.58542824E12, 1.35], [1.58542818E12, 0.8166666666666667]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58542872E12, 18.55], [1.58542842E12, 16.216666666666665], [1.58542878E12, 18.75], [1.58542866E12, 18.783333333333335], [1.58542836E12, 12.783333333333333], [1.58542824E12, 18.4], [1.5854289E12, 3.05], [1.5854286E12, 18.233333333333334], [1.5854283E12, 18.4], [1.58542848E12, 17.683333333333334], [1.58542818E12, 2.2], [1.58542884E12, 19.383333333333333], [1.58542854E12, 19.9]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58542842E12, 1.25], [1.5854286E12, 0.016666666666666666], [1.5854283E12, 0.75], [1.58542848E12, 0.08333333333333333], [1.58542836E12, 11.75], [1.58542854E12, 0.48333333333333334]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58542872E12, 18.383333333333333], [1.58542842E12, 16.5], [1.58542878E12, 18.7], [1.58542866E12, 18.766666666666666], [1.58542836E12, 12.8], [1.58542824E12, 19.1], [1.5854289E12, 2.6666666666666665], [1.5854286E12, 18.35], [1.5854283E12, 18.183333333333334], [1.58542848E12, 17.9], [1.58542818E12, 2.55], [1.58542884E12, 18.966666666666665], [1.58542854E12, 20.283333333333335]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.58542842E12, 0.9166666666666666], [1.5854286E12, 0.03333333333333333], [1.5854283E12, 0.85], [1.58542848E12, 0.13333333333333333], [1.58542836E12, 11.55], [1.58542854E12, 0.03333333333333333]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854289E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.58542818E12, "maxY": 40.18333333333333, "series": [{"data": [[1.58542872E12, 36.93333333333333], [1.58542842E12, 32.71666666666667], [1.58542878E12, 37.45], [1.58542866E12, 37.55], [1.58542836E12, 25.583333333333332], [1.58542824E12, 38.85], [1.5854289E12, 5.716666666666667], [1.5854286E12, 36.583333333333336], [1.5854283E12, 36.583333333333336], [1.58542848E12, 35.583333333333336], [1.58542818E12, 5.566666666666666], [1.58542884E12, 38.35], [1.58542854E12, 40.18333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58542842E12, 2.1666666666666665], [1.5854286E12, 0.05], [1.5854283E12, 1.6], [1.58542848E12, 0.21666666666666667], [1.58542836E12, 23.3], [1.58542854E12, 0.5166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854289E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

