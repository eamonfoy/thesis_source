/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 16723.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 5.0], [3.4, 6.0], [3.5, 7.0], [3.6, 8.0], [3.7, 9.0], [3.8, 10.0], [3.9, 11.0], [4.0, 11.0], [4.1, 12.0], [4.2, 13.0], [4.3, 16.0], [4.4, 20.0], [4.5, 27.0], [4.6, 32.0], [4.7, 34.0], [4.8, 35.0], [4.9, 36.0], [5.0, 37.0], [5.1, 38.0], [5.2, 39.0], [5.3, 40.0], [5.4, 40.0], [5.5, 41.0], [5.6, 41.0], [5.7, 42.0], [5.8, 43.0], [5.9, 43.0], [6.0, 44.0], [6.1, 44.0], [6.2, 45.0], [6.3, 45.0], [6.4, 46.0], [6.5, 46.0], [6.6, 47.0], [6.7, 47.0], [6.8, 48.0], [6.9, 48.0], [7.0, 49.0], [7.1, 49.0], [7.2, 50.0], [7.3, 50.0], [7.4, 50.0], [7.5, 51.0], [7.6, 51.0], [7.7, 52.0], [7.8, 52.0], [7.9, 53.0], [8.0, 54.0], [8.1, 54.0], [8.2, 55.0], [8.3, 56.0], [8.4, 57.0], [8.5, 58.0], [8.6, 59.0], [8.7, 60.0], [8.8, 62.0], [8.9, 63.0], [9.0, 64.0], [9.1, 66.0], [9.2, 68.0], [9.3, 70.0], [9.4, 73.0], [9.5, 75.0], [9.6, 78.0], [9.7, 81.0], [9.8, 83.0], [9.9, 85.0], [10.0, 89.0], [10.1, 94.0], [10.2, 100.0], [10.3, 105.0], [10.4, 108.0], [10.5, 113.0], [10.6, 119.0], [10.7, 125.0], [10.8, 133.0], [10.9, 142.0], [11.0, 152.0], [11.1, 162.0], [11.2, 169.0], [11.3, 178.0], [11.4, 183.0], [11.5, 198.0], [11.6, 203.0], [11.7, 216.0], [11.8, 226.0], [11.9, 239.0], [12.0, 249.0], [12.1, 259.0], [12.2, 271.0], [12.3, 280.0], [12.4, 289.0], [12.5, 300.0], [12.6, 307.0], [12.7, 312.0], [12.8, 317.0], [12.9, 325.0], [13.0, 331.0], [13.1, 338.0], [13.2, 347.0], [13.3, 354.0], [13.4, 358.0], [13.5, 368.0], [13.6, 380.0], [13.7, 387.0], [13.8, 395.0], [13.9, 398.0], [14.0, 404.0], [14.1, 410.0], [14.2, 419.0], [14.3, 425.0], [14.4, 433.0], [14.5, 439.0], [14.6, 443.0], [14.7, 451.0], [14.8, 457.0], [14.9, 463.0], [15.0, 467.0], [15.1, 476.0], [15.2, 482.0], [15.3, 490.0], [15.4, 494.0], [15.5, 500.0], [15.6, 507.0], [15.7, 512.0], [15.8, 519.0], [15.9, 526.0], [16.0, 530.0], [16.1, 536.0], [16.2, 540.0], [16.3, 545.0], [16.4, 550.0], [16.5, 555.0], [16.6, 560.0], [16.7, 564.0], [16.8, 568.0], [16.9, 573.0], [17.0, 579.0], [17.1, 584.0], [17.2, 590.0], [17.3, 596.0], [17.4, 601.0], [17.5, 606.0], [17.6, 611.0], [17.7, 618.0], [17.8, 623.0], [17.9, 626.0], [18.0, 631.0], [18.1, 638.0], [18.2, 643.0], [18.3, 648.0], [18.4, 652.0], [18.5, 656.0], [18.6, 660.0], [18.7, 667.0], [18.8, 670.0], [18.9, 674.0], [19.0, 677.0], [19.1, 680.0], [19.2, 684.0], [19.3, 691.0], [19.4, 695.0], [19.5, 699.0], [19.6, 703.0], [19.7, 706.0], [19.8, 712.0], [19.9, 717.0], [20.0, 720.0], [20.1, 725.0], [20.2, 730.0], [20.3, 734.0], [20.4, 737.0], [20.5, 741.0], [20.6, 746.0], [20.7, 751.0], [20.8, 755.0], [20.9, 759.0], [21.0, 761.0], [21.1, 765.0], [21.2, 770.0], [21.3, 776.0], [21.4, 781.0], [21.5, 784.0], [21.6, 788.0], [21.7, 792.0], [21.8, 795.0], [21.9, 798.0], [22.0, 802.0], [22.1, 807.0], [22.2, 810.0], [22.3, 814.0], [22.4, 817.0], [22.5, 819.0], [22.6, 822.0], [22.7, 826.0], [22.8, 830.0], [22.9, 833.0], [23.0, 837.0], [23.1, 840.0], [23.2, 843.0], [23.3, 847.0], [23.4, 850.0], [23.5, 853.0], [23.6, 856.0], [23.7, 859.0], [23.8, 862.0], [23.9, 866.0], [24.0, 869.0], [24.1, 873.0], [24.2, 876.0], [24.3, 879.0], [24.4, 882.0], [24.5, 884.0], [24.6, 888.0], [24.7, 890.0], [24.8, 893.0], [24.9, 898.0], [25.0, 901.0], [25.1, 903.0], [25.2, 906.0], [25.3, 909.0], [25.4, 912.0], [25.5, 915.0], [25.6, 917.0], [25.7, 923.0], [25.8, 927.0], [25.9, 931.0], [26.0, 935.0], [26.1, 940.0], [26.2, 943.0], [26.3, 946.0], [26.4, 949.0], [26.5, 952.0], [26.6, 955.0], [26.7, 958.0], [26.8, 962.0], [26.9, 964.0], [27.0, 967.0], [27.1, 969.0], [27.2, 972.0], [27.3, 975.0], [27.4, 978.0], [27.5, 979.0], [27.6, 982.0], [27.7, 986.0], [27.8, 990.0], [27.9, 994.0], [28.0, 997.0], [28.1, 1000.0], [28.2, 1003.0], [28.3, 1005.0], [28.4, 1009.0], [28.5, 1012.0], [28.6, 1015.0], [28.7, 1017.0], [28.8, 1020.0], [28.9, 1024.0], [29.0, 1026.0], [29.1, 1028.0], [29.2, 1032.0], [29.3, 1035.0], [29.4, 1038.0], [29.5, 1041.0], [29.6, 1044.0], [29.7, 1047.0], [29.8, 1050.0], [29.9, 1054.0], [30.0, 1057.0], [30.1, 1063.0], [30.2, 1066.0], [30.3, 1069.0], [30.4, 1074.0], [30.5, 1077.0], [30.6, 1080.0], [30.7, 1082.0], [30.8, 1084.0], [30.9, 1087.0], [31.0, 1091.0], [31.1, 1094.0], [31.2, 1098.0], [31.3, 1100.0], [31.4, 1102.0], [31.5, 1104.0], [31.6, 1107.0], [31.7, 1110.0], [31.8, 1115.0], [31.9, 1120.0], [32.0, 1122.0], [32.1, 1125.0], [32.2, 1127.0], [32.3, 1129.0], [32.4, 1133.0], [32.5, 1135.0], [32.6, 1138.0], [32.7, 1140.0], [32.8, 1143.0], [32.9, 1147.0], [33.0, 1150.0], [33.1, 1153.0], [33.2, 1155.0], [33.3, 1158.0], [33.4, 1160.0], [33.5, 1162.0], [33.6, 1164.0], [33.7, 1168.0], [33.8, 1170.0], [33.9, 1173.0], [34.0, 1176.0], [34.1, 1178.0], [34.2, 1181.0], [34.3, 1183.0], [34.4, 1186.0], [34.5, 1188.0], [34.6, 1190.0], [34.7, 1193.0], [34.8, 1195.0], [34.9, 1197.0], [35.0, 1199.0], [35.1, 1202.0], [35.2, 1205.0], [35.3, 1209.0], [35.4, 1211.0], [35.5, 1214.0], [35.6, 1216.0], [35.7, 1217.0], [35.8, 1220.0], [35.9, 1223.0], [36.0, 1226.0], [36.1, 1228.0], [36.2, 1230.0], [36.3, 1234.0], [36.4, 1236.0], [36.5, 1239.0], [36.6, 1241.0], [36.7, 1243.0], [36.8, 1245.0], [36.9, 1247.0], [37.0, 1249.0], [37.1, 1251.0], [37.2, 1253.0], [37.3, 1255.0], [37.4, 1258.0], [37.5, 1260.0], [37.6, 1262.0], [37.7, 1265.0], [37.8, 1267.0], [37.9, 1269.0], [38.0, 1270.0], [38.1, 1272.0], [38.2, 1274.0], [38.3, 1276.0], [38.4, 1279.0], [38.5, 1280.0], [38.6, 1283.0], [38.7, 1285.0], [38.8, 1286.0], [38.9, 1288.0], [39.0, 1290.0], [39.1, 1292.0], [39.2, 1295.0], [39.3, 1297.0], [39.4, 1299.0], [39.5, 1302.0], [39.6, 1303.0], [39.7, 1306.0], [39.8, 1307.0], [39.9, 1309.0], [40.0, 1310.0], [40.1, 1312.0], [40.2, 1315.0], [40.3, 1317.0], [40.4, 1319.0], [40.5, 1321.0], [40.6, 1324.0], [40.7, 1326.0], [40.8, 1328.0], [40.9, 1330.0], [41.0, 1332.0], [41.1, 1334.0], [41.2, 1338.0], [41.3, 1340.0], [41.4, 1343.0], [41.5, 1346.0], [41.6, 1347.0], [41.7, 1350.0], [41.8, 1352.0], [41.9, 1355.0], [42.0, 1357.0], [42.1, 1359.0], [42.2, 1361.0], [42.3, 1363.0], [42.4, 1364.0], [42.5, 1367.0], [42.6, 1369.0], [42.7, 1372.0], [42.8, 1374.0], [42.9, 1376.0], [43.0, 1378.0], [43.1, 1381.0], [43.2, 1383.0], [43.3, 1385.0], [43.4, 1387.0], [43.5, 1389.0], [43.6, 1391.0], [43.7, 1395.0], [43.8, 1397.0], [43.9, 1399.0], [44.0, 1400.0], [44.1, 1403.0], [44.2, 1405.0], [44.3, 1407.0], [44.4, 1408.0], [44.5, 1411.0], [44.6, 1413.0], [44.7, 1415.0], [44.8, 1418.0], [44.9, 1421.0], [45.0, 1423.0], [45.1, 1426.0], [45.2, 1428.0], [45.3, 1430.0], [45.4, 1431.0], [45.5, 1433.0], [45.6, 1435.0], [45.7, 1437.0], [45.8, 1439.0], [45.9, 1441.0], [46.0, 1443.0], [46.1, 1445.0], [46.2, 1447.0], [46.3, 1450.0], [46.4, 1452.0], [46.5, 1454.0], [46.6, 1455.0], [46.7, 1457.0], [46.8, 1460.0], [46.9, 1463.0], [47.0, 1467.0], [47.1, 1467.0], [47.2, 1470.0], [47.3, 1472.0], [47.4, 1474.0], [47.5, 1476.0], [47.6, 1479.0], [47.7, 1481.0], [47.8, 1483.0], [47.9, 1486.0], [48.0, 1488.0], [48.1, 1490.0], [48.2, 1491.0], [48.3, 1493.0], [48.4, 1496.0], [48.5, 1497.0], [48.6, 1500.0], [48.7, 1502.0], [48.8, 1504.0], [48.9, 1505.0], [49.0, 1508.0], [49.1, 1511.0], [49.2, 1513.0], [49.3, 1515.0], [49.4, 1516.0], [49.5, 1518.0], [49.6, 1521.0], [49.7, 1522.0], [49.8, 1524.0], [49.9, 1526.0], [50.0, 1527.0], [50.1, 1529.0], [50.2, 1532.0], [50.3, 1533.0], [50.4, 1536.0], [50.5, 1539.0], [50.6, 1540.0], [50.7, 1542.0], [50.8, 1544.0], [50.9, 1547.0], [51.0, 1549.0], [51.1, 1551.0], [51.2, 1553.0], [51.3, 1555.0], [51.4, 1557.0], [51.5, 1560.0], [51.6, 1562.0], [51.7, 1564.0], [51.8, 1566.0], [51.9, 1569.0], [52.0, 1571.0], [52.1, 1574.0], [52.2, 1575.0], [52.3, 1578.0], [52.4, 1579.0], [52.5, 1581.0], [52.6, 1583.0], [52.7, 1585.0], [52.8, 1587.0], [52.9, 1588.0], [53.0, 1590.0], [53.1, 1592.0], [53.2, 1594.0], [53.3, 1595.0], [53.4, 1597.0], [53.5, 1599.0], [53.6, 1602.0], [53.7, 1604.0], [53.8, 1605.0], [53.9, 1608.0], [54.0, 1610.0], [54.1, 1612.0], [54.2, 1614.0], [54.3, 1616.0], [54.4, 1618.0], [54.5, 1620.0], [54.6, 1622.0], [54.7, 1624.0], [54.8, 1627.0], [54.9, 1629.0], [55.0, 1631.0], [55.1, 1633.0], [55.2, 1636.0], [55.3, 1637.0], [55.4, 1639.0], [55.5, 1641.0], [55.6, 1644.0], [55.7, 1646.0], [55.8, 1649.0], [55.9, 1651.0], [56.0, 1654.0], [56.1, 1658.0], [56.2, 1660.0], [56.3, 1663.0], [56.4, 1665.0], [56.5, 1668.0], [56.6, 1671.0], [56.7, 1673.0], [56.8, 1675.0], [56.9, 1677.0], [57.0, 1679.0], [57.1, 1681.0], [57.2, 1683.0], [57.3, 1686.0], [57.4, 1688.0], [57.5, 1690.0], [57.6, 1692.0], [57.7, 1695.0], [57.8, 1697.0], [57.9, 1698.0], [58.0, 1700.0], [58.1, 1701.0], [58.2, 1704.0], [58.3, 1707.0], [58.4, 1709.0], [58.5, 1712.0], [58.6, 1713.0], [58.7, 1715.0], [58.8, 1717.0], [58.9, 1720.0], [59.0, 1724.0], [59.1, 1726.0], [59.2, 1727.0], [59.3, 1730.0], [59.4, 1733.0], [59.5, 1735.0], [59.6, 1738.0], [59.7, 1739.0], [59.8, 1741.0], [59.9, 1744.0], [60.0, 1746.0], [60.1, 1748.0], [60.2, 1750.0], [60.3, 1753.0], [60.4, 1755.0], [60.5, 1757.0], [60.6, 1759.0], [60.7, 1762.0], [60.8, 1764.0], [60.9, 1765.0], [61.0, 1767.0], [61.1, 1770.0], [61.2, 1772.0], [61.3, 1774.0], [61.4, 1776.0], [61.5, 1779.0], [61.6, 1781.0], [61.7, 1784.0], [61.8, 1786.0], [61.9, 1788.0], [62.0, 1790.0], [62.1, 1792.0], [62.2, 1795.0], [62.3, 1797.0], [62.4, 1798.0], [62.5, 1800.0], [62.6, 1803.0], [62.7, 1804.0], [62.8, 1807.0], [62.9, 1809.0], [63.0, 1811.0], [63.1, 1814.0], [63.2, 1816.0], [63.3, 1818.0], [63.4, 1820.0], [63.5, 1823.0], [63.6, 1824.0], [63.7, 1827.0], [63.8, 1829.0], [63.9, 1831.0], [64.0, 1835.0], [64.1, 1837.0], [64.2, 1840.0], [64.3, 1841.0], [64.4, 1844.0], [64.5, 1846.0], [64.6, 1849.0], [64.7, 1852.0], [64.8, 1854.0], [64.9, 1856.0], [65.0, 1859.0], [65.1, 1862.0], [65.2, 1864.0], [65.3, 1867.0], [65.4, 1869.0], [65.5, 1871.0], [65.6, 1874.0], [65.7, 1878.0], [65.8, 1880.0], [65.9, 1883.0], [66.0, 1885.0], [66.1, 1888.0], [66.2, 1891.0], [66.3, 1893.0], [66.4, 1895.0], [66.5, 1898.0], [66.6, 1901.0], [66.7, 1904.0], [66.8, 1906.0], [66.9, 1908.0], [67.0, 1911.0], [67.1, 1914.0], [67.2, 1918.0], [67.3, 1920.0], [67.4, 1924.0], [67.5, 1926.0], [67.6, 1929.0], [67.7, 1932.0], [67.8, 1935.0], [67.9, 1938.0], [68.0, 1940.0], [68.1, 1942.0], [68.2, 1944.0], [68.3, 1946.0], [68.4, 1949.0], [68.5, 1953.0], [68.6, 1956.0], [68.7, 1958.0], [68.8, 1961.0], [68.9, 1963.0], [69.0, 1966.0], [69.1, 1969.0], [69.2, 1971.0], [69.3, 1973.0], [69.4, 1975.0], [69.5, 1977.0], [69.6, 1979.0], [69.7, 1983.0], [69.8, 1986.0], [69.9, 1989.0], [70.0, 1991.0], [70.1, 1995.0], [70.2, 1998.0], [70.3, 2000.0], [70.4, 2003.0], [70.5, 2005.0], [70.6, 2007.0], [70.7, 2009.0], [70.8, 2012.0], [70.9, 2016.0], [71.0, 2018.0], [71.1, 2020.0], [71.2, 2023.0], [71.3, 2026.0], [71.4, 2031.0], [71.5, 2033.0], [71.6, 2036.0], [71.7, 2038.0], [71.8, 2041.0], [71.9, 2043.0], [72.0, 2047.0], [72.1, 2049.0], [72.2, 2053.0], [72.3, 2056.0], [72.4, 2058.0], [72.5, 2062.0], [72.6, 2065.0], [72.7, 2067.0], [72.8, 2070.0], [72.9, 2074.0], [73.0, 2077.0], [73.1, 2080.0], [73.2, 2085.0], [73.3, 2087.0], [73.4, 2090.0], [73.5, 2091.0], [73.6, 2094.0], [73.7, 2097.0], [73.8, 2100.0], [73.9, 2102.0], [74.0, 2104.0], [74.1, 2108.0], [74.2, 2110.0], [74.3, 2113.0], [74.4, 2115.0], [74.5, 2118.0], [74.6, 2121.0], [74.7, 2126.0], [74.8, 2129.0], [74.9, 2133.0], [75.0, 2137.0], [75.1, 2140.0], [75.2, 2144.0], [75.3, 2146.0], [75.4, 2148.0], [75.5, 2150.0], [75.6, 2156.0], [75.7, 2159.0], [75.8, 2162.0], [75.9, 2165.0], [76.0, 2169.0], [76.1, 2172.0], [76.2, 2174.0], [76.3, 2177.0], [76.4, 2181.0], [76.5, 2183.0], [76.6, 2185.0], [76.7, 2188.0], [76.8, 2190.0], [76.9, 2194.0], [77.0, 2196.0], [77.1, 2199.0], [77.2, 2203.0], [77.3, 2208.0], [77.4, 2211.0], [77.5, 2213.0], [77.6, 2217.0], [77.7, 2220.0], [77.8, 2222.0], [77.9, 2226.0], [78.0, 2230.0], [78.1, 2233.0], [78.2, 2236.0], [78.3, 2239.0], [78.4, 2243.0], [78.5, 2246.0], [78.6, 2249.0], [78.7, 2252.0], [78.8, 2255.0], [78.9, 2259.0], [79.0, 2262.0], [79.1, 2265.0], [79.2, 2269.0], [79.3, 2274.0], [79.4, 2278.0], [79.5, 2281.0], [79.6, 2284.0], [79.7, 2287.0], [79.8, 2289.0], [79.9, 2292.0], [80.0, 2295.0], [80.1, 2298.0], [80.2, 2301.0], [80.3, 2304.0], [80.4, 2305.0], [80.5, 2309.0], [80.6, 2313.0], [80.7, 2319.0], [80.8, 2323.0], [80.9, 2328.0], [81.0, 2332.0], [81.1, 2336.0], [81.2, 2340.0], [81.3, 2343.0], [81.4, 2348.0], [81.5, 2353.0], [81.6, 2356.0], [81.7, 2360.0], [81.8, 2365.0], [81.9, 2370.0], [82.0, 2374.0], [82.1, 2378.0], [82.2, 2381.0], [82.3, 2385.0], [82.4, 2389.0], [82.5, 2393.0], [82.6, 2399.0], [82.7, 2403.0], [82.8, 2407.0], [82.9, 2413.0], [83.0, 2416.0], [83.1, 2419.0], [83.2, 2423.0], [83.3, 2425.0], [83.4, 2429.0], [83.5, 2431.0], [83.6, 2433.0], [83.7, 2438.0], [83.8, 2441.0], [83.9, 2446.0], [84.0, 2451.0], [84.1, 2454.0], [84.2, 2456.0], [84.3, 2460.0], [84.4, 2464.0], [84.5, 2467.0], [84.6, 2471.0], [84.7, 2476.0], [84.8, 2484.0], [84.9, 2488.0], [85.0, 2493.0], [85.1, 2500.0], [85.2, 2504.0], [85.3, 2508.0], [85.4, 2513.0], [85.5, 2517.0], [85.6, 2521.0], [85.7, 2526.0], [85.8, 2530.0], [85.9, 2536.0], [86.0, 2541.0], [86.1, 2547.0], [86.2, 2550.0], [86.3, 2554.0], [86.4, 2559.0], [86.5, 2562.0], [86.6, 2566.0], [86.7, 2572.0], [86.8, 2577.0], [86.9, 2583.0], [87.0, 2588.0], [87.1, 2592.0], [87.2, 2597.0], [87.3, 2600.0], [87.4, 2605.0], [87.5, 2609.0], [87.6, 2616.0], [87.7, 2621.0], [87.8, 2626.0], [87.9, 2630.0], [88.0, 2634.0], [88.1, 2638.0], [88.2, 2644.0], [88.3, 2648.0], [88.4, 2654.0], [88.5, 2658.0], [88.6, 2663.0], [88.7, 2669.0], [88.8, 2675.0], [88.9, 2681.0], [89.0, 2687.0], [89.1, 2694.0], [89.2, 2700.0], [89.3, 2710.0], [89.4, 2716.0], [89.5, 2719.0], [89.6, 2724.0], [89.7, 2729.0], [89.8, 2734.0], [89.9, 2740.0], [90.0, 2746.0], [90.1, 2751.0], [90.2, 2755.0], [90.3, 2759.0], [90.4, 2763.0], [90.5, 2770.0], [90.6, 2778.0], [90.7, 2783.0], [90.8, 2791.0], [90.9, 2798.0], [91.0, 2804.0], [91.1, 2810.0], [91.2, 2817.0], [91.3, 2822.0], [91.4, 2826.0], [91.5, 2831.0], [91.6, 2837.0], [91.7, 2847.0], [91.8, 2854.0], [91.9, 2861.0], [92.0, 2869.0], [92.1, 2873.0], [92.2, 2882.0], [92.3, 2886.0], [92.4, 2893.0], [92.5, 2899.0], [92.6, 2907.0], [92.7, 2915.0], [92.8, 2923.0], [92.9, 2930.0], [93.0, 2938.0], [93.1, 2942.0], [93.2, 2953.0], [93.3, 2958.0], [93.4, 2968.0], [93.5, 2972.0], [93.6, 2983.0], [93.7, 2990.0], [93.8, 2999.0], [93.9, 3005.0], [94.0, 3012.0], [94.1, 3019.0], [94.2, 3027.0], [94.3, 3034.0], [94.4, 3046.0], [94.5, 3053.0], [94.6, 3059.0], [94.7, 3069.0], [94.8, 3079.0], [94.9, 3087.0], [95.0, 3095.0], [95.1, 3101.0], [95.2, 3110.0], [95.3, 3125.0], [95.4, 3137.0], [95.5, 3150.0], [95.6, 3159.0], [95.7, 3169.0], [95.8, 3178.0], [95.9, 3193.0], [96.0, 3206.0], [96.1, 3217.0], [96.2, 3229.0], [96.3, 3239.0], [96.4, 3255.0], [96.5, 3264.0], [96.6, 3280.0], [96.7, 3289.0], [96.8, 3301.0], [96.9, 3316.0], [97.0, 3331.0], [97.1, 3345.0], [97.2, 3365.0], [97.3, 3390.0], [97.4, 3407.0], [97.5, 3428.0], [97.6, 3442.0], [97.7, 3470.0], [97.8, 3490.0], [97.9, 3509.0], [98.0, 3540.0], [98.1, 3561.0], [98.2, 3593.0], [98.3, 3629.0], [98.4, 3649.0], [98.5, 3670.0], [98.6, 3715.0], [98.7, 3759.0], [98.8, 3807.0], [98.9, 3874.0], [99.0, 3933.0], [99.1, 3980.0], [99.2, 4037.0], [99.3, 4137.0], [99.4, 4249.0], [99.5, 4508.0], [99.6, 4767.0], [99.7, 5712.0], [99.8, 8714.0], [99.9, 9121.0], [100.0, 9692.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 143.0], [0.1, 143.0], [0.2, 143.0], [0.3, 143.0], [0.4, 143.0], [0.5, 143.0], [0.6, 143.0], [0.7, 143.0], [0.8, 149.0], [0.9, 149.0], [1.0, 149.0], [1.1, 149.0], [1.2, 149.0], [1.3, 149.0], [1.4, 149.0], [1.5, 151.0], [1.6, 151.0], [1.7, 151.0], [1.8, 151.0], [1.9, 151.0], [2.0, 151.0], [2.1, 151.0], [2.2, 151.0], [2.3, 151.0], [2.4, 151.0], [2.5, 151.0], [2.6, 151.0], [2.7, 151.0], [2.8, 151.0], [2.9, 152.0], [3.0, 152.0], [3.1, 152.0], [3.2, 152.0], [3.3, 152.0], [3.4, 152.0], [3.5, 152.0], [3.6, 152.0], [3.7, 152.0], [3.8, 152.0], [3.9, 152.0], [4.0, 152.0], [4.1, 152.0], [4.2, 152.0], [4.3, 152.0], [4.4, 152.0], [4.5, 152.0], [4.6, 152.0], [4.7, 152.0], [4.8, 152.0], [4.9, 152.0], [5.0, 153.0], [5.1, 153.0], [5.2, 153.0], [5.3, 153.0], [5.4, 153.0], [5.5, 153.0], [5.6, 153.0], [5.7, 153.0], [5.8, 154.0], [5.9, 154.0], [6.0, 154.0], [6.1, 154.0], [6.2, 154.0], [6.3, 154.0], [6.4, 154.0], [6.5, 154.0], [6.6, 154.0], [6.7, 154.0], [6.8, 154.0], [6.9, 154.0], [7.0, 154.0], [7.1, 154.0], [7.2, 154.0], [7.3, 154.0], [7.4, 154.0], [7.5, 154.0], [7.6, 154.0], [7.7, 154.0], [7.8, 154.0], [7.9, 154.0], [8.0, 154.0], [8.1, 154.0], [8.2, 154.0], [8.3, 154.0], [8.4, 154.0], [8.5, 154.0], [8.6, 155.0], [8.7, 155.0], [8.8, 155.0], [8.9, 155.0], [9.0, 155.0], [9.1, 155.0], [9.2, 155.0], [9.3, 156.0], [9.4, 156.0], [9.5, 156.0], [9.6, 156.0], [9.7, 156.0], [9.8, 156.0], [9.9, 156.0], [10.0, 156.0], [10.1, 156.0], [10.2, 156.0], [10.3, 156.0], [10.4, 156.0], [10.5, 156.0], [10.6, 156.0], [10.7, 156.0], [10.8, 156.0], [10.9, 156.0], [11.0, 156.0], [11.1, 156.0], [11.2, 156.0], [11.3, 156.0], [11.4, 156.0], [11.5, 156.0], [11.6, 156.0], [11.7, 156.0], [11.8, 156.0], [11.9, 156.0], [12.0, 156.0], [12.1, 156.0], [12.2, 157.0], [12.3, 157.0], [12.4, 157.0], [12.5, 157.0], [12.6, 157.0], [12.7, 157.0], [12.8, 157.0], [12.9, 157.0], [13.0, 157.0], [13.1, 157.0], [13.2, 157.0], [13.3, 157.0], [13.4, 157.0], [13.5, 157.0], [13.6, 158.0], [13.7, 158.0], [13.8, 158.0], [13.9, 158.0], [14.0, 158.0], [14.1, 158.0], [14.2, 158.0], [14.3, 158.0], [14.4, 158.0], [14.5, 158.0], [14.6, 158.0], [14.7, 158.0], [14.8, 158.0], [14.9, 158.0], [15.0, 160.0], [15.1, 160.0], [15.2, 160.0], [15.3, 160.0], [15.4, 160.0], [15.5, 160.0], [15.6, 160.0], [15.7, 160.0], [15.8, 160.0], [15.9, 160.0], [16.0, 160.0], [16.1, 160.0], [16.2, 160.0], [16.3, 160.0], [16.4, 160.0], [16.5, 160.0], [16.6, 160.0], [16.7, 160.0], [16.8, 160.0], [16.9, 160.0], [17.0, 160.0], [17.1, 160.0], [17.2, 160.0], [17.3, 160.0], [17.4, 160.0], [17.5, 160.0], [17.6, 160.0], [17.7, 160.0], [17.8, 160.0], [17.9, 160.0], [18.0, 160.0], [18.1, 160.0], [18.2, 160.0], [18.3, 160.0], [18.4, 160.0], [18.5, 160.0], [18.6, 161.0], [18.7, 161.0], [18.8, 161.0], [18.9, 161.0], [19.0, 161.0], [19.1, 161.0], [19.2, 161.0], [19.3, 161.0], [19.4, 161.0], [19.5, 161.0], [19.6, 161.0], [19.7, 161.0], [19.8, 161.0], [19.9, 161.0], [20.0, 162.0], [20.1, 162.0], [20.2, 162.0], [20.3, 162.0], [20.4, 162.0], [20.5, 162.0], [20.6, 162.0], [20.7, 162.0], [20.8, 162.0], [20.9, 162.0], [21.0, 162.0], [21.1, 162.0], [21.2, 162.0], [21.3, 162.0], [21.4, 162.0], [21.5, 162.0], [21.6, 162.0], [21.7, 162.0], [21.8, 162.0], [21.9, 162.0], [22.0, 162.0], [22.1, 162.0], [22.2, 162.0], [22.3, 162.0], [22.4, 162.0], [22.5, 162.0], [22.6, 162.0], [22.7, 162.0], [22.8, 162.0], [22.9, 163.0], [23.0, 163.0], [23.1, 163.0], [23.2, 163.0], [23.3, 163.0], [23.4, 163.0], [23.5, 163.0], [23.6, 163.0], [23.7, 163.0], [23.8, 163.0], [23.9, 163.0], [24.0, 163.0], [24.1, 163.0], [24.2, 163.0], [24.3, 163.0], [24.4, 163.0], [24.5, 163.0], [24.6, 163.0], [24.7, 163.0], [24.8, 163.0], [24.9, 163.0], [25.0, 163.0], [25.1, 163.0], [25.2, 163.0], [25.3, 163.0], [25.4, 163.0], [25.5, 163.0], [25.6, 163.0], [25.7, 163.0], [25.8, 164.0], [25.9, 164.0], [26.0, 164.0], [26.1, 164.0], [26.2, 164.0], [26.3, 164.0], [26.4, 164.0], [26.5, 164.0], [26.6, 164.0], [26.7, 164.0], [26.8, 164.0], [26.9, 164.0], [27.0, 164.0], [27.1, 164.0], [27.2, 164.0], [27.3, 164.0], [27.4, 164.0], [27.5, 164.0], [27.6, 164.0], [27.7, 164.0], [27.8, 164.0], [27.9, 165.0], [28.0, 165.0], [28.1, 165.0], [28.2, 165.0], [28.3, 165.0], [28.4, 165.0], [28.5, 165.0], [28.6, 165.0], [28.7, 165.0], [28.8, 165.0], [28.9, 165.0], [29.0, 165.0], [29.1, 165.0], [29.2, 165.0], [29.3, 165.0], [29.4, 165.0], [29.5, 165.0], [29.6, 165.0], [29.7, 165.0], [29.8, 165.0], [29.9, 165.0], [30.0, 165.0], [30.1, 165.0], [30.2, 165.0], [30.3, 165.0], [30.4, 165.0], [30.5, 165.0], [30.6, 165.0], [30.7, 165.0], [30.8, 166.0], [30.9, 166.0], [31.0, 166.0], [31.1, 166.0], [31.2, 166.0], [31.3, 166.0], [31.4, 166.0], [31.5, 166.0], [31.6, 166.0], [31.7, 166.0], [31.8, 166.0], [31.9, 166.0], [32.0, 166.0], [32.1, 166.0], [32.2, 167.0], [32.3, 167.0], [32.4, 167.0], [32.5, 167.0], [32.6, 167.0], [32.7, 167.0], [32.8, 167.0], [32.9, 169.0], [33.0, 169.0], [33.1, 169.0], [33.2, 169.0], [33.3, 169.0], [33.4, 169.0], [33.5, 169.0], [33.6, 170.0], [33.7, 170.0], [33.8, 170.0], [33.9, 170.0], [34.0, 170.0], [34.1, 170.0], [34.2, 170.0], [34.3, 170.0], [34.4, 170.0], [34.5, 170.0], [34.6, 170.0], [34.7, 170.0], [34.8, 170.0], [34.9, 170.0], [35.0, 170.0], [35.1, 172.0], [35.2, 172.0], [35.3, 172.0], [35.4, 172.0], [35.5, 172.0], [35.6, 172.0], [35.7, 172.0], [35.8, 172.0], [35.9, 172.0], [36.0, 172.0], [36.1, 172.0], [36.2, 172.0], [36.3, 172.0], [36.4, 172.0], [36.5, 172.0], [36.6, 172.0], [36.7, 172.0], [36.8, 172.0], [36.9, 172.0], [37.0, 172.0], [37.1, 172.0], [37.2, 175.0], [37.3, 175.0], [37.4, 175.0], [37.5, 175.0], [37.6, 175.0], [37.7, 175.0], [37.8, 175.0], [37.9, 175.0], [38.0, 175.0], [38.1, 175.0], [38.2, 175.0], [38.3, 175.0], [38.4, 175.0], [38.5, 175.0], [38.6, 175.0], [38.7, 175.0], [38.8, 175.0], [38.9, 175.0], [39.0, 175.0], [39.1, 175.0], [39.2, 175.0], [39.3, 175.0], [39.4, 175.0], [39.5, 175.0], [39.6, 175.0], [39.7, 175.0], [39.8, 175.0], [39.9, 175.0], [40.0, 175.0], [40.1, 176.0], [40.2, 176.0], [40.3, 176.0], [40.4, 176.0], [40.5, 176.0], [40.6, 176.0], [40.7, 176.0], [40.8, 176.0], [40.9, 176.0], [41.0, 176.0], [41.1, 176.0], [41.2, 176.0], [41.3, 176.0], [41.4, 176.0], [41.5, 177.0], [41.6, 177.0], [41.7, 177.0], [41.8, 177.0], [41.9, 177.0], [42.0, 177.0], [42.1, 177.0], [42.2, 179.0], [42.3, 179.0], [42.4, 179.0], [42.5, 179.0], [42.6, 179.0], [42.7, 179.0], [42.8, 179.0], [42.9, 179.0], [43.0, 179.0], [43.1, 179.0], [43.2, 179.0], [43.3, 179.0], [43.4, 179.0], [43.5, 179.0], [43.6, 179.0], [43.7, 179.0], [43.8, 179.0], [43.9, 179.0], [44.0, 179.0], [44.1, 179.0], [44.2, 179.0], [44.3, 180.0], [44.4, 180.0], [44.5, 180.0], [44.6, 180.0], [44.7, 180.0], [44.8, 180.0], [44.9, 180.0], [45.0, 180.0], [45.1, 181.0], [45.2, 181.0], [45.3, 181.0], [45.4, 181.0], [45.5, 181.0], [45.6, 181.0], [45.7, 181.0], [45.8, 181.0], [45.9, 181.0], [46.0, 181.0], [46.1, 181.0], [46.2, 181.0], [46.3, 181.0], [46.4, 181.0], [46.5, 181.0], [46.6, 181.0], [46.7, 181.0], [46.8, 181.0], [46.9, 181.0], [47.0, 181.0], [47.1, 181.0], [47.2, 182.0], [47.3, 182.0], [47.4, 182.0], [47.5, 182.0], [47.6, 182.0], [47.7, 182.0], [47.8, 182.0], [47.9, 182.0], [48.0, 182.0], [48.1, 182.0], [48.2, 182.0], [48.3, 182.0], [48.4, 182.0], [48.5, 182.0], [48.6, 183.0], [48.7, 183.0], [48.8, 183.0], [48.9, 183.0], [49.0, 183.0], [49.1, 183.0], [49.2, 183.0], [49.3, 185.0], [49.4, 185.0], [49.5, 185.0], [49.6, 185.0], [49.7, 185.0], [49.8, 185.0], [49.9, 185.0], [50.0, 185.0], [50.1, 186.0], [50.2, 186.0], [50.3, 186.0], [50.4, 186.0], [50.5, 186.0], [50.6, 186.0], [50.7, 186.0], [50.8, 186.0], [50.9, 186.0], [51.0, 186.0], [51.1, 186.0], [51.2, 186.0], [51.3, 186.0], [51.4, 186.0], [51.5, 186.0], [51.6, 186.0], [51.7, 186.0], [51.8, 186.0], [51.9, 186.0], [52.0, 186.0], [52.1, 186.0], [52.2, 187.0], [52.3, 187.0], [52.4, 187.0], [52.5, 187.0], [52.6, 187.0], [52.7, 187.0], [52.8, 187.0], [52.9, 189.0], [53.0, 189.0], [53.1, 189.0], [53.2, 189.0], [53.3, 189.0], [53.4, 189.0], [53.5, 189.0], [53.6, 189.0], [53.7, 189.0], [53.8, 189.0], [53.9, 189.0], [54.0, 189.0], [54.1, 189.0], [54.2, 189.0], [54.3, 190.0], [54.4, 190.0], [54.5, 190.0], [54.6, 190.0], [54.7, 190.0], [54.8, 190.0], [54.9, 190.0], [55.0, 190.0], [55.1, 191.0], [55.2, 191.0], [55.3, 191.0], [55.4, 191.0], [55.5, 191.0], [55.6, 191.0], [55.7, 191.0], [55.8, 193.0], [55.9, 193.0], [56.0, 193.0], [56.1, 193.0], [56.2, 193.0], [56.3, 193.0], [56.4, 193.0], [56.5, 195.0], [56.6, 195.0], [56.7, 195.0], [56.8, 195.0], [56.9, 195.0], [57.0, 195.0], [57.1, 195.0], [57.2, 196.0], [57.3, 196.0], [57.4, 196.0], [57.5, 196.0], [57.6, 196.0], [57.7, 196.0], [57.8, 196.0], [57.9, 197.0], [58.0, 197.0], [58.1, 197.0], [58.2, 197.0], [58.3, 197.0], [58.4, 197.0], [58.5, 197.0], [58.6, 198.0], [58.7, 198.0], [58.8, 198.0], [58.9, 198.0], [59.0, 198.0], [59.1, 198.0], [59.2, 198.0], [59.3, 198.0], [59.4, 198.0], [59.5, 198.0], [59.6, 198.0], [59.7, 198.0], [59.8, 198.0], [59.9, 198.0], [60.0, 198.0], [60.1, 201.0], [60.2, 201.0], [60.3, 201.0], [60.4, 201.0], [60.5, 201.0], [60.6, 201.0], [60.7, 201.0], [60.8, 202.0], [60.9, 202.0], [61.0, 202.0], [61.1, 202.0], [61.2, 202.0], [61.3, 202.0], [61.4, 202.0], [61.5, 205.0], [61.6, 205.0], [61.7, 205.0], [61.8, 205.0], [61.9, 205.0], [62.0, 205.0], [62.1, 205.0], [62.2, 205.0], [62.3, 205.0], [62.4, 205.0], [62.5, 205.0], [62.6, 205.0], [62.7, 205.0], [62.8, 205.0], [62.9, 207.0], [63.0, 207.0], [63.1, 207.0], [63.2, 207.0], [63.3, 207.0], [63.4, 207.0], [63.5, 207.0], [63.6, 208.0], [63.7, 208.0], [63.8, 208.0], [63.9, 208.0], [64.0, 208.0], [64.1, 208.0], [64.2, 208.0], [64.3, 208.0], [64.4, 208.0], [64.5, 208.0], [64.6, 208.0], [64.7, 208.0], [64.8, 208.0], [64.9, 208.0], [65.0, 208.0], [65.1, 210.0], [65.2, 210.0], [65.3, 210.0], [65.4, 210.0], [65.5, 210.0], [65.6, 210.0], [65.7, 210.0], [65.8, 211.0], [65.9, 211.0], [66.0, 211.0], [66.1, 211.0], [66.2, 211.0], [66.3, 211.0], [66.4, 211.0], [66.5, 213.0], [66.6, 213.0], [66.7, 213.0], [66.8, 213.0], [66.9, 213.0], [67.0, 213.0], [67.1, 213.0], [67.2, 215.0], [67.3, 215.0], [67.4, 215.0], [67.5, 215.0], [67.6, 215.0], [67.7, 215.0], [67.8, 215.0], [67.9, 216.0], [68.0, 216.0], [68.1, 216.0], [68.2, 216.0], [68.3, 216.0], [68.4, 216.0], [68.5, 216.0], [68.6, 219.0], [68.7, 219.0], [68.8, 219.0], [68.9, 219.0], [69.0, 219.0], [69.1, 219.0], [69.2, 219.0], [69.3, 220.0], [69.4, 220.0], [69.5, 220.0], [69.6, 220.0], [69.7, 220.0], [69.8, 220.0], [69.9, 220.0], [70.0, 220.0], [70.1, 220.0], [70.2, 220.0], [70.3, 220.0], [70.4, 220.0], [70.5, 220.0], [70.6, 220.0], [70.7, 220.0], [70.8, 223.0], [70.9, 223.0], [71.0, 223.0], [71.1, 223.0], [71.2, 223.0], [71.3, 223.0], [71.4, 223.0], [71.5, 225.0], [71.6, 225.0], [71.7, 225.0], [71.8, 225.0], [71.9, 225.0], [72.0, 225.0], [72.1, 225.0], [72.2, 226.0], [72.3, 226.0], [72.4, 226.0], [72.5, 226.0], [72.6, 226.0], [72.7, 226.0], [72.8, 226.0], [72.9, 226.0], [73.0, 226.0], [73.1, 226.0], [73.2, 226.0], [73.3, 226.0], [73.4, 226.0], [73.5, 226.0], [73.6, 226.0], [73.7, 226.0], [73.8, 226.0], [73.9, 226.0], [74.0, 226.0], [74.1, 226.0], [74.2, 226.0], [74.3, 228.0], [74.4, 228.0], [74.5, 228.0], [74.6, 228.0], [74.7, 228.0], [74.8, 228.0], [74.9, 228.0], [75.0, 232.0], [75.1, 232.0], [75.2, 232.0], [75.3, 232.0], [75.4, 232.0], [75.5, 232.0], [75.6, 232.0], [75.7, 232.0], [75.8, 234.0], [75.9, 234.0], [76.0, 234.0], [76.1, 234.0], [76.2, 234.0], [76.3, 234.0], [76.4, 234.0], [76.5, 235.0], [76.6, 235.0], [76.7, 235.0], [76.8, 235.0], [76.9, 235.0], [77.0, 235.0], [77.1, 235.0], [77.2, 238.0], [77.3, 238.0], [77.4, 238.0], [77.5, 238.0], [77.6, 238.0], [77.7, 238.0], [77.8, 238.0], [77.9, 245.0], [78.0, 245.0], [78.1, 245.0], [78.2, 245.0], [78.3, 245.0], [78.4, 245.0], [78.5, 245.0], [78.6, 254.0], [78.7, 254.0], [78.8, 254.0], [78.9, 254.0], [79.0, 254.0], [79.1, 254.0], [79.2, 254.0], [79.3, 264.0], [79.4, 264.0], [79.5, 264.0], [79.6, 264.0], [79.7, 264.0], [79.8, 264.0], [79.9, 264.0], [80.0, 266.0], [80.1, 266.0], [80.2, 266.0], [80.3, 266.0], [80.4, 266.0], [80.5, 266.0], [80.6, 266.0], [80.7, 266.0], [80.8, 276.0], [80.9, 276.0], [81.0, 276.0], [81.1, 276.0], [81.2, 276.0], [81.3, 276.0], [81.4, 276.0], [81.5, 289.0], [81.6, 289.0], [81.7, 289.0], [81.8, 289.0], [81.9, 289.0], [82.0, 289.0], [82.1, 289.0], [82.2, 296.0], [82.3, 296.0], [82.4, 296.0], [82.5, 296.0], [82.6, 296.0], [82.7, 296.0], [82.8, 296.0], [82.9, 304.0], [83.0, 304.0], [83.1, 304.0], [83.2, 304.0], [83.3, 304.0], [83.4, 304.0], [83.5, 304.0], [83.6, 317.0], [83.7, 317.0], [83.8, 317.0], [83.9, 317.0], [84.0, 317.0], [84.1, 317.0], [84.2, 317.0], [84.3, 319.0], [84.4, 319.0], [84.5, 319.0], [84.6, 319.0], [84.7, 319.0], [84.8, 319.0], [84.9, 319.0], [85.0, 324.0], [85.1, 324.0], [85.2, 324.0], [85.3, 324.0], [85.4, 324.0], [85.5, 324.0], [85.6, 324.0], [85.7, 324.0], [85.8, 340.0], [85.9, 340.0], [86.0, 340.0], [86.1, 340.0], [86.2, 340.0], [86.3, 340.0], [86.4, 340.0], [86.5, 361.0], [86.6, 361.0], [86.7, 361.0], [86.8, 361.0], [86.9, 361.0], [87.0, 361.0], [87.1, 361.0], [87.2, 362.0], [87.3, 362.0], [87.4, 362.0], [87.5, 362.0], [87.6, 362.0], [87.7, 362.0], [87.8, 362.0], [87.9, 380.0], [88.0, 380.0], [88.1, 380.0], [88.2, 380.0], [88.3, 380.0], [88.4, 380.0], [88.5, 380.0], [88.6, 381.0], [88.7, 381.0], [88.8, 381.0], [88.9, 381.0], [89.0, 381.0], [89.1, 381.0], [89.2, 381.0], [89.3, 381.0], [89.4, 381.0], [89.5, 381.0], [89.6, 381.0], [89.7, 381.0], [89.8, 381.0], [89.9, 381.0], [90.0, 384.0], [90.1, 384.0], [90.2, 384.0], [90.3, 384.0], [90.4, 384.0], [90.5, 384.0], [90.6, 384.0], [90.7, 384.0], [90.8, 411.0], [90.9, 411.0], [91.0, 411.0], [91.1, 411.0], [91.2, 411.0], [91.3, 411.0], [91.4, 411.0], [91.5, 425.0], [91.6, 425.0], [91.7, 425.0], [91.8, 425.0], [91.9, 425.0], [92.0, 425.0], [92.1, 425.0], [92.2, 445.0], [92.3, 445.0], [92.4, 445.0], [92.5, 445.0], [92.6, 445.0], [92.7, 445.0], [92.8, 445.0], [92.9, 453.0], [93.0, 453.0], [93.1, 453.0], [93.2, 453.0], [93.3, 453.0], [93.4, 453.0], [93.5, 453.0], [93.6, 836.0], [93.7, 836.0], [93.8, 836.0], [93.9, 836.0], [94.0, 836.0], [94.1, 836.0], [94.2, 836.0], [94.3, 954.0], [94.4, 954.0], [94.5, 954.0], [94.6, 954.0], [94.7, 954.0], [94.8, 954.0], [94.9, 954.0], [95.0, 1008.0], [95.1, 1008.0], [95.2, 1008.0], [95.3, 1008.0], [95.4, 1008.0], [95.5, 1008.0], [95.6, 1008.0], [95.7, 1008.0], [95.8, 1150.0], [95.9, 1150.0], [96.0, 1150.0], [96.1, 1150.0], [96.2, 1150.0], [96.3, 1150.0], [96.4, 1150.0], [96.5, 1198.0], [96.6, 1198.0], [96.7, 1198.0], [96.8, 1198.0], [96.9, 1198.0], [97.0, 1198.0], [97.1, 1198.0], [97.2, 1209.0], [97.3, 1209.0], [97.4, 1209.0], [97.5, 1209.0], [97.6, 1209.0], [97.7, 1209.0], [97.8, 1209.0], [97.9, 1229.0], [98.0, 1229.0], [98.1, 1229.0], [98.2, 1229.0], [98.3, 1229.0], [98.4, 1229.0], [98.5, 1229.0], [98.6, 1403.0], [98.7, 1403.0], [98.8, 1403.0], [98.9, 1403.0], [99.0, 1403.0], [99.1, 1403.0], [99.2, 1403.0], [99.3, 1776.0], [99.4, 1776.0], [99.5, 1776.0], [99.6, 1776.0], [99.7, 1776.0], [99.8, 1776.0], [99.9, 1776.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 5.0], [1.7, 6.0], [1.8, 7.0], [1.9, 8.0], [2.0, 9.0], [2.1, 10.0], [2.2, 11.0], [2.3, 12.0], [2.4, 13.0], [2.5, 15.0], [2.6, 16.0], [2.7, 20.0], [2.8, 26.0], [2.9, 32.0], [3.0, 35.0], [3.1, 36.0], [3.2, 37.0], [3.3, 38.0], [3.4, 39.0], [3.5, 40.0], [3.6, 41.0], [3.7, 42.0], [3.8, 43.0], [3.9, 44.0], [4.0, 44.0], [4.1, 45.0], [4.2, 45.0], [4.3, 46.0], [4.4, 46.0], [4.5, 47.0], [4.6, 48.0], [4.7, 48.0], [4.8, 48.0], [4.9, 49.0], [5.0, 49.0], [5.1, 50.0], [5.2, 51.0], [5.3, 51.0], [5.4, 51.0], [5.5, 52.0], [5.6, 53.0], [5.7, 53.0], [5.8, 54.0], [5.9, 55.0], [6.0, 55.0], [6.1, 56.0], [6.2, 56.0], [6.3, 57.0], [6.4, 58.0], [6.5, 58.0], [6.6, 58.0], [6.7, 59.0], [6.8, 60.0], [6.9, 60.0], [7.0, 61.0], [7.1, 62.0], [7.2, 63.0], [7.3, 64.0], [7.4, 65.0], [7.5, 66.0], [7.6, 67.0], [7.7, 68.0], [7.8, 70.0], [7.9, 72.0], [8.0, 74.0], [8.1, 78.0], [8.2, 80.0], [8.3, 85.0], [8.4, 88.0], [8.5, 95.0], [8.6, 100.0], [8.7, 104.0], [8.8, 109.0], [8.9, 115.0], [9.0, 121.0], [9.1, 131.0], [9.2, 137.0], [9.3, 150.0], [9.4, 161.0], [9.5, 171.0], [9.6, 181.0], [9.7, 195.0], [9.8, 205.0], [9.9, 215.0], [10.0, 229.0], [10.1, 233.0], [10.2, 244.0], [10.3, 253.0], [10.4, 259.0], [10.5, 267.0], [10.6, 276.0], [10.7, 282.0], [10.8, 293.0], [10.9, 301.0], [11.0, 308.0], [11.1, 316.0], [11.2, 322.0], [11.3, 330.0], [11.4, 339.0], [11.5, 344.0], [11.6, 353.0], [11.7, 363.0], [11.8, 369.0], [11.9, 377.0], [12.0, 389.0], [12.1, 399.0], [12.2, 407.0], [12.3, 415.0], [12.4, 422.0], [12.5, 428.0], [12.6, 433.0], [12.7, 442.0], [12.8, 448.0], [12.9, 455.0], [13.0, 462.0], [13.1, 467.0], [13.2, 472.0], [13.3, 476.0], [13.4, 481.0], [13.5, 486.0], [13.6, 493.0], [13.7, 498.0], [13.8, 504.0], [13.9, 511.0], [14.0, 517.0], [14.1, 524.0], [14.2, 530.0], [14.3, 535.0], [14.4, 538.0], [14.5, 543.0], [14.6, 549.0], [14.7, 556.0], [14.8, 560.0], [14.9, 564.0], [15.0, 569.0], [15.1, 571.0], [15.2, 579.0], [15.3, 586.0], [15.4, 589.0], [15.5, 595.0], [15.6, 599.0], [15.7, 603.0], [15.8, 609.0], [15.9, 613.0], [16.0, 618.0], [16.1, 620.0], [16.2, 627.0], [16.3, 633.0], [16.4, 639.0], [16.5, 647.0], [16.6, 650.0], [16.7, 655.0], [16.8, 660.0], [16.9, 666.0], [17.0, 670.0], [17.1, 676.0], [17.2, 680.0], [17.3, 684.0], [17.4, 687.0], [17.5, 691.0], [17.6, 697.0], [17.7, 699.0], [17.8, 704.0], [17.9, 710.0], [18.0, 714.0], [18.1, 718.0], [18.2, 721.0], [18.3, 724.0], [18.4, 729.0], [18.5, 734.0], [18.6, 737.0], [18.7, 740.0], [18.8, 745.0], [18.9, 748.0], [19.0, 751.0], [19.1, 756.0], [19.2, 761.0], [19.3, 765.0], [19.4, 769.0], [19.5, 772.0], [19.6, 775.0], [19.7, 779.0], [19.8, 782.0], [19.9, 785.0], [20.0, 788.0], [20.1, 790.0], [20.2, 793.0], [20.3, 795.0], [20.4, 800.0], [20.5, 804.0], [20.6, 807.0], [20.7, 811.0], [20.8, 814.0], [20.9, 818.0], [21.0, 822.0], [21.1, 826.0], [21.2, 829.0], [21.3, 833.0], [21.4, 839.0], [21.5, 841.0], [21.6, 845.0], [21.7, 850.0], [21.8, 854.0], [21.9, 857.0], [22.0, 859.0], [22.1, 864.0], [22.2, 869.0], [22.3, 873.0], [22.4, 877.0], [22.5, 881.0], [22.6, 884.0], [22.7, 888.0], [22.8, 892.0], [22.9, 895.0], [23.0, 898.0], [23.1, 900.0], [23.2, 905.0], [23.3, 909.0], [23.4, 912.0], [23.5, 916.0], [23.6, 919.0], [23.7, 922.0], [23.8, 926.0], [23.9, 928.0], [24.0, 931.0], [24.1, 936.0], [24.2, 939.0], [24.3, 943.0], [24.4, 945.0], [24.5, 948.0], [24.6, 952.0], [24.7, 955.0], [24.8, 957.0], [24.9, 960.0], [25.0, 963.0], [25.1, 967.0], [25.2, 970.0], [25.3, 972.0], [25.4, 974.0], [25.5, 977.0], [25.6, 979.0], [25.7, 981.0], [25.8, 984.0], [25.9, 986.0], [26.0, 990.0], [26.1, 993.0], [26.2, 996.0], [26.3, 1001.0], [26.4, 1003.0], [26.5, 1005.0], [26.6, 1008.0], [26.7, 1012.0], [26.8, 1014.0], [26.9, 1017.0], [27.0, 1019.0], [27.1, 1021.0], [27.2, 1024.0], [27.3, 1027.0], [27.4, 1031.0], [27.5, 1034.0], [27.6, 1038.0], [27.7, 1040.0], [27.8, 1043.0], [27.9, 1046.0], [28.0, 1048.0], [28.1, 1051.0], [28.2, 1053.0], [28.3, 1055.0], [28.4, 1057.0], [28.5, 1059.0], [28.6, 1062.0], [28.7, 1065.0], [28.8, 1067.0], [28.9, 1070.0], [29.0, 1073.0], [29.1, 1076.0], [29.2, 1079.0], [29.3, 1083.0], [29.4, 1086.0], [29.5, 1090.0], [29.6, 1092.0], [29.7, 1094.0], [29.8, 1098.0], [29.9, 1101.0], [30.0, 1104.0], [30.1, 1105.0], [30.2, 1109.0], [30.3, 1111.0], [30.4, 1113.0], [30.5, 1116.0], [30.6, 1119.0], [30.7, 1121.0], [30.8, 1123.0], [30.9, 1125.0], [31.0, 1127.0], [31.1, 1131.0], [31.2, 1134.0], [31.3, 1136.0], [31.4, 1139.0], [31.5, 1141.0], [31.6, 1144.0], [31.7, 1148.0], [31.8, 1150.0], [31.9, 1153.0], [32.0, 1156.0], [32.1, 1158.0], [32.2, 1161.0], [32.3, 1163.0], [32.4, 1166.0], [32.5, 1168.0], [32.6, 1171.0], [32.7, 1175.0], [32.8, 1177.0], [32.9, 1179.0], [33.0, 1181.0], [33.1, 1183.0], [33.2, 1185.0], [33.3, 1188.0], [33.4, 1190.0], [33.5, 1191.0], [33.6, 1194.0], [33.7, 1196.0], [33.8, 1199.0], [33.9, 1202.0], [34.0, 1204.0], [34.1, 1206.0], [34.2, 1210.0], [34.3, 1213.0], [34.4, 1215.0], [34.5, 1218.0], [34.6, 1219.0], [34.7, 1222.0], [34.8, 1224.0], [34.9, 1227.0], [35.0, 1231.0], [35.1, 1233.0], [35.2, 1235.0], [35.3, 1238.0], [35.4, 1240.0], [35.5, 1242.0], [35.6, 1244.0], [35.7, 1248.0], [35.8, 1250.0], [35.9, 1252.0], [36.0, 1254.0], [36.1, 1256.0], [36.2, 1259.0], [36.3, 1262.0], [36.4, 1264.0], [36.5, 1267.0], [36.6, 1269.0], [36.7, 1272.0], [36.8, 1273.0], [36.9, 1275.0], [37.0, 1277.0], [37.1, 1280.0], [37.2, 1283.0], [37.3, 1284.0], [37.4, 1287.0], [37.5, 1289.0], [37.6, 1291.0], [37.7, 1293.0], [37.8, 1295.0], [37.9, 1297.0], [38.0, 1299.0], [38.1, 1302.0], [38.2, 1304.0], [38.3, 1305.0], [38.4, 1307.0], [38.5, 1309.0], [38.6, 1311.0], [38.7, 1313.0], [38.8, 1315.0], [38.9, 1316.0], [39.0, 1319.0], [39.1, 1322.0], [39.2, 1326.0], [39.3, 1327.0], [39.4, 1329.0], [39.5, 1331.0], [39.6, 1333.0], [39.7, 1335.0], [39.8, 1338.0], [39.9, 1341.0], [40.0, 1343.0], [40.1, 1345.0], [40.2, 1347.0], [40.3, 1350.0], [40.4, 1351.0], [40.5, 1353.0], [40.6, 1355.0], [40.7, 1357.0], [40.8, 1359.0], [40.9, 1362.0], [41.0, 1364.0], [41.1, 1366.0], [41.2, 1369.0], [41.3, 1371.0], [41.4, 1373.0], [41.5, 1375.0], [41.6, 1378.0], [41.7, 1381.0], [41.8, 1383.0], [41.9, 1384.0], [42.0, 1386.0], [42.1, 1389.0], [42.2, 1391.0], [42.3, 1393.0], [42.4, 1396.0], [42.5, 1399.0], [42.6, 1400.0], [42.7, 1403.0], [42.8, 1406.0], [42.9, 1408.0], [43.0, 1411.0], [43.1, 1413.0], [43.2, 1415.0], [43.3, 1417.0], [43.4, 1420.0], [43.5, 1421.0], [43.6, 1424.0], [43.7, 1426.0], [43.8, 1428.0], [43.9, 1429.0], [44.0, 1432.0], [44.1, 1435.0], [44.2, 1436.0], [44.3, 1439.0], [44.4, 1442.0], [44.5, 1445.0], [44.6, 1448.0], [44.7, 1450.0], [44.8, 1451.0], [44.9, 1454.0], [45.0, 1456.0], [45.1, 1458.0], [45.2, 1460.0], [45.3, 1463.0], [45.4, 1466.0], [45.5, 1467.0], [45.6, 1469.0], [45.7, 1471.0], [45.8, 1473.0], [45.9, 1474.0], [46.0, 1476.0], [46.1, 1478.0], [46.2, 1480.0], [46.3, 1482.0], [46.4, 1484.0], [46.5, 1486.0], [46.6, 1489.0], [46.7, 1491.0], [46.8, 1493.0], [46.9, 1495.0], [47.0, 1497.0], [47.1, 1499.0], [47.2, 1501.0], [47.3, 1503.0], [47.4, 1506.0], [47.5, 1508.0], [47.6, 1510.0], [47.7, 1511.0], [47.8, 1514.0], [47.9, 1516.0], [48.0, 1518.0], [48.1, 1520.0], [48.2, 1521.0], [48.3, 1524.0], [48.4, 1527.0], [48.5, 1528.0], [48.6, 1530.0], [48.7, 1532.0], [48.8, 1535.0], [48.9, 1537.0], [49.0, 1540.0], [49.1, 1541.0], [49.2, 1543.0], [49.3, 1546.0], [49.4, 1548.0], [49.5, 1550.0], [49.6, 1552.0], [49.7, 1555.0], [49.8, 1557.0], [49.9, 1559.0], [50.0, 1561.0], [50.1, 1563.0], [50.2, 1565.0], [50.3, 1566.0], [50.4, 1568.0], [50.5, 1571.0], [50.6, 1573.0], [50.7, 1574.0], [50.8, 1576.0], [50.9, 1578.0], [51.0, 1580.0], [51.1, 1582.0], [51.2, 1583.0], [51.3, 1585.0], [51.4, 1588.0], [51.5, 1590.0], [51.6, 1592.0], [51.7, 1594.0], [51.8, 1596.0], [51.9, 1597.0], [52.0, 1601.0], [52.1, 1602.0], [52.2, 1605.0], [52.3, 1608.0], [52.4, 1611.0], [52.5, 1612.0], [52.6, 1614.0], [52.7, 1617.0], [52.8, 1618.0], [52.9, 1621.0], [53.0, 1623.0], [53.1, 1625.0], [53.2, 1627.0], [53.3, 1629.0], [53.4, 1630.0], [53.5, 1632.0], [53.6, 1633.0], [53.7, 1635.0], [53.8, 1637.0], [53.9, 1641.0], [54.0, 1643.0], [54.1, 1645.0], [54.2, 1647.0], [54.3, 1649.0], [54.4, 1651.0], [54.5, 1652.0], [54.6, 1654.0], [54.7, 1657.0], [54.8, 1659.0], [54.9, 1661.0], [55.0, 1663.0], [55.1, 1665.0], [55.2, 1667.0], [55.3, 1670.0], [55.4, 1673.0], [55.5, 1674.0], [55.6, 1678.0], [55.7, 1680.0], [55.8, 1682.0], [55.9, 1683.0], [56.0, 1685.0], [56.1, 1688.0], [56.2, 1691.0], [56.3, 1693.0], [56.4, 1695.0], [56.5, 1697.0], [56.6, 1699.0], [56.7, 1701.0], [56.8, 1702.0], [56.9, 1705.0], [57.0, 1707.0], [57.1, 1709.0], [57.2, 1712.0], [57.3, 1714.0], [57.4, 1717.0], [57.5, 1719.0], [57.6, 1723.0], [57.7, 1724.0], [57.8, 1727.0], [57.9, 1730.0], [58.0, 1732.0], [58.1, 1734.0], [58.2, 1736.0], [58.3, 1739.0], [58.4, 1741.0], [58.5, 1743.0], [58.6, 1745.0], [58.7, 1747.0], [58.8, 1749.0], [58.9, 1751.0], [59.0, 1753.0], [59.1, 1755.0], [59.2, 1758.0], [59.3, 1760.0], [59.4, 1762.0], [59.5, 1764.0], [59.6, 1767.0], [59.7, 1768.0], [59.8, 1771.0], [59.9, 1773.0], [60.0, 1775.0], [60.1, 1777.0], [60.2, 1779.0], [60.3, 1782.0], [60.4, 1784.0], [60.5, 1786.0], [60.6, 1789.0], [60.7, 1793.0], [60.8, 1796.0], [60.9, 1798.0], [61.0, 1799.0], [61.1, 1801.0], [61.2, 1803.0], [61.3, 1807.0], [61.4, 1810.0], [61.5, 1812.0], [61.6, 1815.0], [61.7, 1817.0], [61.8, 1820.0], [61.9, 1822.0], [62.0, 1824.0], [62.1, 1825.0], [62.2, 1827.0], [62.3, 1828.0], [62.4, 1831.0], [62.5, 1833.0], [62.6, 1835.0], [62.7, 1839.0], [62.8, 1840.0], [62.9, 1842.0], [63.0, 1845.0], [63.1, 1846.0], [63.2, 1849.0], [63.3, 1852.0], [63.4, 1855.0], [63.5, 1858.0], [63.6, 1862.0], [63.7, 1865.0], [63.8, 1867.0], [63.9, 1870.0], [64.0, 1872.0], [64.1, 1874.0], [64.2, 1875.0], [64.3, 1878.0], [64.4, 1881.0], [64.5, 1884.0], [64.6, 1888.0], [64.7, 1890.0], [64.8, 1892.0], [64.9, 1894.0], [65.0, 1897.0], [65.1, 1898.0], [65.2, 1902.0], [65.3, 1905.0], [65.4, 1907.0], [65.5, 1910.0], [65.6, 1912.0], [65.7, 1915.0], [65.8, 1917.0], [65.9, 1919.0], [66.0, 1922.0], [66.1, 1925.0], [66.2, 1926.0], [66.3, 1930.0], [66.4, 1932.0], [66.5, 1935.0], [66.6, 1938.0], [66.7, 1939.0], [66.8, 1942.0], [66.9, 1944.0], [67.0, 1946.0], [67.1, 1949.0], [67.2, 1952.0], [67.3, 1954.0], [67.4, 1956.0], [67.5, 1958.0], [67.6, 1962.0], [67.7, 1965.0], [67.8, 1968.0], [67.9, 1971.0], [68.0, 1974.0], [68.1, 1976.0], [68.2, 1978.0], [68.3, 1981.0], [68.4, 1984.0], [68.5, 1986.0], [68.6, 1989.0], [68.7, 1991.0], [68.8, 1994.0], [68.9, 1997.0], [69.0, 2000.0], [69.1, 2003.0], [69.2, 2005.0], [69.3, 2009.0], [69.4, 2012.0], [69.5, 2014.0], [69.6, 2016.0], [69.7, 2018.0], [69.8, 2022.0], [69.9, 2024.0], [70.0, 2026.0], [70.1, 2029.0], [70.2, 2031.0], [70.3, 2033.0], [70.4, 2036.0], [70.5, 2038.0], [70.6, 2041.0], [70.7, 2044.0], [70.8, 2047.0], [70.9, 2050.0], [71.0, 2053.0], [71.1, 2057.0], [71.2, 2060.0], [71.3, 2062.0], [71.4, 2066.0], [71.5, 2068.0], [71.6, 2071.0], [71.7, 2076.0], [71.8, 2079.0], [71.9, 2082.0], [72.0, 2085.0], [72.1, 2088.0], [72.2, 2091.0], [72.3, 2094.0], [72.4, 2097.0], [72.5, 2099.0], [72.6, 2102.0], [72.7, 2104.0], [72.8, 2107.0], [72.9, 2109.0], [73.0, 2114.0], [73.1, 2117.0], [73.2, 2119.0], [73.3, 2122.0], [73.4, 2125.0], [73.5, 2127.0], [73.6, 2131.0], [73.7, 2135.0], [73.8, 2137.0], [73.9, 2140.0], [74.0, 2144.0], [74.1, 2146.0], [74.2, 2149.0], [74.3, 2152.0], [74.4, 2155.0], [74.5, 2159.0], [74.6, 2161.0], [74.7, 2164.0], [74.8, 2167.0], [74.9, 2171.0], [75.0, 2174.0], [75.1, 2177.0], [75.2, 2180.0], [75.3, 2182.0], [75.4, 2185.0], [75.5, 2187.0], [75.6, 2191.0], [75.7, 2194.0], [75.8, 2198.0], [75.9, 2201.0], [76.0, 2203.0], [76.1, 2205.0], [76.2, 2210.0], [76.3, 2212.0], [76.4, 2215.0], [76.5, 2216.0], [76.6, 2220.0], [76.7, 2224.0], [76.8, 2227.0], [76.9, 2230.0], [77.0, 2232.0], [77.1, 2236.0], [77.2, 2238.0], [77.3, 2243.0], [77.4, 2245.0], [77.5, 2250.0], [77.6, 2255.0], [77.7, 2259.0], [77.8, 2260.0], [77.9, 2264.0], [78.0, 2268.0], [78.1, 2271.0], [78.2, 2275.0], [78.3, 2279.0], [78.4, 2282.0], [78.5, 2284.0], [78.6, 2288.0], [78.7, 2290.0], [78.8, 2293.0], [78.9, 2296.0], [79.0, 2300.0], [79.1, 2304.0], [79.2, 2309.0], [79.3, 2314.0], [79.4, 2317.0], [79.5, 2320.0], [79.6, 2323.0], [79.7, 2327.0], [79.8, 2329.0], [79.9, 2334.0], [80.0, 2337.0], [80.1, 2342.0], [80.2, 2344.0], [80.3, 2347.0], [80.4, 2352.0], [80.5, 2356.0], [80.6, 2358.0], [80.7, 2361.0], [80.8, 2365.0], [80.9, 2370.0], [81.0, 2372.0], [81.1, 2376.0], [81.2, 2379.0], [81.3, 2383.0], [81.4, 2386.0], [81.5, 2390.0], [81.6, 2394.0], [81.7, 2396.0], [81.8, 2400.0], [81.9, 2403.0], [82.0, 2409.0], [82.1, 2413.0], [82.2, 2416.0], [82.3, 2420.0], [82.4, 2423.0], [82.5, 2425.0], [82.6, 2429.0], [82.7, 2432.0], [82.8, 2436.0], [82.9, 2440.0], [83.0, 2445.0], [83.1, 2449.0], [83.2, 2452.0], [83.3, 2457.0], [83.4, 2461.0], [83.5, 2467.0], [83.6, 2470.0], [83.7, 2473.0], [83.8, 2480.0], [83.9, 2486.0], [84.0, 2492.0], [84.1, 2496.0], [84.2, 2500.0], [84.3, 2506.0], [84.4, 2510.0], [84.5, 2514.0], [84.6, 2516.0], [84.7, 2521.0], [84.8, 2526.0], [84.9, 2530.0], [85.0, 2537.0], [85.1, 2542.0], [85.2, 2547.0], [85.3, 2551.0], [85.4, 2556.0], [85.5, 2560.0], [85.6, 2564.0], [85.7, 2568.0], [85.8, 2573.0], [85.9, 2575.0], [86.0, 2580.0], [86.1, 2586.0], [86.2, 2590.0], [86.3, 2594.0], [86.4, 2601.0], [86.5, 2604.0], [86.6, 2607.0], [86.7, 2613.0], [86.8, 2617.0], [86.9, 2623.0], [87.0, 2633.0], [87.1, 2636.0], [87.2, 2640.0], [87.3, 2643.0], [87.4, 2647.0], [87.5, 2651.0], [87.6, 2655.0], [87.7, 2659.0], [87.8, 2666.0], [87.9, 2670.0], [88.0, 2675.0], [88.1, 2682.0], [88.2, 2688.0], [88.3, 2693.0], [88.4, 2701.0], [88.5, 2704.0], [88.6, 2710.0], [88.7, 2718.0], [88.8, 2722.0], [88.9, 2726.0], [89.0, 2730.0], [89.1, 2736.0], [89.2, 2742.0], [89.3, 2747.0], [89.4, 2755.0], [89.5, 2763.0], [89.6, 2771.0], [89.7, 2776.0], [89.8, 2779.0], [89.9, 2783.0], [90.0, 2790.0], [90.1, 2792.0], [90.2, 2799.0], [90.3, 2804.0], [90.4, 2812.0], [90.5, 2817.0], [90.6, 2822.0], [90.7, 2828.0], [90.8, 2837.0], [90.9, 2845.0], [91.0, 2854.0], [91.1, 2861.0], [91.2, 2867.0], [91.3, 2875.0], [91.4, 2882.0], [91.5, 2888.0], [91.6, 2893.0], [91.7, 2899.0], [91.8, 2906.0], [91.9, 2912.0], [92.0, 2919.0], [92.1, 2927.0], [92.2, 2938.0], [92.3, 2945.0], [92.4, 2958.0], [92.5, 2962.0], [92.6, 2971.0], [92.7, 2977.0], [92.8, 2984.0], [92.9, 2993.0], [93.0, 3004.0], [93.1, 3009.0], [93.2, 3021.0], [93.3, 3028.0], [93.4, 3035.0], [93.5, 3047.0], [93.6, 3063.0], [93.7, 3072.0], [93.8, 3080.0], [93.9, 3089.0], [94.0, 3097.0], [94.1, 3103.0], [94.2, 3109.0], [94.3, 3119.0], [94.4, 3132.0], [94.5, 3145.0], [94.6, 3156.0], [94.7, 3168.0], [94.8, 3182.0], [94.9, 3196.0], [95.0, 3209.0], [95.1, 3223.0], [95.2, 3236.0], [95.3, 3247.0], [95.4, 3264.0], [95.5, 3278.0], [95.6, 3292.0], [95.7, 3304.0], [95.8, 3317.0], [95.9, 3336.0], [96.0, 3356.0], [96.1, 3379.0], [96.2, 3394.0], [96.3, 3415.0], [96.4, 3433.0], [96.5, 3442.0], [96.6, 3460.0], [96.7, 3491.0], [96.8, 3512.0], [96.9, 3533.0], [97.0, 3561.0], [97.1, 3583.0], [97.2, 3604.0], [97.3, 3629.0], [97.4, 3660.0], [97.5, 3680.0], [97.6, 3702.0], [97.7, 3742.0], [97.8, 3773.0], [97.9, 3819.0], [98.0, 3850.0], [98.1, 3887.0], [98.2, 3934.0], [98.3, 3999.0], [98.4, 4067.0], [98.5, 4186.0], [98.6, 4259.0], [98.7, 4392.0], [98.8, 4580.0], [98.9, 4956.0], [99.0, 6171.0], [99.1, 8006.0], [99.2, 8007.0], [99.3, 8008.0], [99.4, 12005.0], [99.5, 12710.0], [99.6, 13547.0], [99.7, 14367.0], [99.8, 15129.0], [99.9, 15962.0], [100.0, 16723.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1426.0, "series": [{"data": [[0.0, 1426.0], [600.0, 297.0], [700.0, 341.0], [800.0, 421.0], [900.0, 440.0], [1000.0, 448.0], [1100.0, 519.0], [1200.0, 617.0], [1300.0, 636.0], [1400.0, 650.0], [1500.0, 687.0], [1600.0, 623.0], [1700.0, 633.0], [1800.0, 569.0], [1900.0, 522.0], [2000.0, 492.0], [2100.0, 466.0], [2300.0, 345.0], [2200.0, 429.0], [2400.0, 344.0], [2500.0, 305.0], [2600.0, 267.0], [2700.0, 246.0], [2800.0, 220.0], [2900.0, 181.0], [3000.0, 176.0], [3100.0, 125.0], [3300.0, 79.0], [3200.0, 117.0], [3400.0, 70.0], [3500.0, 52.0], [3700.0, 33.0], [3600.0, 47.0], [3800.0, 21.0], [3900.0, 28.0], [4000.0, 18.0], [4100.0, 13.0], [4200.0, 5.0], [4300.0, 6.0], [4600.0, 3.0], [4400.0, 6.0], [4500.0, 8.0], [4800.0, 2.0], [4700.0, 5.0], [4900.0, 4.0], [5000.0, 1.0], [5100.0, 1.0], [5300.0, 3.0], [5200.0, 1.0], [5400.0, 1.0], [5700.0, 1.0], [5900.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [6800.0, 2.0], [8100.0, 1.0], [8200.0, 2.0], [8400.0, 2.0], [8600.0, 2.0], [8700.0, 3.0], [8900.0, 5.0], [8800.0, 3.0], [9100.0, 8.0], [9000.0, 4.0], [9200.0, 1.0], [9400.0, 3.0], [9500.0, 1.0], [9600.0, 2.0], [100.0, 189.0], [200.0, 134.0], [300.0, 199.0], [400.0, 221.0], [500.0, 265.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1100.0, 2.0], [1200.0, 2.0], [300.0, 11.0], [1400.0, 1.0], [100.0, 84.0], [400.0, 4.0], [200.0, 32.0], [800.0, 1.0], [1700.0, 1.0], [900.0, 1.0], [1000.0, 1.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1203.0], [600.0, 298.0], [700.0, 373.0], [800.0, 372.0], [900.0, 451.0], [1000.0, 500.0], [1100.0, 556.0], [1200.0, 587.0], [1300.0, 635.0], [1400.0, 642.0], [1500.0, 675.0], [1600.0, 652.0], [1700.0, 617.0], [1800.0, 576.0], [1900.0, 539.0], [2000.0, 495.0], [2100.0, 465.0], [2300.0, 386.0], [2200.0, 442.0], [2400.0, 341.0], [2500.0, 307.0], [2600.0, 277.0], [2700.0, 259.0], [2800.0, 210.0], [2900.0, 176.0], [3000.0, 151.0], [3100.0, 126.0], [3200.0, 101.0], [3300.0, 81.0], [3400.0, 69.0], [3500.0, 60.0], [3700.0, 35.0], [3600.0, 59.0], [3800.0, 40.0], [3900.0, 25.0], [4000.0, 18.0], [4100.0, 13.0], [4300.0, 9.0], [4200.0, 17.0], [4400.0, 10.0], [4600.0, 6.0], [4500.0, 4.0], [4800.0, 3.0], [4700.0, 2.0], [4900.0, 4.0], [5100.0, 1.0], [5000.0, 2.0], [5200.0, 1.0], [5500.0, 2.0], [5400.0, 1.0], [5600.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [5900.0, 1.0], [6100.0, 1.0], [8000.0, 49.0], [11700.0, 3.0], [12000.0, 14.0], [12700.0, 8.0], [12600.0, 3.0], [12800.0, 3.0], [12900.0, 2.0], [13300.0, 1.0], [13700.0, 2.0], [13800.0, 1.0], [13500.0, 1.0], [14000.0, 2.0], [14100.0, 1.0], [14200.0, 4.0], [14300.0, 5.0], [14400.0, 3.0], [14500.0, 4.0], [14600.0, 3.0], [14700.0, 1.0], [15200.0, 1.0], [15300.0, 1.0], [14900.0, 1.0], [15100.0, 1.0], [15500.0, 2.0], [15600.0, 3.0], [15800.0, 3.0], [15700.0, 1.0], [15400.0, 1.0], [15900.0, 5.0], [16200.0, 3.0], [16000.0, 2.0], [16100.0, 4.0], [16400.0, 1.0], [16700.0, 1.0], [100.0, 158.0], [200.0, 161.0], [300.0, 174.0], [400.0, 223.0], [500.0, 265.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 994.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 14315.0, "series": [{"data": [[0.0, 3625.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 9206.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 14315.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 994.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 13.873239436619716, "minX": 1.58542962E12, "maxY": 140.0, "series": [{"data": [[1.58542968E12, 96.20988851187602], [1.58543004E12, 140.0], [1.58542974E12, 140.0], [1.5854304E12, 47.77837837837842], [1.58542992E12, 140.0], [1.58543022E12, 140.0], [1.58542962E12, 13.873239436619716], [1.58542998E12, 140.0], [1.58543016E12, 140.0], [1.58542986E12, 140.0], [1.58543028E12, 140.0], [1.5854301E12, 140.0], [1.5854298E12, 140.0], [1.58543034E12, 118.72539949537413]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854304E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 35.8, "minX": 1.0, "maxY": 1997.9487179487182, "series": [{"data": [[2.0, 92.0], [3.0, 80.0], [7.0, 69.4], [8.0, 92.5], [9.0, 69.5], [10.0, 88.0], [13.0, 55.5], [14.0, 70.0], [15.0, 55.666666666666664], [16.0, 57.0], [17.0, 88.83333333333334], [18.0, 64.5], [19.0, 46.0], [20.0, 48.0], [21.0, 72.33333333333333], [22.0, 100.75], [23.0, 94.0], [24.0, 56.5], [25.0, 130.0], [26.0, 35.8], [27.0, 43.0], [28.0, 50.38461538461538], [29.0, 47.8], [30.0, 47.5], [31.0, 59.0], [32.0, 54.25], [33.0, 54.75], [34.0, 46.4], [35.0, 46.57142857142857], [36.0, 46.0], [37.0, 51.6], [38.0, 45.666666666666664], [39.0, 53.25], [40.0, 54.0], [41.0, 48.357142857142854], [42.0, 44.42857142857143], [43.0, 46.55555555555556], [44.0, 63.8], [45.0, 48.449999999999996], [46.0, 44.06666666666666], [47.0, 47.22222222222222], [48.0, 38.0], [49.0, 57.8], [50.0, 48.16666666666667], [51.0, 58.29032258064516], [52.0, 45.8], [53.0, 59.44444444444444], [54.0, 62.315789473684205], [55.0, 59.42857142857143], [56.0, 67.16666666666667], [57.0, 55.21428571428571], [58.0, 46.0], [59.0, 56.64705882352941], [60.0, 54.90909090909091], [61.0, 50.5], [62.0, 55.72727272727272], [63.0, 65.23076923076923], [64.0, 52.333333333333336], [65.0, 66.5], [66.0, 58.07692307692308], [67.0, 200.85714285714295], [68.0, 44.5], [69.0, 122.4], [70.0, 377.75], [71.0, 394.8666666666667], [72.0, 370.84615384615387], [73.0, 253.99999999999994], [74.0, 144.75000000000003], [75.0, 69.91666666666669], [76.0, 56.55555555555556], [77.0, 50.4375], [78.0, 58.6], [79.0, 86.70588235294119], [80.0, 81.17391304347827], [81.0, 62.666666666666664], [82.0, 434.3673469387754], [83.0, 53.909090909090914], [84.0, 79.72727272727272], [85.0, 141.30769230769232], [86.0, 103.74324324324319], [87.0, 59.4], [88.0, 182.2142857142857], [89.0, 240.2727272727273], [90.0, 407.77142857142843], [91.0, 764.5], [92.0, 1064.0], [93.0, 947.0952380952382], [94.0, 883.3333333333333], [95.0, 621.7692307692307], [96.0, 699.0857142857144], [97.0, 498.41935483870964], [98.0, 585.7857142857143], [99.0, 782.875], [100.0, 637.0322580645162], [101.0, 637.4571428571429], [102.0, 699.9166666666667], [103.0, 564.0769230769231], [104.0, 754.7142857142857], [105.0, 708.7777777777777], [106.0, 663.4285714285714], [107.0, 921.9599999999999], [108.0, 709.8571428571428], [109.0, 773.3000000000001], [110.0, 928.5555555555555], [111.0, 1062.8095238095236], [112.0, 946.7391304347826], [113.0, 1077.4375], [114.0, 1054.078947368421], [115.0, 1185.9473684210527], [116.0, 1120.0], [117.0, 958.6], [118.0, 928.9310344827585], [119.0, 771.6], [120.0, 927.4285714285714], [121.0, 1125.4800000000002], [122.0, 1305.5365853658536], [123.0, 1276.666666666667], [124.0, 1353.0512820512822], [125.0, 1302.75], [126.0, 1084.8333333333333], [127.0, 1407.0], [128.0, 1190.4375], [129.0, 1273.3000000000002], [130.0, 1558.047619047619], [131.0, 1610.078431372549], [132.0, 1365.0714285714287], [133.0, 1160.3529411764705], [134.0, 1107.2258064516132], [135.0, 933.1428571428571], [136.0, 1704.0], [137.0, 941.8632478632483], [138.0, 1997.9487179487182], [139.0, 1484.1], [140.0, 1703.3920701168636], [1.0, 70.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[133.16707142857155, 1550.2657857142865]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[2.0, 177.0], [3.0, 685.0], [4.0, 411.0], [5.0, 384.0], [7.0, 162.0], [8.0, 688.0], [9.0, 164.0], [10.0, 169.0], [11.0, 179.0], [12.0, 317.0], [13.0, 160.0], [14.0, 167.0], [15.0, 157.0], [16.0, 175.0], [17.0, 170.0], [18.0, 176.0], [19.0, 165.0], [20.0, 180.0], [21.0, 189.0], [22.0, 210.0], [23.0, 162.0], [24.0, 151.0], [25.0, 154.0], [26.0, 264.0], [27.0, 154.0], [28.0, 185.0], [29.0, 161.0], [30.0, 211.0], [31.0, 208.0], [32.0, 190.0], [33.0, 152.0], [34.0, 219.0], [35.0, 163.0], [36.0, 160.0], [37.0, 165.0], [38.0, 160.0], [39.0, 158.0], [40.0, 195.0], [41.0, 207.0], [42.0, 186.0], [43.0, 156.0], [44.0, 220.0], [45.0, 156.0], [46.0, 160.0], [47.0, 163.0], [48.0, 181.0], [49.0, 182.0], [50.0, 225.0], [51.0, 154.0], [52.0, 155.0], [53.0, 226.0], [54.0, 181.0], [55.0, 158.0], [56.0, 165.0], [57.0, 176.0], [58.0, 175.0], [59.0, 189.0], [60.0, 179.0], [61.0, 226.0], [62.0, 163.0], [63.0, 223.0], [64.0, 245.0], [65.0, 175.0], [66.0, 154.0], [67.0, 289.0], [68.0, 208.0], [69.0, 166.0], [70.0, 232.0], [71.0, 191.0], [72.0, 175.0], [73.0, 143.0], [74.0, 152.0], [75.0, 254.0], [76.0, 157.0], [77.0, 215.0], [78.0, 151.0], [79.0, 266.0], [80.0, 324.0], [81.0, 179.0], [82.0, 186.0], [83.0, 380.0], [84.0, 149.0], [85.0, 205.0], [86.0, 276.0], [87.0, 198.0], [88.0, 186.0], [89.0, 213.0], [90.0, 234.0], [91.0, 156.0], [92.0, 216.0], [93.0, 160.0], [94.0, 296.0], [95.0, 205.0], [96.0, 182.0], [97.0, 228.0], [98.0, 163.0], [99.0, 165.0], [100.0, 181.0], [101.0, 162.0], [102.0, 152.0], [103.0, 202.0], [104.0, 187.0], [105.0, 193.0], [106.0, 198.0], [107.0, 156.0], [108.0, 166.0], [109.0, 153.0], [110.0, 196.0], [111.0, 172.0], [112.0, 235.0], [113.0, 340.0], [115.0, 307.5], [116.0, 304.0], [117.0, 220.0], [118.0, 197.0], [119.0, 319.0], [120.0, 201.0], [121.0, 381.0], [122.0, 362.0], [123.0, 170.0], [124.0, 238.0], [125.0, 172.0], [126.0, 164.0], [127.0, 183.0], [128.0, 164.0], [129.0, 381.0], [130.0, 361.0], [132.0, 308.5], [135.0, 716.5], [137.0, 836.0], [138.0, 954.0], [140.0, 1401.5]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[70.63571428571433, 270.86428571428576]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[2.0, 84.33333333333333], [3.0, 109.5], [5.0, 57.0], [6.0, 74.0], [7.0, 58.5], [8.0, 72.5], [9.0, 97.0], [10.0, 70.6], [11.0, 42.0], [12.0, 47.0], [13.0, 83.16666666666667], [14.0, 56.5], [15.0, 67.33333333333333], [16.0, 62.75], [17.0, 94.875], [18.0, 55.0], [19.0, 48.0], [20.0, 47.0], [21.0, 91.66666666666667], [22.0, 49.5], [23.0, 103.5], [24.0, 57.8], [25.0, 73.0], [26.0, 48.857142857142854], [27.0, 51.333333333333336], [28.0, 46.74999999999999], [29.0, 59.25], [30.0, 54.0], [31.0, 48.25], [32.0, 50.42857142857142], [33.0, 59.0], [34.0, 53.0], [35.0, 53.2], [36.0, 58.333333333333336], [37.0, 47.666666666666664], [38.0, 49.0], [39.0, 61.714285714285715], [40.0, 59.142857142857146], [41.0, 58.22222222222222], [42.0, 47.125], [43.0, 52.30769230769231], [44.0, 58.199999999999996], [45.0, 49.76470588235294], [46.0, 50.909090909090914], [47.0, 53.814814814814824], [48.0, 54.90909090909091], [49.0, 61.72727272727273], [50.0, 47.25], [51.0, 60.1764705882353], [52.0, 47.36363636363636], [53.0, 57.25000000000001], [54.0, 68.4375], [55.0, 51.333333333333336], [56.0, 57.66666666666666], [57.0, 60.999999999999986], [58.0, 53.5], [59.0, 57.36666666666667], [60.0, 63.16666666666667], [61.0, 54.416666666666664], [62.0, 59.0], [63.0, 60.285714285714285], [64.0, 50.25], [65.0, 62.111111111111114], [66.0, 58.21428571428571], [67.0, 178.9444444444444], [68.0, 49.833333333333336], [69.0, 86.0], [70.0, 364.14285714285717], [71.0, 340.38461538461536], [72.0, 383.294117647059], [73.0, 289.1764705882353], [74.0, 81.58333333333333], [75.0, 71.85714285714286], [76.0, 58.75], [77.0, 56.153846153846146], [78.0, 54.77777777777777], [79.0, 74.26666666666667], [80.0, 88.16666666666667], [81.0, 76.25], [82.0, 417.2622950819672], [83.0, 80.28571428571429], [84.0, 142.8], [85.0, 156.93333333333334], [86.0, 76.85135135135134], [87.0, 74.375], [88.0, 240.42857142857142], [89.0, 223.57142857142853], [90.0, 379.6764705882352], [91.0, 752.7857142857142], [92.0, 1007.5], [93.0, 1042.090909090909], [94.0, 906.3043478260869], [95.0, 803.8181818181819], [96.0, 738.888888888889], [97.0, 624.5277777777777], [98.0, 513.2727272727273], [99.0, 742.2], [100.0, 687.8695652173913], [101.0, 658.6400000000001], [102.0, 601.8124999999999], [103.0, 529.1818181818182], [104.0, 668.6363636363636], [105.0, 701.4827586206895], [106.0, 731.25], [107.0, 896.3529411764706], [108.0, 868.8333333333334], [109.0, 749.1111111111111], [110.0, 899.3333333333334], [111.0, 1086.5], [112.0, 1153.7407407407406], [113.0, 1014.1666666666667], [114.0, 1186.7941176470592], [115.0, 1096.1363636363635], [116.0, 1032.4666666666667], [117.0, 938.9444444444445], [118.0, 819.1153846153845], [119.0, 870.75], [120.0, 938.9411764705882], [121.0, 1069.540540540541], [122.0, 1331.8536585365855], [123.0, 1362.9729729729731], [124.0, 1510.9], [125.0, 1188.8965517241381], [126.0, 1203.9285714285713], [127.0, 1060.0000000000002], [128.0, 1107.421052631579], [129.0, 1098.5625], [130.0, 1690.964285714286], [131.0, 1578.653846153846], [132.0, 1399.8888888888887], [133.0, 1112.3478260869565], [134.0, 1012.658536585366], [135.0, 371.2857142857143], [136.0, 1694.6666666666667], [137.0, 1142.40404040404], [138.0, 1940.947368421053], [139.0, 1817.9999999999998], [140.0, 1838.426592104173]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[133.1645714285717, 1668.1636428571358]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 140.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 437.1666666666667, "minX": 1.58542962E12, "maxY": 288613.63333333336, "series": [{"data": [[1.58542968E12, 233008.86666666667], [1.58543004E12, 256679.86666666667], [1.58542974E12, 266161.85], [1.5854304E12, 65760.81666666667], [1.58542992E12, 259971.86666666667], [1.58543022E12, 200236.75], [1.58542962E12, 6388.2], [1.58542998E12, 253257.71666666667], [1.58543016E12, 240477.66666666666], [1.58542986E12, 288613.63333333336], [1.58543028E12, 281694.8], [1.5854301E12, 272140.68333333335], [1.5854298E12, 258182.25], [1.58543034E12, 271413.13333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58542968E12, 14350.833333333334], [1.58543004E12, 16030.3], [1.58542974E12, 16059.166666666666], [1.5854304E12, 3968.633333333333], [1.58542992E12, 16537.1], [1.58543022E12, 14378.033333333333], [1.58542962E12, 437.1666666666667], [1.58542998E12, 15279.366666666667], [1.58543016E12, 15694.133333333333], [1.58542986E12, 17860.633333333335], [1.58543028E12, 16880.833333333332], [1.5854301E12, 17274.433333333334], [1.5854298E12, 16337.533333333333], [1.58543034E12, 17003.333333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854304E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 52.65517241379311, "minX": 1.58542962E12, "maxY": 2333.468468468473, "series": [{"data": [[1.58542968E12, 759.4676564156945], [1.58543004E12, 1886.3800178412137], [1.58542974E12, 1903.3032714412038], [1.5854304E12, 86.68166089965399], [1.58542992E12, 1575.7737594617327], [1.58543022E12, 1018.7043633125537], [1.58542962E12, 57.19047619047619], [1.58542998E12, 2045.6698024459051], [1.58543016E12, 1895.5324909747321], [1.58542986E12, 1375.4309523809527], [1.58543028E12, 1805.2819015846526], [1.5854301E12, 1623.6534325889165], [1.5854298E12, 1867.5845070422545], [1.58543034E12, 1175.0637417218543]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542968E12, 266.1596638655463], [1.58542962E12, 297.5238095238095]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542968E12, 757.4805194805199], [1.58543004E12, 1873.6074933095454], [1.58542974E12, 1872.9614349775775], [1.5854304E12, 94.13157894736851], [1.58542992E12, 1669.0287404902763], [1.58543022E12, 1705.8416289592737], [1.58542962E12, 52.65517241379311], [1.58542998E12, 2071.1620111731877], [1.58543016E12, 1921.0199818346962], [1.58542986E12, 1466.266295707472], [1.58543028E12, 2333.468468468473], [1.5854301E12, 1619.0215410107699], [1.5854298E12, 1840.141862489122], [1.58543034E12, 1213.4393162393164]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854304E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 52.51724137931035, "minX": 1.58542962E12, "maxY": 2332.4676494676505, "series": [{"data": [[1.58542968E12, 759.0795334040296], [1.58543004E12, 1886.0017841213196], [1.58542974E12, 1902.9602122015901], [1.5854304E12, 86.25605536332182], [1.58542992E12, 1575.2809083263244], [1.58543022E12, 1018.1834372217282], [1.58542962E12, 56.8095238095238], [1.58542998E12, 2045.167450611475], [1.58543016E12, 1895.0243682310456], [1.58542986E12, 1375.153968253966], [1.58543028E12, 1804.3769808173474], [1.5854301E12, 1623.3440860215062], [1.5854298E12, 1867.308098591548], [1.58543034E12, 1174.5455298013237]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542968E12, 265.6386554621849], [1.58542962E12, 296.5714285714285]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542968E12, 757.0409590409589], [1.58543004E12, 1873.1962533452295], [1.58542974E12, 1872.663677130044], [1.5854304E12, 93.72180451127817], [1.58542992E12, 1668.4429416737119], [1.58543022E12, 1192.8886877828043], [1.58542962E12, 52.51724137931035], [1.58542998E12, 2070.7132216014925], [1.58543016E12, 1920.7138964577675], [1.58542986E12, 1465.9697933227344], [1.58543028E12, 2332.4676494676505], [1.5854301E12, 1618.686826843411], [1.5854298E12, 1839.6788511749385], [1.58543034E12, 1212.8726495726487]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854304E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58542962E12, "maxY": 2.095238095238096, "series": [{"data": [[1.58542968E12, 0.3637327677624603], [1.58543004E12, 0.7404103479036578], [1.58542974E12, 0.6640141467727679], [1.5854304E12, 0.0], [1.58542992E12, 0.4920100925147184], [1.58543022E12, 0.42297417631344586], [1.58542962E12, 0.8571428571428571], [1.58542998E12, 0.5729068673565382], [1.58543016E12, 0.5117328519855581], [1.58542986E12, 0.9198412698412705], [1.58543028E12, 0.4987489574645536], [1.5854301E12, 0.5136476426799], [1.5854298E12, 0.631161971830986], [1.58543034E12, 0.41225165562913924]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58542968E12, 0.8319327731092434], [1.58542962E12, 2.095238095238096]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542968E12, 0.7532467532467528], [1.58543004E12, 0.7368421052631575], [1.58542974E12, 0.7076233183856492], [1.5854304E12, 0.6278195488721799], [1.58542992E12, 0.5781910397295018], [1.58543022E12, 0.6018099547511323], [1.58542962E12, 0.5862068965517243], [1.58542998E12, 0.5800744878957168], [1.58543016E12, 0.6203451407811069], [1.58542986E12, 1.016693163751987], [1.58543028E12, 0.6003276003276001], [1.5854301E12, 0.5799502899751455], [1.5854298E12, 0.681462140992166], [1.58543034E12, 0.5880341880341876]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854304E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.58542962E12, "maxY": 16723.0, "series": [{"data": [[1.58542968E12, 3326.0], [1.58543004E12, 4407.0], [1.58542974E12, 4646.0], [1.5854304E12, 735.0], [1.58542992E12, 5152.0], [1.58543022E12, 5220.0], [1.58542962E12, 1209.0], [1.58542998E12, 4767.0], [1.58543016E12, 8157.0], [1.58542986E12, 4024.0], [1.58543028E12, 16723.0], [1.5854301E12, 3929.0], [1.5854298E12, 4849.0], [1.58543034E12, 4929.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58542968E12, 26.0], [1.58543004E12, 105.0], [1.58542974E12, 188.0], [1.5854304E12, 28.0], [1.58542992E12, 2.0], [1.58543022E12, 1.0], [1.58542962E12, 33.0], [1.58542998E12, 149.0], [1.58543016E12, 2.0], [1.58542986E12, 2.0], [1.58543028E12, 87.0], [1.5854301E12, 21.0], [1.5854298E12, 4.0], [1.58543034E12, 32.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58542968E12, 1799.0], [1.58543004E12, 2819.0], [1.58542974E12, 2777.0], [1.5854304E12, 194.4000000000002], [1.58542992E12, 2729.8], [1.58543022E12, 2217.7999999999997], [1.58542962E12, 187.2], [1.58542998E12, 3252.0], [1.58543016E12, 3362.5999999999995], [1.58542986E12, 2427.2], [1.58543028E12, 2933.4000000000024], [1.5854301E12, 2621.2000000000003], [1.5854298E12, 3095.0], [1.58543034E12, 2333.4000000000005]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58542968E12, 2711.4399999999996], [1.58543004E12, 3571.0199999999995], [1.58542974E12, 3405.120000000001], [1.5854304E12, 508.8799999999999], [1.58542992E12, 3489.9699999999993], [1.58543022E12, 3201.9000000000005], [1.58542962E12, 1209.0], [1.58542998E12, 4081.739999999997], [1.58543016E12, 4706.08], [1.58542986E12, 3062.0699999999983], [1.58543028E12, 15591.140000000007], [1.5854301E12, 3262.62], [1.5854298E12, 3974.08], [1.58543034E12, 3654.379999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58542968E12, 2210.6], [1.58543004E12, 3086.6499999999996], [1.58542974E12, 3000.3], [1.5854304E12, 316.19999999999993], [1.58542992E12, 2967.8999999999996], [1.58543022E12, 2527.399999999998], [1.58542962E12, 394.7999999999998], [1.58542998E12, 3568.0], [1.58543016E12, 3866.7999999999993], [1.58542986E12, 2632.149999999999], [1.58543028E12, 4411.800000000019], [1.5854301E12, 2906.0999999999995], [1.5854298E12, 3422.3999999999996], [1.58543034E12, 2783.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854304E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 8007.0, "series": [{"data": [[2.0, 76.0], [3.0, 111.0], [4.0, 83.0], [5.0, 71.0], [7.0, 97.0], [8.0, 78.0], [9.0, 137.0], [10.0, 59.0], [11.0, 75.5], [12.0, 53.0], [14.0, 1954.0], [15.0, 50.5], [16.0, 55.0], [17.0, 51.0], [18.0, 55.5], [19.0, 1657.5], [20.0, 1613.0], [21.0, 1325.0], [22.0, 576.0], [23.0, 2113.0], [24.0, 1854.5], [25.0, 1273.0], [26.0, 1624.0], [27.0, 1891.0], [28.0, 1921.0], [29.0, 1770.5], [30.0, 1821.5], [31.0, 1648.0], [32.0, 1719.0], [33.0, 1784.0], [34.0, 1783.0], [35.0, 1683.5], [37.0, 1668.0], [36.0, 1709.0], [39.0, 1647.0], [38.0, 1663.0], [40.0, 1631.0], [41.0, 1712.0], [43.0, 1390.0], [42.0, 1625.5], [45.0, 1489.0], [44.0, 1592.0], [46.0, 1463.0], [47.0, 1594.5], [48.0, 1496.5], [49.0, 1495.0], [51.0, 1164.0], [50.0, 1319.5], [53.0, 1310.0], [52.0, 1545.5], [55.0, 1091.0], [54.0, 1051.0], [56.0, 1195.5], [57.0, 462.0], [58.0, 1318.0], [59.0, 182.0], [60.0, 1331.0], [63.0, 815.5], [62.0, 836.0], [65.0, 47.0], [64.0, 1211.0], [68.0, 5.0], [71.0, 338.5], [75.0, 1179.0], [73.0, 4.0], [74.0, 318.0], [79.0, 50.0], [77.0, 765.0], [76.0, 1256.0], [83.0, 902.5], [103.0, 285.5], [1.0, 72.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 12.0], [32.0, 1514.0], [35.0, 1.0], [36.0, 1699.0], [37.0, 15.0], [39.0, 5.0], [38.0, 425.0], [41.0, 1.0], [40.0, 1345.0], [43.0, 12.0], [44.0, 0.0], [45.0, 1426.0], [49.0, 19.0], [48.0, 1.0], [51.0, 1.0], [52.0, 906.0], [53.0, 1.0], [55.0, 438.0], [54.0, 15.0], [58.0, 922.0], [63.0, 8.0], [62.0, 12.5], [65.0, 0.0], [64.0, 0.0], [4.0, 1.0], [68.0, 2044.5], [71.0, 189.0], [75.0, 326.0], [73.0, 1420.0], [74.0, 15.0], [79.0, 1734.0], [83.0, 2528.0], [103.0, 1454.0], [9.0, 1.0], [10.0, 1.0], [15.0, 1.0], [16.0, 0.0], [19.0, 15.0], [20.0, 8007.0], [23.0, 1306.0], [25.0, 0.0], [29.0, 8006.0], [31.0, 1700.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 103.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 2431.0, "series": [{"data": [[2.0, 75.5], [3.0, 110.0], [4.0, 83.0], [5.0, 70.5], [7.0, 96.0], [8.0, 78.0], [9.0, 135.0], [10.0, 59.0], [11.0, 74.5], [12.0, 53.0], [14.0, 1953.5], [15.0, 50.5], [16.0, 55.0], [17.0, 51.0], [18.0, 55.5], [19.0, 1656.5], [20.0, 1612.5], [21.0, 1325.0], [22.0, 575.5], [23.0, 2113.0], [24.0, 1854.0], [25.0, 1273.0], [26.0, 1624.0], [27.0, 1891.0], [28.0, 1920.5], [29.0, 1770.5], [30.0, 1820.5], [31.0, 1647.0], [32.0, 1718.0], [33.0, 1784.0], [34.0, 1783.0], [35.0, 1683.5], [37.0, 1667.5], [36.0, 1708.0], [39.0, 1647.0], [38.0, 1663.0], [40.0, 1630.0], [41.0, 1712.0], [43.0, 1390.0], [42.0, 1625.0], [45.0, 1489.0], [44.0, 1592.0], [46.0, 1461.5], [47.0, 1594.0], [48.0, 1496.5], [49.0, 1494.5], [51.0, 1164.0], [50.0, 1318.5], [53.0, 1309.5], [52.0, 1545.5], [55.0, 1091.0], [54.0, 1050.0], [56.0, 1195.5], [57.0, 461.0], [58.0, 1318.0], [59.0, 182.0], [60.0, 1330.5], [63.0, 815.5], [62.0, 835.5], [65.0, 47.0], [64.0, 1211.0], [68.0, 5.0], [71.0, 338.5], [75.0, 1179.0], [73.0, 4.0], [74.0, 318.0], [79.0, 50.0], [77.0, 765.0], [76.0, 1256.0], [83.0, 902.5], [103.0, 285.5], [1.0, 71.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 0.0], [32.0, 1513.0], [35.0, 0.0], [36.0, 1697.0], [37.0, 14.0], [39.0, 4.5], [38.0, 424.0], [41.0, 0.0], [40.0, 1345.0], [43.0, 12.0], [44.0, 0.0], [45.0, 1425.5], [49.0, 19.0], [48.0, 0.0], [51.0, 0.0], [52.0, 905.5], [53.0, 0.0], [55.0, 437.5], [54.0, 15.0], [58.0, 921.0], [63.0, 8.0], [62.0, 12.5], [65.0, 0.0], [64.0, 0.0], [4.0, 0.0], [68.0, 2044.5], [71.0, 188.0], [75.0, 325.5], [73.0, 1420.0], [74.0, 15.0], [79.0, 1734.0], [83.0, 2431.0], [103.0, 1453.0], [9.0, 0.0], [10.0, 0.0], [15.0, 0.0], [16.0, 0.0], [19.0, 14.0], [20.0, 0.0], [23.0, 1305.0], [25.0, 0.0], [29.0, 0.0], [31.0, 1700.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 103.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.2166666666666666, "minX": 1.58542962E12, "maxY": 42.78333333333333, "series": [{"data": [[1.58542968E12, 35.81666666666667], [1.58543004E12, 37.4], [1.58542974E12, 37.03333333333333], [1.5854304E12, 9.233333333333333], [1.58542992E12, 39.81666666666667], [1.58543022E12, 37.86666666666667], [1.58542962E12, 1.2166666666666666], [1.58542998E12, 35.516666666666666], [1.58543016E12, 36.9], [1.58542986E12, 42.78333333333333], [1.58543028E12, 39.8], [1.5854301E12, 40.05], [1.5854298E12, 37.31666666666667], [1.58543034E12, 38.25]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854304E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58542962E12, "maxY": 41.63333333333333, "series": [{"data": [[1.58542968E12, 34.38333333333333], [1.58543004E12, 35.8], [1.58542974E12, 37.43333333333333], [1.5854304E12, 9.25], [1.58542992E12, 38.333333333333336], [1.58543022E12, 33.016666666666666], [1.58542962E12, 1.1833333333333333], [1.58542998E12, 35.61666666666667], [1.58543016E12, 34.18333333333333], [1.58542986E12, 41.63333333333333], [1.58543028E12, 39.35], [1.5854301E12, 37.8], [1.5854298E12, 36.61666666666667], [1.58543034E12, 37.833333333333336]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58543004E12, 1.5666666666666667], [1.58542992E12, 0.21666666666666667], [1.58543022E12, 0.5], [1.5854301E12, 2.466666666666667], [1.5854298E12, 1.4666666666666666], [1.58543034E12, 1.8], [1.58543016E12, 2.4]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.58543028E12, 0.016666666666666666], [1.58543022E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.TruncatedChunkException", "isController": false}, {"data": [[1.58542986E12, 0.21666666666666667], [1.58543028E12, 0.75], [1.58542992E12, 0.9666666666666667], [1.58543022E12, 3.433333333333333], [1.58543016E12, 0.23333333333333334]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.58542986E12, 0.11666666666666667], [1.58543028E12, 0.21666666666666667], [1.58542992E12, 0.016666666666666666], [1.58543022E12, 0.16666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5854304E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.58542962E12, "maxY": 20.85, "series": [{"data": [[1.58542968E12, 1.9833333333333334], [1.58542962E12, 0.35]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58542968E12, 15.716666666666667], [1.58543004E12, 17.933333333333334], [1.58542974E12, 18.85], [1.5854304E12, 4.816666666666666], [1.58542992E12, 18.683333333333334], [1.58543022E12, 16.216666666666665], [1.58542962E12, 0.35], [1.58542998E12, 17.716666666666665], [1.58543016E12, 16.916666666666668], [1.58542986E12, 20.783333333333335], [1.58543028E12, 19.516666666666666], [1.5854301E12, 18.916666666666668], [1.5854298E12, 18.083333333333332], [1.58543034E12, 19.233333333333334]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58542986E12, 0.21666666666666667], [1.58543028E12, 0.4666666666666667], [1.58543004E12, 0.75], [1.58542992E12, 1.1333333333333333], [1.58543022E12, 2.5], [1.5854301E12, 1.2333333333333334], [1.5854298E12, 0.85], [1.58543034E12, 0.9], [1.58543016E12, 1.55]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58542968E12, 16.683333333333334], [1.58543004E12, 17.866666666666667], [1.58542974E12, 18.583333333333332], [1.5854304E12, 4.433333333333334], [1.58542992E12, 19.65], [1.58543022E12, 16.8], [1.58542962E12, 0.48333333333333334], [1.58542998E12, 17.9], [1.58543016E12, 17.266666666666666], [1.58542986E12, 20.85], [1.58543028E12, 19.833333333333332], [1.5854301E12, 18.883333333333333], [1.5854298E12, 18.533333333333335], [1.58543034E12, 18.6]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.58542986E12, 0.11666666666666667], [1.58543028E12, 0.5166666666666667], [1.58543004E12, 0.8166666666666667], [1.58542992E12, 0.06666666666666667], [1.58543022E12, 1.6166666666666667], [1.5854301E12, 1.2333333333333334], [1.5854298E12, 0.6166666666666667], [1.58543034E12, 0.9], [1.58543016E12, 1.0833333333333333]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854304E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.58542962E12, "maxY": 41.63333333333333, "series": [{"data": [[1.58542968E12, 34.38333333333333], [1.58543004E12, 35.8], [1.58542974E12, 37.43333333333333], [1.5854304E12, 9.25], [1.58542992E12, 38.333333333333336], [1.58543022E12, 33.016666666666666], [1.58542962E12, 1.1833333333333333], [1.58542998E12, 35.61666666666667], [1.58543016E12, 34.18333333333333], [1.58542986E12, 41.63333333333333], [1.58543028E12, 39.35], [1.5854301E12, 37.8], [1.5854298E12, 36.61666666666667], [1.58543034E12, 37.833333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58542986E12, 0.3333333333333333], [1.58543028E12, 0.9833333333333333], [1.58543004E12, 1.5666666666666667], [1.58542992E12, 1.2], [1.58543022E12, 4.116666666666666], [1.5854301E12, 2.466666666666667], [1.5854298E12, 1.4666666666666666], [1.58543034E12, 1.8], [1.58543016E12, 2.6333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5854304E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

