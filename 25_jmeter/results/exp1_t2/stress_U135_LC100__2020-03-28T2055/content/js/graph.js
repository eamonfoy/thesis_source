/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 7191.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 2.0], [0.7, 3.0], [0.8, 3.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 6.0], [1.3, 6.0], [1.4, 7.0], [1.5, 7.0], [1.6, 8.0], [1.7, 8.0], [1.8, 9.0], [1.9, 9.0], [2.0, 10.0], [2.1, 10.0], [2.2, 11.0], [2.3, 11.0], [2.4, 12.0], [2.5, 13.0], [2.6, 15.0], [2.7, 21.0], [2.8, 29.0], [2.9, 32.0], [3.0, 34.0], [3.1, 35.0], [3.2, 36.0], [3.3, 37.0], [3.4, 38.0], [3.5, 39.0], [3.6, 39.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 41.0], [4.1, 41.0], [4.2, 42.0], [4.3, 42.0], [4.4, 43.0], [4.5, 43.0], [4.6, 43.0], [4.7, 44.0], [4.8, 44.0], [4.9, 44.0], [5.0, 45.0], [5.1, 45.0], [5.2, 46.0], [5.3, 46.0], [5.4, 46.0], [5.5, 46.0], [5.6, 47.0], [5.7, 47.0], [5.8, 47.0], [5.9, 48.0], [6.0, 48.0], [6.1, 48.0], [6.2, 48.0], [6.3, 49.0], [6.4, 49.0], [6.5, 50.0], [6.6, 50.0], [6.7, 50.0], [6.8, 51.0], [6.9, 51.0], [7.0, 51.0], [7.1, 52.0], [7.2, 52.0], [7.3, 52.0], [7.4, 53.0], [7.5, 53.0], [7.6, 54.0], [7.7, 54.0], [7.8, 55.0], [7.9, 55.0], [8.0, 56.0], [8.1, 57.0], [8.2, 57.0], [8.3, 58.0], [8.4, 58.0], [8.5, 59.0], [8.6, 59.0], [8.7, 60.0], [8.8, 61.0], [8.9, 61.0], [9.0, 62.0], [9.1, 63.0], [9.2, 64.0], [9.3, 65.0], [9.4, 67.0], [9.5, 68.0], [9.6, 70.0], [9.7, 73.0], [9.8, 76.0], [9.9, 79.0], [10.0, 85.0], [10.1, 90.0], [10.2, 101.0], [10.3, 118.0], [10.4, 142.0], [10.5, 168.0], [10.6, 188.0], [10.7, 204.0], [10.8, 218.0], [10.9, 227.0], [11.0, 232.0], [11.1, 244.0], [11.2, 257.0], [11.3, 272.0], [11.4, 283.0], [11.5, 292.0], [11.6, 298.0], [11.7, 318.0], [11.8, 323.0], [11.9, 330.0], [12.0, 338.0], [12.1, 343.0], [12.2, 351.0], [12.3, 358.0], [12.4, 366.0], [12.5, 379.0], [12.6, 383.0], [12.7, 391.0], [12.8, 395.0], [12.9, 403.0], [13.0, 410.0], [13.1, 420.0], [13.2, 428.0], [13.3, 434.0], [13.4, 441.0], [13.5, 447.0], [13.6, 452.0], [13.7, 458.0], [13.8, 462.0], [13.9, 466.0], [14.0, 472.0], [14.1, 479.0], [14.2, 485.0], [14.3, 493.0], [14.4, 499.0], [14.5, 506.0], [14.6, 511.0], [14.7, 518.0], [14.8, 524.0], [14.9, 529.0], [15.0, 532.0], [15.1, 537.0], [15.2, 543.0], [15.3, 548.0], [15.4, 553.0], [15.5, 559.0], [15.6, 564.0], [15.7, 567.0], [15.8, 571.0], [15.9, 575.0], [16.0, 579.0], [16.1, 584.0], [16.2, 590.0], [16.3, 593.0], [16.4, 596.0], [16.5, 602.0], [16.6, 607.0], [16.7, 612.0], [16.8, 616.0], [16.9, 619.0], [17.0, 625.0], [17.1, 629.0], [17.2, 632.0], [17.3, 639.0], [17.4, 643.0], [17.5, 648.0], [17.6, 651.0], [17.7, 656.0], [17.8, 659.0], [17.9, 661.0], [18.0, 665.0], [18.1, 668.0], [18.2, 672.0], [18.3, 675.0], [18.4, 678.0], [18.5, 681.0], [18.6, 684.0], [18.7, 688.0], [18.8, 690.0], [18.9, 694.0], [19.0, 698.0], [19.1, 701.0], [19.2, 705.0], [19.3, 709.0], [19.4, 713.0], [19.5, 717.0], [19.6, 721.0], [19.7, 724.0], [19.8, 727.0], [19.9, 731.0], [20.0, 734.0], [20.1, 737.0], [20.2, 740.0], [20.3, 743.0], [20.4, 746.0], [20.5, 748.0], [20.6, 753.0], [20.7, 757.0], [20.8, 759.0], [20.9, 762.0], [21.0, 767.0], [21.1, 770.0], [21.2, 773.0], [21.3, 776.0], [21.4, 781.0], [21.5, 784.0], [21.6, 786.0], [21.7, 789.0], [21.8, 792.0], [21.9, 794.0], [22.0, 798.0], [22.1, 801.0], [22.2, 804.0], [22.3, 807.0], [22.4, 811.0], [22.5, 814.0], [22.6, 816.0], [22.7, 819.0], [22.8, 820.0], [22.9, 823.0], [23.0, 828.0], [23.1, 831.0], [23.2, 833.0], [23.3, 837.0], [23.4, 839.0], [23.5, 842.0], [23.6, 844.0], [23.7, 847.0], [23.8, 850.0], [23.9, 853.0], [24.0, 856.0], [24.1, 860.0], [24.2, 862.0], [24.3, 866.0], [24.4, 869.0], [24.5, 872.0], [24.6, 874.0], [24.7, 876.0], [24.8, 879.0], [24.9, 880.0], [25.0, 882.0], [25.1, 885.0], [25.2, 889.0], [25.3, 891.0], [25.4, 893.0], [25.5, 894.0], [25.6, 897.0], [25.7, 901.0], [25.8, 904.0], [25.9, 908.0], [26.0, 910.0], [26.1, 912.0], [26.2, 916.0], [26.3, 919.0], [26.4, 922.0], [26.5, 925.0], [26.6, 927.0], [26.7, 930.0], [26.8, 933.0], [26.9, 936.0], [27.0, 939.0], [27.1, 941.0], [27.2, 943.0], [27.3, 945.0], [27.4, 948.0], [27.5, 951.0], [27.6, 953.0], [27.7, 955.0], [27.8, 958.0], [27.9, 960.0], [28.0, 962.0], [28.1, 966.0], [28.2, 968.0], [28.3, 970.0], [28.4, 972.0], [28.5, 973.0], [28.6, 976.0], [28.7, 978.0], [28.8, 980.0], [28.9, 982.0], [29.0, 984.0], [29.1, 986.0], [29.2, 989.0], [29.3, 992.0], [29.4, 994.0], [29.5, 996.0], [29.6, 999.0], [29.7, 1002.0], [29.8, 1005.0], [29.9, 1006.0], [30.0, 1008.0], [30.1, 1011.0], [30.2, 1014.0], [30.3, 1016.0], [30.4, 1019.0], [30.5, 1022.0], [30.6, 1024.0], [30.7, 1026.0], [30.8, 1028.0], [30.9, 1030.0], [31.0, 1033.0], [31.1, 1036.0], [31.2, 1037.0], [31.3, 1040.0], [31.4, 1044.0], [31.5, 1045.0], [31.6, 1048.0], [31.7, 1049.0], [31.8, 1051.0], [31.9, 1052.0], [32.0, 1055.0], [32.1, 1057.0], [32.2, 1059.0], [32.3, 1060.0], [32.4, 1061.0], [32.5, 1064.0], [32.6, 1066.0], [32.7, 1070.0], [32.8, 1072.0], [32.9, 1074.0], [33.0, 1076.0], [33.1, 1077.0], [33.2, 1080.0], [33.3, 1082.0], [33.4, 1085.0], [33.5, 1087.0], [33.6, 1088.0], [33.7, 1090.0], [33.8, 1093.0], [33.9, 1096.0], [34.0, 1098.0], [34.1, 1100.0], [34.2, 1103.0], [34.3, 1106.0], [34.4, 1108.0], [34.5, 1110.0], [34.6, 1113.0], [34.7, 1115.0], [34.8, 1118.0], [34.9, 1120.0], [35.0, 1122.0], [35.1, 1123.0], [35.2, 1125.0], [35.3, 1127.0], [35.4, 1129.0], [35.5, 1130.0], [35.6, 1133.0], [35.7, 1135.0], [35.8, 1136.0], [35.9, 1139.0], [36.0, 1141.0], [36.1, 1144.0], [36.2, 1146.0], [36.3, 1148.0], [36.4, 1152.0], [36.5, 1154.0], [36.6, 1156.0], [36.7, 1158.0], [36.8, 1161.0], [36.9, 1163.0], [37.0, 1166.0], [37.1, 1168.0], [37.2, 1170.0], [37.3, 1171.0], [37.4, 1173.0], [37.5, 1175.0], [37.6, 1177.0], [37.7, 1179.0], [37.8, 1182.0], [37.9, 1185.0], [38.0, 1187.0], [38.1, 1189.0], [38.2, 1192.0], [38.3, 1194.0], [38.4, 1195.0], [38.5, 1197.0], [38.6, 1198.0], [38.7, 1203.0], [38.8, 1204.0], [38.9, 1207.0], [39.0, 1209.0], [39.1, 1211.0], [39.2, 1213.0], [39.3, 1215.0], [39.4, 1217.0], [39.5, 1219.0], [39.6, 1222.0], [39.7, 1224.0], [39.8, 1226.0], [39.9, 1228.0], [40.0, 1230.0], [40.1, 1231.0], [40.2, 1232.0], [40.3, 1234.0], [40.4, 1237.0], [40.5, 1238.0], [40.6, 1241.0], [40.7, 1243.0], [40.8, 1245.0], [40.9, 1247.0], [41.0, 1248.0], [41.1, 1249.0], [41.2, 1251.0], [41.3, 1255.0], [41.4, 1257.0], [41.5, 1258.0], [41.6, 1260.0], [41.7, 1262.0], [41.8, 1263.0], [41.9, 1265.0], [42.0, 1267.0], [42.1, 1268.0], [42.2, 1271.0], [42.3, 1272.0], [42.4, 1275.0], [42.5, 1277.0], [42.6, 1279.0], [42.7, 1281.0], [42.8, 1283.0], [42.9, 1284.0], [43.0, 1286.0], [43.1, 1288.0], [43.2, 1291.0], [43.3, 1293.0], [43.4, 1294.0], [43.5, 1296.0], [43.6, 1297.0], [43.7, 1299.0], [43.8, 1301.0], [43.9, 1304.0], [44.0, 1306.0], [44.1, 1309.0], [44.2, 1311.0], [44.3, 1314.0], [44.4, 1315.0], [44.5, 1317.0], [44.6, 1319.0], [44.7, 1322.0], [44.8, 1323.0], [44.9, 1325.0], [45.0, 1328.0], [45.1, 1329.0], [45.2, 1332.0], [45.3, 1334.0], [45.4, 1337.0], [45.5, 1338.0], [45.6, 1340.0], [45.7, 1342.0], [45.8, 1345.0], [45.9, 1346.0], [46.0, 1348.0], [46.1, 1350.0], [46.2, 1353.0], [46.3, 1354.0], [46.4, 1356.0], [46.5, 1357.0], [46.6, 1359.0], [46.7, 1362.0], [46.8, 1363.0], [46.9, 1365.0], [47.0, 1367.0], [47.1, 1369.0], [47.2, 1371.0], [47.3, 1373.0], [47.4, 1374.0], [47.5, 1377.0], [47.6, 1379.0], [47.7, 1380.0], [47.8, 1382.0], [47.9, 1383.0], [48.0, 1386.0], [48.1, 1388.0], [48.2, 1391.0], [48.3, 1392.0], [48.4, 1394.0], [48.5, 1396.0], [48.6, 1398.0], [48.7, 1400.0], [48.8, 1401.0], [48.9, 1404.0], [49.0, 1406.0], [49.1, 1408.0], [49.2, 1411.0], [49.3, 1414.0], [49.4, 1416.0], [49.5, 1418.0], [49.6, 1420.0], [49.7, 1422.0], [49.8, 1424.0], [49.9, 1425.0], [50.0, 1427.0], [50.1, 1428.0], [50.2, 1430.0], [50.3, 1432.0], [50.4, 1433.0], [50.5, 1435.0], [50.6, 1438.0], [50.7, 1440.0], [50.8, 1442.0], [50.9, 1443.0], [51.0, 1445.0], [51.1, 1447.0], [51.2, 1449.0], [51.3, 1451.0], [51.4, 1453.0], [51.5, 1455.0], [51.6, 1457.0], [51.7, 1459.0], [51.8, 1461.0], [51.9, 1463.0], [52.0, 1465.0], [52.1, 1468.0], [52.2, 1469.0], [52.3, 1472.0], [52.4, 1474.0], [52.5, 1477.0], [52.6, 1478.0], [52.7, 1480.0], [52.8, 1482.0], [52.9, 1484.0], [53.0, 1486.0], [53.1, 1487.0], [53.2, 1490.0], [53.3, 1492.0], [53.4, 1494.0], [53.5, 1495.0], [53.6, 1497.0], [53.7, 1499.0], [53.8, 1501.0], [53.9, 1503.0], [54.0, 1506.0], [54.1, 1508.0], [54.2, 1510.0], [54.3, 1512.0], [54.4, 1514.0], [54.5, 1517.0], [54.6, 1519.0], [54.7, 1521.0], [54.8, 1523.0], [54.9, 1525.0], [55.0, 1527.0], [55.1, 1528.0], [55.2, 1529.0], [55.3, 1532.0], [55.4, 1534.0], [55.5, 1537.0], [55.6, 1539.0], [55.7, 1542.0], [55.8, 1544.0], [55.9, 1545.0], [56.0, 1547.0], [56.1, 1550.0], [56.2, 1552.0], [56.3, 1553.0], [56.4, 1556.0], [56.5, 1558.0], [56.6, 1559.0], [56.7, 1561.0], [56.8, 1563.0], [56.9, 1565.0], [57.0, 1567.0], [57.1, 1570.0], [57.2, 1573.0], [57.3, 1575.0], [57.4, 1577.0], [57.5, 1579.0], [57.6, 1581.0], [57.7, 1584.0], [57.8, 1585.0], [57.9, 1588.0], [58.0, 1590.0], [58.1, 1592.0], [58.2, 1594.0], [58.3, 1596.0], [58.4, 1598.0], [58.5, 1600.0], [58.6, 1602.0], [58.7, 1605.0], [58.8, 1607.0], [58.9, 1609.0], [59.0, 1611.0], [59.1, 1613.0], [59.2, 1614.0], [59.3, 1616.0], [59.4, 1617.0], [59.5, 1620.0], [59.6, 1622.0], [59.7, 1624.0], [59.8, 1625.0], [59.9, 1627.0], [60.0, 1630.0], [60.1, 1632.0], [60.2, 1634.0], [60.3, 1635.0], [60.4, 1637.0], [60.5, 1638.0], [60.6, 1640.0], [60.7, 1642.0], [60.8, 1644.0], [60.9, 1645.0], [61.0, 1648.0], [61.1, 1650.0], [61.2, 1653.0], [61.3, 1655.0], [61.4, 1658.0], [61.5, 1662.0], [61.6, 1664.0], [61.7, 1666.0], [61.8, 1668.0], [61.9, 1670.0], [62.0, 1671.0], [62.1, 1674.0], [62.2, 1675.0], [62.3, 1678.0], [62.4, 1679.0], [62.5, 1682.0], [62.6, 1683.0], [62.7, 1685.0], [62.8, 1687.0], [62.9, 1689.0], [63.0, 1692.0], [63.1, 1694.0], [63.2, 1697.0], [63.3, 1700.0], [63.4, 1702.0], [63.5, 1704.0], [63.6, 1705.0], [63.7, 1708.0], [63.8, 1710.0], [63.9, 1712.0], [64.0, 1714.0], [64.1, 1717.0], [64.2, 1719.0], [64.3, 1722.0], [64.4, 1724.0], [64.5, 1726.0], [64.6, 1727.0], [64.7, 1729.0], [64.8, 1732.0], [64.9, 1734.0], [65.0, 1735.0], [65.1, 1738.0], [65.2, 1740.0], [65.3, 1742.0], [65.4, 1744.0], [65.5, 1746.0], [65.6, 1747.0], [65.7, 1749.0], [65.8, 1752.0], [65.9, 1755.0], [66.0, 1758.0], [66.1, 1760.0], [66.2, 1762.0], [66.3, 1765.0], [66.4, 1767.0], [66.5, 1770.0], [66.6, 1773.0], [66.7, 1776.0], [66.8, 1779.0], [66.9, 1781.0], [67.0, 1783.0], [67.1, 1785.0], [67.2, 1787.0], [67.3, 1789.0], [67.4, 1791.0], [67.5, 1793.0], [67.6, 1796.0], [67.7, 1798.0], [67.8, 1800.0], [67.9, 1803.0], [68.0, 1804.0], [68.1, 1807.0], [68.2, 1809.0], [68.3, 1811.0], [68.4, 1812.0], [68.5, 1815.0], [68.6, 1817.0], [68.7, 1820.0], [68.8, 1822.0], [68.9, 1826.0], [69.0, 1827.0], [69.1, 1829.0], [69.2, 1831.0], [69.3, 1833.0], [69.4, 1835.0], [69.5, 1837.0], [69.6, 1840.0], [69.7, 1841.0], [69.8, 1845.0], [69.9, 1847.0], [70.0, 1850.0], [70.1, 1852.0], [70.2, 1854.0], [70.3, 1856.0], [70.4, 1858.0], [70.5, 1859.0], [70.6, 1862.0], [70.7, 1865.0], [70.8, 1867.0], [70.9, 1869.0], [71.0, 1872.0], [71.1, 1874.0], [71.2, 1877.0], [71.3, 1879.0], [71.4, 1882.0], [71.5, 1884.0], [71.6, 1886.0], [71.7, 1889.0], [71.8, 1891.0], [71.9, 1893.0], [72.0, 1895.0], [72.1, 1898.0], [72.2, 1901.0], [72.3, 1903.0], [72.4, 1905.0], [72.5, 1907.0], [72.6, 1910.0], [72.7, 1914.0], [72.8, 1916.0], [72.9, 1918.0], [73.0, 1921.0], [73.1, 1923.0], [73.2, 1925.0], [73.3, 1928.0], [73.4, 1931.0], [73.5, 1934.0], [73.6, 1937.0], [73.7, 1940.0], [73.8, 1942.0], [73.9, 1944.0], [74.0, 1948.0], [74.1, 1951.0], [74.2, 1955.0], [74.3, 1959.0], [74.4, 1960.0], [74.5, 1962.0], [74.6, 1964.0], [74.7, 1967.0], [74.8, 1970.0], [74.9, 1972.0], [75.0, 1975.0], [75.1, 1978.0], [75.2, 1981.0], [75.3, 1983.0], [75.4, 1986.0], [75.5, 1991.0], [75.6, 1994.0], [75.7, 1996.0], [75.8, 2000.0], [75.9, 2002.0], [76.0, 2006.0], [76.1, 2010.0], [76.2, 2012.0], [76.3, 2016.0], [76.4, 2020.0], [76.5, 2023.0], [76.6, 2024.0], [76.7, 2027.0], [76.8, 2029.0], [76.9, 2034.0], [77.0, 2036.0], [77.1, 2039.0], [77.2, 2042.0], [77.3, 2046.0], [77.4, 2050.0], [77.5, 2053.0], [77.6, 2055.0], [77.7, 2058.0], [77.8, 2060.0], [77.9, 2064.0], [78.0, 2067.0], [78.1, 2071.0], [78.2, 2074.0], [78.3, 2077.0], [78.4, 2080.0], [78.5, 2083.0], [78.6, 2086.0], [78.7, 2090.0], [78.8, 2093.0], [78.9, 2096.0], [79.0, 2099.0], [79.1, 2102.0], [79.2, 2105.0], [79.3, 2109.0], [79.4, 2111.0], [79.5, 2113.0], [79.6, 2117.0], [79.7, 2119.0], [79.8, 2121.0], [79.9, 2127.0], [80.0, 2130.0], [80.1, 2133.0], [80.2, 2137.0], [80.3, 2140.0], [80.4, 2144.0], [80.5, 2150.0], [80.6, 2152.0], [80.7, 2155.0], [80.8, 2158.0], [80.9, 2162.0], [81.0, 2165.0], [81.1, 2170.0], [81.2, 2173.0], [81.3, 2177.0], [81.4, 2181.0], [81.5, 2184.0], [81.6, 2188.0], [81.7, 2191.0], [81.8, 2192.0], [81.9, 2194.0], [82.0, 2197.0], [82.1, 2202.0], [82.2, 2206.0], [82.3, 2209.0], [82.4, 2212.0], [82.5, 2216.0], [82.6, 2221.0], [82.7, 2226.0], [82.8, 2229.0], [82.9, 2233.0], [83.0, 2237.0], [83.1, 2239.0], [83.2, 2243.0], [83.3, 2246.0], [83.4, 2249.0], [83.5, 2254.0], [83.6, 2257.0], [83.7, 2261.0], [83.8, 2263.0], [83.9, 2267.0], [84.0, 2270.0], [84.1, 2272.0], [84.2, 2278.0], [84.3, 2282.0], [84.4, 2284.0], [84.5, 2288.0], [84.6, 2291.0], [84.7, 2297.0], [84.8, 2301.0], [84.9, 2304.0], [85.0, 2309.0], [85.1, 2314.0], [85.2, 2317.0], [85.3, 2321.0], [85.4, 2324.0], [85.5, 2327.0], [85.6, 2331.0], [85.7, 2334.0], [85.8, 2338.0], [85.9, 2341.0], [86.0, 2344.0], [86.1, 2348.0], [86.2, 2352.0], [86.3, 2355.0], [86.4, 2359.0], [86.5, 2364.0], [86.6, 2369.0], [86.7, 2372.0], [86.8, 2375.0], [86.9, 2378.0], [87.0, 2382.0], [87.1, 2385.0], [87.2, 2388.0], [87.3, 2393.0], [87.4, 2397.0], [87.5, 2402.0], [87.6, 2404.0], [87.7, 2408.0], [87.8, 2410.0], [87.9, 2414.0], [88.0, 2420.0], [88.1, 2424.0], [88.2, 2429.0], [88.3, 2435.0], [88.4, 2440.0], [88.5, 2444.0], [88.6, 2448.0], [88.7, 2452.0], [88.8, 2458.0], [88.9, 2464.0], [89.0, 2467.0], [89.1, 2472.0], [89.2, 2476.0], [89.3, 2481.0], [89.4, 2487.0], [89.5, 2493.0], [89.6, 2497.0], [89.7, 2504.0], [89.8, 2508.0], [89.9, 2512.0], [90.0, 2516.0], [90.1, 2522.0], [90.2, 2526.0], [90.3, 2531.0], [90.4, 2537.0], [90.5, 2543.0], [90.6, 2547.0], [90.7, 2556.0], [90.8, 2560.0], [90.9, 2564.0], [91.0, 2571.0], [91.1, 2580.0], [91.2, 2586.0], [91.3, 2590.0], [91.4, 2594.0], [91.5, 2600.0], [91.6, 2607.0], [91.7, 2616.0], [91.8, 2622.0], [91.9, 2629.0], [92.0, 2632.0], [92.1, 2639.0], [92.2, 2644.0], [92.3, 2649.0], [92.4, 2656.0], [92.5, 2664.0], [92.6, 2669.0], [92.7, 2673.0], [92.8, 2681.0], [92.9, 2686.0], [93.0, 2693.0], [93.1, 2703.0], [93.2, 2709.0], [93.3, 2716.0], [93.4, 2727.0], [93.5, 2729.0], [93.6, 2736.0], [93.7, 2744.0], [93.8, 2750.0], [93.9, 2758.0], [94.0, 2764.0], [94.1, 2771.0], [94.2, 2778.0], [94.3, 2788.0], [94.4, 2794.0], [94.5, 2809.0], [94.6, 2818.0], [94.7, 2830.0], [94.8, 2834.0], [94.9, 2840.0], [95.0, 2849.0], [95.1, 2856.0], [95.2, 2864.0], [95.3, 2869.0], [95.4, 2876.0], [95.5, 2886.0], [95.6, 2896.0], [95.7, 2903.0], [95.8, 2917.0], [95.9, 2926.0], [96.0, 2933.0], [96.1, 2939.0], [96.2, 2952.0], [96.3, 2962.0], [96.4, 2972.0], [96.5, 2987.0], [96.6, 2992.0], [96.7, 3004.0], [96.8, 3022.0], [96.9, 3034.0], [97.0, 3043.0], [97.1, 3052.0], [97.2, 3059.0], [97.3, 3074.0], [97.4, 3091.0], [97.5, 3105.0], [97.6, 3116.0], [97.7, 3128.0], [97.8, 3145.0], [97.9, 3168.0], [98.0, 3183.0], [98.1, 3196.0], [98.2, 3212.0], [98.3, 3231.0], [98.4, 3245.0], [98.5, 3274.0], [98.6, 3292.0], [98.7, 3312.0], [98.8, 3332.0], [98.9, 3352.0], [99.0, 3381.0], [99.1, 3419.0], [99.2, 3444.0], [99.3, 3469.0], [99.4, 3506.0], [99.5, 3572.0], [99.6, 3662.0], [99.7, 3771.0], [99.8, 3914.0], [99.9, 4111.0], [100.0, 7191.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 138.0], [0.1, 138.0], [0.2, 138.0], [0.3, 138.0], [0.4, 138.0], [0.5, 138.0], [0.6, 138.0], [0.7, 138.0], [0.8, 147.0], [0.9, 147.0], [1.0, 147.0], [1.1, 147.0], [1.2, 147.0], [1.3, 147.0], [1.4, 147.0], [1.5, 150.0], [1.6, 150.0], [1.7, 150.0], [1.8, 150.0], [1.9, 150.0], [2.0, 150.0], [2.1, 150.0], [2.2, 150.0], [2.3, 150.0], [2.4, 150.0], [2.5, 150.0], [2.6, 150.0], [2.7, 150.0], [2.8, 150.0], [2.9, 150.0], [3.0, 151.0], [3.1, 151.0], [3.2, 151.0], [3.3, 151.0], [3.4, 151.0], [3.5, 151.0], [3.6, 151.0], [3.7, 151.0], [3.8, 152.0], [3.9, 152.0], [4.0, 152.0], [4.1, 152.0], [4.2, 152.0], [4.3, 152.0], [4.4, 152.0], [4.5, 152.0], [4.6, 152.0], [4.7, 152.0], [4.8, 152.0], [4.9, 152.0], [5.0, 152.0], [5.1, 152.0], [5.2, 153.0], [5.3, 153.0], [5.4, 153.0], [5.5, 153.0], [5.6, 153.0], [5.7, 153.0], [5.8, 153.0], [5.9, 153.0], [6.0, 153.0], [6.1, 153.0], [6.2, 153.0], [6.3, 153.0], [6.4, 153.0], [6.5, 153.0], [6.6, 153.0], [6.7, 154.0], [6.8, 154.0], [6.9, 154.0], [7.0, 154.0], [7.1, 154.0], [7.2, 154.0], [7.3, 154.0], [7.4, 154.0], [7.5, 154.0], [7.6, 154.0], [7.7, 154.0], [7.8, 154.0], [7.9, 154.0], [8.0, 154.0], [8.1, 154.0], [8.2, 154.0], [8.3, 154.0], [8.4, 154.0], [8.5, 154.0], [8.6, 154.0], [8.7, 154.0], [8.8, 154.0], [8.9, 154.0], [9.0, 154.0], [9.1, 154.0], [9.2, 154.0], [9.3, 154.0], [9.4, 154.0], [9.5, 154.0], [9.6, 154.0], [9.7, 155.0], [9.8, 155.0], [9.9, 155.0], [10.0, 155.0], [10.1, 155.0], [10.2, 155.0], [10.3, 155.0], [10.4, 156.0], [10.5, 156.0], [10.6, 156.0], [10.7, 156.0], [10.8, 156.0], [10.9, 156.0], [11.0, 156.0], [11.1, 156.0], [11.2, 157.0], [11.3, 157.0], [11.4, 157.0], [11.5, 157.0], [11.6, 157.0], [11.7, 157.0], [11.8, 157.0], [11.9, 157.0], [12.0, 157.0], [12.1, 157.0], [12.2, 157.0], [12.3, 157.0], [12.4, 157.0], [12.5, 157.0], [12.6, 157.0], [12.7, 157.0], [12.8, 157.0], [12.9, 157.0], [13.0, 157.0], [13.1, 157.0], [13.2, 157.0], [13.3, 157.0], [13.4, 158.0], [13.5, 158.0], [13.6, 158.0], [13.7, 158.0], [13.8, 158.0], [13.9, 158.0], [14.0, 158.0], [14.1, 159.0], [14.2, 159.0], [14.3, 159.0], [14.4, 159.0], [14.5, 159.0], [14.6, 159.0], [14.7, 159.0], [14.8, 159.0], [14.9, 159.0], [15.0, 159.0], [15.1, 159.0], [15.2, 159.0], [15.3, 159.0], [15.4, 159.0], [15.5, 159.0], [15.6, 159.0], [15.7, 159.0], [15.8, 159.0], [15.9, 159.0], [16.0, 159.0], [16.1, 159.0], [16.2, 159.0], [16.3, 160.0], [16.4, 160.0], [16.5, 160.0], [16.6, 160.0], [16.7, 160.0], [16.8, 160.0], [16.9, 160.0], [17.0, 160.0], [17.1, 160.0], [17.2, 160.0], [17.3, 160.0], [17.4, 160.0], [17.5, 160.0], [17.6, 160.0], [17.7, 160.0], [17.8, 160.0], [17.9, 160.0], [18.0, 160.0], [18.1, 160.0], [18.2, 160.0], [18.3, 160.0], [18.4, 160.0], [18.5, 160.0], [18.6, 160.0], [18.7, 160.0], [18.8, 160.0], [18.9, 160.0], [19.0, 160.0], [19.1, 160.0], [19.2, 160.0], [19.3, 160.0], [19.4, 160.0], [19.5, 160.0], [19.6, 160.0], [19.7, 160.0], [19.8, 160.0], [19.9, 160.0], [20.0, 160.0], [20.1, 160.0], [20.2, 160.0], [20.3, 160.0], [20.4, 160.0], [20.5, 160.0], [20.6, 160.0], [20.7, 160.0], [20.8, 161.0], [20.9, 161.0], [21.0, 161.0], [21.1, 161.0], [21.2, 161.0], [21.3, 161.0], [21.4, 161.0], [21.5, 161.0], [21.6, 161.0], [21.7, 161.0], [21.8, 161.0], [21.9, 161.0], [22.0, 161.0], [22.1, 161.0], [22.2, 161.0], [22.3, 161.0], [22.4, 161.0], [22.5, 161.0], [22.6, 161.0], [22.7, 161.0], [22.8, 161.0], [22.9, 161.0], [23.0, 161.0], [23.1, 161.0], [23.2, 161.0], [23.3, 161.0], [23.4, 161.0], [23.5, 161.0], [23.6, 161.0], [23.7, 161.0], [23.8, 162.0], [23.9, 162.0], [24.0, 162.0], [24.1, 162.0], [24.2, 162.0], [24.3, 162.0], [24.4, 162.0], [24.5, 162.0], [24.6, 162.0], [24.7, 162.0], [24.8, 162.0], [24.9, 162.0], [25.0, 162.0], [25.1, 162.0], [25.2, 162.0], [25.3, 162.0], [25.4, 162.0], [25.5, 162.0], [25.6, 162.0], [25.7, 162.0], [25.8, 162.0], [25.9, 162.0], [26.0, 163.0], [26.1, 163.0], [26.2, 163.0], [26.3, 163.0], [26.4, 163.0], [26.5, 163.0], [26.6, 163.0], [26.7, 163.0], [26.8, 163.0], [26.9, 163.0], [27.0, 163.0], [27.1, 163.0], [27.2, 163.0], [27.3, 163.0], [27.4, 163.0], [27.5, 163.0], [27.6, 163.0], [27.7, 163.0], [27.8, 163.0], [27.9, 163.0], [28.0, 163.0], [28.1, 163.0], [28.2, 164.0], [28.3, 164.0], [28.4, 164.0], [28.5, 164.0], [28.6, 164.0], [28.7, 164.0], [28.8, 164.0], [28.9, 164.0], [29.0, 164.0], [29.1, 164.0], [29.2, 164.0], [29.3, 164.0], [29.4, 164.0], [29.5, 164.0], [29.6, 164.0], [29.7, 164.0], [29.8, 164.0], [29.9, 164.0], [30.0, 164.0], [30.1, 164.0], [30.2, 164.0], [30.3, 164.0], [30.4, 164.0], [30.5, 164.0], [30.6, 164.0], [30.7, 164.0], [30.8, 164.0], [30.9, 164.0], [31.0, 164.0], [31.1, 164.0], [31.2, 165.0], [31.3, 165.0], [31.4, 165.0], [31.5, 165.0], [31.6, 165.0], [31.7, 165.0], [31.8, 165.0], [31.9, 165.0], [32.0, 165.0], [32.1, 165.0], [32.2, 165.0], [32.3, 165.0], [32.4, 165.0], [32.5, 165.0], [32.6, 165.0], [32.7, 165.0], [32.8, 165.0], [32.9, 165.0], [33.0, 165.0], [33.1, 165.0], [33.2, 165.0], [33.3, 165.0], [33.4, 165.0], [33.5, 165.0], [33.6, 165.0], [33.7, 165.0], [33.8, 165.0], [33.9, 165.0], [34.0, 165.0], [34.1, 165.0], [34.2, 165.0], [34.3, 165.0], [34.4, 165.0], [34.5, 165.0], [34.6, 165.0], [34.7, 165.0], [34.8, 165.0], [34.9, 166.0], [35.0, 166.0], [35.1, 166.0], [35.2, 166.0], [35.3, 166.0], [35.4, 166.0], [35.5, 166.0], [35.6, 167.0], [35.7, 167.0], [35.8, 167.0], [35.9, 167.0], [36.0, 167.0], [36.1, 167.0], [36.2, 167.0], [36.3, 167.0], [36.4, 167.0], [36.5, 167.0], [36.6, 167.0], [36.7, 167.0], [36.8, 167.0], [36.9, 167.0], [37.0, 167.0], [37.1, 167.0], [37.2, 167.0], [37.3, 167.0], [37.4, 167.0], [37.5, 167.0], [37.6, 167.0], [37.7, 167.0], [37.8, 168.0], [37.9, 168.0], [38.0, 168.0], [38.1, 168.0], [38.2, 168.0], [38.3, 168.0], [38.4, 168.0], [38.5, 168.0], [38.6, 168.0], [38.7, 168.0], [38.8, 168.0], [38.9, 168.0], [39.0, 168.0], [39.1, 168.0], [39.2, 168.0], [39.3, 169.0], [39.4, 169.0], [39.5, 169.0], [39.6, 169.0], [39.7, 169.0], [39.8, 169.0], [39.9, 169.0], [40.0, 169.0], [40.1, 169.0], [40.2, 169.0], [40.3, 169.0], [40.4, 169.0], [40.5, 169.0], [40.6, 169.0], [40.7, 169.0], [40.8, 171.0], [40.9, 171.0], [41.0, 171.0], [41.1, 171.0], [41.2, 171.0], [41.3, 171.0], [41.4, 171.0], [41.5, 172.0], [41.6, 172.0], [41.7, 172.0], [41.8, 172.0], [41.9, 172.0], [42.0, 172.0], [42.1, 172.0], [42.2, 172.0], [42.3, 172.0], [42.4, 172.0], [42.5, 172.0], [42.6, 172.0], [42.7, 172.0], [42.8, 172.0], [42.9, 172.0], [43.0, 172.0], [43.1, 172.0], [43.2, 172.0], [43.3, 172.0], [43.4, 172.0], [43.5, 172.0], [43.6, 172.0], [43.7, 172.0], [43.8, 173.0], [43.9, 173.0], [44.0, 173.0], [44.1, 173.0], [44.2, 173.0], [44.3, 173.0], [44.4, 173.0], [44.5, 173.0], [44.6, 173.0], [44.7, 173.0], [44.8, 173.0], [44.9, 173.0], [45.0, 173.0], [45.1, 173.0], [45.2, 173.0], [45.3, 173.0], [45.4, 173.0], [45.5, 173.0], [45.6, 173.0], [45.7, 173.0], [45.8, 173.0], [45.9, 173.0], [46.0, 174.0], [46.1, 174.0], [46.2, 174.0], [46.3, 174.0], [46.4, 174.0], [46.5, 174.0], [46.6, 174.0], [46.7, 174.0], [46.8, 174.0], [46.9, 174.0], [47.0, 174.0], [47.1, 174.0], [47.2, 174.0], [47.3, 174.0], [47.4, 174.0], [47.5, 174.0], [47.6, 174.0], [47.7, 174.0], [47.8, 174.0], [47.9, 174.0], [48.0, 174.0], [48.1, 174.0], [48.2, 174.0], [48.3, 174.0], [48.4, 174.0], [48.5, 174.0], [48.6, 174.0], [48.7, 174.0], [48.8, 174.0], [48.9, 175.0], [49.0, 175.0], [49.1, 175.0], [49.2, 175.0], [49.3, 175.0], [49.4, 175.0], [49.5, 175.0], [49.6, 175.0], [49.7, 175.0], [49.8, 175.0], [49.9, 175.0], [50.0, 175.0], [50.1, 175.0], [50.2, 175.0], [50.3, 175.0], [50.4, 175.0], [50.5, 175.0], [50.6, 175.0], [50.7, 175.0], [50.8, 175.0], [50.9, 175.0], [51.0, 175.0], [51.1, 175.0], [51.2, 176.0], [51.3, 176.0], [51.4, 176.0], [51.5, 176.0], [51.6, 176.0], [51.7, 176.0], [51.8, 176.0], [51.9, 179.0], [52.0, 179.0], [52.1, 179.0], [52.2, 179.0], [52.3, 179.0], [52.4, 179.0], [52.5, 179.0], [52.6, 179.0], [52.7, 179.0], [52.8, 179.0], [52.9, 179.0], [53.0, 179.0], [53.1, 179.0], [53.2, 179.0], [53.3, 179.0], [53.4, 180.0], [53.5, 180.0], [53.6, 180.0], [53.7, 180.0], [53.8, 180.0], [53.9, 180.0], [54.0, 180.0], [54.1, 180.0], [54.2, 180.0], [54.3, 180.0], [54.4, 180.0], [54.5, 180.0], [54.6, 180.0], [54.7, 180.0], [54.8, 180.0], [54.9, 180.0], [55.0, 180.0], [55.1, 180.0], [55.2, 180.0], [55.3, 180.0], [55.4, 180.0], [55.5, 180.0], [55.6, 180.0], [55.7, 180.0], [55.8, 180.0], [55.9, 180.0], [56.0, 180.0], [56.1, 180.0], [56.2, 180.0], [56.3, 180.0], [56.4, 180.0], [56.5, 180.0], [56.6, 180.0], [56.7, 180.0], [56.8, 180.0], [56.9, 180.0], [57.0, 180.0], [57.1, 181.0], [57.2, 181.0], [57.3, 181.0], [57.4, 181.0], [57.5, 181.0], [57.6, 181.0], [57.7, 181.0], [57.8, 181.0], [57.9, 181.0], [58.0, 181.0], [58.1, 181.0], [58.2, 181.0], [58.3, 181.0], [58.4, 181.0], [58.5, 181.0], [58.6, 181.0], [58.7, 181.0], [58.8, 181.0], [58.9, 181.0], [59.0, 181.0], [59.1, 181.0], [59.2, 181.0], [59.3, 183.0], [59.4, 183.0], [59.5, 183.0], [59.6, 183.0], [59.7, 183.0], [59.8, 183.0], [59.9, 183.0], [60.0, 184.0], [60.1, 184.0], [60.2, 184.0], [60.3, 184.0], [60.4, 184.0], [60.5, 184.0], [60.6, 184.0], [60.7, 184.0], [60.8, 184.0], [60.9, 184.0], [61.0, 184.0], [61.1, 184.0], [61.2, 184.0], [61.3, 184.0], [61.4, 184.0], [61.5, 184.0], [61.6, 184.0], [61.7, 184.0], [61.8, 184.0], [61.9, 184.0], [62.0, 184.0], [62.1, 184.0], [62.2, 184.0], [62.3, 185.0], [62.4, 185.0], [62.5, 185.0], [62.6, 185.0], [62.7, 185.0], [62.8, 185.0], [62.9, 185.0], [63.0, 185.0], [63.1, 185.0], [63.2, 185.0], [63.3, 185.0], [63.4, 185.0], [63.5, 185.0], [63.6, 185.0], [63.7, 185.0], [63.8, 185.0], [63.9, 185.0], [64.0, 185.0], [64.1, 185.0], [64.2, 185.0], [64.3, 185.0], [64.4, 185.0], [64.5, 186.0], [64.6, 186.0], [64.7, 186.0], [64.8, 186.0], [64.9, 186.0], [65.0, 186.0], [65.1, 186.0], [65.2, 188.0], [65.3, 188.0], [65.4, 188.0], [65.5, 188.0], [65.6, 188.0], [65.7, 188.0], [65.8, 188.0], [65.9, 188.0], [66.0, 188.0], [66.1, 188.0], [66.2, 188.0], [66.3, 188.0], [66.4, 188.0], [66.5, 188.0], [66.6, 188.0], [66.7, 188.0], [66.8, 188.0], [66.9, 188.0], [67.0, 188.0], [67.1, 188.0], [67.2, 188.0], [67.3, 188.0], [67.4, 188.0], [67.5, 188.0], [67.6, 188.0], [67.7, 188.0], [67.8, 188.0], [67.9, 188.0], [68.0, 188.0], [68.1, 188.0], [68.2, 190.0], [68.3, 190.0], [68.4, 190.0], [68.5, 190.0], [68.6, 190.0], [68.7, 190.0], [68.8, 190.0], [68.9, 190.0], [69.0, 190.0], [69.1, 190.0], [69.2, 190.0], [69.3, 190.0], [69.4, 190.0], [69.5, 190.0], [69.6, 190.0], [69.7, 190.0], [69.8, 190.0], [69.9, 190.0], [70.0, 190.0], [70.1, 190.0], [70.2, 190.0], [70.3, 190.0], [70.4, 190.0], [70.5, 190.0], [70.6, 190.0], [70.7, 190.0], [70.8, 190.0], [70.9, 190.0], [71.0, 190.0], [71.1, 190.0], [71.2, 195.0], [71.3, 195.0], [71.4, 195.0], [71.5, 195.0], [71.6, 195.0], [71.7, 195.0], [71.8, 195.0], [71.9, 196.0], [72.0, 196.0], [72.1, 196.0], [72.2, 196.0], [72.3, 196.0], [72.4, 196.0], [72.5, 196.0], [72.6, 196.0], [72.7, 196.0], [72.8, 196.0], [72.9, 196.0], [73.0, 196.0], [73.1, 196.0], [73.2, 196.0], [73.3, 196.0], [73.4, 199.0], [73.5, 199.0], [73.6, 199.0], [73.7, 199.0], [73.8, 199.0], [73.9, 199.0], [74.0, 199.0], [74.1, 200.0], [74.2, 200.0], [74.3, 200.0], [74.4, 200.0], [74.5, 200.0], [74.6, 200.0], [74.7, 200.0], [74.8, 200.0], [74.9, 200.0], [75.0, 200.0], [75.1, 200.0], [75.2, 200.0], [75.3, 200.0], [75.4, 200.0], [75.5, 200.0], [75.6, 202.0], [75.7, 202.0], [75.8, 202.0], [75.9, 202.0], [76.0, 202.0], [76.1, 202.0], [76.2, 202.0], [76.3, 202.0], [76.4, 202.0], [76.5, 202.0], [76.6, 202.0], [76.7, 202.0], [76.8, 202.0], [76.9, 202.0], [77.0, 202.0], [77.1, 203.0], [77.2, 203.0], [77.3, 203.0], [77.4, 203.0], [77.5, 203.0], [77.6, 203.0], [77.7, 203.0], [77.8, 206.0], [77.9, 206.0], [78.0, 206.0], [78.1, 206.0], [78.2, 206.0], [78.3, 206.0], [78.4, 206.0], [78.5, 206.0], [78.6, 207.0], [78.7, 207.0], [78.8, 207.0], [78.9, 207.0], [79.0, 207.0], [79.1, 207.0], [79.2, 207.0], [79.3, 212.0], [79.4, 212.0], [79.5, 212.0], [79.6, 212.0], [79.7, 212.0], [79.8, 212.0], [79.9, 212.0], [80.0, 212.0], [80.1, 215.0], [80.2, 215.0], [80.3, 215.0], [80.4, 215.0], [80.5, 215.0], [80.6, 215.0], [80.7, 215.0], [80.8, 217.0], [80.9, 217.0], [81.0, 217.0], [81.1, 217.0], [81.2, 217.0], [81.3, 217.0], [81.4, 217.0], [81.5, 219.0], [81.6, 219.0], [81.7, 219.0], [81.8, 219.0], [81.9, 219.0], [82.0, 219.0], [82.1, 219.0], [82.2, 219.0], [82.3, 221.0], [82.4, 221.0], [82.5, 221.0], [82.6, 221.0], [82.7, 221.0], [82.8, 221.0], [82.9, 221.0], [83.0, 229.0], [83.1, 229.0], [83.2, 229.0], [83.3, 229.0], [83.4, 229.0], [83.5, 229.0], [83.6, 229.0], [83.7, 229.0], [83.8, 230.0], [83.9, 230.0], [84.0, 230.0], [84.1, 230.0], [84.2, 230.0], [84.3, 230.0], [84.4, 230.0], [84.5, 248.0], [84.6, 248.0], [84.7, 248.0], [84.8, 248.0], [84.9, 248.0], [85.0, 248.0], [85.1, 248.0], [85.2, 251.0], [85.3, 251.0], [85.4, 251.0], [85.5, 251.0], [85.6, 251.0], [85.7, 251.0], [85.8, 251.0], [85.9, 251.0], [86.0, 261.0], [86.1, 261.0], [86.2, 261.0], [86.3, 261.0], [86.4, 261.0], [86.5, 261.0], [86.6, 261.0], [86.7, 262.0], [86.8, 262.0], [86.9, 262.0], [87.0, 262.0], [87.1, 262.0], [87.2, 262.0], [87.3, 262.0], [87.4, 262.0], [87.5, 266.0], [87.6, 266.0], [87.7, 266.0], [87.8, 266.0], [87.9, 266.0], [88.0, 266.0], [88.1, 266.0], [88.2, 277.0], [88.3, 277.0], [88.4, 277.0], [88.5, 277.0], [88.6, 277.0], [88.7, 277.0], [88.8, 277.0], [88.9, 297.0], [89.0, 297.0], [89.1, 297.0], [89.2, 297.0], [89.3, 297.0], [89.4, 297.0], [89.5, 297.0], [89.6, 297.0], [89.7, 385.0], [89.8, 385.0], [89.9, 385.0], [90.0, 385.0], [90.1, 385.0], [90.2, 385.0], [90.3, 385.0], [90.4, 402.0], [90.5, 402.0], [90.6, 402.0], [90.7, 402.0], [90.8, 402.0], [90.9, 402.0], [91.0, 402.0], [91.1, 402.0], [91.2, 412.0], [91.3, 412.0], [91.4, 412.0], [91.5, 412.0], [91.6, 412.0], [91.7, 412.0], [91.8, 412.0], [91.9, 414.0], [92.0, 414.0], [92.1, 414.0], [92.2, 414.0], [92.3, 414.0], [92.4, 414.0], [92.5, 414.0], [92.6, 433.0], [92.7, 433.0], [92.8, 433.0], [92.9, 433.0], [93.0, 433.0], [93.1, 433.0], [93.2, 433.0], [93.3, 433.0], [93.4, 481.0], [93.5, 481.0], [93.6, 481.0], [93.7, 481.0], [93.8, 481.0], [93.9, 481.0], [94.0, 481.0], [94.1, 580.0], [94.2, 580.0], [94.3, 580.0], [94.4, 580.0], [94.5, 580.0], [94.6, 580.0], [94.7, 580.0], [94.8, 580.0], [94.9, 593.0], [95.0, 593.0], [95.1, 593.0], [95.2, 593.0], [95.3, 593.0], [95.4, 593.0], [95.5, 593.0], [95.6, 623.0], [95.7, 623.0], [95.8, 623.0], [95.9, 623.0], [96.0, 623.0], [96.1, 623.0], [96.2, 623.0], [96.3, 651.0], [96.4, 651.0], [96.5, 651.0], [96.6, 651.0], [96.7, 651.0], [96.8, 651.0], [96.9, 651.0], [97.0, 651.0], [97.1, 714.0], [97.2, 714.0], [97.3, 714.0], [97.4, 714.0], [97.5, 714.0], [97.6, 714.0], [97.7, 714.0], [97.8, 820.0], [97.9, 820.0], [98.0, 820.0], [98.1, 820.0], [98.2, 820.0], [98.3, 820.0], [98.4, 820.0], [98.5, 820.0], [98.6, 850.0], [98.7, 850.0], [98.8, 850.0], [98.9, 850.0], [99.0, 850.0], [99.1, 850.0], [99.2, 850.0], [99.3, 1013.0], [99.4, 1013.0], [99.5, 1013.0], [99.6, 1013.0], [99.7, 1013.0], [99.8, 1013.0], [99.9, 1013.0], [100.0, 1013.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 4.0], [0.3, 5.0], [0.4, 6.0], [0.5, 8.0], [0.6, 8.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 10.0], [1.1, 10.0], [1.2, 11.0], [1.3, 12.0], [1.4, 14.0], [1.5, 16.0], [1.6, 20.0], [1.7, 24.0], [1.8, 28.0], [1.9, 33.0], [2.0, 35.0], [2.1, 36.0], [2.2, 37.0], [2.3, 38.0], [2.4, 39.0], [2.5, 39.0], [2.6, 40.0], [2.7, 40.0], [2.8, 41.0], [2.9, 41.0], [3.0, 41.0], [3.1, 42.0], [3.2, 42.0], [3.3, 43.0], [3.4, 43.0], [3.5, 43.0], [3.6, 44.0], [3.7, 44.0], [3.8, 45.0], [3.9, 45.0], [4.0, 46.0], [4.1, 46.0], [4.2, 46.0], [4.3, 47.0], [4.4, 47.0], [4.5, 47.0], [4.6, 48.0], [4.7, 48.0], [4.8, 48.0], [4.9, 49.0], [5.0, 49.0], [5.1, 49.0], [5.2, 50.0], [5.3, 50.0], [5.4, 51.0], [5.5, 51.0], [5.6, 51.0], [5.7, 52.0], [5.8, 52.0], [5.9, 53.0], [6.0, 53.0], [6.1, 53.0], [6.2, 54.0], [6.3, 54.0], [6.4, 55.0], [6.5, 55.0], [6.6, 56.0], [6.7, 56.0], [6.8, 57.0], [6.9, 57.0], [7.0, 58.0], [7.1, 58.0], [7.2, 59.0], [7.3, 60.0], [7.4, 60.0], [7.5, 61.0], [7.6, 62.0], [7.7, 62.0], [7.8, 63.0], [7.9, 64.0], [8.0, 64.0], [8.1, 66.0], [8.2, 67.0], [8.3, 68.0], [8.4, 70.0], [8.5, 71.0], [8.6, 72.0], [8.7, 75.0], [8.8, 77.0], [8.9, 79.0], [9.0, 84.0], [9.1, 88.0], [9.2, 96.0], [9.3, 106.0], [9.4, 114.0], [9.5, 126.0], [9.6, 144.0], [9.7, 176.0], [9.8, 203.0], [9.9, 225.0], [10.0, 234.0], [10.1, 240.0], [10.2, 252.0], [10.3, 269.0], [10.4, 280.0], [10.5, 292.0], [10.6, 297.0], [10.7, 310.0], [10.8, 317.0], [10.9, 328.0], [11.0, 335.0], [11.1, 342.0], [11.2, 350.0], [11.3, 359.0], [11.4, 363.0], [11.5, 371.0], [11.6, 378.0], [11.7, 384.0], [11.8, 391.0], [11.9, 397.0], [12.0, 404.0], [12.1, 412.0], [12.2, 417.0], [12.3, 422.0], [12.4, 429.0], [12.5, 436.0], [12.6, 443.0], [12.7, 448.0], [12.8, 451.0], [12.9, 458.0], [13.0, 465.0], [13.1, 469.0], [13.2, 473.0], [13.3, 478.0], [13.4, 482.0], [13.5, 489.0], [13.6, 496.0], [13.7, 500.0], [13.8, 506.0], [13.9, 514.0], [14.0, 522.0], [14.1, 526.0], [14.2, 531.0], [14.3, 538.0], [14.4, 545.0], [14.5, 550.0], [14.6, 556.0], [14.7, 562.0], [14.8, 566.0], [14.9, 572.0], [15.0, 578.0], [15.1, 583.0], [15.2, 585.0], [15.3, 591.0], [15.4, 596.0], [15.5, 600.0], [15.6, 603.0], [15.7, 607.0], [15.8, 611.0], [15.9, 615.0], [16.0, 621.0], [16.1, 625.0], [16.2, 627.0], [16.3, 630.0], [16.4, 634.0], [16.5, 638.0], [16.6, 641.0], [16.7, 647.0], [16.8, 653.0], [16.9, 658.0], [17.0, 661.0], [17.1, 664.0], [17.2, 667.0], [17.3, 671.0], [17.4, 674.0], [17.5, 679.0], [17.6, 684.0], [17.7, 689.0], [17.8, 693.0], [17.9, 697.0], [18.0, 700.0], [18.1, 704.0], [18.2, 708.0], [18.3, 711.0], [18.4, 714.0], [18.5, 718.0], [18.6, 721.0], [18.7, 725.0], [18.8, 728.0], [18.9, 730.0], [19.0, 732.0], [19.1, 735.0], [19.2, 737.0], [19.3, 740.0], [19.4, 742.0], [19.5, 744.0], [19.6, 749.0], [19.7, 753.0], [19.8, 756.0], [19.9, 760.0], [20.0, 766.0], [20.1, 769.0], [20.2, 773.0], [20.3, 777.0], [20.4, 779.0], [20.5, 783.0], [20.6, 789.0], [20.7, 791.0], [20.8, 795.0], [20.9, 798.0], [21.0, 801.0], [21.1, 805.0], [21.2, 809.0], [21.3, 813.0], [21.4, 815.0], [21.5, 817.0], [21.6, 821.0], [21.7, 823.0], [21.8, 827.0], [21.9, 829.0], [22.0, 833.0], [22.1, 836.0], [22.2, 840.0], [22.3, 843.0], [22.4, 845.0], [22.5, 848.0], [22.6, 851.0], [22.7, 854.0], [22.8, 856.0], [22.9, 859.0], [23.0, 863.0], [23.1, 865.0], [23.2, 870.0], [23.3, 872.0], [23.4, 875.0], [23.5, 876.0], [23.6, 879.0], [23.7, 882.0], [23.8, 884.0], [23.9, 887.0], [24.0, 889.0], [24.1, 891.0], [24.2, 894.0], [24.3, 898.0], [24.4, 900.0], [24.5, 902.0], [24.6, 906.0], [24.7, 909.0], [24.8, 912.0], [24.9, 916.0], [25.0, 920.0], [25.1, 923.0], [25.2, 925.0], [25.3, 929.0], [25.4, 932.0], [25.5, 934.0], [25.6, 936.0], [25.7, 938.0], [25.8, 942.0], [25.9, 944.0], [26.0, 946.0], [26.1, 949.0], [26.2, 950.0], [26.3, 954.0], [26.4, 956.0], [26.5, 960.0], [26.6, 963.0], [26.7, 965.0], [26.8, 968.0], [26.9, 970.0], [27.0, 972.0], [27.1, 975.0], [27.2, 978.0], [27.3, 980.0], [27.4, 983.0], [27.5, 986.0], [27.6, 989.0], [27.7, 991.0], [27.8, 994.0], [27.9, 997.0], [28.0, 999.0], [28.1, 1001.0], [28.2, 1003.0], [28.3, 1005.0], [28.4, 1009.0], [28.5, 1011.0], [28.6, 1015.0], [28.7, 1017.0], [28.8, 1022.0], [28.9, 1023.0], [29.0, 1025.0], [29.1, 1027.0], [29.2, 1029.0], [29.3, 1032.0], [29.4, 1035.0], [29.5, 1038.0], [29.6, 1040.0], [29.7, 1041.0], [29.8, 1043.0], [29.9, 1046.0], [30.0, 1049.0], [30.1, 1052.0], [30.2, 1055.0], [30.3, 1058.0], [30.4, 1062.0], [30.5, 1063.0], [30.6, 1066.0], [30.7, 1069.0], [30.8, 1070.0], [30.9, 1072.0], [31.0, 1075.0], [31.1, 1078.0], [31.2, 1080.0], [31.3, 1082.0], [31.4, 1083.0], [31.5, 1086.0], [31.6, 1090.0], [31.7, 1092.0], [31.8, 1094.0], [31.9, 1097.0], [32.0, 1099.0], [32.1, 1101.0], [32.2, 1103.0], [32.3, 1106.0], [32.4, 1107.0], [32.5, 1109.0], [32.6, 1110.0], [32.7, 1113.0], [32.8, 1115.0], [32.9, 1117.0], [33.0, 1119.0], [33.1, 1120.0], [33.2, 1123.0], [33.3, 1126.0], [33.4, 1128.0], [33.5, 1130.0], [33.6, 1133.0], [33.7, 1134.0], [33.8, 1138.0], [33.9, 1140.0], [34.0, 1141.0], [34.1, 1144.0], [34.2, 1147.0], [34.3, 1148.0], [34.4, 1150.0], [34.5, 1153.0], [34.6, 1155.0], [34.7, 1158.0], [34.8, 1160.0], [34.9, 1163.0], [35.0, 1165.0], [35.1, 1168.0], [35.2, 1170.0], [35.3, 1172.0], [35.4, 1175.0], [35.5, 1176.0], [35.6, 1178.0], [35.7, 1181.0], [35.8, 1185.0], [35.9, 1187.0], [36.0, 1190.0], [36.1, 1193.0], [36.2, 1195.0], [36.3, 1197.0], [36.4, 1198.0], [36.5, 1200.0], [36.6, 1202.0], [36.7, 1205.0], [36.8, 1206.0], [36.9, 1208.0], [37.0, 1210.0], [37.1, 1212.0], [37.2, 1213.0], [37.3, 1215.0], [37.4, 1217.0], [37.5, 1219.0], [37.6, 1221.0], [37.7, 1224.0], [37.8, 1226.0], [37.9, 1227.0], [38.0, 1229.0], [38.1, 1232.0], [38.2, 1234.0], [38.3, 1236.0], [38.4, 1237.0], [38.5, 1239.0], [38.6, 1240.0], [38.7, 1242.0], [38.8, 1245.0], [38.9, 1246.0], [39.0, 1249.0], [39.1, 1252.0], [39.2, 1253.0], [39.3, 1256.0], [39.4, 1257.0], [39.5, 1259.0], [39.6, 1261.0], [39.7, 1264.0], [39.8, 1266.0], [39.9, 1268.0], [40.0, 1269.0], [40.1, 1270.0], [40.2, 1272.0], [40.3, 1274.0], [40.4, 1276.0], [40.5, 1279.0], [40.6, 1281.0], [40.7, 1283.0], [40.8, 1286.0], [40.9, 1287.0], [41.0, 1290.0], [41.1, 1292.0], [41.2, 1294.0], [41.3, 1296.0], [41.4, 1296.0], [41.5, 1299.0], [41.6, 1301.0], [41.7, 1302.0], [41.8, 1305.0], [41.9, 1307.0], [42.0, 1308.0], [42.1, 1310.0], [42.2, 1312.0], [42.3, 1315.0], [42.4, 1317.0], [42.5, 1319.0], [42.6, 1322.0], [42.7, 1324.0], [42.8, 1327.0], [42.9, 1328.0], [43.0, 1329.0], [43.1, 1331.0], [43.2, 1334.0], [43.3, 1336.0], [43.4, 1337.0], [43.5, 1339.0], [43.6, 1341.0], [43.7, 1346.0], [43.8, 1348.0], [43.9, 1349.0], [44.0, 1351.0], [44.1, 1353.0], [44.2, 1355.0], [44.3, 1357.0], [44.4, 1360.0], [44.5, 1361.0], [44.6, 1363.0], [44.7, 1365.0], [44.8, 1367.0], [44.9, 1369.0], [45.0, 1372.0], [45.1, 1374.0], [45.2, 1375.0], [45.3, 1377.0], [45.4, 1378.0], [45.5, 1380.0], [45.6, 1382.0], [45.7, 1384.0], [45.8, 1387.0], [45.9, 1387.0], [46.0, 1389.0], [46.1, 1391.0], [46.2, 1392.0], [46.3, 1395.0], [46.4, 1397.0], [46.5, 1399.0], [46.6, 1400.0], [46.7, 1402.0], [46.8, 1405.0], [46.9, 1407.0], [47.0, 1408.0], [47.1, 1410.0], [47.2, 1411.0], [47.3, 1414.0], [47.4, 1415.0], [47.5, 1417.0], [47.6, 1419.0], [47.7, 1421.0], [47.8, 1423.0], [47.9, 1426.0], [48.0, 1427.0], [48.1, 1430.0], [48.2, 1432.0], [48.3, 1435.0], [48.4, 1437.0], [48.5, 1439.0], [48.6, 1441.0], [48.7, 1442.0], [48.8, 1444.0], [48.9, 1447.0], [49.0, 1448.0], [49.1, 1450.0], [49.2, 1452.0], [49.3, 1453.0], [49.4, 1455.0], [49.5, 1456.0], [49.6, 1458.0], [49.7, 1460.0], [49.8, 1461.0], [49.9, 1463.0], [50.0, 1465.0], [50.1, 1467.0], [50.2, 1468.0], [50.3, 1470.0], [50.4, 1471.0], [50.5, 1472.0], [50.6, 1475.0], [50.7, 1476.0], [50.8, 1478.0], [50.9, 1479.0], [51.0, 1482.0], [51.1, 1484.0], [51.2, 1486.0], [51.3, 1488.0], [51.4, 1490.0], [51.5, 1492.0], [51.6, 1494.0], [51.7, 1496.0], [51.8, 1498.0], [51.9, 1500.0], [52.0, 1502.0], [52.1, 1504.0], [52.2, 1507.0], [52.3, 1509.0], [52.4, 1512.0], [52.5, 1514.0], [52.6, 1516.0], [52.7, 1518.0], [52.8, 1519.0], [52.9, 1521.0], [53.0, 1523.0], [53.1, 1525.0], [53.2, 1526.0], [53.3, 1528.0], [53.4, 1530.0], [53.5, 1533.0], [53.6, 1535.0], [53.7, 1536.0], [53.8, 1538.0], [53.9, 1541.0], [54.0, 1542.0], [54.1, 1545.0], [54.2, 1546.0], [54.3, 1548.0], [54.4, 1550.0], [54.5, 1552.0], [54.6, 1554.0], [54.7, 1556.0], [54.8, 1557.0], [54.9, 1560.0], [55.0, 1562.0], [55.1, 1563.0], [55.2, 1566.0], [55.3, 1568.0], [55.4, 1569.0], [55.5, 1572.0], [55.6, 1574.0], [55.7, 1576.0], [55.8, 1579.0], [55.9, 1580.0], [56.0, 1583.0], [56.1, 1584.0], [56.2, 1588.0], [56.3, 1590.0], [56.4, 1592.0], [56.5, 1594.0], [56.6, 1596.0], [56.7, 1598.0], [56.8, 1601.0], [56.9, 1602.0], [57.0, 1603.0], [57.1, 1605.0], [57.2, 1607.0], [57.3, 1608.0], [57.4, 1609.0], [57.5, 1611.0], [57.6, 1613.0], [57.7, 1615.0], [57.8, 1617.0], [57.9, 1620.0], [58.0, 1622.0], [58.1, 1624.0], [58.2, 1626.0], [58.3, 1628.0], [58.4, 1630.0], [58.5, 1632.0], [58.6, 1635.0], [58.7, 1636.0], [58.8, 1638.0], [58.9, 1640.0], [59.0, 1643.0], [59.1, 1645.0], [59.2, 1646.0], [59.3, 1648.0], [59.4, 1650.0], [59.5, 1653.0], [59.6, 1655.0], [59.7, 1658.0], [59.8, 1660.0], [59.9, 1662.0], [60.0, 1664.0], [60.1, 1667.0], [60.2, 1669.0], [60.3, 1671.0], [60.4, 1673.0], [60.5, 1676.0], [60.6, 1678.0], [60.7, 1681.0], [60.8, 1683.0], [60.9, 1685.0], [61.0, 1687.0], [61.1, 1689.0], [61.2, 1692.0], [61.3, 1693.0], [61.4, 1695.0], [61.5, 1697.0], [61.6, 1699.0], [61.7, 1702.0], [61.8, 1704.0], [61.9, 1706.0], [62.0, 1708.0], [62.1, 1710.0], [62.2, 1712.0], [62.3, 1714.0], [62.4, 1717.0], [62.5, 1719.0], [62.6, 1721.0], [62.7, 1724.0], [62.8, 1726.0], [62.9, 1729.0], [63.0, 1730.0], [63.1, 1732.0], [63.2, 1734.0], [63.3, 1735.0], [63.4, 1737.0], [63.5, 1739.0], [63.6, 1742.0], [63.7, 1744.0], [63.8, 1746.0], [63.9, 1748.0], [64.0, 1749.0], [64.1, 1752.0], [64.2, 1753.0], [64.3, 1755.0], [64.4, 1758.0], [64.5, 1760.0], [64.6, 1763.0], [64.7, 1766.0], [64.8, 1767.0], [64.9, 1769.0], [65.0, 1770.0], [65.1, 1772.0], [65.2, 1773.0], [65.3, 1775.0], [65.4, 1777.0], [65.5, 1779.0], [65.6, 1781.0], [65.7, 1783.0], [65.8, 1786.0], [65.9, 1789.0], [66.0, 1791.0], [66.1, 1794.0], [66.2, 1795.0], [66.3, 1798.0], [66.4, 1799.0], [66.5, 1801.0], [66.6, 1803.0], [66.7, 1805.0], [66.8, 1808.0], [66.9, 1810.0], [67.0, 1812.0], [67.1, 1815.0], [67.2, 1816.0], [67.3, 1818.0], [67.4, 1822.0], [67.5, 1825.0], [67.6, 1827.0], [67.7, 1829.0], [67.8, 1831.0], [67.9, 1834.0], [68.0, 1837.0], [68.1, 1839.0], [68.2, 1841.0], [68.3, 1843.0], [68.4, 1846.0], [68.5, 1847.0], [68.6, 1850.0], [68.7, 1853.0], [68.8, 1855.0], [68.9, 1857.0], [69.0, 1860.0], [69.1, 1862.0], [69.2, 1865.0], [69.3, 1866.0], [69.4, 1869.0], [69.5, 1870.0], [69.6, 1871.0], [69.7, 1873.0], [69.8, 1875.0], [69.9, 1879.0], [70.0, 1881.0], [70.1, 1883.0], [70.2, 1884.0], [70.3, 1886.0], [70.4, 1888.0], [70.5, 1891.0], [70.6, 1894.0], [70.7, 1897.0], [70.8, 1900.0], [70.9, 1902.0], [71.0, 1906.0], [71.1, 1908.0], [71.2, 1911.0], [71.3, 1914.0], [71.4, 1915.0], [71.5, 1918.0], [71.6, 1920.0], [71.7, 1921.0], [71.8, 1924.0], [71.9, 1927.0], [72.0, 1929.0], [72.1, 1931.0], [72.2, 1934.0], [72.3, 1937.0], [72.4, 1938.0], [72.5, 1942.0], [72.6, 1944.0], [72.7, 1946.0], [72.8, 1948.0], [72.9, 1951.0], [73.0, 1953.0], [73.1, 1955.0], [73.2, 1958.0], [73.3, 1961.0], [73.4, 1964.0], [73.5, 1966.0], [73.6, 1969.0], [73.7, 1973.0], [73.8, 1975.0], [73.9, 1978.0], [74.0, 1980.0], [74.1, 1982.0], [74.2, 1985.0], [74.3, 1990.0], [74.4, 1994.0], [74.5, 1997.0], [74.6, 2000.0], [74.7, 2004.0], [74.8, 2009.0], [74.9, 2012.0], [75.0, 2014.0], [75.1, 2017.0], [75.2, 2018.0], [75.3, 2020.0], [75.4, 2021.0], [75.5, 2024.0], [75.6, 2028.0], [75.7, 2031.0], [75.8, 2033.0], [75.9, 2035.0], [76.0, 2037.0], [76.1, 2040.0], [76.2, 2043.0], [76.3, 2045.0], [76.4, 2049.0], [76.5, 2054.0], [76.6, 2057.0], [76.7, 2059.0], [76.8, 2061.0], [76.9, 2064.0], [77.0, 2067.0], [77.1, 2070.0], [77.2, 2073.0], [77.3, 2076.0], [77.4, 2079.0], [77.5, 2082.0], [77.6, 2086.0], [77.7, 2088.0], [77.8, 2091.0], [77.9, 2095.0], [78.0, 2098.0], [78.1, 2101.0], [78.2, 2104.0], [78.3, 2106.0], [78.4, 2109.0], [78.5, 2112.0], [78.6, 2116.0], [78.7, 2119.0], [78.8, 2120.0], [78.9, 2124.0], [79.0, 2127.0], [79.1, 2130.0], [79.2, 2131.0], [79.3, 2133.0], [79.4, 2135.0], [79.5, 2138.0], [79.6, 2141.0], [79.7, 2145.0], [79.8, 2148.0], [79.9, 2151.0], [80.0, 2153.0], [80.1, 2156.0], [80.2, 2161.0], [80.3, 2165.0], [80.4, 2169.0], [80.5, 2171.0], [80.6, 2175.0], [80.7, 2180.0], [80.8, 2182.0], [80.9, 2187.0], [81.0, 2190.0], [81.1, 2195.0], [81.2, 2200.0], [81.3, 2203.0], [81.4, 2205.0], [81.5, 2210.0], [81.6, 2213.0], [81.7, 2216.0], [81.8, 2219.0], [81.9, 2224.0], [82.0, 2226.0], [82.1, 2230.0], [82.2, 2234.0], [82.3, 2239.0], [82.4, 2241.0], [82.5, 2245.0], [82.6, 2246.0], [82.7, 2250.0], [82.8, 2252.0], [82.9, 2255.0], [83.0, 2259.0], [83.1, 2261.0], [83.2, 2264.0], [83.3, 2266.0], [83.4, 2269.0], [83.5, 2274.0], [83.6, 2277.0], [83.7, 2280.0], [83.8, 2285.0], [83.9, 2288.0], [84.0, 2291.0], [84.1, 2294.0], [84.2, 2297.0], [84.3, 2303.0], [84.4, 2310.0], [84.5, 2314.0], [84.6, 2316.0], [84.7, 2322.0], [84.8, 2324.0], [84.9, 2327.0], [85.0, 2331.0], [85.1, 2336.0], [85.2, 2339.0], [85.3, 2344.0], [85.4, 2348.0], [85.5, 2352.0], [85.6, 2358.0], [85.7, 2362.0], [85.8, 2365.0], [85.9, 2368.0], [86.0, 2373.0], [86.1, 2378.0], [86.2, 2380.0], [86.3, 2384.0], [86.4, 2388.0], [86.5, 2393.0], [86.6, 2395.0], [86.7, 2400.0], [86.8, 2403.0], [86.9, 2408.0], [87.0, 2413.0], [87.1, 2417.0], [87.2, 2421.0], [87.3, 2426.0], [87.4, 2430.0], [87.5, 2433.0], [87.6, 2436.0], [87.7, 2444.0], [87.8, 2449.0], [87.9, 2454.0], [88.0, 2458.0], [88.1, 2462.0], [88.2, 2466.0], [88.3, 2471.0], [88.4, 2475.0], [88.5, 2481.0], [88.6, 2485.0], [88.7, 2488.0], [88.8, 2494.0], [88.9, 2498.0], [89.0, 2501.0], [89.1, 2506.0], [89.2, 2512.0], [89.3, 2515.0], [89.4, 2520.0], [89.5, 2526.0], [89.6, 2530.0], [89.7, 2537.0], [89.8, 2540.0], [89.9, 2544.0], [90.0, 2547.0], [90.1, 2551.0], [90.2, 2556.0], [90.3, 2559.0], [90.4, 2563.0], [90.5, 2567.0], [90.6, 2573.0], [90.7, 2581.0], [90.8, 2587.0], [90.9, 2593.0], [91.0, 2599.0], [91.1, 2606.0], [91.2, 2610.0], [91.3, 2614.0], [91.4, 2621.0], [91.5, 2628.0], [91.6, 2633.0], [91.7, 2637.0], [91.8, 2640.0], [91.9, 2645.0], [92.0, 2651.0], [92.1, 2655.0], [92.2, 2660.0], [92.3, 2666.0], [92.4, 2670.0], [92.5, 2676.0], [92.6, 2680.0], [92.7, 2687.0], [92.8, 2695.0], [92.9, 2698.0], [93.0, 2705.0], [93.1, 2715.0], [93.2, 2723.0], [93.3, 2731.0], [93.4, 2738.0], [93.5, 2744.0], [93.6, 2750.0], [93.7, 2759.0], [93.8, 2766.0], [93.9, 2776.0], [94.0, 2783.0], [94.1, 2790.0], [94.2, 2797.0], [94.3, 2804.0], [94.4, 2810.0], [94.5, 2816.0], [94.6, 2824.0], [94.7, 2834.0], [94.8, 2846.0], [94.9, 2856.0], [95.0, 2865.0], [95.1, 2872.0], [95.2, 2881.0], [95.3, 2888.0], [95.4, 2900.0], [95.5, 2904.0], [95.6, 2913.0], [95.7, 2925.0], [95.8, 2939.0], [95.9, 2948.0], [96.0, 2954.0], [96.1, 2966.0], [96.2, 2980.0], [96.3, 2988.0], [96.4, 2999.0], [96.5, 3004.0], [96.6, 3017.0], [96.7, 3029.0], [96.8, 3041.0], [96.9, 3055.0], [97.0, 3074.0], [97.1, 3085.0], [97.2, 3105.0], [97.3, 3123.0], [97.4, 3134.0], [97.5, 3143.0], [97.6, 3159.0], [97.7, 3179.0], [97.8, 3196.0], [97.9, 3207.0], [98.0, 3225.0], [98.1, 3249.0], [98.2, 3264.0], [98.3, 3283.0], [98.4, 3299.0], [98.5, 3317.0], [98.6, 3346.0], [98.7, 3379.0], [98.8, 3396.0], [98.9, 3411.0], [99.0, 3444.0], [99.1, 3485.0], [99.2, 3533.0], [99.3, 3601.0], [99.4, 3668.0], [99.5, 3728.0], [99.6, 3801.0], [99.7, 3897.0], [99.8, 4105.0], [99.9, 4382.0], [100.0, 6734.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1376.0, "series": [{"data": [[0.0, 1376.0], [600.0, 352.0], [700.0, 403.0], [800.0, 489.0], [900.0, 535.0], [1000.0, 604.0], [1100.0, 609.0], [1200.0, 690.0], [1300.0, 671.0], [1400.0, 679.0], [1500.0, 644.0], [1600.0, 646.0], [1700.0, 608.0], [1800.0, 590.0], [1900.0, 491.0], [2000.0, 434.0], [2100.0, 412.0], [2200.0, 364.0], [2300.0, 365.0], [2400.0, 298.0], [2500.0, 246.0], [2600.0, 209.0], [2700.0, 190.0], [2800.0, 163.0], [2900.0, 138.0], [3000.0, 105.0], [3100.0, 92.0], [3200.0, 69.0], [3300.0, 57.0], [3400.0, 44.0], [3500.0, 17.0], [3600.0, 18.0], [3700.0, 11.0], [3800.0, 8.0], [3900.0, 8.0], [4000.0, 6.0], [4100.0, 3.0], [4200.0, 3.0], [4300.0, 2.0], [4500.0, 1.0], [4800.0, 1.0], [5300.0, 1.0], [6100.0, 1.0], [6000.0, 1.0], [6500.0, 1.0], [7100.0, 1.0], [100.0, 64.0], [200.0, 127.0], [300.0, 166.0], [400.0, 214.0], [500.0, 273.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[300.0, 1.0], [600.0, 2.0], [700.0, 1.0], [200.0, 21.0], [100.0, 100.0], [400.0, 5.0], [800.0, 2.0], [1000.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1248.0], [600.0, 337.0], [700.0, 398.0], [800.0, 466.0], [900.0, 490.0], [1000.0, 546.0], [1100.0, 597.0], [1200.0, 683.0], [1300.0, 677.0], [1400.0, 714.0], [1500.0, 665.0], [1600.0, 657.0], [1700.0, 644.0], [1800.0, 593.0], [1900.0, 512.0], [2000.0, 464.0], [2100.0, 428.0], [2200.0, 413.0], [2300.0, 330.0], [2400.0, 301.0], [2500.0, 280.0], [2600.0, 258.0], [2800.0, 157.0], [2700.0, 178.0], [2900.0, 137.0], [3000.0, 104.0], [3100.0, 88.0], [3200.0, 79.0], [3300.0, 52.0], [3400.0, 47.0], [3500.0, 20.0], [3600.0, 18.0], [3700.0, 22.0], [3800.0, 15.0], [3900.0, 4.0], [4000.0, 8.0], [4200.0, 3.0], [4300.0, 7.0], [4100.0, 6.0], [4400.0, 2.0], [4500.0, 2.0], [4700.0, 1.0], [4900.0, 1.0], [5300.0, 1.0], [5400.0, 1.0], [5700.0, 2.0], [6600.0, 1.0], [6700.0, 1.0], [100.0, 72.0], [200.0, 114.0], [300.0, 177.0], [400.0, 237.0], [500.0, 242.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 786.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 12563.0, "series": [{"data": [[0.0, 3420.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 10366.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 12563.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 786.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 36.60283687943262, "minX": 1.5854289E12, "maxY": 135.0, "series": [{"data": [[1.58542938E12, 135.0], [1.58542908E12, 135.0], [1.58542896E12, 111.53480328577596], [1.58542962E12, 63.79918450560664], [1.58542932E12, 135.0], [1.58542902E12, 135.0], [1.5854292E12, 135.0], [1.5854289E12, 36.60283687943262], [1.58542956E12, 126.71400472069206], [1.58542926E12, 135.0], [1.58542944E12, 135.0], [1.58542914E12, 135.0], [1.5854295E12, 135.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58542962E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 17.999999999999996, "minX": 1.0, "maxY": 1787.645161290323, "series": [{"data": [[3.0, 46.666666666666664], [4.0, 60.0], [5.0, 57.5], [7.0, 54.666666666666664], [8.0, 49.0], [9.0, 41.0], [10.0, 57.666666666666664], [11.0, 44.5], [12.0, 50.25], [13.0, 33.0], [14.0, 48.5], [15.0, 41.0], [16.0, 45.0], [17.0, 47.2], [18.0, 50.285714285714285], [19.0, 53.916666666666664], [20.0, 48.25], [21.0, 69.61538461538461], [22.0, 43.0], [23.0, 49.25], [24.0, 56.6], [25.0, 58.6], [26.0, 65.0], [27.0, 50.0], [28.0, 49.57142857142857], [29.0, 51.1], [30.0, 64.75], [31.0, 57.75], [32.0, 52.8], [33.0, 54.0], [34.0, 64.5], [35.0, 51.666666666666664], [36.0, 50.5], [37.0, 51.375], [38.0, 42.333333333333336], [39.0, 47.50000000000001], [40.0, 52.33333333333333], [41.0, 55.75], [42.0, 46.625], [43.0, 49.45454545454545], [44.0, 43.714285714285715], [45.0, 52.25], [46.0, 48.764705882352935], [47.0, 48.35714285714286], [48.0, 48.31578947368421], [49.0, 52.4], [50.0, 51.75], [51.0, 146.5], [52.0, 245.75], [53.0, 650.1428571428572], [54.0, 52.2], [55.0, 52.0], [56.0, 45.66666666666667], [57.0, 49.14285714285714], [58.0, 42.75], [59.0, 42.75], [60.0, 52.09090909090909], [61.0, 51.56250000000001], [62.0, 131.83333333333334], [63.0, 194.78571428571425], [64.0, 179.1875], [65.0, 48.1875], [66.0, 47.15384615384615], [67.0, 53.63636363636363], [68.0, 51.42105263157895], [69.0, 52.44444444444445], [70.0, 49.66666666666667], [71.0, 50.42857142857143], [72.0, 48.666666666666664], [73.0, 55.76190476190476], [74.0, 43.62500000000001], [75.0, 46.87499999999999], [76.0, 43.42857142857142], [77.0, 56.17241379310345], [78.0, 281.1428571428572], [79.0, 227.20000000000002], [80.0, 17.999999999999996], [81.0, 44.083333333333336], [82.0, 62.4375], [83.0, 36.84210526315788], [84.0, 49.44444444444444], [85.0, 46.0], [86.0, 37.6875], [87.0, 33.78571428571429], [88.0, 41.714285714285715], [89.0, 54.476190476190474], [90.0, 633.1212121212121], [91.0, 676.1785714285713], [92.0, 720.7272727272727], [93.0, 777.9230769230767], [94.0, 849.3243243243244], [95.0, 570.6428571428572], [96.0, 213.41935483870967], [97.0, 62.63157894736842], [98.0, 46.92307692307692], [99.0, 50.41176470588236], [100.0, 53.57142857142857], [101.0, 62.114285714285714], [102.0, 170.11764705882354], [103.0, 543.8909090909092], [105.0, 833.5625000000001], [106.0, 789.0833333333334], [107.0, 692.8333333333334], [108.0, 696.8076923076923], [109.0, 1044.0], [110.0, 929.1428571428572], [111.0, 872.4615384615386], [112.0, 793.913043478261], [113.0, 916.4545454545455], [114.0, 1053.1000000000001], [115.0, 963.0000000000001], [116.0, 1135.2142857142858], [117.0, 975.5], [118.0, 1202.6666666666667], [119.0, 1028.4807692307693], [120.0, 1222.6500000000003], [121.0, 1093.111111111111], [122.0, 1030.375], [123.0, 1155.1], [124.0, 991.4782608695654], [125.0, 1050.9310344827584], [126.0, 1045.8484848484848], [127.0, 1282.2903225806454], [128.0, 1665.8611111111109], [129.0, 1639.35], [130.0, 1503.8305084745766], [131.0, 1277.0714285714284], [132.0, 1148.0896551724143], [133.0, 1126.26724137931], [134.0, 1098.761904761905], [135.0, 1594.241701153474], [1.0, 59.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[128.4177037037039, 1435.6759259259366]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[2.0, 165.0], [3.0, 175.0], [4.0, 167.0], [5.0, 162.0], [6.0, 164.0], [7.0, 181.0], [8.0, 147.0], [9.0, 138.0], [11.0, 154.0], [12.0, 582.0], [13.0, 221.0], [14.0, 157.0], [15.0, 154.0], [17.0, 323.0], [18.0, 206.0], [19.0, 180.0], [20.0, 184.0], [21.0, 161.0], [22.0, 186.0], [23.0, 158.0], [24.0, 167.0], [25.0, 166.0], [26.0, 154.0], [27.0, 168.0], [28.0, 162.0], [29.0, 157.0], [30.0, 164.0], [31.0, 251.0], [32.0, 190.0], [33.0, 179.0], [34.0, 261.0], [35.0, 154.0], [36.0, 150.0], [37.0, 188.0], [38.0, 161.0], [39.0, 164.0], [40.0, 159.0], [41.0, 160.0], [42.0, 174.0], [43.0, 190.0], [44.0, 266.0], [45.0, 179.0], [46.0, 202.0], [47.0, 159.0], [48.0, 215.0], [49.0, 173.0], [50.0, 180.0], [51.0, 188.0], [52.0, 174.0], [53.0, 165.0], [54.0, 180.0], [55.0, 164.0], [56.0, 185.0], [57.0, 176.0], [58.0, 173.0], [59.0, 181.0], [60.0, 175.0], [61.0, 174.0], [62.0, 190.0], [63.0, 184.0], [64.0, 229.0], [65.0, 160.0], [66.0, 180.0], [67.0, 199.0], [68.0, 203.0], [69.0, 175.0], [70.0, 188.0], [71.0, 165.0], [72.0, 167.0], [73.0, 171.0], [74.0, 160.0], [75.0, 150.0], [76.0, 180.0], [77.0, 200.0], [78.0, 160.0], [79.0, 163.0], [80.0, 190.0], [81.0, 202.0], [82.0, 185.0], [83.0, 169.0], [84.0, 161.0], [85.0, 152.0], [86.0, 156.0], [87.0, 200.0], [88.0, 183.0], [89.0, 153.0], [90.0, 181.0], [91.0, 160.0], [92.0, 230.0], [93.0, 297.0], [94.0, 184.0], [95.0, 161.0], [96.0, 185.0], [97.0, 196.0], [98.0, 172.0], [99.0, 165.0], [100.0, 169.0], [101.0, 173.0], [102.0, 168.0], [103.0, 196.0], [104.0, 277.0], [105.0, 152.0], [106.0, 163.0], [107.0, 412.0], [108.0, 153.0], [109.0, 172.0], [110.0, 162.0], [111.0, 207.0], [112.0, 195.0], [113.0, 159.0], [114.0, 155.0], [115.0, 172.0], [116.0, 163.0], [117.0, 248.0], [118.0, 219.0], [119.0, 160.0], [120.0, 174.0], [121.0, 212.0], [123.0, 423.5], [125.0, 602.5], [126.0, 402.0], [128.0, 188.0], [129.0, 850.0], [130.0, 580.0], [131.0, 427.5], [132.0, 157.0], [134.0, 714.0], [135.0, 637.0], [1.0, 217.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[68.08148148148149, 223.3629629629629]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[3.0, 56.333333333333336], [4.0, 63.5], [5.0, 56.0], [6.0, 48.0], [7.0, 53.5], [8.0, 58.0], [9.0, 50.0], [10.0, 57.5], [11.0, 58.0], [12.0, 42.0], [13.0, 42.0], [14.0, 47.666666666666664], [15.0, 46.333333333333336], [16.0, 49.0], [17.0, 48.333333333333336], [18.0, 50.5], [19.0, 50.90909090909091], [20.0, 48.5], [21.0, 56.0], [22.0, 48.75], [23.0, 43.666666666666664], [24.0, 56.0], [25.0, 44.85714285714286], [26.0, 51.166666666666664], [27.0, 53.5], [28.0, 43.5], [29.0, 54.63636363636363], [30.0, 52.42857142857142], [31.0, 48.0], [32.0, 53.666666666666664], [33.0, 47.0], [34.0, 55.714285714285715], [35.0, 58.800000000000004], [36.0, 54.42857142857143], [37.0, 58.10000000000001], [38.0, 45.5], [39.0, 52.5], [40.0, 51.72727272727273], [41.0, 57.33333333333333], [42.0, 54.33333333333333], [43.0, 49.285714285714285], [44.0, 71.14285714285714], [45.0, 47.2], [46.0, 49.416666666666664], [47.0, 50.99999999999999], [48.0, 50.23809523809524], [49.0, 62.94117647058823], [50.0, 50.57142857142857], [51.0, 183.24999999999997], [52.0, 523.0], [53.0, 478.1052631578946], [54.0, 54.333333333333336], [55.0, 55.8], [56.0, 44.5], [57.0, 41.8], [58.0, 53.0], [59.0, 70.13333333333333], [60.0, 60.875], [61.0, 52.5], [62.0, 93.0], [63.0, 234.91304347826087], [64.0, 162.23999999999998], [65.0, 52.0], [66.0, 52.2], [67.0, 59.26086956521739], [68.0, 57.909090909090914], [69.0, 54.58], [70.0, 46.36363636363636], [71.0, 49.58333333333333], [72.0, 47.18181818181818], [73.0, 53.92307692307693], [74.0, 43.9], [75.0, 50.16666666666667], [76.0, 45.71428571428571], [77.0, 52.08333333333333], [78.0, 417.86], [79.0, 352.14285714285717], [80.0, 47.578947368421055], [81.0, 49.599999999999994], [82.0, 57.72727272727273], [83.0, 47.64285714285714], [84.0, 49.72727272727273], [85.0, 42.57142857142858], [86.0, 43.83333333333333], [87.0, 50.25], [88.0, 54.190476190476204], [89.0, 54.26923076923076], [90.0, 575.2972972972973], [91.0, 814.142857142857], [92.0, 707.0], [93.0, 866.6666666666669], [94.0, 940.0857142857143], [95.0, 719.6666666666669], [96.0, 268.0], [97.0, 107.79166666666666], [98.0, 46.30769230769231], [99.0, 50.75], [100.0, 61.733333333333334], [101.0, 69.84374999999997], [102.0, 117.76923076923076], [103.0, 642.3389830508474], [104.0, 216.0], [105.0, 770.5294117647057], [106.0, 862.1666666666666], [107.0, 746.0], [108.0, 943.5000000000001], [109.0, 900.1999999999999], [110.0, 981.625], [111.0, 890.1999999999999], [112.0, 865.9615384615383], [113.0, 860.375], [114.0, 982.8846153846154], [116.0, 906.2499999999998], [117.0, 1212.2857142857144], [118.0, 1144.2727272727275], [119.0, 949.2456140350878], [120.0, 1190.8823529411761], [121.0, 1161.0769230769233], [122.0, 1045.3888888888891], [123.0, 1149.2], [124.0, 1116.7878787878788], [125.0, 1005.736842105263], [126.0, 978.909090909091], [127.0, 1225.4333333333334], [128.0, 1787.645161290323], [129.0, 1696.5], [130.0, 1540.0694444444446], [131.0, 1256.1304347826085], [132.0, 1184.8680555555559], [133.0, 1194.584745762712], [134.0, 1075.888888888889], [135.0, 1631.8821614010344]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[128.41385185185172, 1471.2976296296233]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 135.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2836.6666666666665, "minX": 1.5854289E12, "maxY": 292374.65, "series": [{"data": [[1.58542938E12, 278218.7], [1.58542908E12, 287204.95], [1.58542896E12, 266493.43333333335], [1.58542962E12, 113815.06666666667], [1.58542932E12, 266498.18333333335], [1.58542902E12, 261800.01666666666], [1.5854292E12, 275864.0333333333], [1.5854289E12, 44721.566666666666], [1.58542956E12, 292374.65], [1.58542926E12, 255993.0], [1.58542944E12, 244705.8], [1.58542914E12, 257012.71666666667], [1.5854295E12, 260991.06666666668]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58542938E12, 16773.8], [1.58542908E12, 17345.6], [1.58542896E12, 16272.633333333333], [1.58542962E12, 6806.9], [1.58542932E12, 17002.4], [1.58542902E12, 17167.266666666666], [1.5854292E12, 17460.166666666668], [1.5854289E12, 2836.6666666666665], [1.58542956E12, 17925.4], [1.58542926E12, 15451.233333333334], [1.58542944E12, 15293.966666666667], [1.58542914E12, 16337.9], [1.5854295E12, 16065.533333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58542962E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 104.76190476190474, "minX": 1.5854289E12, "maxY": 1979.42589118199, "series": [{"data": [[1.58542938E12, 1543.5331632653033], [1.58542908E12, 1449.0946843853826], [1.58542896E12, 1069.803099361896], [1.58542962E12, 208.9488188976376], [1.58542932E12, 1473.1558872305147], [1.58542902E12, 1502.687707641197], [1.5854292E12, 1447.2818405916166], [1.5854289E12, 109.4550561797753], [1.58542956E12, 1060.24261275272], [1.58542926E12, 1803.2650046168035], [1.58542944E12, 1933.2889095992527], [1.58542914E12, 1682.4986922406267], [1.5854295E12, 1654.4692239072274]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.5854289E12, 197.07142857142853], [1.58542896E12, 241.99999999999997]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542938E12, 1560.5619694397299], [1.58542908E12, 1471.0842880523705], [1.58542896E12, 1057.1284080914693], [1.58542962E12, 259.7780126849898], [1.58542932E12, 1545.6156405990014], [1.58542902E12, 1468.685045948203], [1.5854292E12, 1470.6465306122466], [1.5854289E12, 104.76190476190474], [1.58542956E12, 1158.660031847135], [1.58542926E12, 1844.4499072356195], [1.58542944E12, 1979.42589118199], [1.58542914E12, 1697.5852372583465], [1.5854295E12, 1737.4705882352946]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58542962E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 104.27513227513226, "minX": 1.5854289E12, "maxY": 1979.0440900562885, "series": [{"data": [[1.58542938E12, 1543.2474489795914], [1.58542908E12, 1448.846345514949], [1.58542896E12, 1069.561531449408], [1.58542962E12, 208.48228346456696], [1.58542932E12, 1472.8839137645105], [1.58542902E12, 1502.4343853820603], [1.5854292E12, 1446.9934264585047], [1.5854289E12, 109.20224719101118], [1.58542956E12, 1059.5069984447914], [1.58542926E12, 1802.9907663896558], [1.58542944E12, 1932.8369058713902], [1.58542914E12, 1682.2589363557097], [1.5854295E12, 1654.1231043710973]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.5854289E12, 196.6964285714286], [1.58542896E12, 241.62025316455706]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542938E12, 1560.2572156196954], [1.58542908E12, 1470.844517184942], [1.58542896E12, 1056.8733509234826], [1.58542962E12, 259.3213530655397], [1.58542932E12, 1545.405158069884], [1.58542902E12, 1468.4670008354199], [1.5854292E12, 1470.2848979591854], [1.5854289E12, 104.27513227513226], [1.58542956E12, 1157.980095541401], [1.58542926E12, 1844.2170686456413], [1.58542944E12, 1979.0440900562885], [1.58542914E12, 1697.3558875219683], [1.5854295E12, 1737.031606672518]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58542962E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0669291338582678, "minX": 1.5854289E12, "maxY": 1.7142857142857146, "series": [{"data": [[1.58542938E12, 0.5391156462585037], [1.58542908E12, 0.5780730897009965], [1.58542896E12, 0.4603463992707386], [1.58542962E12, 0.0669291338582678], [1.58542932E12, 0.6517412935323383], [1.58542902E12, 0.5980066445182723], [1.5854292E12, 0.8685291700903862], [1.5854289E12, 0.38764044943820214], [1.58542956E12, 0.44556765163297], [1.58542926E12, 1.6140350877193002], [1.58542944E12, 0.5647716682199445], [1.58542914E12, 0.5483870967741932], [1.5854295E12, 0.5584299732381801]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.5854289E12, 1.7142857142857146], [1.58542896E12, 0.7848101265822782]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58542938E12, 0.6460101867572152], [1.58542908E12, 0.6579378068739767], [1.58542896E12, 0.750219876868953], [1.58542962E12, 0.6300211416490489], [1.58542932E12, 0.5873544093178042], [1.58542902E12, 0.7084377610693403], [1.5854292E12, 0.8832653061224486], [1.5854289E12, 0.8042328042328046], [1.58542956E12, 0.5716560509554154], [1.58542926E12, 1.2207792207792203], [1.58542944E12, 0.5984990619136971], [1.58542914E12, 0.6168717047451668], [1.5854295E12, 0.597892888498682]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58542962E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.5854289E12, "maxY": 5716.0, "series": [{"data": [[1.58542938E12, 3370.0], [1.58542908E12, 3636.0], [1.58542896E12, 3528.0], [1.58542962E12, 2514.0], [1.58542932E12, 4120.0], [1.58542902E12, 4323.0], [1.5854292E12, 3610.0], [1.5854289E12, 1013.0], [1.58542956E12, 5716.0], [1.58542926E12, 4548.0], [1.58542944E12, 4493.0], [1.58542914E12, 3925.0], [1.5854295E12, 5326.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58542938E12, 208.0], [1.58542908E12, 118.0], [1.58542896E12, 30.0], [1.58542962E12, 26.0], [1.58542932E12, 2.0], [1.58542902E12, 12.0], [1.5854292E12, 85.0], [1.5854289E12, 29.0], [1.58542956E12, 2.0], [1.58542926E12, 149.0], [1.58542944E12, 2.0], [1.58542914E12, 44.0], [1.5854295E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58542938E12, 2261.6000000000004], [1.58542908E12, 2504.6], [1.58542896E12, 2175.6], [1.58542962E12, 879.7], [1.58542932E12, 2688.4], [1.58542902E12, 2436.0], [1.5854292E12, 2550.0], [1.5854289E12, 211.4000000000002], [1.58542956E12, 1890.3000000000002], [1.58542926E12, 2940.0], [1.58542944E12, 3022.0], [1.58542914E12, 2813.7], [1.5854295E12, 2449.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58542938E12, 2906.120000000001], [1.58542908E12, 3266.079999999998], [1.58542896E12, 2896.500000000003], [1.58542962E12, 1638.0500000000004], [1.58542932E12, 3506.6800000000003], [1.58542902E12, 3069.0499999999997], [1.5854292E12, 3201.88], [1.5854289E12, 997.6399999999999], [1.58542956E12, 2649.159999999998], [1.58542926E12, 3937.459999999998], [1.58542944E12, 3733.3999999999965], [1.58542914E12, 3481.420000000001], [1.5854295E12, 3266.1199999999985]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58542938E12, 2470.65], [1.58542908E12, 2822.599999999998], [1.58542896E12, 2408.2999999999997], [1.58542962E12, 1107.0499999999997], [1.58542932E12, 3022.1999999999953], [1.58542902E12, 2673.75], [1.5854292E12, 2815.9], [1.5854289E12, 580.3999999999994], [1.58542956E12, 2115.3], [1.58542926E12, 3241.8999999999996], [1.58542944E12, 3236.3999999999996], [1.58542914E12, 3054.85], [1.5854295E12, 2650.4000000000005]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58542962E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 2909.0, "series": [{"data": [[2.0, 63.0], [3.0, 58.0], [4.0, 67.5], [5.0, 55.0], [6.0, 48.5], [7.0, 46.0], [8.0, 56.0], [9.0, 56.0], [10.0, 48.5], [11.0, 55.0], [12.0, 51.0], [13.0, 51.0], [14.0, 52.5], [15.0, 2909.0], [16.0, 47.5], [17.0, 58.5], [18.0, 46.5], [19.0, 55.5], [20.0, 52.0], [21.0, 1909.0], [22.0, 1290.5], [23.0, 1098.0], [24.0, 1362.0], [25.0, 1680.0], [26.0, 1759.5], [27.0, 1531.0], [28.0, 1741.0], [29.0, 1518.0], [30.0, 1647.0], [31.0, 1770.0], [32.0, 1735.0], [33.0, 1800.0], [34.0, 1579.0], [35.0, 1643.0], [36.0, 1622.0], [37.0, 1703.5], [39.0, 1548.5], [38.0, 1559.0], [40.0, 1647.0], [41.0, 1543.0], [43.0, 1354.0], [42.0, 1455.0], [45.0, 1423.5], [44.0, 1503.0], [47.0, 1299.5], [46.0, 1474.0], [49.0, 1155.5], [48.0, 1212.0], [51.0, 1308.0], [50.0, 1116.0], [53.0, 716.5], [52.0, 973.0], [55.0, 744.0], [54.0, 1233.5], [56.0, 1040.5], [57.0, 973.0], [59.0, 700.5], [58.0, 618.0], [61.0, 1595.0], [60.0, 63.0], [63.0, 1028.0], [62.0, 678.0], [66.0, 718.0], [64.0, 496.5], [67.0, 528.0], [69.0, 1039.0], [71.0, 1591.0], [72.0, 50.5], [79.0, 26.0], [82.0, 1624.0], [80.0, 1738.0], [81.0, 1079.0], [84.0, 956.5], [89.0, 535.0], [1.0, 58.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 1.0], [34.0, 581.0], [35.0, 401.0], [36.0, 10.0], [37.0, 8.0], [38.0, 629.0], [40.0, 2.0], [41.0, 1.0], [42.0, 12.0], [43.0, 0.0], [44.0, 1918.0], [45.0, 17.0], [47.0, 312.0], [49.0, 12.0], [48.0, 0.0], [50.0, 9.0], [51.0, 1392.0], [53.0, 9.0], [52.0, 8.5], [55.0, 807.0], [57.0, 10.0], [59.0, 111.0], [58.0, 11.0], [60.0, 0.0], [63.0, 152.0], [66.0, 10.0], [71.0, 1902.5], [79.0, 15.5], [82.0, 1097.0], [80.0, 1038.0], [84.0, 2359.0], [89.0, 1346.0], [22.0, 1.5], [25.0, 1617.0], [28.0, 10.5], [30.0, 1441.0], [31.0, 2324.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 89.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 2908.0, "series": [{"data": [[2.0, 62.5], [3.0, 58.0], [4.0, 67.5], [5.0, 54.0], [6.0, 48.5], [7.0, 45.0], [8.0, 55.5], [9.0, 55.0], [10.0, 48.5], [11.0, 55.0], [12.0, 50.5], [13.0, 51.0], [14.0, 51.5], [15.0, 2908.0], [16.0, 47.5], [17.0, 58.0], [18.0, 46.5], [19.0, 55.0], [20.0, 52.0], [21.0, 1909.0], [22.0, 1290.5], [23.0, 1098.0], [24.0, 1361.5], [25.0, 1680.0], [26.0, 1759.5], [27.0, 1531.0], [28.0, 1740.5], [29.0, 1517.5], [30.0, 1647.0], [31.0, 1770.0], [32.0, 1735.0], [33.0, 1800.0], [34.0, 1579.0], [35.0, 1643.0], [36.0, 1622.0], [37.0, 1703.5], [39.0, 1547.5], [38.0, 1559.0], [40.0, 1647.0], [41.0, 1543.0], [43.0, 1353.0], [42.0, 1454.5], [45.0, 1423.0], [44.0, 1503.0], [47.0, 1299.5], [46.0, 1473.5], [49.0, 1155.0], [48.0, 1211.0], [51.0, 1307.5], [50.0, 1116.0], [53.0, 715.5], [52.0, 973.0], [55.0, 744.0], [54.0, 1233.5], [56.0, 1040.5], [57.0, 973.0], [59.0, 700.5], [58.0, 618.0], [61.0, 1595.0], [60.0, 62.0], [63.0, 1028.0], [62.0, 677.5], [66.0, 718.0], [64.0, 496.5], [67.0, 528.0], [69.0, 1038.0], [71.0, 1591.0], [72.0, 50.0], [79.0, 26.0], [82.0, 1623.0], [80.0, 1738.0], [81.0, 1079.0], [84.0, 956.5], [89.0, 534.0], [1.0, 58.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 0.0], [34.0, 581.0], [35.0, 401.0], [36.0, 10.0], [37.0, 8.0], [38.0, 629.0], [40.0, 0.0], [41.0, 0.0], [42.0, 12.0], [43.0, 0.0], [44.0, 1917.0], [45.0, 0.0], [47.0, 312.0], [49.0, 12.0], [48.0, 0.0], [50.0, 8.5], [51.0, 1391.0], [53.0, 9.0], [52.0, 8.0], [55.0, 806.0], [57.0, 10.0], [59.0, 111.0], [58.0, 10.5], [60.0, 0.0], [63.0, 152.0], [66.0, 10.0], [71.0, 1902.5], [79.0, 15.5], [82.0, 1097.0], [80.0, 1036.0], [84.0, 2359.0], [89.0, 1345.5], [22.0, 0.0], [25.0, 1617.0], [28.0, 10.0], [30.0, 1440.0], [31.0, 2323.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 89.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 7.083333333333333, "minX": 1.5854289E12, "maxY": 42.38333333333333, "series": [{"data": [[1.58542938E12, 39.31666666666667], [1.58542908E12, 40.43333333333333], [1.58542896E12, 39.65], [1.58542962E12, 15.916666666666666], [1.58542932E12, 39.766666666666666], [1.58542902E12, 40.13333333333333], [1.5854292E12, 40.36666666666667], [1.5854289E12, 7.083333333333333], [1.58542956E12, 42.38333333333333], [1.58542926E12, 36.56666666666667], [1.58542944E12, 34.7], [1.58542914E12, 37.9], [1.5854295E12, 38.03333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58542962E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5854289E12, "maxY": 41.766666666666666, "series": [{"data": [[1.58542938E12, 39.1], [1.58542908E12, 40.38333333333333], [1.58542896E12, 38.55], [1.58542962E12, 15.866666666666667], [1.58542932E12, 37.75], [1.58542902E12, 36.06666666666667], [1.5854292E12, 38.35], [1.5854289E12, 7.05], [1.58542956E12, 41.766666666666666], [1.58542926E12, 36.0], [1.58542944E12, 35.38333333333333], [1.58542914E12, 35.7], [1.5854295E12, 37.18333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.5854292E12, 2.35], [1.58542956E12, 0.016666666666666666], [1.58542908E12, 0.05], [1.58542926E12, 0.016666666666666666], [1.58542944E12, 0.26666666666666666], [1.58542914E12, 2.3833333333333333], [1.58542932E12, 1.8833333333333333], [1.5854295E12, 0.26666666666666666], [1.58542902E12, 3.95]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.58542956E12, 0.08333333333333333], [1.58542932E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.TruncatedChunkException", "isController": false}, {"data": [[1.58542956E12, 0.3333333333333333], [1.58542962E12, 0.48333333333333334], [1.58542932E12, 0.4166666666666667], [1.5854295E12, 0.21666666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.58542938E12, 0.13333333333333333], [1.58542956E12, 0.16666666666666666], [1.58542932E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58542962E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5854289E12, "maxY": 21.066666666666666, "series": [{"data": [[1.5854289E12, 0.9333333333333333], [1.58542896E12, 1.3166666666666667]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58542938E12, 19.5], [1.58542908E12, 20.05], [1.58542896E12, 18.283333333333335], [1.58542962E12, 7.983333333333333], [1.58542932E12, 18.683333333333334], [1.58542902E12, 17.933333333333334], [1.5854292E12, 19.116666666666667], [1.5854289E12, 2.966666666666667], [1.58542956E12, 21.066666666666666], [1.58542926E12, 18.033333333333335], [1.58542944E12, 17.75], [1.58542914E12, 18.083333333333332], [1.5854295E12, 18.4]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.5854292E12, 1.1666666666666667], [1.58542938E12, 0.1], [1.58542956E12, 0.36666666666666664], [1.58542908E12, 0.016666666666666666], [1.58542926E12, 0.016666666666666666], [1.58542944E12, 0.13333333333333333], [1.58542914E12, 1.0333333333333334], [1.58542962E12, 0.48333333333333334], [1.58542932E12, 1.4166666666666667], [1.5854295E12, 0.2833333333333333], [1.58542902E12, 2.1333333333333333]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58542938E12, 19.6], [1.58542908E12, 20.333333333333332], [1.58542896E12, 18.95], [1.58542962E12, 7.883333333333334], [1.58542932E12, 19.066666666666666], [1.58542902E12, 18.133333333333333], [1.5854292E12, 19.233333333333334], [1.5854289E12, 3.15], [1.58542956E12, 20.7], [1.58542926E12, 17.966666666666665], [1.58542944E12, 17.633333333333333], [1.58542914E12, 17.616666666666667], [1.5854295E12, 18.783333333333335]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.5854292E12, 1.1833333333333333], [1.58542938E12, 0.03333333333333333], [1.58542956E12, 0.23333333333333334], [1.58542908E12, 0.03333333333333333], [1.58542944E12, 0.13333333333333333], [1.58542914E12, 1.35], [1.58542932E12, 0.9666666666666667], [1.5854295E12, 0.2], [1.58542902E12, 1.8166666666666667]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58542962E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5854289E12, "maxY": 41.766666666666666, "series": [{"data": [[1.58542938E12, 39.1], [1.58542908E12, 40.38333333333333], [1.58542896E12, 38.55], [1.58542962E12, 15.866666666666667], [1.58542932E12, 37.75], [1.58542902E12, 36.06666666666667], [1.5854292E12, 38.35], [1.5854289E12, 7.05], [1.58542956E12, 41.766666666666666], [1.58542926E12, 36.0], [1.58542944E12, 35.38333333333333], [1.58542914E12, 35.7], [1.5854295E12, 37.18333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.5854292E12, 2.35], [1.58542938E12, 0.13333333333333333], [1.58542956E12, 0.6], [1.58542908E12, 0.05], [1.58542926E12, 0.016666666666666666], [1.58542944E12, 0.26666666666666666], [1.58542914E12, 2.3833333333333333], [1.58542962E12, 0.48333333333333334], [1.58542932E12, 2.3833333333333333], [1.5854295E12, 0.48333333333333334], [1.58542902E12, 3.95]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58542962E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

