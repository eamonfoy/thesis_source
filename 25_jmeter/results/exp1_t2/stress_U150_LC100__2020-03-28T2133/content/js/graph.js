/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 20008.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 3.0], [29.9, 3.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 3.0], [30.5, 3.0], [30.6, 3.0], [30.7, 3.0], [30.8, 3.0], [30.9, 3.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 6.0], [31.9, 7.0], [32.0, 8.0], [32.1, 9.0], [32.2, 10.0], [32.3, 11.0], [32.4, 13.0], [32.5, 14.0], [32.6, 16.0], [32.7, 17.0], [32.8, 19.0], [32.9, 21.0], [33.0, 27.0], [33.1, 31.0], [33.2, 36.0], [33.3, 39.0], [33.4, 40.0], [33.5, 42.0], [33.6, 43.0], [33.7, 45.0], [33.8, 47.0], [33.9, 48.0], [34.0, 50.0], [34.1, 51.0], [34.2, 53.0], [34.3, 55.0], [34.4, 57.0], [34.5, 60.0], [34.6, 63.0], [34.7, 67.0], [34.8, 72.0], [34.9, 77.0], [35.0, 82.0], [35.1, 86.0], [35.2, 90.0], [35.3, 94.0], [35.4, 99.0], [35.5, 102.0], [35.6, 105.0], [35.7, 109.0], [35.8, 114.0], [35.9, 118.0], [36.0, 122.0], [36.1, 128.0], [36.2, 138.0], [36.3, 145.0], [36.4, 152.0], [36.5, 159.0], [36.6, 168.0], [36.7, 181.0], [36.8, 192.0], [36.9, 205.0], [37.0, 216.0], [37.1, 228.0], [37.2, 241.0], [37.3, 254.0], [37.4, 265.0], [37.5, 277.0], [37.6, 288.0], [37.7, 300.0], [37.8, 311.0], [37.9, 317.0], [38.0, 325.0], [38.1, 334.0], [38.2, 344.0], [38.3, 351.0], [38.4, 362.0], [38.5, 373.0], [38.6, 378.0], [38.7, 385.0], [38.8, 394.0], [38.9, 400.0], [39.0, 405.0], [39.1, 413.0], [39.2, 419.0], [39.3, 424.0], [39.4, 431.0], [39.5, 434.0], [39.6, 441.0], [39.7, 447.0], [39.8, 454.0], [39.9, 460.0], [40.0, 467.0], [40.1, 476.0], [40.2, 489.0], [40.3, 497.0], [40.4, 506.0], [40.5, 515.0], [40.6, 528.0], [40.7, 540.0], [40.8, 550.0], [40.9, 557.0], [41.0, 562.0], [41.1, 569.0], [41.2, 575.0], [41.3, 584.0], [41.4, 587.0], [41.5, 592.0], [41.6, 600.0], [41.7, 609.0], [41.8, 620.0], [41.9, 626.0], [42.0, 630.0], [42.1, 638.0], [42.2, 643.0], [42.3, 649.0], [42.4, 659.0], [42.5, 664.0], [42.6, 668.0], [42.7, 675.0], [42.8, 684.0], [42.9, 692.0], [43.0, 699.0], [43.1, 711.0], [43.2, 719.0], [43.3, 725.0], [43.4, 730.0], [43.5, 738.0], [43.6, 744.0], [43.7, 750.0], [43.8, 755.0], [43.9, 764.0], [44.0, 769.0], [44.1, 775.0], [44.2, 781.0], [44.3, 785.0], [44.4, 790.0], [44.5, 796.0], [44.6, 803.0], [44.7, 807.0], [44.8, 815.0], [44.9, 822.0], [45.0, 830.0], [45.1, 834.0], [45.2, 840.0], [45.3, 845.0], [45.4, 852.0], [45.5, 859.0], [45.6, 862.0], [45.7, 867.0], [45.8, 873.0], [45.9, 878.0], [46.0, 884.0], [46.1, 888.0], [46.2, 891.0], [46.3, 895.0], [46.4, 899.0], [46.5, 904.0], [46.6, 909.0], [46.7, 917.0], [46.8, 921.0], [46.9, 926.0], [47.0, 930.0], [47.1, 934.0], [47.2, 939.0], [47.3, 945.0], [47.4, 949.0], [47.5, 955.0], [47.6, 961.0], [47.7, 965.0], [47.8, 968.0], [47.9, 972.0], [48.0, 977.0], [48.1, 981.0], [48.2, 985.0], [48.3, 989.0], [48.4, 994.0], [48.5, 998.0], [48.6, 1002.0], [48.7, 1009.0], [48.8, 1013.0], [48.9, 1019.0], [49.0, 1022.0], [49.1, 1025.0], [49.2, 1028.0], [49.3, 1033.0], [49.4, 1038.0], [49.5, 1040.0], [49.6, 1042.0], [49.7, 1046.0], [49.8, 1050.0], [49.9, 1054.0], [50.0, 1056.0], [50.1, 1058.0], [50.2, 1062.0], [50.3, 1066.0], [50.4, 1070.0], [50.5, 1074.0], [50.6, 1079.0], [50.7, 1084.0], [50.8, 1087.0], [50.9, 1093.0], [51.0, 1097.0], [51.1, 1101.0], [51.2, 1104.0], [51.3, 1108.0], [51.4, 1111.0], [51.5, 1115.0], [51.6, 1119.0], [51.7, 1122.0], [51.8, 1124.0], [51.9, 1128.0], [52.0, 1131.0], [52.1, 1135.0], [52.2, 1138.0], [52.3, 1142.0], [52.4, 1147.0], [52.5, 1150.0], [52.6, 1154.0], [52.7, 1156.0], [52.8, 1160.0], [52.9, 1163.0], [53.0, 1166.0], [53.1, 1170.0], [53.2, 1173.0], [53.3, 1176.0], [53.4, 1180.0], [53.5, 1184.0], [53.6, 1186.0], [53.7, 1189.0], [53.8, 1191.0], [53.9, 1194.0], [54.0, 1197.0], [54.1, 1200.0], [54.2, 1204.0], [54.3, 1209.0], [54.4, 1211.0], [54.5, 1218.0], [54.6, 1221.0], [54.7, 1225.0], [54.8, 1229.0], [54.9, 1232.0], [55.0, 1236.0], [55.1, 1241.0], [55.2, 1243.0], [55.3, 1248.0], [55.4, 1252.0], [55.5, 1254.0], [55.6, 1260.0], [55.7, 1264.0], [55.8, 1268.0], [55.9, 1272.0], [56.0, 1275.0], [56.1, 1278.0], [56.2, 1282.0], [56.3, 1285.0], [56.4, 1289.0], [56.5, 1294.0], [56.6, 1298.0], [56.7, 1301.0], [56.8, 1304.0], [56.9, 1306.0], [57.0, 1312.0], [57.1, 1316.0], [57.2, 1318.0], [57.3, 1323.0], [57.4, 1325.0], [57.5, 1328.0], [57.6, 1332.0], [57.7, 1336.0], [57.8, 1340.0], [57.9, 1344.0], [58.0, 1349.0], [58.1, 1353.0], [58.2, 1355.0], [58.3, 1359.0], [58.4, 1362.0], [58.5, 1368.0], [58.6, 1371.0], [58.7, 1376.0], [58.8, 1380.0], [58.9, 1386.0], [59.0, 1390.0], [59.1, 1393.0], [59.2, 1397.0], [59.3, 1400.0], [59.4, 1402.0], [59.5, 1405.0], [59.6, 1408.0], [59.7, 1413.0], [59.8, 1417.0], [59.9, 1421.0], [60.0, 1424.0], [60.1, 1427.0], [60.2, 1430.0], [60.3, 1433.0], [60.4, 1437.0], [60.5, 1440.0], [60.6, 1443.0], [60.7, 1445.0], [60.8, 1450.0], [60.9, 1455.0], [61.0, 1458.0], [61.1, 1462.0], [61.2, 1465.0], [61.3, 1468.0], [61.4, 1472.0], [61.5, 1475.0], [61.6, 1479.0], [61.7, 1484.0], [61.8, 1488.0], [61.9, 1493.0], [62.0, 1495.0], [62.1, 1499.0], [62.2, 1504.0], [62.3, 1508.0], [62.4, 1513.0], [62.5, 1517.0], [62.6, 1522.0], [62.7, 1524.0], [62.8, 1527.0], [62.9, 1531.0], [63.0, 1534.0], [63.1, 1537.0], [63.2, 1541.0], [63.3, 1544.0], [63.4, 1548.0], [63.5, 1552.0], [63.6, 1557.0], [63.7, 1561.0], [63.8, 1567.0], [63.9, 1570.0], [64.0, 1573.0], [64.1, 1576.0], [64.2, 1581.0], [64.3, 1585.0], [64.4, 1587.0], [64.5, 1591.0], [64.6, 1598.0], [64.7, 1603.0], [64.8, 1606.0], [64.9, 1609.0], [65.0, 1613.0], [65.1, 1617.0], [65.2, 1620.0], [65.3, 1623.0], [65.4, 1627.0], [65.5, 1631.0], [65.6, 1634.0], [65.7, 1639.0], [65.8, 1643.0], [65.9, 1646.0], [66.0, 1650.0], [66.1, 1654.0], [66.2, 1656.0], [66.3, 1660.0], [66.4, 1663.0], [66.5, 1667.0], [66.6, 1671.0], [66.7, 1673.0], [66.8, 1678.0], [66.9, 1681.0], [67.0, 1685.0], [67.1, 1689.0], [67.2, 1693.0], [67.3, 1699.0], [67.4, 1702.0], [67.5, 1704.0], [67.6, 1707.0], [67.7, 1714.0], [67.8, 1720.0], [67.9, 1724.0], [68.0, 1727.0], [68.1, 1731.0], [68.2, 1736.0], [68.3, 1740.0], [68.4, 1743.0], [68.5, 1748.0], [68.6, 1752.0], [68.7, 1756.0], [68.8, 1760.0], [68.9, 1764.0], [69.0, 1769.0], [69.1, 1774.0], [69.2, 1779.0], [69.3, 1782.0], [69.4, 1788.0], [69.5, 1793.0], [69.6, 1800.0], [69.7, 1804.0], [69.8, 1808.0], [69.9, 1812.0], [70.0, 1816.0], [70.1, 1819.0], [70.2, 1823.0], [70.3, 1828.0], [70.4, 1833.0], [70.5, 1837.0], [70.6, 1841.0], [70.7, 1846.0], [70.8, 1851.0], [70.9, 1855.0], [71.0, 1859.0], [71.1, 1862.0], [71.2, 1868.0], [71.3, 1871.0], [71.4, 1876.0], [71.5, 1880.0], [71.6, 1886.0], [71.7, 1890.0], [71.8, 1893.0], [71.9, 1896.0], [72.0, 1900.0], [72.1, 1906.0], [72.2, 1913.0], [72.3, 1916.0], [72.4, 1921.0], [72.5, 1926.0], [72.6, 1929.0], [72.7, 1934.0], [72.8, 1938.0], [72.9, 1942.0], [73.0, 1946.0], [73.1, 1949.0], [73.2, 1951.0], [73.3, 1957.0], [73.4, 1959.0], [73.5, 1964.0], [73.6, 1969.0], [73.7, 1974.0], [73.8, 1977.0], [73.9, 1982.0], [74.0, 1986.0], [74.1, 1990.0], [74.2, 1993.0], [74.3, 1997.0], [74.4, 2001.0], [74.5, 2005.0], [74.6, 2008.0], [74.7, 2013.0], [74.8, 2017.0], [74.9, 2020.0], [75.0, 2025.0], [75.1, 2028.0], [75.2, 2033.0], [75.3, 2036.0], [75.4, 2040.0], [75.5, 2044.0], [75.6, 2050.0], [75.7, 2055.0], [75.8, 2059.0], [75.9, 2063.0], [76.0, 2066.0], [76.1, 2069.0], [76.2, 2073.0], [76.3, 2077.0], [76.4, 2081.0], [76.5, 2086.0], [76.6, 2091.0], [76.7, 2095.0], [76.8, 2098.0], [76.9, 2105.0], [77.0, 2109.0], [77.1, 2113.0], [77.2, 2117.0], [77.3, 2121.0], [77.4, 2128.0], [77.5, 2132.0], [77.6, 2137.0], [77.7, 2139.0], [77.8, 2141.0], [77.9, 2145.0], [78.0, 2150.0], [78.1, 2154.0], [78.2, 2157.0], [78.3, 2161.0], [78.4, 2166.0], [78.5, 2171.0], [78.6, 2175.0], [78.7, 2179.0], [78.8, 2182.0], [78.9, 2186.0], [79.0, 2191.0], [79.1, 2196.0], [79.2, 2200.0], [79.3, 2202.0], [79.4, 2205.0], [79.5, 2210.0], [79.6, 2214.0], [79.7, 2217.0], [79.8, 2221.0], [79.9, 2226.0], [80.0, 2231.0], [80.1, 2234.0], [80.2, 2238.0], [80.3, 2241.0], [80.4, 2246.0], [80.5, 2249.0], [80.6, 2251.0], [80.7, 2255.0], [80.8, 2258.0], [80.9, 2266.0], [81.0, 2269.0], [81.1, 2273.0], [81.2, 2278.0], [81.3, 2282.0], [81.4, 2286.0], [81.5, 2288.0], [81.6, 2291.0], [81.7, 2295.0], [81.8, 2299.0], [81.9, 2304.0], [82.0, 2308.0], [82.1, 2312.0], [82.2, 2316.0], [82.3, 2319.0], [82.4, 2324.0], [82.5, 2329.0], [82.6, 2332.0], [82.7, 2336.0], [82.8, 2339.0], [82.9, 2342.0], [83.0, 2346.0], [83.1, 2350.0], [83.2, 2355.0], [83.3, 2357.0], [83.4, 2361.0], [83.5, 2365.0], [83.6, 2367.0], [83.7, 2372.0], [83.8, 2374.0], [83.9, 2379.0], [84.0, 2384.0], [84.1, 2389.0], [84.2, 2393.0], [84.3, 2397.0], [84.4, 2400.0], [84.5, 2407.0], [84.6, 2410.0], [84.7, 2414.0], [84.8, 2419.0], [84.9, 2423.0], [85.0, 2426.0], [85.1, 2431.0], [85.2, 2439.0], [85.3, 2443.0], [85.4, 2448.0], [85.5, 2452.0], [85.6, 2456.0], [85.7, 2459.0], [85.8, 2464.0], [85.9, 2468.0], [86.0, 2471.0], [86.1, 2475.0], [86.2, 2480.0], [86.3, 2484.0], [86.4, 2488.0], [86.5, 2492.0], [86.6, 2496.0], [86.7, 2501.0], [86.8, 2505.0], [86.9, 2511.0], [87.0, 2516.0], [87.1, 2520.0], [87.2, 2523.0], [87.3, 2528.0], [87.4, 2532.0], [87.5, 2538.0], [87.6, 2542.0], [87.7, 2545.0], [87.8, 2547.0], [87.9, 2554.0], [88.0, 2559.0], [88.1, 2565.0], [88.2, 2568.0], [88.3, 2573.0], [88.4, 2578.0], [88.5, 2582.0], [88.6, 2589.0], [88.7, 2595.0], [88.8, 2599.0], [88.9, 2606.0], [89.0, 2611.0], [89.1, 2615.0], [89.2, 2619.0], [89.3, 2625.0], [89.4, 2631.0], [89.5, 2634.0], [89.6, 2637.0], [89.7, 2640.0], [89.8, 2646.0], [89.9, 2652.0], [90.0, 2658.0], [90.1, 2661.0], [90.2, 2667.0], [90.3, 2673.0], [90.4, 2678.0], [90.5, 2683.0], [90.6, 2689.0], [90.7, 2695.0], [90.8, 2700.0], [90.9, 2707.0], [91.0, 2713.0], [91.1, 2719.0], [91.2, 2725.0], [91.3, 2729.0], [91.4, 2733.0], [91.5, 2738.0], [91.6, 2747.0], [91.7, 2758.0], [91.8, 2765.0], [91.9, 2770.0], [92.0, 2776.0], [92.1, 2780.0], [92.2, 2785.0], [92.3, 2792.0], [92.4, 2801.0], [92.5, 2810.0], [92.6, 2821.0], [92.7, 2828.0], [92.8, 2839.0], [92.9, 2847.0], [93.0, 2854.0], [93.1, 2862.0], [93.2, 2876.0], [93.3, 2887.0], [93.4, 2899.0], [93.5, 2905.0], [93.6, 2914.0], [93.7, 2921.0], [93.8, 2930.0], [93.9, 2935.0], [94.0, 2948.0], [94.1, 2960.0], [94.2, 2969.0], [94.3, 2982.0], [94.4, 2993.0], [94.5, 3002.0], [94.6, 3016.0], [94.7, 3027.0], [94.8, 3038.0], [94.9, 3049.0], [95.0, 3059.0], [95.1, 3073.0], [95.2, 3081.0], [95.3, 3091.0], [95.4, 3104.0], [95.5, 3110.0], [95.6, 3118.0], [95.7, 3133.0], [95.8, 3144.0], [95.9, 3151.0], [96.0, 3163.0], [96.1, 3179.0], [96.2, 3190.0], [96.3, 3207.0], [96.4, 3222.0], [96.5, 3241.0], [96.6, 3251.0], [96.7, 3268.0], [96.8, 3280.0], [96.9, 3293.0], [97.0, 3315.0], [97.1, 3334.0], [97.2, 3350.0], [97.3, 3369.0], [97.4, 3391.0], [97.5, 3410.0], [97.6, 3433.0], [97.7, 3451.0], [97.8, 3484.0], [97.9, 3510.0], [98.0, 3531.0], [98.1, 3558.0], [98.2, 3581.0], [98.3, 3618.0], [98.4, 3644.0], [98.5, 3676.0], [98.6, 3730.0], [98.7, 3772.0], [98.8, 3806.0], [98.9, 3835.0], [99.0, 3889.0], [99.1, 3933.0], [99.2, 4007.0], [99.3, 4071.0], [99.4, 4161.0], [99.5, 4257.0], [99.6, 4403.0], [99.7, 4518.0], [99.8, 4648.0], [99.9, 4864.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 152.0], [0.1, 152.0], [0.2, 152.0], [0.3, 152.0], [0.4, 152.0], [0.5, 152.0], [0.6, 152.0], [0.7, 156.0], [0.8, 156.0], [0.9, 156.0], [1.0, 156.0], [1.1, 156.0], [1.2, 156.0], [1.3, 156.0], [1.4, 157.0], [1.5, 157.0], [1.6, 157.0], [1.7, 157.0], [1.8, 157.0], [1.9, 157.0], [2.0, 157.0], [2.1, 157.0], [2.2, 157.0], [2.3, 157.0], [2.4, 157.0], [2.5, 157.0], [2.6, 157.0], [2.7, 160.0], [2.8, 160.0], [2.9, 160.0], [3.0, 160.0], [3.1, 160.0], [3.2, 160.0], [3.3, 160.0], [3.4, 161.0], [3.5, 161.0], [3.6, 161.0], [3.7, 161.0], [3.8, 161.0], [3.9, 161.0], [4.0, 161.0], [4.1, 161.0], [4.2, 161.0], [4.3, 161.0], [4.4, 161.0], [4.5, 161.0], [4.6, 161.0], [4.7, 161.0], [4.8, 161.0], [4.9, 161.0], [5.0, 161.0], [5.1, 161.0], [5.2, 161.0], [5.3, 161.0], [5.4, 162.0], [5.5, 162.0], [5.6, 162.0], [5.7, 162.0], [5.8, 162.0], [5.9, 162.0], [6.0, 163.0], [6.1, 163.0], [6.2, 163.0], [6.3, 163.0], [6.4, 163.0], [6.5, 163.0], [6.6, 163.0], [6.7, 163.0], [6.8, 163.0], [6.9, 163.0], [7.0, 163.0], [7.1, 163.0], [7.2, 163.0], [7.3, 163.0], [7.4, 163.0], [7.5, 163.0], [7.6, 163.0], [7.7, 163.0], [7.8, 163.0], [7.9, 163.0], [8.0, 163.0], [8.1, 163.0], [8.2, 163.0], [8.3, 163.0], [8.4, 163.0], [8.5, 163.0], [8.6, 163.0], [8.7, 164.0], [8.8, 164.0], [8.9, 164.0], [9.0, 164.0], [9.1, 164.0], [9.2, 164.0], [9.3, 164.0], [9.4, 164.0], [9.5, 164.0], [9.6, 164.0], [9.7, 164.0], [9.8, 164.0], [9.9, 164.0], [10.0, 164.0], [10.1, 164.0], [10.2, 164.0], [10.3, 164.0], [10.4, 164.0], [10.5, 164.0], [10.6, 164.0], [10.7, 164.0], [10.8, 164.0], [10.9, 164.0], [11.0, 164.0], [11.1, 164.0], [11.2, 164.0], [11.3, 164.0], [11.4, 165.0], [11.5, 165.0], [11.6, 165.0], [11.7, 165.0], [11.8, 165.0], [11.9, 165.0], [12.0, 165.0], [12.1, 165.0], [12.2, 165.0], [12.3, 165.0], [12.4, 165.0], [12.5, 165.0], [12.6, 165.0], [12.7, 165.0], [12.8, 165.0], [12.9, 165.0], [13.0, 165.0], [13.1, 165.0], [13.2, 165.0], [13.3, 165.0], [13.4, 165.0], [13.5, 165.0], [13.6, 165.0], [13.7, 165.0], [13.8, 165.0], [13.9, 165.0], [14.0, 165.0], [14.1, 165.0], [14.2, 165.0], [14.3, 165.0], [14.4, 165.0], [14.5, 165.0], [14.6, 165.0], [14.7, 166.0], [14.8, 166.0], [14.9, 166.0], [15.0, 166.0], [15.1, 166.0], [15.2, 166.0], [15.3, 166.0], [15.4, 166.0], [15.5, 166.0], [15.6, 166.0], [15.7, 166.0], [15.8, 166.0], [15.9, 166.0], [16.0, 167.0], [16.1, 167.0], [16.2, 167.0], [16.3, 167.0], [16.4, 167.0], [16.5, 167.0], [16.6, 167.0], [16.7, 167.0], [16.8, 167.0], [16.9, 167.0], [17.0, 167.0], [17.1, 167.0], [17.2, 167.0], [17.3, 167.0], [17.4, 167.0], [17.5, 167.0], [17.6, 167.0], [17.7, 167.0], [17.8, 167.0], [17.9, 167.0], [18.0, 167.0], [18.1, 167.0], [18.2, 167.0], [18.3, 167.0], [18.4, 167.0], [18.5, 167.0], [18.6, 167.0], [18.7, 167.0], [18.8, 167.0], [18.9, 167.0], [19.0, 167.0], [19.1, 167.0], [19.2, 167.0], [19.3, 167.0], [19.4, 167.0], [19.5, 167.0], [19.6, 167.0], [19.7, 167.0], [19.8, 167.0], [19.9, 167.0], [20.0, 168.0], [20.1, 168.0], [20.2, 168.0], [20.3, 168.0], [20.4, 168.0], [20.5, 168.0], [20.6, 168.0], [20.7, 169.0], [20.8, 169.0], [20.9, 169.0], [21.0, 169.0], [21.1, 169.0], [21.2, 169.0], [21.3, 169.0], [21.4, 169.0], [21.5, 169.0], [21.6, 169.0], [21.7, 169.0], [21.8, 169.0], [21.9, 169.0], [22.0, 169.0], [22.1, 169.0], [22.2, 169.0], [22.3, 169.0], [22.4, 169.0], [22.5, 169.0], [22.6, 169.0], [22.7, 169.0], [22.8, 169.0], [22.9, 169.0], [23.0, 169.0], [23.1, 169.0], [23.2, 169.0], [23.3, 169.0], [23.4, 169.0], [23.5, 169.0], [23.6, 169.0], [23.7, 169.0], [23.8, 169.0], [23.9, 169.0], [24.0, 169.0], [24.1, 169.0], [24.2, 169.0], [24.3, 169.0], [24.4, 169.0], [24.5, 169.0], [24.6, 169.0], [24.7, 170.0], [24.8, 170.0], [24.9, 170.0], [25.0, 170.0], [25.1, 170.0], [25.2, 170.0], [25.3, 170.0], [25.4, 170.0], [25.5, 170.0], [25.6, 170.0], [25.7, 170.0], [25.8, 170.0], [25.9, 170.0], [26.0, 170.0], [26.1, 170.0], [26.2, 170.0], [26.3, 170.0], [26.4, 170.0], [26.5, 170.0], [26.6, 170.0], [26.7, 171.0], [26.8, 171.0], [26.9, 171.0], [27.0, 171.0], [27.1, 171.0], [27.2, 171.0], [27.3, 171.0], [27.4, 171.0], [27.5, 171.0], [27.6, 171.0], [27.7, 171.0], [27.8, 171.0], [27.9, 171.0], [28.0, 171.0], [28.1, 171.0], [28.2, 171.0], [28.3, 171.0], [28.4, 171.0], [28.5, 171.0], [28.6, 171.0], [28.7, 171.0], [28.8, 171.0], [28.9, 171.0], [29.0, 171.0], [29.1, 171.0], [29.2, 171.0], [29.3, 171.0], [29.4, 171.0], [29.5, 171.0], [29.6, 171.0], [29.7, 171.0], [29.8, 171.0], [29.9, 171.0], [30.0, 172.0], [30.1, 172.0], [30.2, 172.0], [30.3, 172.0], [30.4, 172.0], [30.5, 172.0], [30.6, 172.0], [30.7, 172.0], [30.8, 172.0], [30.9, 172.0], [31.0, 172.0], [31.1, 172.0], [31.2, 172.0], [31.3, 172.0], [31.4, 173.0], [31.5, 173.0], [31.6, 173.0], [31.7, 173.0], [31.8, 173.0], [31.9, 173.0], [32.0, 173.0], [32.1, 173.0], [32.2, 173.0], [32.3, 173.0], [32.4, 173.0], [32.5, 173.0], [32.6, 173.0], [32.7, 173.0], [32.8, 173.0], [32.9, 173.0], [33.0, 173.0], [33.1, 173.0], [33.2, 173.0], [33.3, 173.0], [33.4, 173.0], [33.5, 173.0], [33.6, 173.0], [33.7, 173.0], [33.8, 173.0], [33.9, 173.0], [34.0, 174.0], [34.1, 174.0], [34.2, 174.0], [34.3, 174.0], [34.4, 174.0], [34.5, 174.0], [34.6, 174.0], [34.7, 174.0], [34.8, 174.0], [34.9, 174.0], [35.0, 174.0], [35.1, 174.0], [35.2, 174.0], [35.3, 174.0], [35.4, 176.0], [35.5, 176.0], [35.6, 176.0], [35.7, 176.0], [35.8, 176.0], [35.9, 176.0], [36.0, 176.0], [36.1, 176.0], [36.2, 176.0], [36.3, 176.0], [36.4, 176.0], [36.5, 176.0], [36.6, 176.0], [36.7, 176.0], [36.8, 176.0], [36.9, 176.0], [37.0, 176.0], [37.1, 176.0], [37.2, 176.0], [37.3, 176.0], [37.4, 176.0], [37.5, 176.0], [37.6, 176.0], [37.7, 176.0], [37.8, 176.0], [37.9, 176.0], [38.0, 177.0], [38.1, 177.0], [38.2, 177.0], [38.3, 177.0], [38.4, 177.0], [38.5, 177.0], [38.6, 177.0], [38.7, 177.0], [38.8, 177.0], [38.9, 177.0], [39.0, 177.0], [39.1, 177.0], [39.2, 177.0], [39.3, 177.0], [39.4, 178.0], [39.5, 178.0], [39.6, 178.0], [39.7, 178.0], [39.8, 178.0], [39.9, 178.0], [40.0, 178.0], [40.1, 178.0], [40.2, 178.0], [40.3, 178.0], [40.4, 178.0], [40.5, 178.0], [40.6, 178.0], [40.7, 180.0], [40.8, 180.0], [40.9, 180.0], [41.0, 180.0], [41.1, 180.0], [41.2, 180.0], [41.3, 180.0], [41.4, 180.0], [41.5, 180.0], [41.6, 180.0], [41.7, 180.0], [41.8, 180.0], [41.9, 180.0], [42.0, 180.0], [42.1, 181.0], [42.2, 181.0], [42.3, 181.0], [42.4, 181.0], [42.5, 181.0], [42.6, 181.0], [42.7, 182.0], [42.8, 182.0], [42.9, 182.0], [43.0, 182.0], [43.1, 182.0], [43.2, 182.0], [43.3, 182.0], [43.4, 182.0], [43.5, 182.0], [43.6, 182.0], [43.7, 182.0], [43.8, 182.0], [43.9, 182.0], [44.0, 182.0], [44.1, 182.0], [44.2, 182.0], [44.3, 182.0], [44.4, 182.0], [44.5, 182.0], [44.6, 182.0], [44.7, 183.0], [44.8, 183.0], [44.9, 183.0], [45.0, 183.0], [45.1, 183.0], [45.2, 183.0], [45.3, 183.0], [45.4, 183.0], [45.5, 183.0], [45.6, 183.0], [45.7, 183.0], [45.8, 183.0], [45.9, 183.0], [46.0, 183.0], [46.1, 183.0], [46.2, 183.0], [46.3, 183.0], [46.4, 183.0], [46.5, 183.0], [46.6, 183.0], [46.7, 184.0], [46.8, 184.0], [46.9, 184.0], [47.0, 184.0], [47.1, 184.0], [47.2, 184.0], [47.3, 184.0], [47.4, 184.0], [47.5, 184.0], [47.6, 184.0], [47.7, 184.0], [47.8, 184.0], [47.9, 184.0], [48.0, 184.0], [48.1, 185.0], [48.2, 185.0], [48.3, 185.0], [48.4, 185.0], [48.5, 185.0], [48.6, 185.0], [48.7, 186.0], [48.8, 186.0], [48.9, 186.0], [49.0, 186.0], [49.1, 186.0], [49.2, 186.0], [49.3, 186.0], [49.4, 186.0], [49.5, 186.0], [49.6, 186.0], [49.7, 186.0], [49.8, 186.0], [49.9, 186.0], [50.0, 186.0], [50.1, 187.0], [50.2, 187.0], [50.3, 187.0], [50.4, 187.0], [50.5, 187.0], [50.6, 187.0], [50.7, 188.0], [50.8, 188.0], [50.9, 188.0], [51.0, 188.0], [51.1, 188.0], [51.2, 188.0], [51.3, 188.0], [51.4, 188.0], [51.5, 188.0], [51.6, 188.0], [51.7, 188.0], [51.8, 188.0], [51.9, 188.0], [52.0, 188.0], [52.1, 188.0], [52.2, 188.0], [52.3, 188.0], [52.4, 188.0], [52.5, 188.0], [52.6, 188.0], [52.7, 189.0], [52.8, 189.0], [52.9, 189.0], [53.0, 189.0], [53.1, 189.0], [53.2, 189.0], [53.3, 189.0], [53.4, 189.0], [53.5, 189.0], [53.6, 189.0], [53.7, 189.0], [53.8, 189.0], [53.9, 189.0], [54.0, 189.0], [54.1, 190.0], [54.2, 190.0], [54.3, 190.0], [54.4, 190.0], [54.5, 190.0], [54.6, 190.0], [54.7, 190.0], [54.8, 190.0], [54.9, 190.0], [55.0, 190.0], [55.1, 190.0], [55.2, 190.0], [55.3, 190.0], [55.4, 191.0], [55.5, 191.0], [55.6, 191.0], [55.7, 191.0], [55.8, 191.0], [55.9, 191.0], [56.0, 191.0], [56.1, 191.0], [56.2, 191.0], [56.3, 191.0], [56.4, 191.0], [56.5, 191.0], [56.6, 191.0], [56.7, 191.0], [56.8, 191.0], [56.9, 191.0], [57.0, 191.0], [57.1, 191.0], [57.2, 191.0], [57.3, 191.0], [57.4, 193.0], [57.5, 193.0], [57.6, 193.0], [57.7, 193.0], [57.8, 193.0], [57.9, 193.0], [58.0, 193.0], [58.1, 195.0], [58.2, 195.0], [58.3, 195.0], [58.4, 195.0], [58.5, 195.0], [58.6, 195.0], [58.7, 195.0], [58.8, 195.0], [58.9, 195.0], [59.0, 195.0], [59.1, 195.0], [59.2, 195.0], [59.3, 195.0], [59.4, 200.0], [59.5, 200.0], [59.6, 200.0], [59.7, 200.0], [59.8, 200.0], [59.9, 200.0], [60.0, 200.0], [60.1, 200.0], [60.2, 200.0], [60.3, 200.0], [60.4, 200.0], [60.5, 200.0], [60.6, 200.0], [60.7, 200.0], [60.8, 200.0], [60.9, 200.0], [61.0, 200.0], [61.1, 200.0], [61.2, 200.0], [61.3, 200.0], [61.4, 202.0], [61.5, 202.0], [61.6, 202.0], [61.7, 202.0], [61.8, 202.0], [61.9, 202.0], [62.0, 202.0], [62.1, 203.0], [62.2, 203.0], [62.3, 203.0], [62.4, 203.0], [62.5, 203.0], [62.6, 203.0], [62.7, 205.0], [62.8, 205.0], [62.9, 205.0], [63.0, 205.0], [63.1, 205.0], [63.2, 205.0], [63.3, 205.0], [63.4, 205.0], [63.5, 205.0], [63.6, 205.0], [63.7, 205.0], [63.8, 205.0], [63.9, 205.0], [64.0, 205.0], [64.1, 205.0], [64.2, 205.0], [64.3, 205.0], [64.4, 205.0], [64.5, 205.0], [64.6, 205.0], [64.7, 206.0], [64.8, 206.0], [64.9, 206.0], [65.0, 206.0], [65.1, 206.0], [65.2, 206.0], [65.3, 206.0], [65.4, 206.0], [65.5, 206.0], [65.6, 206.0], [65.7, 206.0], [65.8, 206.0], [65.9, 206.0], [66.0, 207.0], [66.1, 207.0], [66.2, 207.0], [66.3, 207.0], [66.4, 207.0], [66.5, 207.0], [66.6, 207.0], [66.7, 207.0], [66.8, 207.0], [66.9, 207.0], [67.0, 207.0], [67.1, 207.0], [67.2, 207.0], [67.3, 207.0], [67.4, 208.0], [67.5, 208.0], [67.6, 208.0], [67.7, 208.0], [67.8, 208.0], [67.9, 208.0], [68.0, 209.0], [68.1, 209.0], [68.2, 209.0], [68.3, 209.0], [68.4, 209.0], [68.5, 209.0], [68.6, 209.0], [68.7, 214.0], [68.8, 214.0], [68.9, 214.0], [69.0, 214.0], [69.1, 214.0], [69.2, 214.0], [69.3, 214.0], [69.4, 215.0], [69.5, 215.0], [69.6, 215.0], [69.7, 215.0], [69.8, 215.0], [69.9, 215.0], [70.0, 215.0], [70.1, 219.0], [70.2, 219.0], [70.3, 219.0], [70.4, 219.0], [70.5, 219.0], [70.6, 219.0], [70.7, 220.0], [70.8, 220.0], [70.9, 220.0], [71.0, 220.0], [71.1, 220.0], [71.2, 220.0], [71.3, 220.0], [71.4, 221.0], [71.5, 221.0], [71.6, 221.0], [71.7, 221.0], [71.8, 221.0], [71.9, 221.0], [72.0, 221.0], [72.1, 221.0], [72.2, 221.0], [72.3, 221.0], [72.4, 221.0], [72.5, 221.0], [72.6, 221.0], [72.7, 232.0], [72.8, 232.0], [72.9, 232.0], [73.0, 232.0], [73.1, 232.0], [73.2, 232.0], [73.3, 232.0], [73.4, 236.0], [73.5, 236.0], [73.6, 236.0], [73.7, 236.0], [73.8, 236.0], [73.9, 236.0], [74.0, 236.0], [74.1, 241.0], [74.2, 241.0], [74.3, 241.0], [74.4, 241.0], [74.5, 241.0], [74.6, 241.0], [74.7, 245.0], [74.8, 245.0], [74.9, 245.0], [75.0, 245.0], [75.1, 245.0], [75.2, 245.0], [75.3, 245.0], [75.4, 249.0], [75.5, 249.0], [75.6, 249.0], [75.7, 249.0], [75.8, 249.0], [75.9, 249.0], [76.0, 249.0], [76.1, 258.0], [76.2, 258.0], [76.3, 258.0], [76.4, 258.0], [76.5, 258.0], [76.6, 258.0], [76.7, 258.0], [76.8, 258.0], [76.9, 258.0], [77.0, 258.0], [77.1, 258.0], [77.2, 258.0], [77.3, 258.0], [77.4, 260.0], [77.5, 260.0], [77.6, 260.0], [77.7, 260.0], [77.8, 260.0], [77.9, 260.0], [78.0, 260.0], [78.1, 266.0], [78.2, 266.0], [78.3, 266.0], [78.4, 266.0], [78.5, 266.0], [78.6, 266.0], [78.7, 278.0], [78.8, 278.0], [78.9, 278.0], [79.0, 278.0], [79.1, 278.0], [79.2, 278.0], [79.3, 278.0], [79.4, 279.0], [79.5, 279.0], [79.6, 279.0], [79.7, 279.0], [79.8, 279.0], [79.9, 279.0], [80.0, 279.0], [80.1, 289.0], [80.2, 289.0], [80.3, 289.0], [80.4, 289.0], [80.5, 289.0], [80.6, 289.0], [80.7, 291.0], [80.8, 291.0], [80.9, 291.0], [81.0, 291.0], [81.1, 291.0], [81.2, 291.0], [81.3, 291.0], [81.4, 303.0], [81.5, 303.0], [81.6, 303.0], [81.7, 303.0], [81.8, 303.0], [81.9, 303.0], [82.0, 303.0], [82.1, 311.0], [82.2, 311.0], [82.3, 311.0], [82.4, 311.0], [82.5, 311.0], [82.6, 311.0], [82.7, 313.0], [82.8, 313.0], [82.9, 313.0], [83.0, 313.0], [83.1, 313.0], [83.2, 313.0], [83.3, 313.0], [83.4, 315.0], [83.5, 315.0], [83.6, 315.0], [83.7, 315.0], [83.8, 315.0], [83.9, 315.0], [84.0, 315.0], [84.1, 326.0], [84.2, 326.0], [84.3, 326.0], [84.4, 326.0], [84.5, 326.0], [84.6, 326.0], [84.7, 327.0], [84.8, 327.0], [84.9, 327.0], [85.0, 327.0], [85.1, 327.0], [85.2, 327.0], [85.3, 327.0], [85.4, 378.0], [85.5, 378.0], [85.6, 378.0], [85.7, 378.0], [85.8, 378.0], [85.9, 378.0], [86.0, 378.0], [86.1, 424.0], [86.2, 424.0], [86.3, 424.0], [86.4, 424.0], [86.5, 424.0], [86.6, 424.0], [86.7, 430.0], [86.8, 430.0], [86.9, 430.0], [87.0, 430.0], [87.1, 430.0], [87.2, 430.0], [87.3, 430.0], [87.4, 451.0], [87.5, 451.0], [87.6, 451.0], [87.7, 451.0], [87.8, 451.0], [87.9, 451.0], [88.0, 451.0], [88.1, 487.0], [88.2, 487.0], [88.3, 487.0], [88.4, 487.0], [88.5, 487.0], [88.6, 487.0], [88.7, 540.0], [88.8, 540.0], [88.9, 540.0], [89.0, 540.0], [89.1, 540.0], [89.2, 540.0], [89.3, 540.0], [89.4, 555.0], [89.5, 555.0], [89.6, 555.0], [89.7, 555.0], [89.8, 555.0], [89.9, 555.0], [90.0, 555.0], [90.1, 557.0], [90.2, 557.0], [90.3, 557.0], [90.4, 557.0], [90.5, 557.0], [90.6, 557.0], [90.7, 584.0], [90.8, 584.0], [90.9, 584.0], [91.0, 584.0], [91.1, 584.0], [91.2, 584.0], [91.3, 584.0], [91.4, 586.0], [91.5, 586.0], [91.6, 586.0], [91.7, 586.0], [91.8, 586.0], [91.9, 586.0], [92.0, 586.0], [92.1, 704.0], [92.2, 704.0], [92.3, 704.0], [92.4, 704.0], [92.5, 704.0], [92.6, 704.0], [92.7, 760.0], [92.8, 760.0], [92.9, 760.0], [93.0, 760.0], [93.1, 760.0], [93.2, 760.0], [93.3, 760.0], [93.4, 782.0], [93.5, 782.0], [93.6, 782.0], [93.7, 782.0], [93.8, 782.0], [93.9, 782.0], [94.0, 782.0], [94.1, 820.0], [94.2, 820.0], [94.3, 820.0], [94.4, 820.0], [94.5, 820.0], [94.6, 820.0], [94.7, 825.0], [94.8, 825.0], [94.9, 825.0], [95.0, 825.0], [95.1, 825.0], [95.2, 825.0], [95.3, 825.0], [95.4, 868.0], [95.5, 868.0], [95.6, 868.0], [95.7, 868.0], [95.8, 868.0], [95.9, 868.0], [96.0, 868.0], [96.1, 877.0], [96.2, 877.0], [96.3, 877.0], [96.4, 877.0], [96.5, 877.0], [96.6, 877.0], [96.7, 923.0], [96.8, 923.0], [96.9, 923.0], [97.0, 923.0], [97.1, 923.0], [97.2, 923.0], [97.3, 923.0], [97.4, 968.0], [97.5, 968.0], [97.6, 968.0], [97.7, 968.0], [97.8, 968.0], [97.9, 968.0], [98.0, 968.0], [98.1, 974.0], [98.2, 974.0], [98.3, 974.0], [98.4, 974.0], [98.5, 974.0], [98.6, 974.0], [98.7, 1070.0], [98.8, 1070.0], [98.9, 1070.0], [99.0, 1070.0], [99.1, 1070.0], [99.2, 1070.0], [99.3, 1070.0], [99.4, 1242.0], [99.5, 1242.0], [99.6, 1242.0], [99.7, 1242.0], [99.8, 1242.0], [99.9, 1242.0], [100.0, 1242.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 5.0], [28.4, 5.0], [28.5, 5.0], [28.6, 6.0], [28.7, 6.0], [28.8, 7.0], [28.9, 9.0], [29.0, 9.0], [29.1, 11.0], [29.2, 13.0], [29.3, 14.0], [29.4, 16.0], [29.5, 17.0], [29.6, 20.0], [29.7, 23.0], [29.8, 27.0], [29.9, 30.0], [30.0, 36.0], [30.1, 39.0], [30.2, 41.0], [30.3, 42.0], [30.4, 44.0], [30.5, 45.0], [30.6, 47.0], [30.7, 48.0], [30.8, 50.0], [30.9, 51.0], [31.0, 53.0], [31.1, 55.0], [31.2, 56.0], [31.3, 59.0], [31.4, 62.0], [31.5, 63.0], [31.6, 66.0], [31.7, 69.0], [31.8, 73.0], [31.9, 78.0], [32.0, 84.0], [32.1, 86.0], [32.2, 90.0], [32.3, 94.0], [32.4, 99.0], [32.5, 103.0], [32.6, 106.0], [32.7, 108.0], [32.8, 113.0], [32.9, 118.0], [33.0, 123.0], [33.1, 126.0], [33.2, 131.0], [33.3, 137.0], [33.4, 142.0], [33.5, 148.0], [33.6, 157.0], [33.7, 166.0], [33.8, 172.0], [33.9, 186.0], [34.0, 197.0], [34.1, 203.0], [34.2, 212.0], [34.3, 226.0], [34.4, 234.0], [34.5, 249.0], [34.6, 259.0], [34.7, 271.0], [34.8, 282.0], [34.9, 295.0], [35.0, 307.0], [35.1, 319.0], [35.2, 329.0], [35.3, 341.0], [35.4, 349.0], [35.5, 361.0], [35.6, 374.0], [35.7, 380.0], [35.8, 392.0], [35.9, 398.0], [36.0, 406.0], [36.1, 414.0], [36.2, 422.0], [36.3, 429.0], [36.4, 436.0], [36.5, 441.0], [36.6, 448.0], [36.7, 454.0], [36.8, 464.0], [36.9, 471.0], [37.0, 478.0], [37.1, 485.0], [37.2, 494.0], [37.3, 501.0], [37.4, 511.0], [37.5, 517.0], [37.6, 525.0], [37.7, 533.0], [37.8, 541.0], [37.9, 547.0], [38.0, 555.0], [38.1, 563.0], [38.2, 571.0], [38.3, 580.0], [38.4, 586.0], [38.5, 593.0], [38.6, 596.0], [38.7, 604.0], [38.8, 610.0], [38.9, 615.0], [39.0, 619.0], [39.1, 628.0], [39.2, 635.0], [39.3, 642.0], [39.4, 650.0], [39.5, 654.0], [39.6, 660.0], [39.7, 663.0], [39.8, 670.0], [39.9, 677.0], [40.0, 680.0], [40.1, 686.0], [40.2, 691.0], [40.3, 699.0], [40.4, 704.0], [40.5, 710.0], [40.6, 714.0], [40.7, 718.0], [40.8, 724.0], [40.9, 728.0], [41.0, 732.0], [41.1, 737.0], [41.2, 740.0], [41.3, 745.0], [41.4, 750.0], [41.5, 755.0], [41.6, 760.0], [41.7, 765.0], [41.8, 768.0], [41.9, 772.0], [42.0, 779.0], [42.1, 785.0], [42.2, 790.0], [42.3, 795.0], [42.4, 799.0], [42.5, 807.0], [42.6, 813.0], [42.7, 819.0], [42.8, 825.0], [42.9, 830.0], [43.0, 836.0], [43.1, 841.0], [43.2, 846.0], [43.3, 852.0], [43.4, 856.0], [43.5, 861.0], [43.6, 867.0], [43.7, 871.0], [43.8, 875.0], [43.9, 881.0], [44.0, 884.0], [44.1, 889.0], [44.2, 894.0], [44.3, 898.0], [44.4, 903.0], [44.5, 907.0], [44.6, 913.0], [44.7, 917.0], [44.8, 924.0], [44.9, 929.0], [45.0, 933.0], [45.1, 937.0], [45.2, 942.0], [45.3, 948.0], [45.4, 953.0], [45.5, 958.0], [45.6, 961.0], [45.7, 964.0], [45.8, 969.0], [45.9, 975.0], [46.0, 978.0], [46.1, 985.0], [46.2, 989.0], [46.3, 993.0], [46.4, 996.0], [46.5, 1001.0], [46.6, 1005.0], [46.7, 1009.0], [46.8, 1013.0], [46.9, 1017.0], [47.0, 1022.0], [47.1, 1024.0], [47.2, 1029.0], [47.3, 1031.0], [47.4, 1034.0], [47.5, 1038.0], [47.6, 1042.0], [47.7, 1046.0], [47.8, 1049.0], [47.9, 1051.0], [48.0, 1056.0], [48.1, 1059.0], [48.2, 1063.0], [48.3, 1066.0], [48.4, 1069.0], [48.5, 1071.0], [48.6, 1074.0], [48.7, 1077.0], [48.8, 1080.0], [48.9, 1083.0], [49.0, 1085.0], [49.1, 1089.0], [49.2, 1098.0], [49.3, 1103.0], [49.4, 1107.0], [49.5, 1109.0], [49.6, 1113.0], [49.7, 1115.0], [49.8, 1118.0], [49.9, 1122.0], [50.0, 1126.0], [50.1, 1128.0], [50.2, 1132.0], [50.3, 1136.0], [50.4, 1140.0], [50.5, 1144.0], [50.6, 1149.0], [50.7, 1153.0], [50.8, 1156.0], [50.9, 1159.0], [51.0, 1162.0], [51.1, 1166.0], [51.2, 1169.0], [51.3, 1172.0], [51.4, 1178.0], [51.5, 1181.0], [51.6, 1185.0], [51.7, 1190.0], [51.8, 1194.0], [51.9, 1197.0], [52.0, 1200.0], [52.1, 1204.0], [52.2, 1208.0], [52.3, 1212.0], [52.4, 1218.0], [52.5, 1220.0], [52.6, 1225.0], [52.7, 1228.0], [52.8, 1231.0], [52.9, 1236.0], [53.0, 1240.0], [53.1, 1243.0], [53.2, 1245.0], [53.3, 1248.0], [53.4, 1254.0], [53.5, 1260.0], [53.6, 1263.0], [53.7, 1267.0], [53.8, 1270.0], [53.9, 1274.0], [54.0, 1279.0], [54.1, 1282.0], [54.2, 1287.0], [54.3, 1289.0], [54.4, 1293.0], [54.5, 1298.0], [54.6, 1301.0], [54.7, 1303.0], [54.8, 1308.0], [54.9, 1311.0], [55.0, 1314.0], [55.1, 1320.0], [55.2, 1322.0], [55.3, 1325.0], [55.4, 1328.0], [55.5, 1331.0], [55.6, 1335.0], [55.7, 1339.0], [55.8, 1342.0], [55.9, 1346.0], [56.0, 1349.0], [56.1, 1351.0], [56.2, 1357.0], [56.3, 1359.0], [56.4, 1362.0], [56.5, 1365.0], [56.6, 1368.0], [56.7, 1373.0], [56.8, 1376.0], [56.9, 1379.0], [57.0, 1383.0], [57.1, 1387.0], [57.2, 1390.0], [57.3, 1393.0], [57.4, 1397.0], [57.5, 1401.0], [57.6, 1403.0], [57.7, 1409.0], [57.8, 1414.0], [57.9, 1418.0], [58.0, 1420.0], [58.1, 1423.0], [58.2, 1429.0], [58.3, 1433.0], [58.4, 1436.0], [58.5, 1440.0], [58.6, 1443.0], [58.7, 1448.0], [58.8, 1451.0], [58.9, 1454.0], [59.0, 1457.0], [59.1, 1459.0], [59.2, 1462.0], [59.3, 1466.0], [59.4, 1471.0], [59.5, 1473.0], [59.6, 1476.0], [59.7, 1480.0], [59.8, 1483.0], [59.9, 1486.0], [60.0, 1489.0], [60.1, 1492.0], [60.2, 1496.0], [60.3, 1500.0], [60.4, 1503.0], [60.5, 1507.0], [60.6, 1513.0], [60.7, 1518.0], [60.8, 1522.0], [60.9, 1525.0], [61.0, 1528.0], [61.1, 1531.0], [61.2, 1535.0], [61.3, 1540.0], [61.4, 1543.0], [61.5, 1546.0], [61.6, 1549.0], [61.7, 1553.0], [61.8, 1556.0], [61.9, 1560.0], [62.0, 1563.0], [62.1, 1566.0], [62.2, 1569.0], [62.3, 1571.0], [62.4, 1574.0], [62.5, 1578.0], [62.6, 1583.0], [62.7, 1586.0], [62.8, 1589.0], [62.9, 1592.0], [63.0, 1596.0], [63.1, 1599.0], [63.2, 1602.0], [63.3, 1608.0], [63.4, 1611.0], [63.5, 1616.0], [63.6, 1619.0], [63.7, 1622.0], [63.8, 1625.0], [63.9, 1629.0], [64.0, 1633.0], [64.1, 1640.0], [64.2, 1644.0], [64.3, 1646.0], [64.4, 1650.0], [64.5, 1653.0], [64.6, 1656.0], [64.7, 1660.0], [64.8, 1664.0], [64.9, 1668.0], [65.0, 1671.0], [65.1, 1675.0], [65.2, 1678.0], [65.3, 1681.0], [65.4, 1683.0], [65.5, 1687.0], [65.6, 1692.0], [65.7, 1696.0], [65.8, 1698.0], [65.9, 1702.0], [66.0, 1708.0], [66.1, 1710.0], [66.2, 1712.0], [66.3, 1715.0], [66.4, 1720.0], [66.5, 1723.0], [66.6, 1727.0], [66.7, 1731.0], [66.8, 1735.0], [66.9, 1738.0], [67.0, 1742.0], [67.1, 1747.0], [67.2, 1751.0], [67.3, 1756.0], [67.4, 1759.0], [67.5, 1762.0], [67.6, 1765.0], [67.7, 1769.0], [67.8, 1773.0], [67.9, 1778.0], [68.0, 1781.0], [68.1, 1784.0], [68.2, 1788.0], [68.3, 1790.0], [68.4, 1793.0], [68.5, 1798.0], [68.6, 1804.0], [68.7, 1807.0], [68.8, 1813.0], [68.9, 1815.0], [69.0, 1819.0], [69.1, 1824.0], [69.2, 1827.0], [69.3, 1829.0], [69.4, 1833.0], [69.5, 1838.0], [69.6, 1842.0], [69.7, 1846.0], [69.8, 1850.0], [69.9, 1855.0], [70.0, 1859.0], [70.1, 1862.0], [70.2, 1866.0], [70.3, 1870.0], [70.4, 1874.0], [70.5, 1877.0], [70.6, 1883.0], [70.7, 1888.0], [70.8, 1891.0], [70.9, 1896.0], [71.0, 1899.0], [71.1, 1903.0], [71.2, 1908.0], [71.3, 1910.0], [71.4, 1913.0], [71.5, 1916.0], [71.6, 1921.0], [71.7, 1925.0], [71.8, 1930.0], [71.9, 1933.0], [72.0, 1936.0], [72.1, 1941.0], [72.2, 1945.0], [72.3, 1947.0], [72.4, 1950.0], [72.5, 1953.0], [72.6, 1957.0], [72.7, 1960.0], [72.8, 1964.0], [72.9, 1967.0], [73.0, 1972.0], [73.1, 1975.0], [73.2, 1978.0], [73.3, 1983.0], [73.4, 1986.0], [73.5, 1991.0], [73.6, 1994.0], [73.7, 1998.0], [73.8, 2003.0], [73.9, 2006.0], [74.0, 2011.0], [74.1, 2016.0], [74.2, 2021.0], [74.3, 2025.0], [74.4, 2028.0], [74.5, 2033.0], [74.6, 2039.0], [74.7, 2043.0], [74.8, 2046.0], [74.9, 2051.0], [75.0, 2054.0], [75.1, 2058.0], [75.2, 2062.0], [75.3, 2067.0], [75.4, 2071.0], [75.5, 2075.0], [75.6, 2078.0], [75.7, 2080.0], [75.8, 2085.0], [75.9, 2091.0], [76.0, 2094.0], [76.1, 2096.0], [76.2, 2099.0], [76.3, 2102.0], [76.4, 2107.0], [76.5, 2112.0], [76.6, 2118.0], [76.7, 2123.0], [76.8, 2126.0], [76.9, 2131.0], [77.0, 2134.0], [77.1, 2138.0], [77.2, 2141.0], [77.3, 2147.0], [77.4, 2150.0], [77.5, 2154.0], [77.6, 2159.0], [77.7, 2163.0], [77.8, 2165.0], [77.9, 2168.0], [78.0, 2173.0], [78.1, 2176.0], [78.2, 2180.0], [78.3, 2183.0], [78.4, 2187.0], [78.5, 2191.0], [78.6, 2194.0], [78.7, 2198.0], [78.8, 2201.0], [78.9, 2205.0], [79.0, 2211.0], [79.1, 2216.0], [79.2, 2219.0], [79.3, 2223.0], [79.4, 2228.0], [79.5, 2233.0], [79.6, 2236.0], [79.7, 2241.0], [79.8, 2243.0], [79.9, 2247.0], [80.0, 2250.0], [80.1, 2254.0], [80.2, 2258.0], [80.3, 2261.0], [80.4, 2267.0], [80.5, 2271.0], [80.6, 2275.0], [80.7, 2277.0], [80.8, 2280.0], [80.9, 2286.0], [81.0, 2289.0], [81.1, 2292.0], [81.2, 2295.0], [81.3, 2298.0], [81.4, 2302.0], [81.5, 2307.0], [81.6, 2311.0], [81.7, 2314.0], [81.8, 2319.0], [81.9, 2324.0], [82.0, 2326.0], [82.1, 2331.0], [82.2, 2335.0], [82.3, 2341.0], [82.4, 2346.0], [82.5, 2352.0], [82.6, 2355.0], [82.7, 2360.0], [82.8, 2365.0], [82.9, 2369.0], [83.0, 2371.0], [83.1, 2376.0], [83.2, 2379.0], [83.3, 2384.0], [83.4, 2387.0], [83.5, 2391.0], [83.6, 2395.0], [83.7, 2399.0], [83.8, 2402.0], [83.9, 2407.0], [84.0, 2411.0], [84.1, 2415.0], [84.2, 2418.0], [84.3, 2421.0], [84.4, 2425.0], [84.5, 2430.0], [84.6, 2436.0], [84.7, 2439.0], [84.8, 2445.0], [84.9, 2449.0], [85.0, 2452.0], [85.1, 2455.0], [85.2, 2460.0], [85.3, 2463.0], [85.4, 2469.0], [85.5, 2472.0], [85.6, 2476.0], [85.7, 2480.0], [85.8, 2485.0], [85.9, 2488.0], [86.0, 2493.0], [86.1, 2497.0], [86.2, 2503.0], [86.3, 2507.0], [86.4, 2512.0], [86.5, 2516.0], [86.6, 2521.0], [86.7, 2526.0], [86.8, 2531.0], [86.9, 2536.0], [87.0, 2540.0], [87.1, 2543.0], [87.2, 2546.0], [87.3, 2552.0], [87.4, 2558.0], [87.5, 2561.0], [87.6, 2565.0], [87.7, 2571.0], [87.8, 2578.0], [87.9, 2587.0], [88.0, 2592.0], [88.1, 2601.0], [88.2, 2608.0], [88.3, 2611.0], [88.4, 2615.0], [88.5, 2623.0], [88.6, 2630.0], [88.7, 2635.0], [88.8, 2644.0], [88.9, 2649.0], [89.0, 2656.0], [89.1, 2661.0], [89.2, 2666.0], [89.3, 2672.0], [89.4, 2678.0], [89.5, 2684.0], [89.6, 2689.0], [89.7, 2694.0], [89.8, 2699.0], [89.9, 2706.0], [90.0, 2711.0], [90.1, 2717.0], [90.2, 2724.0], [90.3, 2732.0], [90.4, 2741.0], [90.5, 2750.0], [90.6, 2763.0], [90.7, 2771.0], [90.8, 2783.0], [90.9, 2790.0], [91.0, 2802.0], [91.1, 2814.0], [91.2, 2820.0], [91.3, 2827.0], [91.4, 2839.0], [91.5, 2850.0], [91.6, 2856.0], [91.7, 2864.0], [91.8, 2877.0], [91.9, 2890.0], [92.0, 2900.0], [92.1, 2910.0], [92.2, 2924.0], [92.3, 2935.0], [92.4, 2950.0], [92.5, 2966.0], [92.6, 2980.0], [92.7, 2995.0], [92.8, 3005.0], [92.9, 3012.0], [93.0, 3026.0], [93.1, 3035.0], [93.2, 3047.0], [93.3, 3063.0], [93.4, 3072.0], [93.5, 3083.0], [93.6, 3098.0], [93.7, 3115.0], [93.8, 3130.0], [93.9, 3144.0], [94.0, 3154.0], [94.1, 3171.0], [94.2, 3186.0], [94.3, 3196.0], [94.4, 3208.0], [94.5, 3219.0], [94.6, 3232.0], [94.7, 3251.0], [94.8, 3263.0], [94.9, 3283.0], [95.0, 3301.0], [95.1, 3322.0], [95.2, 3345.0], [95.3, 3364.0], [95.4, 3381.0], [95.5, 3395.0], [95.6, 3405.0], [95.7, 3427.0], [95.8, 3450.0], [95.9, 3481.0], [96.0, 3507.0], [96.1, 3534.0], [96.2, 3573.0], [96.3, 3607.0], [96.4, 3640.0], [96.5, 3667.0], [96.6, 3702.0], [96.7, 3729.0], [96.8, 3758.0], [96.9, 3789.0], [97.0, 3822.0], [97.1, 3868.0], [97.2, 3908.0], [97.3, 3938.0], [97.4, 4004.0], [97.5, 4084.0], [97.6, 4184.0], [97.7, 4322.0], [97.8, 4441.0], [97.9, 4530.0], [98.0, 5148.0], [98.1, 7202.0], [98.2, 7924.0], [98.3, 8153.0], [98.4, 8272.0], [98.5, 8515.0], [98.6, 8635.0], [98.7, 8792.0], [98.8, 8887.0], [98.9, 9922.0], [99.0, 12004.0], [99.1, 12007.0], [99.2, 16006.0], [99.3, 16007.0], [99.4, 20005.0], [99.5, 20005.0], [99.6, 20005.0], [99.7, 20005.0], [99.8, 20006.0], [99.9, 20006.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5315.0, "series": [{"data": [[0.0, 5315.0], [600.0, 212.0], [700.0, 230.0], [800.0, 279.0], [900.0, 321.0], [1000.0, 378.0], [1100.0, 452.0], [1200.0, 386.0], [1300.0, 397.0], [1400.0, 421.0], [1500.0, 378.0], [1600.0, 404.0], [1700.0, 341.0], [1800.0, 361.0], [1900.0, 359.0], [2000.0, 365.0], [2100.0, 356.0], [2200.0, 394.0], [2300.0, 385.0], [2400.0, 343.0], [2500.0, 321.0], [2600.0, 297.0], [2700.0, 237.0], [2800.0, 157.0], [2900.0, 156.0], [3000.0, 134.0], [3100.0, 137.0], [3200.0, 99.0], [3300.0, 79.0], [3400.0, 60.0], [3500.0, 58.0], [3600.0, 46.0], [3700.0, 35.0], [3800.0, 38.0], [3900.0, 23.0], [4000.0, 21.0], [4300.0, 8.0], [4200.0, 14.0], [4100.0, 19.0], [4400.0, 15.0], [4600.0, 10.0], [4500.0, 11.0], [4800.0, 6.0], [4700.0, 5.0], [4900.0, 3.0], [5100.0, 2.0], [5000.0, 1.0], [5400.0, 2.0], [5900.0, 1.0], [6000.0, 1.0], [6800.0, 1.0], [7000.0, 1.0], [9000.0, 1.0], [100.0, 212.0], [200.0, 127.0], [300.0, 180.0], [400.0, 216.0], [500.0, 189.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1200.0, 1.0], [300.0, 7.0], [700.0, 3.0], [100.0, 89.0], [200.0, 33.0], [400.0, 4.0], [800.0, 4.0], [900.0, 3.0], [500.0, 5.0], [1000.0, 1.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 4863.0], [600.0, 253.0], [700.0, 316.0], [800.0, 287.0], [900.0, 321.0], [1000.0, 413.0], [1100.0, 415.0], [1200.0, 386.0], [1300.0, 432.0], [1400.0, 426.0], [1500.0, 424.0], [1600.0, 406.0], [1700.0, 407.0], [1800.0, 375.0], [1900.0, 403.0], [2000.0, 373.0], [2100.0, 381.0], [2200.0, 390.0], [2300.0, 355.0], [2400.0, 367.0], [2500.0, 291.0], [2600.0, 257.0], [2800.0, 153.0], [2700.0, 174.0], [2900.0, 115.0], [3000.0, 128.0], [3100.0, 107.0], [3200.0, 101.0], [3300.0, 86.0], [3400.0, 60.0], [3500.0, 47.0], [3700.0, 49.0], [3600.0, 48.0], [3800.0, 38.0], [3900.0, 33.0], [4000.0, 18.0], [4100.0, 14.0], [4300.0, 12.0], [4200.0, 12.0], [4400.0, 16.0], [4500.0, 8.0], [4600.0, 3.0], [4700.0, 1.0], [4800.0, 2.0], [5000.0, 2.0], [4900.0, 2.0], [5100.0, 2.0], [5200.0, 1.0], [5400.0, 2.0], [5600.0, 2.0], [5500.0, 1.0], [5900.0, 2.0], [7100.0, 5.0], [7200.0, 2.0], [7400.0, 3.0], [7600.0, 6.0], [7500.0, 1.0], [7900.0, 9.0], [7700.0, 1.0], [7800.0, 2.0], [8100.0, 8.0], [8000.0, 4.0], [8200.0, 13.0], [8300.0, 9.0], [8600.0, 18.0], [8500.0, 8.0], [8400.0, 2.0], [8700.0, 6.0], [8800.0, 14.0], [8900.0, 3.0], [9000.0, 4.0], [9100.0, 1.0], [9600.0, 2.0], [9700.0, 1.0], [9500.0, 1.0], [9800.0, 1.0], [9900.0, 10.0], [10000.0, 5.0], [10600.0, 1.0], [12000.0, 17.0], [16000.0, 34.0], [20000.0, 99.0], [100.0, 243.0], [200.0, 133.0], [300.0, 149.0], [400.0, 205.0], [500.0, 200.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 20000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3210.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 11310.0, "series": [{"data": [[0.0, 3210.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 6625.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 11310.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 9005.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 55.522588522588464, "minX": 1.58543118E12, "maxY": 150.0, "series": [{"data": [[1.58543142E12, 150.0], [1.58543124E12, 135.69243421052585], [1.58543172E12, 150.0], [1.58543154E12, 150.0], [1.58543136E12, 150.0], [1.58543184E12, 99.64711403097124], [1.58543166E12, 150.0], [1.58543118E12, 55.522588522588464], [1.58543148E12, 150.0], [1.5854313E12, 150.0], [1.58543178E12, 149.7359397867447], [1.5854316E12, 150.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543184E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 1612.1952025167116, "series": [{"data": [[2.0, 107.0], [5.0, 2.0], [7.0, 1.0], [8.0, 1.0], [9.0, 1.2], [10.0, 32.0], [11.0, 33.2], [12.0, 50.0], [13.0, 22.0], [14.0, 30.5], [15.0, 1.25], [16.0, 24.199999999999996], [17.0, 57.74999999999999], [18.0, 18.0], [19.0, 91.0], [20.0, 44.0], [21.0, 113.6], [22.0, 36.5], [23.0, 99.25], [24.0, 1.25], [25.0, 73.6], [26.0, 33.5], [27.0, 55.8], [28.0, 102.0], [29.0, 57.0], [30.0, 87.66666666666669], [32.0, 86.0], [33.0, 23.857142857142858], [34.0, 31.615384615384613], [35.0, 70.75], [36.0, 93.6], [37.0, 16.0], [38.0, 33.714285714285715], [39.0, 54.25], [40.0, 43.99999999999999], [41.0, 9.8], [42.0, 109.0], [43.0, 84.33333333333334], [44.0, 81.5], [45.0, 48.888888888888886], [46.0, 51.33333333333333], [47.0, 28.409090909090914], [48.0, 97.8], [49.0, 63.0], [50.0, 120.33333333333334], [51.0, 40.66666666666666], [52.0, 46.25], [53.0, 80.0], [54.0, 10.291666666666666], [55.0, 66.57142857142858], [56.0, 79.375], [57.0, 13.7], [58.0, 76.25], [59.0, 33.81481481481481], [60.0, 57.199999999999996], [61.0, 30.846153846153847], [62.0, 132.5], [63.0, 88.125], [64.0, 61.76923076923077], [65.0, 182.20000000000005], [66.0, 26.705882352941185], [67.0, 37.49999999999999], [68.0, 28.250000000000007], [69.0, 40.25], [70.0, 25.222222222222225], [71.0, 14.833333333333332], [72.0, 15.75], [73.0, 26.812499999999996], [74.0, 39.666666666666664], [75.0, 41.25], [76.0, 105.4], [77.0, 334.47058823529414], [78.0, 35.93749999999999], [79.0, 16.77777777777778], [80.0, 36.285714285714285], [81.0, 32.6], [82.0, 17.48], [83.0, 28.941176470588232], [84.0, 43.64285714285714], [85.0, 35.25], [86.0, 19.130434782608695], [87.0, 49.28571428571428], [88.0, 326.8], [89.0, 82.77999999999997], [90.0, 151.74074074074076], [91.0, 450.25], [92.0, 227.15384615384613], [93.0, 48.00000000000001], [94.0, 31.499999999999996], [95.0, 46.69999999999999], [96.0, 157.6], [97.0, 401.5454545454545], [98.0, 322.0], [99.0, 229.8], [100.0, 202.11764705882362], [101.0, 222.5], [102.0, 275.83333333333337], [103.0, 198.2857142857143], [104.0, 322.2], [105.0, 123.39130434782612], [106.0, 1015.3333333333334], [107.0, 914.7272727272726], [108.0, 164.35], [109.0, 775.6666666666665], [110.0, 99.08108108108108], [111.0, 101.62068965517243], [112.0, 339.375], [113.0, 111.82758620689656], [114.0, 100.30555555555551], [115.0, 186.88709677419365], [116.0, 418.2857142857142], [117.0, 602.0], [118.0, 723.5], [119.0, 967.4166666666664], [120.0, 975.9999999999999], [121.0, 120.07692307692305], [122.0, 596.7333333333331], [123.0, 899.5], [124.0, 383.41379310344837], [125.0, 202.0], [126.0, 188.6190476190476], [127.0, 1026.7857142857144], [128.0, 527.9375], [129.0, 1348.6666666666667], [130.0, 372.88571428571436], [131.0, 403.78571428571416], [132.0, 1055.0], [133.0, 306.24999999999994], [134.0, 947.8181818181818], [135.0, 853.4999999999999], [136.0, 1242.5], [137.0, 633.1739130434781], [138.0, 791.090909090909], [139.0, 226.17307692307676], [140.0, 753.75], [141.0, 727.1250000000001], [142.0, 564.9444444444446], [143.0, 667.1428571428573], [144.0, 763.3636363636363], [145.0, 151.1176470588236], [146.0, 247.0645161290323], [147.0, 334.32258064516117], [148.0, 86.29113924050627], [149.0, 40.78980891719743], [150.0, 1313.6945208710085], [1.0, 59.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[143.02633333333353, 1146.778933333334]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[4.0, 1082.5], [5.0, 765.5], [6.0, 471.0], [7.0, 278.0], [8.0, 157.0], [9.0, 164.0], [10.0, 206.0], [11.0, 195.0], [12.0, 177.0], [13.0, 186.0], [14.0, 200.0], [15.0, 165.0], [16.0, 260.0], [18.0, 443.0], [19.0, 178.0], [20.0, 167.0], [21.0, 169.0], [22.0, 161.0], [23.0, 168.0], [24.0, 169.0], [25.0, 315.0], [26.0, 164.0], [27.0, 176.0], [28.0, 164.0], [29.0, 180.0], [30.0, 171.0], [31.0, 173.0], [32.0, 185.0], [33.0, 161.0], [34.0, 187.0], [35.0, 169.0], [36.0, 191.0], [37.0, 161.0], [38.0, 207.0], [39.0, 200.0], [40.0, 188.0], [41.0, 157.0], [42.0, 166.0], [43.0, 169.0], [44.0, 165.0], [45.0, 186.0], [46.0, 171.0], [47.0, 170.0], [48.0, 215.0], [49.0, 209.0], [50.0, 173.0], [51.0, 289.0], [52.0, 176.0], [53.0, 183.0], [54.0, 206.0], [55.0, 258.0], [56.0, 184.0], [57.0, 176.0], [58.0, 189.0], [59.0, 172.0], [60.0, 203.0], [61.0, 163.0], [62.0, 181.0], [63.0, 170.0], [64.0, 189.0], [65.0, 171.0], [66.0, 183.0], [67.0, 173.0], [68.0, 165.0], [69.0, 182.0], [70.0, 163.0], [71.0, 156.0], [72.0, 178.0], [73.0, 291.0], [74.0, 167.0], [75.0, 169.0], [76.0, 221.0], [77.0, 303.0], [78.0, 165.0], [79.0, 184.0], [81.0, 353.5], [82.0, 167.0], [83.0, 190.0], [84.0, 169.0], [85.0, 258.0], [86.0, 170.0], [87.0, 172.0], [88.0, 171.0], [89.0, 188.0], [90.0, 221.0], [91.0, 190.0], [92.0, 205.0], [93.0, 200.0], [94.0, 165.0], [95.0, 311.0], [96.0, 232.0], [97.0, 152.0], [98.0, 207.0], [99.0, 166.0], [100.0, 205.0], [101.0, 208.0], [102.0, 191.0], [103.0, 191.0], [104.0, 241.0], [105.0, 173.0], [106.0, 205.0], [107.0, 174.0], [108.0, 193.0], [109.0, 183.0], [110.0, 160.0], [111.0, 163.0], [112.0, 202.0], [113.0, 167.0], [114.0, 177.0], [115.0, 326.0], [116.0, 219.0], [117.0, 164.0], [118.0, 279.0], [119.0, 180.0], [120.0, 163.0], [121.0, 245.0], [122.0, 195.0], [123.0, 174.0], [124.0, 162.0], [125.0, 327.0], [126.0, 171.0], [127.0, 266.0], [129.0, 417.5], [130.0, 176.0], [133.0, 599.0], [134.0, 825.0], [135.0, 555.0], [136.0, 584.0], [137.0, 167.0], [138.0, 877.0], [139.0, 167.0], [140.0, 868.0], [141.0, 188.0], [142.0, 547.5], [144.0, 430.0], [145.0, 451.0], [146.0, 540.0], [147.0, 424.0], [148.0, 214.0], [149.0, 968.0], [150.0, 653.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[75.70666666666665, 271.46666666666664]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[2.0, 1245.0], [3.0, 1.0], [7.0, 55.0], [8.0, 37.33333333333333], [9.0, 11.874999999999998], [10.0, 21.0], [11.0, 41.0], [12.0, 20.0], [13.0, 43.0], [14.0, 48.0], [15.0, 75.0], [16.0, 53.33333333333333], [17.0, 38.857142857142854], [18.0, 98.66666666666667], [19.0, 74.0], [21.0, 54.0], [22.0, 19.6], [23.0, 69.0], [24.0, 59.333333333333336], [25.0, 117.0], [26.0, 115.8], [27.0, 60.333333333333336], [28.0, 1.0], [29.0, 45.37499999999999], [30.0, 89.2], [31.0, 106.0], [32.0, 104.16666666666667], [33.0, 27.53846153846154], [34.0, 15.272727272727275], [35.0, 37.0], [36.0, 119.5], [37.0, 53.0], [38.0, 66.25], [39.0, 92.0], [40.0, 54.8], [41.0, 78.66666666666667], [42.0, 96.0], [43.0, 52.0], [44.0, 38.666666666666664], [45.0, 45.125], [46.0, 95.39999999999999], [47.0, 14.105263157894736], [48.0, 83.83333333333334], [49.0, 42.470588235294116], [50.0, 82.6], [51.0, 76.2], [52.0, 76.75], [53.0, 79.33333333333333], [54.0, 28.166666666666664], [55.0, 96.6], [56.0, 106.63636363636363], [57.0, 27.57142857142857], [58.0, 45.333333333333336], [59.0, 34.77777777777778], [60.0, 73.5], [61.0, 34.823529411764696], [62.0, 138.0], [63.0, 92.4], [64.0, 66.41176470588235], [65.0, 238.63636363636368], [66.0, 64.29411764705883], [67.0, 42.44444444444444], [68.0, 27.500000000000004], [69.0, 30.333333333333332], [70.0, 26.846153846153847], [71.0, 12.125], [72.0, 16.53333333333333], [73.0, 33.92307692307693], [74.0, 41.22222222222222], [75.0, 59.63636363636364], [76.0, 206.39999999999995], [77.0, 255.00000000000003], [78.0, 28.916666666666664], [79.0, 22.937500000000004], [80.0, 41.733333333333334], [81.0, 44.333333333333336], [82.0, 13.6], [83.0, 32.733333333333334], [84.0, 41.57692307692307], [85.0, 53.111111111111114], [86.0, 19.249999999999996], [87.0, 56.6], [88.0, 383.3333333333333], [89.0, 75.24324324324324], [90.0, 192.2258064516129], [91.0, 376.54545454545456], [92.0, 317.7333333333333], [93.0, 36.27272727272727], [94.0, 22.5], [95.0, 37.0], [96.0, 140.4], [97.0, 298.85714285714283], [98.0, 424.72727272727275], [99.0, 359.52941176470597], [100.0, 500.73333333333323], [101.0, 367.8571428571429], [102.0, 314.49999999999994], [103.0, 376.6190476190477], [104.0, 125.42105263157896], [105.0, 160.45000000000002], [106.0, 1127.857142857143], [107.0, 1192.6], [108.0, 137.07894736842107], [109.0, 859.8333333333331], [110.0, 251.29032258064512], [111.0, 217.71698113207555], [112.0, 296.05], [113.0, 161.45454545454547], [114.0, 304.14814814814815], [115.0, 134.0727272727273], [116.0, 385.4761904761905], [117.0, 553.4000000000001], [118.0, 436.4375], [119.0, 663.9411764705883], [120.0, 580.625], [121.0, 227.36363636363632], [122.0, 505.58333333333337], [123.0, 797.7], [124.0, 253.3333333333332], [125.0, 247.96296296296302], [126.0, 355.5909090909091], [127.0, 610.4166666666666], [128.0, 249.4210526315789], [129.0, 1205.090909090909], [130.0, 227.95918367346945], [131.0, 292.7692307692307], [132.0, 1408.9285714285713], [133.0, 895.6875], [134.0, 940.923076923077], [135.0, 648.1666666666665], [136.0, 1162.6666666666667], [137.0, 620.0666666666667], [138.0, 908.8888888888888], [139.0, 287.01886792452825], [140.0, 528.4545454545454], [141.0, 941.9999999999998], [142.0, 446.15909090909093], [143.0, 757.142857142857], [144.0, 483.7], [145.0, 238.0208333333333], [146.0, 242.6086956521737], [147.0, 222.92307692307696], [148.0, 71.53289473684211], [149.0, 61.645569620253184], [150.0, 1612.1952025167116]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[143.0007333333328, 1400.8558666666563]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 150.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.58543118E12, "maxY": 313608.85, "series": [{"data": [[1.58543142E12, 267899.7], [1.58543124E12, 274600.7833333333], [1.58543172E12, 141941.25], [1.58543154E12, 313608.85], [1.58543136E12, 293629.11666666664], [1.58543184E12, 73593.7], [1.58543166E12, 260733.08333333334], [1.58543118E12, 88953.28333333334], [1.58543148E12, 271296.7], [1.5854313E12, 271328.95], [1.58543178E12, 164614.91666666666], [1.5854316E12, 239197.53333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58543142E12, 17346.466666666667], [1.58543124E12, 17167.166666666668], [1.58543172E12, 7765.1], [1.58543154E12, 19840.666666666668], [1.58543136E12, 17710.7], [1.58543184E12, 21.466666666666665], [1.58543166E12, 15729.5], [1.58543118E12, 5573.966666666666], [1.58543148E12, 18281.2], [1.5854313E12, 17938.5], [1.58543178E12, 0.0], [1.5854316E12, 16294.266666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543184E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.0799497697781522, "minX": 1.58543118E12, "maxY": 2934.9676375404492, "series": [{"data": [[1.58543142E12, 1875.7804878048803], [1.58543124E12, 1516.1122536418175], [1.58543172E12, 750.6067687348915], [1.58543154E12, 1315.544880785413], [1.58543136E12, 1701.8658634538165], [1.58543184E12, 2.333941605839417], [1.58543166E12, 2346.9271889400966], [1.58543118E12, 95.76487252124639], [1.58543148E12, 1466.019379844961], [1.5854313E12, 1566.6977466977462], [1.58543178E12, 1.0864661654135364], [1.5854316E12, 1438.4426644182124]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58543124E12, 311.81818181818176], [1.58543118E12, 239.7619047619047]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58543142E12, 1904.642140468226], [1.58543124E12, 1457.271059216013], [1.58543172E12, 2934.9676375404492], [1.58543154E12, 1328.4514528703062], [1.58543136E12, 1745.4967637540447], [1.58543184E12, 2.5594202898550718], [1.58543166E12, 2732.883408071747], [1.58543118E12, 99.52094240837694], [1.58543148E12, 1514.2290419161689], [1.5854313E12, 1651.9892884468252], [1.58543178E12, 1.0799497697781522], [1.5854316E12, 1775.084628670119]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543184E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58543118E12, "maxY": 2732.372197309419, "series": [{"data": [[1.58543142E12, 1875.3170731707344], [1.58543124E12, 1515.7772065124257], [1.58543172E12, 749.7316680096704], [1.58543154E12, 1315.0084151472645], [1.58543136E12, 1701.4473895582332], [1.58543184E12, 0.14872262773722628], [1.58543166E12, 2346.426728110598], [1.58543118E12, 95.55524079320111], [1.58543148E12, 1465.6922480620149], [1.5854313E12, 1566.4459984459972], [1.58543178E12, 0.0], [1.5854316E12, 1437.831365935919]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58543124E12, 311.4545454545454], [1.58543118E12, 239.21428571428575]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58543142E12, 1904.1964882943141], [1.58543124E12, 1456.9482902418679], [1.58543172E12, 726.5420711974118], [1.58543154E12, 1325.942593905032], [1.58543136E12, 1745.0679611650476], [1.58543184E12, 1.1990338164251209], [1.58543166E12, 2732.372197309419], [1.58543118E12, 99.28272251308898], [1.58543148E12, 1513.8203592814382], [1.5854313E12, 1649.3175210405498], [1.58543178E12, 0.0], [1.5854316E12, 1774.101036269428]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543184E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.26912181303116134, "minX": 1.58543118E12, "maxY": 1.6715328467153294, "series": [{"data": [[1.58543142E12, 0.5642276422764234], [1.58543124E12, 0.6161096829477294], [1.58543172E12, 0.6680096696212735], [1.58543154E12, 0.538569424964937], [1.58543136E12, 0.6120481927710842], [1.58543184E12, 1.6715328467153294], [1.58543166E12, 0.8903225806451611], [1.58543118E12, 0.26912181303116134], [1.58543148E12, 0.4457364341085268], [1.5854313E12, 0.6324786324786328], [1.58543178E12, 0.545948203842942], [1.5854316E12, 0.451096121416526]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58543124E12, 0.8636363636363639], [1.58543118E12, 1.2619047619047623]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58543142E12, 0.6070234113712368], [1.58543124E12, 1.1351125938281885], [1.58543172E12, 0.5550161812297737], [1.58543154E12, 0.6399716513111267], [1.58543136E12, 0.6448220064724925], [1.58543184E12, 0.8444444444444443], [1.58543166E12, 0.7363228699551583], [1.58543118E12, 0.7984293193717277], [1.58543148E12, 0.6077844311377258], [1.5854313E12, 1.0918133129303769], [1.58543178E12, 0.5391377145249057], [1.5854316E12, 0.6131260794473236]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543184E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.58543118E12, "maxY": 10631.0, "series": [{"data": [[1.58543142E12, 5402.0], [1.58543124E12, 4856.0], [1.58543172E12, 3404.0], [1.58543154E12, 5019.0], [1.58543136E12, 4718.0], [1.58543184E12, 1245.0], [1.58543166E12, 10631.0], [1.58543118E12, 1242.0], [1.58543148E12, 6068.0], [1.5854313E12, 5014.0], [1.5854316E12, 8876.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58543142E12, 15.0], [1.58543124E12, 34.0], [1.58543172E12, 1.0], [1.58543154E12, 2.0], [1.58543136E12, 172.0], [1.58543184E12, 59.0], [1.58543166E12, 578.0], [1.58543118E12, 30.0], [1.58543148E12, 2.0], [1.5854313E12, 1.0], [1.5854316E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58543142E12, 3397.8], [1.58543124E12, 2890.2], [1.58543172E12, 2696.5], [1.58543154E12, 2777.7000000000003], [1.58543136E12, 2869.2000000000003], [1.58543184E12, 1245.0], [1.58543166E12, 2869.3000000000006], [1.58543118E12, 187.0], [1.58543148E12, 2771.1999999999994], [1.5854313E12, 3073.0], [1.5854316E12, 2570.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58543142E12, 4261.700000000003], [1.58543124E12, 3908.0], [1.58543172E12, 2995.2000000000007], [1.58543154E12, 4350.6799999999985], [1.58543136E12, 4017.879999999999], [1.58543184E12, 1245.0], [1.58543166E12, 9138.459999999988], [1.58543118E12, 555.3999999999996], [1.58543148E12, 3767.520000000001], [1.5854313E12, 4475.259999999998], [1.5854316E12, 8148.999999999995]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58543142E12, 3739.6000000000004], [1.58543124E12, 3306.499999999992], [1.58543172E12, 2825.75], [1.58543154E12, 3135.95], [1.58543136E12, 3446.4999999999995], [1.58543184E12, 1245.0], [1.58543166E12, 5455.9499999996], [1.58543118E12, 279.0], [1.58543148E12, 3155.599999999998], [1.5854313E12, 3397.9], [1.5854316E12, 2689.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543184E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 12006.0, "series": [{"data": [[2.0, 1082.5], [5.0, 557.0], [7.0, 116.0], [8.0, 57.5], [10.0, 41.5], [12.0, 1061.5], [13.0, 106.5], [14.0, 767.5], [15.0, 765.5], [18.0, 94.0], [19.0, 109.5], [20.0, 106.5], [23.0, 70.0], [24.0, 125.5], [25.0, 423.0], [27.0, 2237.0], [28.0, 2152.0], [29.0, 2260.0], [30.0, 2178.0], [31.0, 1959.0], [32.0, 1940.0], [33.0, 2201.0], [35.0, 2212.0], [34.0, 2063.0], [36.0, 2128.0], [37.0, 1944.0], [39.0, 1464.5], [38.0, 1972.5], [40.0, 1756.0], [41.0, 2085.5], [43.0, 1314.0], [42.0, 1863.0], [45.0, 1071.0], [44.0, 1475.0], [47.0, 1629.0], [46.0, 1964.0], [49.0, 1491.0], [48.0, 1486.5], [51.0, 905.0], [50.0, 1644.0], [53.0, 1303.0], [52.0, 1452.0], [55.0, 1853.5], [54.0, 1576.0], [57.0, 1149.5], [56.0, 1048.0], [59.0, 1832.5], [58.0, 899.0], [60.0, 1373.0], [61.0, 748.0], [62.0, 1100.0], [63.0, 1362.5], [66.0, 2135.0], [64.0, 497.0], [67.0, 1139.0], [65.0, 118.0], [69.0, 448.5], [70.0, 201.5], [68.0, 856.0], [71.0, 452.0], [74.0, 273.5], [75.0, 751.0], [73.0, 4.0], [72.0, 275.0], [77.0, 1368.0], [79.0, 4.0], [78.0, 3.0], [81.0, 74.0], [83.0, 3.0], [85.0, 760.5], [91.0, 809.5], [95.0, 884.0], [111.0, 1154.0], [1.0, 59.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 1.0], [5.0, 1.0], [6.0, 1.5], [7.0, 1.0], [9.0, 1.0], [11.0, 1.0], [13.0, 1.0], [15.0, 1.0], [16.0, 1.0], [17.0, 12006.0], [19.0, 1.0], [22.0, 1.0], [24.0, 1.0], [26.0, 1.0], [28.0, 0.0], [29.0, 1.0], [30.0, 1.0], [31.0, 1.0], [32.0, 1.0], [33.0, 1.0], [34.0, 1.0], [35.0, 1.0], [36.0, 1250.0], [37.0, 1631.0], [39.0, 1.0], [40.0, 504.5], [41.0, 1268.5], [43.0, 1.0], [42.0, 1.0], [45.0, 1.0], [44.0, 825.0], [47.0, 1.0], [48.0, 1235.5], [49.0, 1.0], [50.0, 1.0], [53.0, 1.0], [52.0, 1976.0], [55.0, 1.0], [54.0, 1.0], [57.0, 137.5], [56.0, 0.0], [59.0, 2528.5], [58.0, 1.0], [60.0, 1.0], [61.0, 1.0], [62.0, 1.0], [63.0, 1.0], [66.0, 1.0], [64.0, 1.0], [67.0, 1.0], [65.0, 1.0], [70.0, 1.0], [71.0, 1.0], [69.0, 1.0], [68.0, 1.0], [74.0, 1.0], [73.0, 1.0], [75.0, 1.0], [72.0, 1.0], [77.0, 1.0], [78.0, 1.0], [79.0, 1.0], [76.0, 1.0], [80.0, 1.0], [83.0, 1.0], [82.0, 1.0], [81.0, 1.0], [85.0, 1276.0], [87.0, 1.0], [84.0, 1.0], [86.0, 1.0], [91.0, 3690.0], [89.0, 1.0], [88.0, 1.0], [90.0, 1.0], [95.0, 1816.0], [93.0, 1.0], [94.0, 1.0], [92.0, 1.0], [99.0, 1.0], [97.0, 1.0], [98.0, 1.0], [1.0, 1.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 111.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 3690.0, "series": [{"data": [[2.0, 1079.5], [5.0, 555.0], [7.0, 116.0], [8.0, 57.5], [10.0, 41.5], [12.0, 1061.5], [13.0, 106.5], [14.0, 767.5], [15.0, 765.5], [18.0, 94.0], [19.0, 109.0], [20.0, 106.0], [23.0, 69.0], [24.0, 125.0], [25.0, 422.0], [27.0, 2237.0], [28.0, 2152.0], [29.0, 2260.0], [30.0, 2177.5], [31.0, 1958.5], [32.0, 1939.5], [33.0, 2200.0], [35.0, 2211.0], [34.0, 2062.0], [36.0, 2128.0], [37.0, 1941.5], [39.0, 1464.0], [38.0, 1972.0], [40.0, 1756.0], [41.0, 2084.5], [43.0, 1314.0], [42.0, 1862.5], [45.0, 1071.0], [44.0, 1474.5], [47.0, 1629.0], [46.0, 1963.0], [49.0, 1491.0], [48.0, 1486.0], [51.0, 905.0], [50.0, 1643.5], [53.0, 1303.0], [52.0, 1452.0], [55.0, 1853.5], [54.0, 1575.5], [57.0, 1149.5], [56.0, 1047.5], [59.0, 1832.0], [58.0, 898.0], [60.0, 1372.0], [61.0, 748.0], [62.0, 1100.0], [63.0, 1362.0], [66.0, 2134.0], [64.0, 497.0], [67.0, 1139.0], [65.0, 118.0], [69.0, 448.5], [70.0, 201.5], [68.0, 856.0], [71.0, 452.0], [74.0, 273.0], [75.0, 751.0], [73.0, 4.0], [72.0, 275.0], [77.0, 1368.0], [79.0, 4.0], [78.0, 3.0], [81.0, 74.0], [83.0, 3.0], [85.0, 760.5], [91.0, 809.5], [95.0, 884.0], [111.0, 1154.0], [1.0, 58.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [9.0, 0.0], [11.0, 0.0], [13.0, 0.0], [15.0, 0.0], [16.0, 0.0], [17.0, 0.0], [19.0, 0.0], [22.0, 0.0], [24.0, 0.0], [26.0, 0.0], [28.0, 0.0], [29.0, 0.0], [30.0, 0.0], [31.0, 0.0], [32.0, 0.0], [33.0, 0.0], [34.0, 0.0], [35.0, 0.0], [36.0, 1250.0], [37.0, 1630.0], [39.0, 0.0], [40.0, 504.5], [41.0, 1268.5], [43.0, 0.0], [42.0, 0.0], [45.0, 0.0], [44.0, 824.0], [47.0, 0.0], [48.0, 1144.5], [49.0, 0.0], [50.0, 0.0], [53.0, 0.0], [52.0, 1976.0], [55.0, 0.0], [54.0, 0.0], [57.0, 137.5], [56.0, 0.0], [59.0, 2370.0], [58.0, 0.0], [60.0, 0.0], [61.0, 0.0], [62.0, 0.0], [63.0, 0.0], [66.0, 0.0], [64.0, 0.0], [67.0, 0.0], [65.0, 0.0], [70.0, 0.0], [71.0, 0.0], [69.0, 0.0], [68.0, 0.0], [74.0, 0.0], [73.0, 0.0], [75.0, 0.0], [72.0, 0.0], [77.0, 0.0], [78.0, 0.0], [79.0, 0.0], [76.0, 0.0], [80.0, 0.0], [83.0, 0.0], [82.0, 0.0], [81.0, 0.0], [85.0, 1276.0], [87.0, 0.0], [84.0, 0.0], [86.0, 0.0], [91.0, 3690.0], [89.0, 0.0], [88.0, 0.0], [90.0, 0.0], [95.0, 1814.0], [93.0, 0.0], [94.0, 0.0], [92.0, 0.0], [99.0, 0.0], [97.0, 0.0], [98.0, 0.0], [1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 111.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.683333333333334, "minX": 1.58543118E12, "maxY": 79.7, "series": [{"data": [[1.58543142E12, 39.1], [1.58543124E12, 41.78333333333333], [1.58543172E12, 39.7], [1.58543154E12, 46.95], [1.58543136E12, 41.63333333333333], [1.58543184E12, 35.516666666666666], [1.58543166E12, 36.43333333333333], [1.58543118E12, 13.683333333333334], [1.58543148E12, 45.1], [1.5854313E12, 43.1], [1.58543178E12, 79.7], [1.5854316E12, 39.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543184E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58543118E12, "maxY": 79.71666666666667, "series": [{"data": [[1.58543142E12, 37.016666666666666], [1.58543124E12, 39.3], [1.58543172E12, 18.066666666666666], [1.58543154E12, 46.0], [1.58543136E12, 41.28333333333333], [1.58543184E12, 0.05], [1.58543166E12, 36.666666666666664], [1.58543118E12, 13.65], [1.58543148E12, 41.05], [1.5854313E12, 41.35], [1.5854316E12, 37.983333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58543142E12, 3.4166666666666665], [1.58543124E12, 1.2333333333333334], [1.58543172E12, 0.03333333333333333], [1.58543154E12, 0.25], [1.58543148E12, 1.5666666666666667], [1.5854313E12, 0.4666666666666667]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.58543136E12, 0.05], [1.58543148E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.TruncatedChunkException", "isController": false}, {"data": [[1.58543172E12, 23.183333333333334], [1.58543154E12, 0.9333333333333333], [1.58543184E12, 35.46666666666667], [1.58543148E12, 0.7166666666666667], [1.5854313E12, 0.6333333333333333], [1.58543178E12, 79.71666666666667], [1.5854316E12, 1.0833333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.58543154E12, 0.1], [1.58543136E12, 0.016666666666666666], [1.58543148E12, 0.35], [1.5854313E12, 0.7833333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543184E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58543118E12, "maxY": 39.9, "series": [{"data": [[1.58543124E12, 1.1], [1.58543118E12, 1.4]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58543142E12, 18.466666666666665], [1.58543124E12, 18.716666666666665], [1.58543172E12, 9.116666666666667], [1.58543154E12, 22.683333333333334], [1.58543136E12, 20.716666666666665], [1.58543184E12, 0.03333333333333333], [1.58543166E12, 18.083333333333332], [1.58543118E12, 5.883333333333334], [1.58543148E12, 19.933333333333334], [1.5854313E12, 20.233333333333334], [1.5854316E12, 18.7]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58543142E12, 2.033333333333333], [1.58543124E12, 0.7333333333333333], [1.58543172E12, 11.566666666666666], [1.58543154E12, 1.0833333333333333], [1.58543136E12, 0.03333333333333333], [1.58543184E12, 18.233333333333334], [1.58543148E12, 1.5666666666666667], [1.5854313E12, 1.2166666666666666], [1.58543178E12, 39.9], [1.5854316E12, 1.0666666666666667]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58543142E12, 18.55], [1.58543124E12, 19.483333333333334], [1.58543172E12, 8.95], [1.58543154E12, 23.316666666666666], [1.58543136E12, 20.566666666666666], [1.58543184E12, 0.016666666666666666], [1.58543166E12, 18.583333333333332], [1.58543118E12, 6.366666666666666], [1.58543148E12, 21.116666666666667], [1.5854313E12, 21.116666666666667], [1.5854316E12, 19.283333333333335]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.58543142E12, 1.3833333333333333], [1.58543124E12, 0.5], [1.58543172E12, 11.65], [1.58543154E12, 0.2], [1.58543136E12, 0.03333333333333333], [1.58543184E12, 17.233333333333334], [1.58543148E12, 1.15], [1.5854313E12, 0.6666666666666666], [1.58543178E12, 39.81666666666667], [1.5854316E12, 0.016666666666666666]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543184E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.58543118E12, "maxY": 79.71666666666667, "series": [{"data": [[1.58543142E12, 37.016666666666666], [1.58543124E12, 39.3], [1.58543172E12, 18.066666666666666], [1.58543154E12, 46.0], [1.58543136E12, 41.28333333333333], [1.58543184E12, 0.05], [1.58543166E12, 36.666666666666664], [1.58543118E12, 13.65], [1.58543148E12, 41.05], [1.5854313E12, 41.35], [1.5854316E12, 37.983333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58543142E12, 3.4166666666666665], [1.58543124E12, 1.2333333333333334], [1.58543172E12, 23.216666666666665], [1.58543154E12, 1.2833333333333334], [1.58543136E12, 0.06666666666666667], [1.58543184E12, 35.46666666666667], [1.58543148E12, 2.716666666666667], [1.5854313E12, 1.8833333333333333], [1.58543178E12, 79.71666666666667], [1.5854316E12, 1.0833333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543184E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

