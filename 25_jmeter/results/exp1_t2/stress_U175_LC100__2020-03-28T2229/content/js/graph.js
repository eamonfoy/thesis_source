/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 21064.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 4.0], [49.2, 4.0], [49.3, 4.0], [49.4, 4.0], [49.5, 5.0], [49.6, 5.0], [49.7, 6.0], [49.8, 7.0], [49.9, 9.0], [50.0, 12.0], [50.1, 16.0], [50.2, 21.0], [50.3, 32.0], [50.4, 35.0], [50.5, 37.0], [50.6, 38.0], [50.7, 39.0], [50.8, 40.0], [50.9, 40.0], [51.0, 41.0], [51.1, 42.0], [51.2, 42.0], [51.3, 43.0], [51.4, 43.0], [51.5, 44.0], [51.6, 44.0], [51.7, 45.0], [51.8, 45.0], [51.9, 46.0], [52.0, 46.0], [52.1, 47.0], [52.2, 47.0], [52.3, 48.0], [52.4, 48.0], [52.5, 49.0], [52.6, 49.0], [52.7, 50.0], [52.8, 50.0], [52.9, 51.0], [53.0, 52.0], [53.1, 53.0], [53.2, 53.0], [53.3, 54.0], [53.4, 54.0], [53.5, 55.0], [53.6, 56.0], [53.7, 57.0], [53.8, 58.0], [53.9, 59.0], [54.0, 60.0], [54.1, 61.0], [54.2, 62.0], [54.3, 64.0], [54.4, 66.0], [54.5, 67.0], [54.6, 69.0], [54.7, 73.0], [54.8, 79.0], [54.9, 85.0], [55.0, 91.0], [55.1, 110.0], [55.2, 136.0], [55.3, 174.0], [55.4, 203.0], [55.5, 260.0], [55.6, 321.0], [55.7, 362.0], [55.8, 411.0], [55.9, 453.0], [56.0, 477.0], [56.1, 505.0], [56.2, 529.0], [56.3, 554.0], [56.4, 573.0], [56.5, 596.0], [56.6, 618.0], [56.7, 636.0], [56.8, 660.0], [56.9, 673.0], [57.0, 696.0], [57.1, 711.0], [57.2, 733.0], [57.3, 759.0], [57.4, 779.0], [57.5, 806.0], [57.6, 836.0], [57.7, 853.0], [57.8, 868.0], [57.9, 886.0], [58.0, 920.0], [58.1, 935.0], [58.2, 948.0], [58.3, 959.0], [58.4, 983.0], [58.5, 1001.0], [58.6, 1019.0], [58.7, 1034.0], [58.8, 1046.0], [58.9, 1070.0], [59.0, 1085.0], [59.1, 1099.0], [59.2, 1118.0], [59.3, 1134.0], [59.4, 1151.0], [59.5, 1176.0], [59.6, 1196.0], [59.7, 1211.0], [59.8, 1222.0], [59.9, 1235.0], [60.0, 1248.0], [60.1, 1263.0], [60.2, 1286.0], [60.3, 1303.0], [60.4, 1318.0], [60.5, 1336.0], [60.6, 1351.0], [60.7, 1360.0], [60.8, 1368.0], [60.9, 1380.0], [61.0, 1400.0], [61.1, 1413.0], [61.2, 1425.0], [61.3, 1432.0], [61.4, 1446.0], [61.5, 1455.0], [61.6, 1461.0], [61.7, 1473.0], [61.8, 1485.0], [61.9, 1496.0], [62.0, 1511.0], [62.1, 1519.0], [62.2, 1527.0], [62.3, 1536.0], [62.4, 1544.0], [62.5, 1554.0], [62.6, 1567.0], [62.7, 1574.0], [62.8, 1587.0], [62.9, 1595.0], [63.0, 1604.0], [63.1, 1610.0], [63.2, 1618.0], [63.3, 1633.0], [63.4, 1641.0], [63.5, 1647.0], [63.6, 1656.0], [63.7, 1667.0], [63.8, 1679.0], [63.9, 1687.0], [64.0, 1693.0], [64.1, 1701.0], [64.2, 1712.0], [64.3, 1719.0], [64.4, 1727.0], [64.5, 1732.0], [64.6, 1738.0], [64.7, 1747.0], [64.8, 1754.0], [64.9, 1764.0], [65.0, 1772.0], [65.1, 1780.0], [65.2, 1792.0], [65.3, 1801.0], [65.4, 1809.0], [65.5, 1816.0], [65.6, 1823.0], [65.7, 1832.0], [65.8, 1838.0], [65.9, 1846.0], [66.0, 1850.0], [66.1, 1856.0], [66.2, 1868.0], [66.3, 1875.0], [66.4, 1880.0], [66.5, 1886.0], [66.6, 1895.0], [66.7, 1901.0], [66.8, 1910.0], [66.9, 1917.0], [67.0, 1927.0], [67.1, 1932.0], [67.2, 1940.0], [67.3, 1946.0], [67.4, 1954.0], [67.5, 1962.0], [67.6, 1971.0], [67.7, 1976.0], [67.8, 1984.0], [67.9, 1992.0], [68.0, 2000.0], [68.1, 2004.0], [68.2, 2008.0], [68.3, 2013.0], [68.4, 2019.0], [68.5, 2025.0], [68.6, 2033.0], [68.7, 2039.0], [68.8, 2045.0], [68.9, 2049.0], [69.0, 2055.0], [69.1, 2059.0], [69.2, 2068.0], [69.3, 2075.0], [69.4, 2082.0], [69.5, 2088.0], [69.6, 2095.0], [69.7, 2102.0], [69.8, 2114.0], [69.9, 2118.0], [70.0, 2123.0], [70.1, 2128.0], [70.2, 2134.0], [70.3, 2141.0], [70.4, 2150.0], [70.5, 2155.0], [70.6, 2161.0], [70.7, 2168.0], [70.8, 2173.0], [70.9, 2177.0], [71.0, 2184.0], [71.1, 2189.0], [71.2, 2193.0], [71.3, 2201.0], [71.4, 2206.0], [71.5, 2211.0], [71.6, 2216.0], [71.7, 2221.0], [71.8, 2228.0], [71.9, 2234.0], [72.0, 2241.0], [72.1, 2248.0], [72.2, 2254.0], [72.3, 2261.0], [72.4, 2266.0], [72.5, 2273.0], [72.6, 2277.0], [72.7, 2280.0], [72.8, 2286.0], [72.9, 2292.0], [73.0, 2300.0], [73.1, 2305.0], [73.2, 2308.0], [73.3, 2314.0], [73.4, 2320.0], [73.5, 2327.0], [73.6, 2331.0], [73.7, 2334.0], [73.8, 2339.0], [73.9, 2343.0], [74.0, 2349.0], [74.1, 2354.0], [74.2, 2361.0], [74.3, 2365.0], [74.4, 2371.0], [74.5, 2376.0], [74.6, 2380.0], [74.7, 2385.0], [74.8, 2391.0], [74.9, 2394.0], [75.0, 2398.0], [75.1, 2402.0], [75.2, 2407.0], [75.3, 2413.0], [75.4, 2418.0], [75.5, 2425.0], [75.6, 2430.0], [75.7, 2434.0], [75.8, 2438.0], [75.9, 2442.0], [76.0, 2446.0], [76.1, 2453.0], [76.2, 2459.0], [76.3, 2463.0], [76.4, 2468.0], [76.5, 2473.0], [76.6, 2477.0], [76.7, 2481.0], [76.8, 2486.0], [76.9, 2493.0], [77.0, 2496.0], [77.1, 2501.0], [77.2, 2504.0], [77.3, 2507.0], [77.4, 2513.0], [77.5, 2519.0], [77.6, 2526.0], [77.7, 2533.0], [77.8, 2537.0], [77.9, 2540.0], [78.0, 2545.0], [78.1, 2549.0], [78.2, 2555.0], [78.3, 2560.0], [78.4, 2564.0], [78.5, 2570.0], [78.6, 2573.0], [78.7, 2577.0], [78.8, 2583.0], [78.9, 2587.0], [79.0, 2591.0], [79.1, 2596.0], [79.2, 2600.0], [79.3, 2603.0], [79.4, 2608.0], [79.5, 2612.0], [79.6, 2617.0], [79.7, 2626.0], [79.8, 2628.0], [79.9, 2633.0], [80.0, 2636.0], [80.1, 2641.0], [80.2, 2647.0], [80.3, 2653.0], [80.4, 2657.0], [80.5, 2663.0], [80.6, 2667.0], [80.7, 2673.0], [80.8, 2677.0], [80.9, 2683.0], [81.0, 2686.0], [81.1, 2690.0], [81.2, 2694.0], [81.3, 2699.0], [81.4, 2705.0], [81.5, 2709.0], [81.6, 2713.0], [81.7, 2717.0], [81.8, 2720.0], [81.9, 2726.0], [82.0, 2730.0], [82.1, 2737.0], [82.2, 2741.0], [82.3, 2745.0], [82.4, 2751.0], [82.5, 2755.0], [82.6, 2760.0], [82.7, 2765.0], [82.8, 2769.0], [82.9, 2774.0], [83.0, 2779.0], [83.1, 2783.0], [83.2, 2787.0], [83.3, 2792.0], [83.4, 2796.0], [83.5, 2803.0], [83.6, 2806.0], [83.7, 2813.0], [83.8, 2818.0], [83.9, 2822.0], [84.0, 2826.0], [84.1, 2833.0], [84.2, 2840.0], [84.3, 2844.0], [84.4, 2849.0], [84.5, 2852.0], [84.6, 2858.0], [84.7, 2861.0], [84.8, 2865.0], [84.9, 2869.0], [85.0, 2873.0], [85.1, 2877.0], [85.2, 2882.0], [85.3, 2885.0], [85.4, 2889.0], [85.5, 2895.0], [85.6, 2899.0], [85.7, 2905.0], [85.8, 2909.0], [85.9, 2913.0], [86.0, 2917.0], [86.1, 2921.0], [86.2, 2925.0], [86.3, 2929.0], [86.4, 2933.0], [86.5, 2937.0], [86.6, 2943.0], [86.7, 2950.0], [86.8, 2955.0], [86.9, 2960.0], [87.0, 2962.0], [87.1, 2967.0], [87.2, 2974.0], [87.3, 2978.0], [87.4, 2982.0], [87.5, 2988.0], [87.6, 2993.0], [87.7, 2998.0], [87.8, 3004.0], [87.9, 3011.0], [88.0, 3015.0], [88.1, 3019.0], [88.2, 3026.0], [88.3, 3033.0], [88.4, 3038.0], [88.5, 3045.0], [88.6, 3051.0], [88.7, 3056.0], [88.8, 3061.0], [88.9, 3066.0], [89.0, 3071.0], [89.1, 3077.0], [89.2, 3082.0], [89.3, 3090.0], [89.4, 3095.0], [89.5, 3101.0], [89.6, 3107.0], [89.7, 3112.0], [89.8, 3119.0], [89.9, 3124.0], [90.0, 3130.0], [90.1, 3138.0], [90.2, 3142.0], [90.3, 3146.0], [90.4, 3151.0], [90.5, 3157.0], [90.6, 3162.0], [90.7, 3167.0], [90.8, 3173.0], [90.9, 3180.0], [91.0, 3185.0], [91.1, 3189.0], [91.2, 3194.0], [91.3, 3201.0], [91.4, 3209.0], [91.5, 3215.0], [91.6, 3219.0], [91.7, 3226.0], [91.8, 3232.0], [91.9, 3238.0], [92.0, 3244.0], [92.1, 3252.0], [92.2, 3260.0], [92.3, 3267.0], [92.4, 3274.0], [92.5, 3280.0], [92.6, 3289.0], [92.7, 3296.0], [92.8, 3302.0], [92.9, 3309.0], [93.0, 3313.0], [93.1, 3318.0], [93.2, 3325.0], [93.3, 3331.0], [93.4, 3341.0], [93.5, 3348.0], [93.6, 3352.0], [93.7, 3360.0], [93.8, 3369.0], [93.9, 3379.0], [94.0, 3385.0], [94.1, 3397.0], [94.2, 3410.0], [94.3, 3418.0], [94.4, 3427.0], [94.5, 3434.0], [94.6, 3448.0], [94.7, 3456.0], [94.8, 3465.0], [94.9, 3474.0], [95.0, 3485.0], [95.1, 3493.0], [95.2, 3501.0], [95.3, 3509.0], [95.4, 3519.0], [95.5, 3533.0], [95.6, 3544.0], [95.7, 3556.0], [95.8, 3576.0], [95.9, 3589.0], [96.0, 3608.0], [96.1, 3630.0], [96.2, 3641.0], [96.3, 3671.0], [96.4, 3688.0], [96.5, 3709.0], [96.6, 3728.0], [96.7, 3755.0], [96.8, 3776.0], [96.9, 3799.0], [97.0, 3824.0], [97.1, 3854.0], [97.2, 3889.0], [97.3, 3914.0], [97.4, 3936.0], [97.5, 3974.0], [97.6, 4016.0], [97.7, 4057.0], [97.8, 4102.0], [97.9, 4148.0], [98.0, 4199.0], [98.1, 4256.0], [98.2, 4335.0], [98.3, 4403.0], [98.4, 4471.0], [98.5, 4534.0], [98.6, 4612.0], [98.7, 4672.0], [98.8, 4715.0], [98.9, 4781.0], [99.0, 4835.0], [99.1, 4905.0], [99.2, 4967.0], [99.3, 5027.0], [99.4, 5076.0], [99.5, 5141.0], [99.6, 5256.0], [99.7, 5353.0], [99.8, 5489.0], [99.9, 5696.0], [100.0, 20008.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 156.0], [0.1, 156.0], [0.2, 156.0], [0.3, 156.0], [0.4, 156.0], [0.5, 156.0], [0.6, 158.0], [0.7, 158.0], [0.8, 158.0], [0.9, 158.0], [1.0, 158.0], [1.1, 158.0], [1.2, 161.0], [1.3, 161.0], [1.4, 161.0], [1.5, 161.0], [1.6, 161.0], [1.7, 161.0], [1.8, 162.0], [1.9, 162.0], [2.0, 162.0], [2.1, 162.0], [2.2, 162.0], [2.3, 163.0], [2.4, 163.0], [2.5, 163.0], [2.6, 163.0], [2.7, 163.0], [2.8, 163.0], [2.9, 164.0], [3.0, 164.0], [3.1, 164.0], [3.2, 164.0], [3.3, 164.0], [3.4, 164.0], [3.5, 165.0], [3.6, 165.0], [3.7, 165.0], [3.8, 165.0], [3.9, 165.0], [4.0, 166.0], [4.1, 166.0], [4.2, 166.0], [4.3, 166.0], [4.4, 166.0], [4.5, 166.0], [4.6, 166.0], [4.7, 166.0], [4.8, 166.0], [4.9, 166.0], [5.0, 166.0], [5.1, 166.0], [5.2, 166.0], [5.3, 166.0], [5.4, 166.0], [5.5, 166.0], [5.6, 166.0], [5.7, 166.0], [5.8, 167.0], [5.9, 167.0], [6.0, 167.0], [6.1, 167.0], [6.2, 167.0], [6.3, 167.0], [6.4, 167.0], [6.5, 167.0], [6.6, 167.0], [6.7, 167.0], [6.8, 167.0], [6.9, 168.0], [7.0, 168.0], [7.1, 168.0], [7.2, 168.0], [7.3, 168.0], [7.4, 168.0], [7.5, 168.0], [7.6, 168.0], [7.7, 168.0], [7.8, 168.0], [7.9, 168.0], [8.0, 169.0], [8.1, 169.0], [8.2, 169.0], [8.3, 169.0], [8.4, 169.0], [8.5, 169.0], [8.6, 170.0], [8.7, 170.0], [8.8, 170.0], [8.9, 170.0], [9.0, 170.0], [9.1, 170.0], [9.2, 171.0], [9.3, 171.0], [9.4, 171.0], [9.5, 171.0], [9.6, 171.0], [9.7, 171.0], [9.8, 171.0], [9.9, 171.0], [10.0, 171.0], [10.1, 171.0], [10.2, 171.0], [10.3, 174.0], [10.4, 174.0], [10.5, 174.0], [10.6, 174.0], [10.7, 174.0], [10.8, 174.0], [10.9, 175.0], [11.0, 175.0], [11.1, 175.0], [11.2, 175.0], [11.3, 175.0], [11.4, 175.0], [11.5, 176.0], [11.6, 176.0], [11.7, 176.0], [11.8, 176.0], [11.9, 176.0], [12.0, 177.0], [12.1, 177.0], [12.2, 177.0], [12.3, 177.0], [12.4, 177.0], [12.5, 177.0], [12.6, 177.0], [12.7, 177.0], [12.8, 177.0], [12.9, 177.0], [13.0, 177.0], [13.1, 177.0], [13.2, 179.0], [13.3, 179.0], [13.4, 179.0], [13.5, 179.0], [13.6, 179.0], [13.7, 179.0], [13.8, 179.0], [13.9, 179.0], [14.0, 179.0], [14.1, 179.0], [14.2, 179.0], [14.3, 182.0], [14.4, 182.0], [14.5, 182.0], [14.6, 182.0], [14.7, 182.0], [14.8, 182.0], [14.9, 183.0], [15.0, 183.0], [15.1, 183.0], [15.2, 183.0], [15.3, 183.0], [15.4, 183.0], [15.5, 183.0], [15.6, 183.0], [15.7, 183.0], [15.8, 183.0], [15.9, 183.0], [16.0, 184.0], [16.1, 184.0], [16.2, 184.0], [16.3, 184.0], [16.4, 184.0], [16.5, 184.0], [16.6, 185.0], [16.7, 185.0], [16.8, 185.0], [16.9, 185.0], [17.0, 185.0], [17.1, 185.0], [17.2, 186.0], [17.3, 186.0], [17.4, 186.0], [17.5, 186.0], [17.6, 186.0], [17.7, 186.0], [17.8, 186.0], [17.9, 186.0], [18.0, 186.0], [18.1, 186.0], [18.2, 186.0], [18.3, 187.0], [18.4, 187.0], [18.5, 187.0], [18.6, 187.0], [18.7, 187.0], [18.8, 187.0], [18.9, 187.0], [19.0, 187.0], [19.1, 187.0], [19.2, 187.0], [19.3, 187.0], [19.4, 187.0], [19.5, 187.0], [19.6, 187.0], [19.7, 187.0], [19.8, 187.0], [19.9, 187.0], [20.0, 188.0], [20.1, 188.0], [20.2, 188.0], [20.3, 188.0], [20.4, 188.0], [20.5, 188.0], [20.6, 188.0], [20.7, 188.0], [20.8, 188.0], [20.9, 188.0], [21.0, 188.0], [21.1, 188.0], [21.2, 188.0], [21.3, 188.0], [21.4, 188.0], [21.5, 188.0], [21.6, 188.0], [21.7, 188.0], [21.8, 188.0], [21.9, 188.0], [22.0, 188.0], [22.1, 188.0], [22.2, 188.0], [22.3, 188.0], [22.4, 188.0], [22.5, 188.0], [22.6, 188.0], [22.7, 188.0], [22.8, 188.0], [22.9, 190.0], [23.0, 190.0], [23.1, 190.0], [23.2, 190.0], [23.3, 190.0], [23.4, 190.0], [23.5, 191.0], [23.6, 191.0], [23.7, 191.0], [23.8, 191.0], [23.9, 191.0], [24.0, 192.0], [24.1, 192.0], [24.2, 192.0], [24.3, 192.0], [24.4, 192.0], [24.5, 192.0], [24.6, 193.0], [24.7, 193.0], [24.8, 193.0], [24.9, 193.0], [25.0, 193.0], [25.1, 193.0], [25.2, 193.0], [25.3, 193.0], [25.4, 193.0], [25.5, 193.0], [25.6, 193.0], [25.7, 193.0], [25.8, 194.0], [25.9, 194.0], [26.0, 194.0], [26.1, 194.0], [26.2, 194.0], [26.3, 194.0], [26.4, 194.0], [26.5, 194.0], [26.6, 194.0], [26.7, 194.0], [26.8, 194.0], [26.9, 195.0], [27.0, 195.0], [27.1, 195.0], [27.2, 195.0], [27.3, 195.0], [27.4, 195.0], [27.5, 196.0], [27.6, 196.0], [27.7, 196.0], [27.8, 196.0], [27.9, 196.0], [28.0, 196.0], [28.1, 197.0], [28.2, 197.0], [28.3, 197.0], [28.4, 197.0], [28.5, 197.0], [28.6, 200.0], [28.7, 200.0], [28.8, 200.0], [28.9, 200.0], [29.0, 200.0], [29.1, 200.0], [29.2, 202.0], [29.3, 202.0], [29.4, 202.0], [29.5, 202.0], [29.6, 202.0], [29.7, 202.0], [29.8, 202.0], [29.9, 202.0], [30.0, 202.0], [30.1, 202.0], [30.2, 202.0], [30.3, 205.0], [30.4, 205.0], [30.5, 205.0], [30.6, 205.0], [30.7, 205.0], [30.8, 205.0], [30.9, 205.0], [31.0, 205.0], [31.1, 205.0], [31.2, 205.0], [31.3, 205.0], [31.4, 205.0], [31.5, 205.0], [31.6, 205.0], [31.7, 205.0], [31.8, 205.0], [31.9, 205.0], [32.0, 205.0], [32.1, 206.0], [32.2, 206.0], [32.3, 206.0], [32.4, 206.0], [32.5, 206.0], [32.6, 207.0], [32.7, 207.0], [32.8, 207.0], [32.9, 207.0], [33.0, 207.0], [33.1, 207.0], [33.2, 207.0], [33.3, 207.0], [33.4, 207.0], [33.5, 207.0], [33.6, 207.0], [33.7, 207.0], [33.8, 207.0], [33.9, 207.0], [34.0, 207.0], [34.1, 207.0], [34.2, 207.0], [34.3, 208.0], [34.4, 208.0], [34.5, 208.0], [34.6, 208.0], [34.7, 208.0], [34.8, 208.0], [34.9, 208.0], [35.0, 208.0], [35.1, 208.0], [35.2, 208.0], [35.3, 208.0], [35.4, 208.0], [35.5, 209.0], [35.6, 209.0], [35.7, 209.0], [35.8, 209.0], [35.9, 209.0], [36.0, 209.0], [36.1, 211.0], [36.2, 211.0], [36.3, 211.0], [36.4, 211.0], [36.5, 211.0], [36.6, 213.0], [36.7, 213.0], [36.8, 213.0], [36.9, 213.0], [37.0, 213.0], [37.1, 213.0], [37.2, 216.0], [37.3, 216.0], [37.4, 216.0], [37.5, 216.0], [37.6, 216.0], [37.7, 216.0], [37.8, 219.0], [37.9, 219.0], [38.0, 219.0], [38.1, 219.0], [38.2, 219.0], [38.3, 220.0], [38.4, 220.0], [38.5, 220.0], [38.6, 220.0], [38.7, 220.0], [38.8, 220.0], [38.9, 221.0], [39.0, 221.0], [39.1, 221.0], [39.2, 221.0], [39.3, 221.0], [39.4, 221.0], [39.5, 224.0], [39.6, 224.0], [39.7, 224.0], [39.8, 224.0], [39.9, 224.0], [40.0, 224.0], [40.1, 224.0], [40.2, 224.0], [40.3, 224.0], [40.4, 224.0], [40.5, 224.0], [40.6, 226.0], [40.7, 226.0], [40.8, 226.0], [40.9, 226.0], [41.0, 226.0], [41.1, 226.0], [41.2, 229.0], [41.3, 229.0], [41.4, 229.0], [41.5, 229.0], [41.6, 229.0], [41.7, 229.0], [41.8, 230.0], [41.9, 230.0], [42.0, 230.0], [42.1, 230.0], [42.2, 230.0], [42.3, 234.0], [42.4, 234.0], [42.5, 234.0], [42.6, 234.0], [42.7, 234.0], [42.8, 234.0], [42.9, 246.0], [43.0, 246.0], [43.1, 246.0], [43.2, 246.0], [43.3, 246.0], [43.4, 246.0], [43.5, 247.0], [43.6, 247.0], [43.7, 247.0], [43.8, 247.0], [43.9, 247.0], [44.0, 255.0], [44.1, 255.0], [44.2, 255.0], [44.3, 255.0], [44.4, 255.0], [44.5, 255.0], [44.6, 264.0], [44.7, 264.0], [44.8, 264.0], [44.9, 264.0], [45.0, 264.0], [45.1, 264.0], [45.2, 276.0], [45.3, 276.0], [45.4, 276.0], [45.5, 276.0], [45.6, 276.0], [45.7, 276.0], [45.8, 277.0], [45.9, 277.0], [46.0, 277.0], [46.1, 277.0], [46.2, 277.0], [46.3, 278.0], [46.4, 278.0], [46.5, 278.0], [46.6, 278.0], [46.7, 278.0], [46.8, 278.0], [46.9, 282.0], [47.0, 282.0], [47.1, 282.0], [47.2, 282.0], [47.3, 282.0], [47.4, 282.0], [47.5, 282.0], [47.6, 282.0], [47.7, 282.0], [47.8, 282.0], [47.9, 282.0], [48.0, 285.0], [48.1, 285.0], [48.2, 285.0], [48.3, 285.0], [48.4, 285.0], [48.5, 285.0], [48.6, 288.0], [48.7, 288.0], [48.8, 288.0], [48.9, 288.0], [49.0, 288.0], [49.1, 288.0], [49.2, 291.0], [49.3, 291.0], [49.4, 291.0], [49.5, 291.0], [49.6, 291.0], [49.7, 291.0], [49.8, 296.0], [49.9, 296.0], [50.0, 296.0], [50.1, 296.0], [50.2, 296.0], [50.3, 298.0], [50.4, 298.0], [50.5, 298.0], [50.6, 298.0], [50.7, 298.0], [50.8, 298.0], [50.9, 304.0], [51.0, 304.0], [51.1, 304.0], [51.2, 304.0], [51.3, 304.0], [51.4, 304.0], [51.5, 307.0], [51.6, 307.0], [51.7, 307.0], [51.8, 307.0], [51.9, 307.0], [52.0, 316.0], [52.1, 316.0], [52.2, 316.0], [52.3, 316.0], [52.4, 316.0], [52.5, 316.0], [52.6, 318.0], [52.7, 318.0], [52.8, 318.0], [52.9, 318.0], [53.0, 318.0], [53.1, 318.0], [53.2, 323.0], [53.3, 323.0], [53.4, 323.0], [53.5, 323.0], [53.6, 323.0], [53.7, 323.0], [53.8, 328.0], [53.9, 328.0], [54.0, 328.0], [54.1, 328.0], [54.2, 328.0], [54.3, 336.0], [54.4, 336.0], [54.5, 336.0], [54.6, 336.0], [54.7, 336.0], [54.8, 336.0], [54.9, 339.0], [55.0, 339.0], [55.1, 339.0], [55.2, 339.0], [55.3, 339.0], [55.4, 339.0], [55.5, 354.0], [55.6, 354.0], [55.7, 354.0], [55.8, 354.0], [55.9, 354.0], [56.0, 402.0], [56.1, 402.0], [56.2, 402.0], [56.3, 402.0], [56.4, 402.0], [56.5, 402.0], [56.6, 433.0], [56.7, 433.0], [56.8, 433.0], [56.9, 433.0], [57.0, 433.0], [57.1, 433.0], [57.2, 472.0], [57.3, 472.0], [57.4, 472.0], [57.5, 472.0], [57.6, 472.0], [57.7, 472.0], [57.8, 503.0], [57.9, 503.0], [58.0, 503.0], [58.1, 503.0], [58.2, 503.0], [58.3, 507.0], [58.4, 507.0], [58.5, 507.0], [58.6, 507.0], [58.7, 507.0], [58.8, 507.0], [58.9, 522.0], [59.0, 522.0], [59.1, 522.0], [59.2, 522.0], [59.3, 522.0], [59.4, 522.0], [59.5, 600.0], [59.6, 600.0], [59.7, 600.0], [59.8, 600.0], [59.9, 600.0], [60.0, 607.0], [60.1, 607.0], [60.2, 607.0], [60.3, 607.0], [60.4, 607.0], [60.5, 607.0], [60.6, 621.0], [60.7, 621.0], [60.8, 621.0], [60.9, 621.0], [61.0, 621.0], [61.1, 621.0], [61.2, 627.0], [61.3, 627.0], [61.4, 627.0], [61.5, 627.0], [61.6, 627.0], [61.7, 627.0], [61.8, 637.0], [61.9, 637.0], [62.0, 637.0], [62.1, 637.0], [62.2, 637.0], [62.3, 651.0], [62.4, 651.0], [62.5, 651.0], [62.6, 651.0], [62.7, 651.0], [62.8, 651.0], [62.9, 665.0], [63.0, 665.0], [63.1, 665.0], [63.2, 665.0], [63.3, 665.0], [63.4, 665.0], [63.5, 666.0], [63.6, 666.0], [63.7, 666.0], [63.8, 666.0], [63.9, 666.0], [64.0, 683.0], [64.1, 683.0], [64.2, 683.0], [64.3, 683.0], [64.4, 683.0], [64.5, 683.0], [64.6, 724.0], [64.7, 724.0], [64.8, 724.0], [64.9, 724.0], [65.0, 724.0], [65.1, 724.0], [65.2, 733.0], [65.3, 733.0], [65.4, 733.0], [65.5, 733.0], [65.6, 733.0], [65.7, 733.0], [65.8, 750.0], [65.9, 750.0], [66.0, 750.0], [66.1, 750.0], [66.2, 750.0], [66.3, 776.0], [66.4, 776.0], [66.5, 776.0], [66.6, 776.0], [66.7, 776.0], [66.8, 776.0], [66.9, 814.0], [67.0, 814.0], [67.1, 814.0], [67.2, 814.0], [67.3, 814.0], [67.4, 814.0], [67.5, 822.0], [67.6, 822.0], [67.7, 822.0], [67.8, 822.0], [67.9, 822.0], [68.0, 824.0], [68.1, 824.0], [68.2, 824.0], [68.3, 824.0], [68.4, 824.0], [68.5, 824.0], [68.6, 845.0], [68.7, 845.0], [68.8, 845.0], [68.9, 845.0], [69.0, 845.0], [69.1, 845.0], [69.2, 857.0], [69.3, 857.0], [69.4, 857.0], [69.5, 857.0], [69.6, 857.0], [69.7, 857.0], [69.8, 882.0], [69.9, 882.0], [70.0, 882.0], [70.1, 882.0], [70.2, 882.0], [70.3, 934.0], [70.4, 934.0], [70.5, 934.0], [70.6, 934.0], [70.7, 934.0], [70.8, 934.0], [70.9, 959.0], [71.0, 959.0], [71.1, 959.0], [71.2, 959.0], [71.3, 959.0], [71.4, 959.0], [71.5, 982.0], [71.6, 982.0], [71.7, 982.0], [71.8, 982.0], [71.9, 982.0], [72.0, 1007.0], [72.1, 1007.0], [72.2, 1007.0], [72.3, 1007.0], [72.4, 1007.0], [72.5, 1007.0], [72.6, 1036.0], [72.7, 1036.0], [72.8, 1036.0], [72.9, 1036.0], [73.0, 1036.0], [73.1, 1036.0], [73.2, 1048.0], [73.3, 1048.0], [73.4, 1048.0], [73.5, 1048.0], [73.6, 1048.0], [73.7, 1048.0], [73.8, 1049.0], [73.9, 1049.0], [74.0, 1049.0], [74.1, 1049.0], [74.2, 1049.0], [74.3, 1066.0], [74.4, 1066.0], [74.5, 1066.0], [74.6, 1066.0], [74.7, 1066.0], [74.8, 1066.0], [74.9, 1070.0], [75.0, 1070.0], [75.1, 1070.0], [75.2, 1070.0], [75.3, 1070.0], [75.4, 1070.0], [75.5, 1092.0], [75.6, 1092.0], [75.7, 1092.0], [75.8, 1092.0], [75.9, 1092.0], [76.0, 1098.0], [76.1, 1098.0], [76.2, 1098.0], [76.3, 1098.0], [76.4, 1098.0], [76.5, 1098.0], [76.6, 1108.0], [76.7, 1108.0], [76.8, 1108.0], [76.9, 1108.0], [77.0, 1108.0], [77.1, 1108.0], [77.2, 1119.0], [77.3, 1119.0], [77.4, 1119.0], [77.5, 1119.0], [77.6, 1119.0], [77.7, 1119.0], [77.8, 1120.0], [77.9, 1120.0], [78.0, 1120.0], [78.1, 1120.0], [78.2, 1120.0], [78.3, 1120.0], [78.4, 1120.0], [78.5, 1120.0], [78.6, 1120.0], [78.7, 1120.0], [78.8, 1120.0], [78.9, 1124.0], [79.0, 1124.0], [79.1, 1124.0], [79.2, 1124.0], [79.3, 1124.0], [79.4, 1124.0], [79.5, 1257.0], [79.6, 1257.0], [79.7, 1257.0], [79.8, 1257.0], [79.9, 1257.0], [80.0, 1299.0], [80.1, 1299.0], [80.2, 1299.0], [80.3, 1299.0], [80.4, 1299.0], [80.5, 1299.0], [80.6, 1336.0], [80.7, 1336.0], [80.8, 1336.0], [80.9, 1336.0], [81.0, 1336.0], [81.1, 1336.0], [81.2, 1384.0], [81.3, 1384.0], [81.4, 1384.0], [81.5, 1384.0], [81.6, 1384.0], [81.7, 1384.0], [81.8, 1445.0], [81.9, 1445.0], [82.0, 1445.0], [82.1, 1445.0], [82.2, 1445.0], [82.3, 1466.0], [82.4, 1466.0], [82.5, 1466.0], [82.6, 1466.0], [82.7, 1466.0], [82.8, 1466.0], [82.9, 1524.0], [83.0, 1524.0], [83.1, 1524.0], [83.2, 1524.0], [83.3, 1524.0], [83.4, 1524.0], [83.5, 1648.0], [83.6, 1648.0], [83.7, 1648.0], [83.8, 1648.0], [83.9, 1648.0], [84.0, 1648.0], [84.1, 1648.0], [84.2, 1648.0], [84.3, 1648.0], [84.4, 1648.0], [84.5, 1648.0], [84.6, 1695.0], [84.7, 1695.0], [84.8, 1695.0], [84.9, 1695.0], [85.0, 1695.0], [85.1, 1695.0], [85.2, 1696.0], [85.3, 1696.0], [85.4, 1696.0], [85.5, 1696.0], [85.6, 1696.0], [85.7, 1696.0], [85.8, 1711.0], [85.9, 1711.0], [86.0, 1711.0], [86.1, 1711.0], [86.2, 1711.0], [86.3, 1721.0], [86.4, 1721.0], [86.5, 1721.0], [86.6, 1721.0], [86.7, 1721.0], [86.8, 1721.0], [86.9, 1731.0], [87.0, 1731.0], [87.1, 1731.0], [87.2, 1731.0], [87.3, 1731.0], [87.4, 1731.0], [87.5, 1748.0], [87.6, 1748.0], [87.7, 1748.0], [87.8, 1748.0], [87.9, 1748.0], [88.0, 1782.0], [88.1, 1782.0], [88.2, 1782.0], [88.3, 1782.0], [88.4, 1782.0], [88.5, 1782.0], [88.6, 1835.0], [88.7, 1835.0], [88.8, 1835.0], [88.9, 1835.0], [89.0, 1835.0], [89.1, 1835.0], [89.2, 1844.0], [89.3, 1844.0], [89.4, 1844.0], [89.5, 1844.0], [89.6, 1844.0], [89.7, 1844.0], [89.8, 1860.0], [89.9, 1860.0], [90.0, 1860.0], [90.1, 1860.0], [90.2, 1860.0], [90.3, 1919.0], [90.4, 1919.0], [90.5, 1919.0], [90.6, 1919.0], [90.7, 1919.0], [90.8, 1919.0], [90.9, 1970.0], [91.0, 1970.0], [91.1, 1970.0], [91.2, 1970.0], [91.3, 1970.0], [91.4, 1970.0], [91.5, 2056.0], [91.6, 2056.0], [91.7, 2056.0], [91.8, 2056.0], [91.9, 2056.0], [92.0, 2106.0], [92.1, 2106.0], [92.2, 2106.0], [92.3, 2106.0], [92.4, 2106.0], [92.5, 2106.0], [92.6, 2111.0], [92.7, 2111.0], [92.8, 2111.0], [92.9, 2111.0], [93.0, 2111.0], [93.1, 2111.0], [93.2, 2123.0], [93.3, 2123.0], [93.4, 2123.0], [93.5, 2123.0], [93.6, 2123.0], [93.7, 2123.0], [93.8, 2141.0], [93.9, 2141.0], [94.0, 2141.0], [94.1, 2141.0], [94.2, 2141.0], [94.3, 2152.0], [94.4, 2152.0], [94.5, 2152.0], [94.6, 2152.0], [94.7, 2152.0], [94.8, 2152.0], [94.9, 2182.0], [95.0, 2182.0], [95.1, 2182.0], [95.2, 2182.0], [95.3, 2182.0], [95.4, 2182.0], [95.5, 2188.0], [95.6, 2188.0], [95.7, 2188.0], [95.8, 2188.0], [95.9, 2188.0], [96.0, 2217.0], [96.1, 2217.0], [96.2, 2217.0], [96.3, 2217.0], [96.4, 2217.0], [96.5, 2217.0], [96.6, 2246.0], [96.7, 2246.0], [96.8, 2246.0], [96.9, 2246.0], [97.0, 2246.0], [97.1, 2246.0], [97.2, 2292.0], [97.3, 2292.0], [97.4, 2292.0], [97.5, 2292.0], [97.6, 2292.0], [97.7, 2292.0], [97.8, 2327.0], [97.9, 2327.0], [98.0, 2327.0], [98.1, 2327.0], [98.2, 2327.0], [98.3, 2355.0], [98.4, 2355.0], [98.5, 2355.0], [98.6, 2355.0], [98.7, 2355.0], [98.8, 2355.0], [98.9, 2421.0], [99.0, 2421.0], [99.1, 2421.0], [99.2, 2421.0], [99.3, 2421.0], [99.4, 2421.0], [99.5, 2422.0], [99.6, 2422.0], [99.7, 2422.0], [99.8, 2422.0], [99.9, 2422.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 4.0], [45.9, 4.0], [46.0, 4.0], [46.1, 4.0], [46.2, 4.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 6.0], [46.7, 8.0], [46.8, 12.0], [46.9, 22.0], [47.0, 30.0], [47.1, 34.0], [47.2, 36.0], [47.3, 37.0], [47.4, 38.0], [47.5, 39.0], [47.6, 40.0], [47.7, 41.0], [47.8, 42.0], [47.9, 42.0], [48.0, 43.0], [48.1, 43.0], [48.2, 44.0], [48.3, 45.0], [48.4, 45.0], [48.5, 46.0], [48.6, 46.0], [48.7, 47.0], [48.8, 47.0], [48.9, 48.0], [49.0, 48.0], [49.1, 49.0], [49.2, 49.0], [49.3, 50.0], [49.4, 50.0], [49.5, 51.0], [49.6, 51.0], [49.7, 52.0], [49.8, 53.0], [49.9, 54.0], [50.0, 55.0], [50.1, 56.0], [50.2, 57.0], [50.3, 58.0], [50.4, 59.0], [50.5, 60.0], [50.6, 61.0], [50.7, 62.0], [50.8, 63.0], [50.9, 65.0], [51.0, 66.0], [51.1, 70.0], [51.2, 72.0], [51.3, 76.0], [51.4, 81.0], [51.5, 86.0], [51.6, 98.0], [51.7, 121.0], [51.8, 151.0], [51.9, 225.0], [52.0, 301.0], [52.1, 344.0], [52.2, 376.0], [52.3, 399.0], [52.4, 418.0], [52.5, 444.0], [52.6, 475.0], [52.7, 495.0], [52.8, 516.0], [52.9, 536.0], [53.0, 558.0], [53.1, 570.0], [53.2, 584.0], [53.3, 604.0], [53.4, 623.0], [53.5, 638.0], [53.6, 648.0], [53.7, 660.0], [53.8, 674.0], [53.9, 696.0], [54.0, 711.0], [54.1, 731.0], [54.2, 749.0], [54.3, 768.0], [54.4, 786.0], [54.5, 807.0], [54.6, 826.0], [54.7, 846.0], [54.8, 864.0], [54.9, 877.0], [55.0, 892.0], [55.1, 903.0], [55.2, 915.0], [55.3, 941.0], [55.4, 959.0], [55.5, 976.0], [55.6, 993.0], [55.7, 1005.0], [55.8, 1024.0], [55.9, 1040.0], [56.0, 1052.0], [56.1, 1065.0], [56.2, 1073.0], [56.3, 1084.0], [56.4, 1095.0], [56.5, 1111.0], [56.6, 1126.0], [56.7, 1145.0], [56.8, 1155.0], [56.9, 1168.0], [57.0, 1181.0], [57.1, 1193.0], [57.2, 1205.0], [57.3, 1220.0], [57.4, 1236.0], [57.5, 1252.0], [57.6, 1270.0], [57.7, 1285.0], [57.8, 1297.0], [57.9, 1316.0], [58.0, 1332.0], [58.1, 1344.0], [58.2, 1359.0], [58.3, 1370.0], [58.4, 1387.0], [58.5, 1397.0], [58.6, 1409.0], [58.7, 1416.0], [58.8, 1426.0], [58.9, 1445.0], [59.0, 1455.0], [59.1, 1466.0], [59.2, 1471.0], [59.3, 1484.0], [59.4, 1493.0], [59.5, 1505.0], [59.6, 1515.0], [59.7, 1523.0], [59.8, 1534.0], [59.9, 1543.0], [60.0, 1555.0], [60.1, 1563.0], [60.2, 1570.0], [60.3, 1577.0], [60.4, 1586.0], [60.5, 1592.0], [60.6, 1602.0], [60.7, 1614.0], [60.8, 1621.0], [60.9, 1630.0], [61.0, 1640.0], [61.1, 1651.0], [61.2, 1658.0], [61.3, 1663.0], [61.4, 1669.0], [61.5, 1678.0], [61.6, 1686.0], [61.7, 1691.0], [61.8, 1699.0], [61.9, 1707.0], [62.0, 1716.0], [62.1, 1722.0], [62.2, 1730.0], [62.3, 1738.0], [62.4, 1746.0], [62.5, 1755.0], [62.6, 1764.0], [62.7, 1769.0], [62.8, 1776.0], [62.9, 1785.0], [63.0, 1795.0], [63.1, 1802.0], [63.2, 1813.0], [63.3, 1821.0], [63.4, 1831.0], [63.5, 1837.0], [63.6, 1849.0], [63.7, 1853.0], [63.8, 1861.0], [63.9, 1870.0], [64.0, 1877.0], [64.1, 1885.0], [64.2, 1889.0], [64.3, 1899.0], [64.4, 1908.0], [64.5, 1914.0], [64.6, 1922.0], [64.7, 1934.0], [64.8, 1938.0], [64.9, 1944.0], [65.0, 1949.0], [65.1, 1958.0], [65.2, 1963.0], [65.3, 1967.0], [65.4, 1974.0], [65.5, 1983.0], [65.6, 1988.0], [65.7, 1994.0], [65.8, 2001.0], [65.9, 2008.0], [66.0, 2014.0], [66.1, 2021.0], [66.2, 2025.0], [66.3, 2032.0], [66.4, 2040.0], [66.5, 2045.0], [66.6, 2050.0], [66.7, 2055.0], [66.8, 2062.0], [66.9, 2069.0], [67.0, 2075.0], [67.1, 2082.0], [67.2, 2087.0], [67.3, 2090.0], [67.4, 2094.0], [67.5, 2100.0], [67.6, 2108.0], [67.7, 2114.0], [67.8, 2121.0], [67.9, 2129.0], [68.0, 2137.0], [68.1, 2145.0], [68.2, 2152.0], [68.3, 2158.0], [68.4, 2162.0], [68.5, 2166.0], [68.6, 2171.0], [68.7, 2175.0], [68.8, 2183.0], [68.9, 2190.0], [69.0, 2196.0], [69.1, 2203.0], [69.2, 2209.0], [69.3, 2215.0], [69.4, 2221.0], [69.5, 2228.0], [69.6, 2233.0], [69.7, 2237.0], [69.8, 2246.0], [69.9, 2252.0], [70.0, 2255.0], [70.1, 2261.0], [70.2, 2265.0], [70.3, 2271.0], [70.4, 2277.0], [70.5, 2283.0], [70.6, 2288.0], [70.7, 2294.0], [70.8, 2298.0], [70.9, 2303.0], [71.0, 2308.0], [71.1, 2312.0], [71.2, 2317.0], [71.3, 2322.0], [71.4, 2327.0], [71.5, 2334.0], [71.6, 2338.0], [71.7, 2344.0], [71.8, 2349.0], [71.9, 2355.0], [72.0, 2358.0], [72.1, 2363.0], [72.2, 2367.0], [72.3, 2371.0], [72.4, 2378.0], [72.5, 2385.0], [72.6, 2392.0], [72.7, 2397.0], [72.8, 2402.0], [72.9, 2407.0], [73.0, 2412.0], [73.1, 2417.0], [73.2, 2421.0], [73.3, 2425.0], [73.4, 2431.0], [73.5, 2436.0], [73.6, 2439.0], [73.7, 2444.0], [73.8, 2448.0], [73.9, 2453.0], [74.0, 2457.0], [74.1, 2461.0], [74.2, 2465.0], [74.3, 2470.0], [74.4, 2473.0], [74.5, 2478.0], [74.6, 2484.0], [74.7, 2487.0], [74.8, 2491.0], [74.9, 2495.0], [75.0, 2500.0], [75.1, 2504.0], [75.2, 2507.0], [75.3, 2512.0], [75.4, 2518.0], [75.5, 2521.0], [75.6, 2525.0], [75.7, 2530.0], [75.8, 2533.0], [75.9, 2539.0], [76.0, 2544.0], [76.1, 2547.0], [76.2, 2552.0], [76.3, 2557.0], [76.4, 2561.0], [76.5, 2565.0], [76.6, 2568.0], [76.7, 2572.0], [76.8, 2578.0], [76.9, 2582.0], [77.0, 2586.0], [77.1, 2589.0], [77.2, 2593.0], [77.3, 2598.0], [77.4, 2601.0], [77.5, 2606.0], [77.6, 2611.0], [77.7, 2614.0], [77.8, 2618.0], [77.9, 2623.0], [78.0, 2629.0], [78.1, 2633.0], [78.2, 2637.0], [78.3, 2643.0], [78.4, 2647.0], [78.5, 2650.0], [78.6, 2654.0], [78.7, 2658.0], [78.8, 2662.0], [78.9, 2667.0], [79.0, 2670.0], [79.1, 2673.0], [79.2, 2677.0], [79.3, 2681.0], [79.4, 2684.0], [79.5, 2689.0], [79.6, 2692.0], [79.7, 2697.0], [79.8, 2701.0], [79.9, 2706.0], [80.0, 2710.0], [80.1, 2715.0], [80.2, 2722.0], [80.3, 2727.0], [80.4, 2731.0], [80.5, 2736.0], [80.6, 2740.0], [80.7, 2745.0], [80.8, 2750.0], [80.9, 2753.0], [81.0, 2757.0], [81.1, 2765.0], [81.2, 2769.0], [81.3, 2775.0], [81.4, 2780.0], [81.5, 2785.0], [81.6, 2791.0], [81.7, 2795.0], [81.8, 2799.0], [81.9, 2803.0], [82.0, 2808.0], [82.1, 2812.0], [82.2, 2820.0], [82.3, 2823.0], [82.4, 2829.0], [82.5, 2833.0], [82.6, 2838.0], [82.7, 2840.0], [82.8, 2845.0], [82.9, 2851.0], [83.0, 2856.0], [83.1, 2863.0], [83.2, 2867.0], [83.3, 2873.0], [83.4, 2879.0], [83.5, 2883.0], [83.6, 2887.0], [83.7, 2891.0], [83.8, 2895.0], [83.9, 2900.0], [84.0, 2906.0], [84.1, 2911.0], [84.2, 2914.0], [84.3, 2921.0], [84.4, 2924.0], [84.5, 2928.0], [84.6, 2934.0], [84.7, 2938.0], [84.8, 2942.0], [84.9, 2947.0], [85.0, 2950.0], [85.1, 2954.0], [85.2, 2959.0], [85.3, 2963.0], [85.4, 2969.0], [85.5, 2973.0], [85.6, 2977.0], [85.7, 2980.0], [85.8, 2985.0], [85.9, 2988.0], [86.0, 2993.0], [86.1, 2999.0], [86.2, 3003.0], [86.3, 3006.0], [86.4, 3012.0], [86.5, 3018.0], [86.6, 3023.0], [86.7, 3028.0], [86.8, 3032.0], [86.9, 3037.0], [87.0, 3041.0], [87.1, 3046.0], [87.2, 3049.0], [87.3, 3055.0], [87.4, 3061.0], [87.5, 3064.0], [87.6, 3067.0], [87.7, 3072.0], [87.8, 3076.0], [87.9, 3081.0], [88.0, 3086.0], [88.1, 3090.0], [88.2, 3096.0], [88.3, 3100.0], [88.4, 3105.0], [88.5, 3110.0], [88.6, 3114.0], [88.7, 3122.0], [88.8, 3127.0], [88.9, 3132.0], [89.0, 3140.0], [89.1, 3144.0], [89.2, 3151.0], [89.3, 3156.0], [89.4, 3163.0], [89.5, 3169.0], [89.6, 3176.0], [89.7, 3182.0], [89.8, 3188.0], [89.9, 3195.0], [90.0, 3198.0], [90.1, 3206.0], [90.2, 3211.0], [90.3, 3216.0], [90.4, 3222.0], [90.5, 3227.0], [90.6, 3232.0], [90.7, 3238.0], [90.8, 3246.0], [90.9, 3254.0], [91.0, 3260.0], [91.1, 3267.0], [91.2, 3274.0], [91.3, 3281.0], [91.4, 3288.0], [91.5, 3296.0], [91.6, 3303.0], [91.7, 3310.0], [91.8, 3317.0], [91.9, 3325.0], [92.0, 3332.0], [92.1, 3344.0], [92.2, 3352.0], [92.3, 3359.0], [92.4, 3368.0], [92.5, 3382.0], [92.6, 3390.0], [92.7, 3402.0], [92.8, 3411.0], [92.9, 3421.0], [93.0, 3434.0], [93.1, 3444.0], [93.2, 3454.0], [93.3, 3466.0], [93.4, 3480.0], [93.5, 3495.0], [93.6, 3508.0], [93.7, 3519.0], [93.8, 3533.0], [93.9, 3543.0], [94.0, 3554.0], [94.1, 3572.0], [94.2, 3592.0], [94.3, 3606.0], [94.4, 3618.0], [94.5, 3638.0], [94.6, 3663.0], [94.7, 3698.0], [94.8, 3720.0], [94.9, 3744.0], [95.0, 3769.0], [95.1, 3807.0], [95.2, 3834.0], [95.3, 3889.0], [95.4, 3920.0], [95.5, 3959.0], [95.6, 3993.0], [95.7, 4063.0], [95.8, 4112.0], [95.9, 4175.0], [96.0, 4236.0], [96.1, 4291.0], [96.2, 4356.0], [96.3, 4408.0], [96.4, 4450.0], [96.5, 4498.0], [96.6, 4549.0], [96.7, 4613.0], [96.8, 4659.0], [96.9, 4745.0], [97.0, 4805.0], [97.1, 4877.0], [97.2, 4938.0], [97.3, 5008.0], [97.4, 5078.0], [97.5, 5148.0], [97.6, 5198.0], [97.7, 5326.0], [97.8, 5463.0], [97.9, 5614.0], [98.0, 6531.0], [98.1, 12007.0], [98.2, 16006.0], [98.3, 20003.0], [98.4, 20004.0], [98.5, 20005.0], [98.6, 20005.0], [98.7, 20005.0], [98.8, 20005.0], [98.9, 20005.0], [99.0, 20006.0], [99.1, 20006.0], [99.2, 20006.0], [99.3, 20006.0], [99.4, 20006.0], [99.5, 20007.0], [99.6, 20188.0], [99.7, 20373.0], [99.8, 20509.0], [99.9, 20838.0], [100.0, 21064.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 9635.0, "series": [{"data": [[0.0, 9635.0], [600.0, 88.0], [700.0, 79.0], [800.0, 80.0], [900.0, 100.0], [1000.0, 106.0], [1100.0, 90.0], [1200.0, 117.0], [1300.0, 125.0], [1400.0, 161.0], [1500.0, 177.0], [1600.0, 195.0], [1700.0, 217.0], [1800.0, 240.0], [1900.0, 235.0], [2000.0, 289.0], [2100.0, 284.0], [2200.0, 302.0], [2300.0, 361.0], [2400.0, 348.0], [2500.0, 369.0], [2600.0, 377.0], [2800.0, 381.0], [2700.0, 370.0], [2900.0, 372.0], [3000.0, 303.0], [3100.0, 317.0], [3300.0, 240.0], [3200.0, 257.0], [3400.0, 185.0], [3500.0, 136.0], [3600.0, 91.0], [3700.0, 77.0], [3800.0, 56.0], [3900.0, 55.0], [4000.0, 43.0], [4200.0, 27.0], [4100.0, 37.0], [4300.0, 24.0], [4500.0, 23.0], [4400.0, 26.0], [4600.0, 32.0], [4700.0, 32.0], [4800.0, 28.0], [5000.0, 31.0], [4900.0, 30.0], [5100.0, 18.0], [5200.0, 22.0], [5300.0, 12.0], [5400.0, 10.0], [5600.0, 9.0], [5500.0, 9.0], [5800.0, 3.0], [5700.0, 3.0], [6100.0, 1.0], [6000.0, 3.0], [5900.0, 2.0], [6200.0, 1.0], [6600.0, 1.0], [6800.0, 1.0], [7100.0, 1.0], [20000.0, 1.0], [100.0, 57.0], [200.0, 32.0], [300.0, 37.0], [400.0, 49.0], [500.0, 80.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[2100.0, 7.0], [2300.0, 2.0], [2200.0, 3.0], [2400.0, 2.0], [600.0, 9.0], [700.0, 4.0], [800.0, 6.0], [200.0, 39.0], [900.0, 3.0], [1000.0, 8.0], [1100.0, 5.0], [300.0, 9.0], [1200.0, 2.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 1.0], [100.0, 50.0], [400.0, 3.0], [1600.0, 4.0], [1700.0, 5.0], [1800.0, 3.0], [1900.0, 2.0], [500.0, 3.0], [2000.0, 1.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 9033.0], [600.0, 113.0], [700.0, 94.0], [800.0, 103.0], [900.0, 103.0], [1000.0, 137.0], [1100.0, 125.0], [1200.0, 119.0], [1300.0, 120.0], [1400.0, 167.0], [1500.0, 195.0], [1600.0, 214.0], [1700.0, 221.0], [1800.0, 218.0], [1900.0, 256.0], [2000.0, 298.0], [2100.0, 275.0], [2300.0, 337.0], [2200.0, 311.0], [2400.0, 388.0], [2500.0, 415.0], [2600.0, 426.0], [2700.0, 354.0], [2800.0, 367.0], [2900.0, 387.0], [3000.0, 379.0], [3100.0, 305.0], [3200.0, 269.0], [3300.0, 199.0], [3400.0, 149.0], [3500.0, 125.0], [3600.0, 78.0], [3700.0, 67.0], [3800.0, 41.0], [3900.0, 50.0], [4000.0, 26.0], [4300.0, 30.0], [4100.0, 31.0], [4200.0, 34.0], [4400.0, 36.0], [4500.0, 31.0], [4600.0, 29.0], [4800.0, 28.0], [4700.0, 25.0], [4900.0, 25.0], [5100.0, 28.0], [5000.0, 26.0], [5300.0, 15.0], [5200.0, 12.0], [5400.0, 14.0], [5500.0, 11.0], [5600.0, 6.0], [5700.0, 2.0], [5800.0, 1.0], [5900.0, 2.0], [6000.0, 4.0], [6300.0, 1.0], [6400.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [12000.0, 19.0], [16000.0, 28.0], [20000.0, 224.0], [20100.0, 8.0], [20200.0, 13.0], [20300.0, 6.0], [20400.0, 11.0], [20500.0, 8.0], [20600.0, 8.0], [20700.0, 3.0], [20800.0, 11.0], [20900.0, 7.0], [21000.0, 3.0], [100.0, 39.0], [200.0, 28.0], [300.0, 53.0], [400.0, 72.0], [500.0, 101.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2227.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16651.0, "series": [{"data": [[0.0, 2882.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2227.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 13415.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 16651.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 21.581818181818182, "minX": 1.58543454E12, "maxY": 175.0, "series": [{"data": [[1.5854349E12, 175.0], [1.5854352E12, 118.93358278765217], [1.58543526E12, 21.581818181818182], [1.5854346E12, 154.69125090383227], [1.58543466E12, 175.0], [1.58543496E12, 175.0], [1.58543502E12, 175.0], [1.58543472E12, 175.0], [1.58543478E12, 175.0], [1.58543508E12, 175.0], [1.58543514E12, 173.80849842090208], [1.58543454E12, 56.07297297297292], [1.58543484E12, 175.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543526E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 38.5, "minX": 3.0, "maxY": 3085.5873015873017, "series": [{"data": [[3.0, 54.0], [6.0, 54.5], [10.0, 53.0], [11.0, 58.0], [12.0, 46.5], [13.0, 51.12500000000001], [14.0, 49.0], [15.0, 55.0], [16.0, 51.5], [17.0, 61.142857142857146], [18.0, 46.88888888888889], [19.0, 46.25], [20.0, 43.5], [21.0, 63.0], [22.0, 38.5], [23.0, 40.5], [24.0, 49.6], [25.0, 51.666666666666664], [26.0, 54.0], [27.0, 50.5], [28.0, 50.5], [29.0, 53.666666666666664], [30.0, 60.0], [31.0, 50.5], [32.0, 42.0], [33.0, 48.375], [34.0, 50.8], [35.0, 47.0], [36.0, 52.6], [37.0, 46.0], [38.0, 51.1], [39.0, 40.0], [40.0, 74.0], [41.0, 55.0], [42.0, 86.66666666666667], [43.0, 52.0], [44.0, 49.0], [45.0, 50.125], [46.0, 50.33333333333333], [47.0, 63.0], [48.0, 48.875], [49.0, 52.8], [50.0, 53.4], [51.0, 46.5], [52.0, 51.800000000000004], [53.0, 53.214285714285715], [54.0, 45.4], [55.0, 47.5], [56.0, 99.64705882352942], [57.0, 305.55555555555554], [58.0, 327.75], [59.0, 69.42857142857143], [60.0, 82.75], [61.0, 43.8], [62.0, 50.0], [63.0, 43.53846153846153], [64.0, 57.15384615384616], [65.0, 49.666666666666664], [66.0, 56.5], [67.0, 51.333333333333336], [68.0, 72.33333333333334], [69.0, 52.76923076923077], [70.0, 48.800000000000004], [71.0, 55.833333333333336], [72.0, 49.769230769230774], [73.0, 47.25], [74.0, 50.5], [75.0, 83.33333333333333], [76.0, 59.0], [77.0, 64.77777777777777], [78.0, 78.27777777777779], [79.0, 45.666666666666664], [80.0, 51.32], [81.0, 61.6923076923077], [82.0, 52.0], [83.0, 57.5], [84.0, 341.6578947368421], [85.0, 337.15384615384613], [86.0, 57.55555555555555], [87.0, 650.875], [88.0, 182.45454545454544], [89.0, 310.71428571428567], [90.0, 188.8], [91.0, 784.2380952380953], [92.0, 606.5714285714286], [93.0, 84.66666666666667], [94.0, 545.1500000000001], [95.0, 240.25], [96.0, 624.8620689655171], [97.0, 302.4444444444444], [98.0, 544.2380952380952], [99.0, 54.4], [100.0, 810.7333333333333], [101.0, 700.6666666666666], [102.0, 754.0909090909091], [103.0, 1009.0], [104.0, 829.625], [105.0, 894.9999999999999], [106.0, 904.7857142857142], [107.0, 1336.2926829268295], [108.0, 1427.1249999999998], [109.0, 1075.6], [110.0, 1162.25], [111.0, 1157.6000000000001], [112.0, 985.0], [113.0, 1051.0833333333333], [114.0, 1190.125], [115.0, 1151.25], [116.0, 1226.8749999999998], [117.0, 1496.264705882353], [118.0, 1635.7], [119.0, 1607.8333333333335], [120.0, 1694.5272727272727], [121.0, 1214.6], [122.0, 1562.0], [123.0, 1526.2142857142858], [124.0, 1527.125], [125.0, 1543.1562499999998], [126.0, 1640.9999999999998], [127.0, 1894.4666666666667], [128.0, 1960.0], [129.0, 2100.7307692307695], [130.0, 2053.230769230769], [131.0, 1990.076923076923], [132.0, 1925.05], [133.0, 1948.4166666666667], [134.0, 2031.0], [135.0, 1906.5217391304348], [136.0, 1705.5], [137.0, 1659.3333333333333], [138.0, 1996.7777777777778], [139.0, 1846.9090909090912], [140.0, 1732.4444444444446], [141.0, 1711.3333333333333], [143.0, 1595.4285714285716], [144.0, 2018.7692307692305], [145.0, 1905.4102564102564], [146.0, 2580.0], [147.0, 2305.112676056338], [148.0, 1966.4], [149.0, 2000.8749999999995], [150.0, 2106.1333333333328], [151.0, 2036.869565217391], [152.0, 1733.3000000000002], [153.0, 2653.2], [154.0, 1795.1395348837207], [155.0, 1853.229508196721], [156.0, 1963.1666666666667], [157.0, 2090.533333333333], [158.0, 2393.0], [159.0, 2367.6875], [160.0, 2457.3999999999996], [161.0, 2130.4666666666667], [162.0, 2487.9999999999995], [163.0, 2611.4], [164.0, 2538.4285714285706], [165.0, 1874.5], [166.0, 2684.78947368421], [167.0, 2908.802631578946], [168.0, 2384.360000000001], [170.0, 2075.1818181818185], [171.0, 2505.9523809523807], [172.0, 3050.122641509434], [173.0, 2628.2], [174.0, 2739.849710982658], [175.0, 1057.9683936787353], [169.0, 2456.658536585366]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[167.2721714285712, 1118.6941142857095]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[7.0, 1691.3333333333333], [8.0, 507.0], [9.0, 2422.0], [10.0, 920.75], [11.0, 177.0], [12.0, 166.0], [13.0, 165.0], [14.0, 168.0], [15.0, 166.0], [16.0, 184.0], [17.0, 247.0], [18.0, 246.0], [19.0, 224.0], [20.0, 170.0], [21.0, 179.0], [22.0, 167.0], [23.0, 167.0], [24.0, 207.0], [25.0, 186.0], [26.0, 255.0], [27.0, 182.0], [28.0, 156.0], [29.0, 298.0], [30.0, 190.0], [31.0, 174.0], [32.0, 188.0], [33.0, 187.0], [34.0, 171.0], [35.0, 166.0], [36.0, 202.0], [37.0, 224.0], [38.0, 264.0], [39.0, 206.0], [40.0, 316.0], [42.0, 413.5], [43.0, 187.0], [44.0, 304.0], [46.0, 340.0], [47.0, 277.0], [48.0, 191.0], [49.0, 196.0], [50.0, 200.0], [51.0, 291.0], [52.0, 288.0], [53.0, 211.0], [54.0, 226.0], [55.0, 220.0], [56.0, 205.0], [57.0, 185.0], [58.0, 205.0], [59.0, 296.0], [60.0, 194.0], [61.0, 208.0], [62.0, 197.0], [63.0, 230.0], [64.0, 193.0], [65.0, 164.0], [66.0, 282.0], [67.0, 183.0], [68.0, 282.0], [69.0, 328.0], [70.0, 161.0], [71.0, 216.0], [72.0, 175.0], [73.0, 168.0], [74.0, 234.0], [76.0, 507.0], [77.0, 356.0], [78.0, 336.0], [79.0, 188.0], [81.0, 375.5], [82.0, 177.0], [83.0, 193.0], [84.0, 221.0], [85.0, 179.0], [86.0, 285.0], [87.0, 195.0], [88.0, 188.0], [89.0, 213.0], [90.0, 187.0], [91.0, 188.0], [92.0, 183.0], [93.0, 208.0], [94.0, 163.0], [95.0, 188.0], [96.0, 176.0], [97.0, 207.0], [98.0, 194.0], [99.0, 207.0], [100.0, 192.0], [101.0, 205.0], [102.0, 276.0], [104.0, 469.5], [106.0, 307.0], [107.0, 447.5], [109.0, 480.0], [111.0, 354.0], [112.0, 472.0], [113.0, 522.0], [114.0, 607.0], [115.0, 219.0], [116.0, 733.0], [117.0, 186.0], [118.0, 750.0], [121.0, 936.3333333333334], [123.0, 822.0], [124.0, 814.0], [125.0, 801.5], [126.0, 627.0], [129.0, 1036.0], [130.0, 1108.0], [131.0, 1049.0], [132.0, 1299.0], [133.0, 1257.0], [134.0, 1120.0], [135.0, 1336.0], [136.0, 959.0], [137.0, 1466.0], [139.0, 1095.0], [140.0, 1445.0], [142.0, 1384.5], [146.0, 1615.5], [148.0, 2300.5], [149.0, 882.0], [151.0, 1659.0], [152.0, 1209.5], [154.0, 2188.0], [155.0, 1987.5], [158.0, 1002.0], [159.0, 2182.0], [160.0, 2123.0], [162.0, 1748.0], [164.0, 1768.0], [165.0, 1308.3333333333333], [166.0, 1648.0], [168.0, 824.0], [169.0, 1212.0], [170.0, 1835.0], [172.0, 1066.0], [173.0, 1695.0], [175.0, 1905.1666666666667]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[89.43428571428568, 699.8914285714282]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[3.0, 49.0], [4.0, 45.5], [10.0, 80.0], [11.0, 60.75], [12.0, 51.5], [13.0, 53.1], [14.0, 57.0], [15.0, 45.5], [17.0, 54.0], [18.0, 48.25], [19.0, 44.333333333333336], [20.0, 47.0], [21.0, 50.666666666666664], [22.0, 48.4], [23.0, 41.857142857142854], [24.0, 49.44444444444444], [25.0, 50.8], [26.0, 48.5], [27.0, 40.0], [28.0, 46.666666666666664], [29.0, 46.0], [30.0, 40.0], [31.0, 59.0], [32.0, 49.800000000000004], [33.0, 49.0], [34.0, 47.16666666666667], [35.0, 50.83333333333333], [36.0, 49.125], [37.0, 41.333333333333336], [38.0, 60.375], [39.0, 44.0], [40.0, 52.0], [41.0, 70.0], [42.0, 85.0], [43.0, 48.285714285714285], [44.0, 49.333333333333336], [45.0, 67.83333333333333], [46.0, 57.5], [47.0, 48.166666666666664], [48.0, 48.62500000000001], [49.0, 54.75], [50.0, 61.0], [51.0, 65.66666666666667], [52.0, 44.5], [53.0, 45.714285714285715], [54.0, 66.0], [55.0, 53.90909090909091], [56.0, 143.4375], [57.0, 115.83333333333334], [58.0, 363.12499999999994], [59.0, 57.2], [60.0, 120.41666666666667], [61.0, 440.0], [62.0, 46.5], [63.0, 45.57142857142857], [64.0, 53.57142857142857], [65.0, 47.16666666666667], [66.0, 52.125], [67.0, 47.14285714285714], [68.0, 62.90909090909091], [69.0, 56.166666666666664], [70.0, 48.75], [71.0, 55.54545454545454], [72.0, 50.05555555555556], [73.0, 45.0], [74.0, 53.6], [75.0, 59.66666666666667], [76.0, 65.16666666666667], [77.0, 58.21739130434782], [78.0, 94.66666666666667], [79.0, 52.142857142857146], [80.0, 57.07692307692308], [81.0, 63.384615384615394], [82.0, 44.18181818181818], [83.0, 48.857142857142854], [84.0, 436.1935483870967], [85.0, 331.58333333333337], [86.0, 57.875], [87.0, 342.25], [88.0, 208.88888888888889], [89.0, 226.91666666666666], [90.0, 292.26666666666665], [91.0, 598.1176470588234], [92.0, 759.9259259259259], [93.0, 80.99999999999999], [94.0, 669.6428571428572], [95.0, 215.66666666666669], [96.0, 525.75], [97.0, 423.1176470588236], [98.0, 420.18750000000006], [99.0, 61.62500000000001], [100.0, 715.1578947368421], [101.0, 1012.6], [102.0, 647.1428571428571], [103.0, 872.2941176470589], [104.0, 813.6999999999999], [105.0, 853.3333333333333], [106.0, 1139.9047619047617], [107.0, 1291.999999999999], [108.0, 1302.6818181818182], [109.0, 898.7857142857142], [110.0, 1350.6], [111.0, 1107.3333333333333], [112.0, 1336.7272727272727], [113.0, 893.3333333333333], [114.0, 1072.6666666666667], [115.0, 1238.8333333333333], [116.0, 510.0], [117.0, 1400.7391304347825], [118.0, 1628.2272727272723], [119.0, 1387.3684210526317], [120.0, 1724.266666666667], [121.0, 808.6666666666666], [122.0, 1441.9565217391303], [123.0, 1495.3529411764707], [124.0, 1595.7058823529412], [125.0, 1537.238095238095], [126.0, 1676.0869565217388], [127.0, 1845.2272727272727], [128.0, 1412.1666666666667], [129.0, 2055.709677419355], [130.0, 2014.4545454545455], [131.0, 2009.6153846153845], [132.0, 2068.2105263157896], [133.0, 1945.3333333333333], [134.0, 2140.666666666667], [135.0, 2048.2758620689656], [136.0, 1639.0], [137.0, 1818.5], [138.0, 2026.0714285714284], [139.0, 2035.6250000000002], [140.0, 1704.0454545454547], [141.0, 1733.8333333333335], [142.0, 2525.0], [143.0, 1419.0], [144.0, 1887.3076923076924], [145.0, 1752.75], [147.0, 2294.020408163265], [148.0, 2392.8571428571427], [149.0, 2390.428571428571], [150.0, 2081.4193548387098], [151.0, 2091.6086956521735], [146.0, 1821.0], [152.0, 2064.5454545454545], [153.0, 1880.2727272727275], [154.0, 1720.408163265306], [155.0, 2021.7948717948716], [156.0, 1963.75], [157.0, 2150.8999999999996], [158.0, 1272.5], [159.0, 2367.789473684211], [160.0, 2096.4999999999995], [161.0, 2238.0], [162.0, 2551.7343750000005], [163.0, 2492.347826086957], [164.0, 2518.8], [165.0, 2182.625], [166.0, 2587.111111111111], [167.0, 2771.4814814814813], [168.0, 2294.857142857143], [169.0, 2376.578125], [170.0, 1886.636363636364], [171.0, 2337.8461538461534], [172.0, 3085.5873015873017], [173.0, 2748.8800000000006], [174.0, 2755.0960451977403], [175.0, 1526.1914213400767]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[167.293428571429, 1516.5052571428614]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 175.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.58543454E12, "maxY": 280944.5333333333, "series": [{"data": [[1.5854349E12, 250045.7], [1.5854352E12, 253348.2], [1.58543526E12, 13027.066666666668], [1.5854346E12, 273595.2166666667], [1.58543466E12, 273967.88333333336], [1.58543496E12, 135031.6], [1.58543502E12, 192423.58333333334], [1.58543472E12, 262006.68333333332], [1.58543478E12, 280944.5333333333], [1.58543508E12, 192595.66666666666], [1.58543514E12, 235753.53333333333], [1.58543454E12, 79492.5], [1.58543484E12, 167558.18333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5854349E12, 15086.733333333334], [1.5854352E12, 15287.466666666667], [1.58543526E12, 786.8], [1.5854346E12, 18837.8], [1.58543466E12, 16572.933333333334], [1.58543496E12, 4498.733333333334], [1.58543502E12, 0.0], [1.58543472E12, 15809.166666666666], [1.58543478E12, 19145.866666666665], [1.58543508E12, 0.0], [1.58543514E12, 9852.633333333333], [1.58543454E12, 5005.833333333333], [1.58543484E12, 11337.566666666668]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543526E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.027877055039314, "minX": 1.58543454E12, "maxY": 4483.140074211501, "series": [{"data": [[1.5854349E12, 3081.888888888891], [1.5854352E12, 1463.2921245421248], [1.58543526E12, 47.765625], [1.5854346E12, 1437.2759666413933], [1.58543466E12, 2415.577284372331], [1.58543496E12, 444.0686830497786], [1.58543502E12, 1.381668456856424], [1.58543472E12, 2918.0321141837694], [1.58543478E12, 1882.2872648335729], [1.58543508E12, 1.0482487491065031], [1.58543514E12, 1036.5689655172418], [1.58543454E12, 57.101587301587315], [1.58543484E12, 1489.7916666666663]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.5854346E12, 1031.3555555555558], [1.58543454E12, 348.9294117647059]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.5854349E12, 3069.269083969463], [1.5854352E12, 1477.5172084130015], [1.58543526E12, 48.04347826086956], [1.5854346E12, 1510.9904200442154], [1.58543466E12, 2492.912824811399], [1.58543496E12, 2658.4021808851876], [1.58543502E12, 1.027877055039314], [1.58543472E12, 2894.4605504587134], [1.58543478E12, 1973.7820512820501], [1.58543508E12, 1.0461043602573277], [1.58543514E12, 1045.2185886402747], [1.58543454E12, 56.032352941176434], [1.58543484E12, 4483.140074211501]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543526E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58543454E12, "maxY": 3081.4500941619535, "series": [{"data": [[1.5854349E12, 3081.4500941619535], [1.5854352E12, 1462.7472527472523], [1.58543526E12, 47.421874999999986], [1.5854346E12, 1436.7915087187273], [1.58543466E12, 2414.775405636209], [1.58543496E12, 430.5916824196584], [1.58543502E12, 0.0], [1.58543472E12, 2917.3657448706513], [1.58543478E12, 1881.7547033285148], [1.58543508E12, 0.0], [1.58543514E12, 1035.364367816092], [1.58543454E12, 55.95555555555552], [1.58543484E12, 1488.9081439393942]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.5854346E12, 1030.7777777777778], [1.58543454E12, 347.5176470588236]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.5854349E12, 3068.871183206104], [1.5854352E12, 1476.9455066921594], [1.58543526E12, 47.54347826086957], [1.5854346E12, 1510.4104642593952], [1.58543466E12, 2482.2087175188626], [1.58543496E12, 424.7921744708142], [1.58543502E12, 0.0], [1.58543472E12, 2893.905504587158], [1.58543478E12, 1971.2770655270685], [1.58543508E12, 0.0], [1.58543514E12, 1043.3247274813548], [1.58543454E12, 55.35000000000002], [1.58543484E12, 2962.5760667903482]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543526E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58543454E12, "maxY": 3.3886827458256064, "series": [{"data": [[1.5854349E12, 0.573446327683616], [1.5854352E12, 0.7307692307692304], [1.58543526E12, 0.0], [1.5854346E12, 0.5420773313116002], [1.58543466E12, 0.621690862510675], [1.58543496E12, 0.5412728418399493], [1.58543502E12, 0.8925886143931281], [1.58543472E12, 0.6333630686886693], [1.58543478E12, 0.47033285094066585], [1.58543508E12, 0.5432451751250887], [1.58543514E12, 0.5591954022988499], [1.58543454E12, 0.21904761904761907], [1.58543484E12, 0.4867424242424246]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.5854346E12, 0.7888888888888889], [1.58543454E12, 1.223529411764706]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.5854349E12, 0.5916030534351145], [1.5854352E12, 0.6931166347992355], [1.58543526E12, 0.6521739130434782], [1.5854346E12, 0.7752394988946195], [1.58543466E12, 0.6378876781223809], [1.58543496E12, 0.5676715843489422], [1.58543502E12, 0.5142959256611866], [1.58543472E12, 0.6486238532110099], [1.58543478E12, 0.6146723646723653], [1.58543508E12, 0.5289492494639024], [1.58543514E12, 1.1589213998852548], [1.58543454E12, 0.7558823529411764], [1.58543484E12, 3.3886827458256064]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543526E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.58543454E12, "maxY": 21064.0, "series": [{"data": [[1.5854349E12, 4133.0], [1.58543472E12, 7130.0], [1.5854352E12, 3302.0], [1.58543478E12, 6027.0], [1.58543526E12, 78.0], [1.5854346E12, 5467.0], [1.58543466E12, 5631.0], [1.58543514E12, 3712.0], [1.58543496E12, 3743.0], [1.58543454E12, 2422.0], [1.58543484E12, 21064.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5854349E12, 2006.0], [1.58543472E12, 448.0], [1.5854352E12, 29.0], [1.58543478E12, 1.0], [1.58543526E12, 29.0], [1.5854346E12, 2.0], [1.58543466E12, 2.0], [1.58543514E12, 1174.0], [1.58543496E12, 1.0], [1.58543454E12, 30.0], [1.58543484E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5854349E12, 3459.9], [1.58543472E12, 4870.0], [1.5854352E12, 2446.4000000000005], [1.58543478E12, 3757.4000000000005], [1.58543526E12, 59.900000000000006], [1.5854346E12, 2707.5], [1.58543466E12, 3077.1], [1.58543514E12, 3186.0], [1.58543496E12, 3203.0], [1.58543454E12, 174.89999999999998], [1.58543484E12, 3847.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5854349E12, 3750.5699999999983], [1.58543472E12, 5832.760000000003], [1.5854352E12, 2874.150000000002], [1.58543478E12, 4944.52], [1.58543526E12, 76.68], [1.5854346E12, 3514.35], [1.58543466E12, 5166.86], [1.58543514E12, 3500.21], [1.58543496E12, 3419.2000000000003], [1.58543454E12, 771.2000000000057], [1.58543484E12, 20844.2]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5854349E12, 3545.0], [1.58543472E12, 5205.200000000001], [1.5854352E12, 2598.1499999999996], [1.58543478E12, 4298.2], [1.58543526E12, 61.0], [1.5854346E12, 2954.0], [1.58543466E12, 3981.7999999999956], [1.58543514E12, 3294.05], [1.58543496E12, 3302.0], [1.58543454E12, 223.8499999999998], [1.58543484E12, 20106.5]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543526E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 20220.0, "series": [{"data": [[2.0, 49.5], [3.0, 55.0], [5.0, 54.0], [6.0, 115.0], [7.0, 54.0], [9.0, 46.0], [10.0, 45.0], [11.0, 158.0], [12.0, 42.0], [13.0, 51.5], [14.0, 47.5], [15.0, 242.5], [16.0, 54.5], [17.0, 49.0], [18.0, 49.0], [19.0, 49.0], [21.0, 629.5], [22.0, 47.5], [23.0, 51.0], [24.0, 2243.0], [25.0, 687.5], [26.0, 2701.5], [27.0, 1652.0], [28.0, 2759.5], [29.0, 2300.0], [30.0, 3024.0], [31.0, 2819.5], [33.0, 2700.0], [32.0, 2383.0], [34.0, 2833.5], [35.0, 2762.5], [37.0, 2194.5], [36.0, 2431.5], [38.0, 2811.0], [39.0, 2590.0], [41.0, 2270.0], [40.0, 2688.5], [43.0, 2542.0], [42.0, 2563.0], [45.0, 2355.0], [44.0, 2167.0], [47.0, 1080.0], [46.0, 2272.0], [49.0, 2014.0], [48.0, 1621.0], [50.0, 1634.5], [51.0, 2674.0], [52.0, 2412.0], [53.0, 38.0], [55.0, 2008.0], [54.0, 64.0], [56.0, 49.0], [57.0, 414.0], [58.0, 2192.5], [61.0, 5.0], [60.0, 3008.5], [62.0, 775.5], [67.0, 8.0], [69.0, 59.0], [75.0, 420.0], [74.0, 1422.5], [72.0, 818.0], [77.0, 1662.0], [76.0, 4.0], [80.0, 12.5], [83.0, 36.0], [86.0, 37.5], [87.0, 103.0], [89.0, 2190.0], [98.0, 1397.0], [101.0, 3.0], [102.0, 20220.0], [105.0, 2037.0], [107.0, 53.5], [111.0, 2158.0], [115.0, 833.0], [142.0, 2315.0], [149.0, 1857.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 1.5], [13.0, 1.0], [14.0, 20006.0], [15.0, 1.0], [18.0, 0.0], [19.0, 6002.0], [24.0, 3208.0], [33.0, 2848.0], [32.0, 5084.0], [34.0, 2701.5], [35.0, 4002.0], [36.0, 1.0], [38.0, 1263.0], [39.0, 1.0], [43.0, 1.0], [42.0, 1262.5], [44.0, 722.0], [47.0, 0.0], [53.0, 0.0], [55.0, 1.0], [57.0, 0.5], [56.0, 20005.0], [61.0, 0.0], [60.0, 1.0], [62.0, 0.0], [67.0, 1.0], [69.0, 5068.0], [75.0, 1.0], [72.0, 0.0], [73.0, 20005.0], [77.0, 1.0], [78.0, 1.0], [76.0, 1.0], [79.0, 1.0], [80.0, 1.0], [83.0, 1.0], [82.0, 1.0], [81.0, 1.0], [87.0, 1.0], [86.0, 1.0], [85.0, 1.0], [84.0, 1.0], [90.0, 1.0], [91.0, 1.0], [88.0, 1.0], [89.0, 1.0], [92.0, 1.0], [93.0, 1.0], [94.0, 1.0], [95.0, 1.0], [98.0, 1.0], [96.0, 1.0], [97.0, 1.0], [99.0, 1.0], [102.0, 1.0], [101.0, 1.0], [100.0, 1.0], [103.0, 1.0], [105.0, 1.0], [107.0, 1.0], [106.0, 1.0], [104.0, 1.0], [109.0, 1.0], [110.0, 1.0], [115.0, 1.0], [114.0, 1.0], [119.0, 1.0], [122.0, 1.0], [128.0, 20002.5], [149.0, 3027.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 149.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 20220.0, "series": [{"data": [[2.0, 49.5], [3.0, 54.0], [5.0, 53.0], [6.0, 114.5], [7.0, 53.0], [9.0, 45.0], [10.0, 44.5], [11.0, 158.0], [12.0, 42.0], [13.0, 51.0], [14.0, 47.0], [15.0, 242.5], [16.0, 54.0], [17.0, 49.0], [18.0, 49.0], [19.0, 49.0], [21.0, 628.0], [22.0, 47.5], [23.0, 49.0], [24.0, 2237.0], [25.0, 687.5], [26.0, 2701.5], [27.0, 1651.5], [28.0, 2758.5], [29.0, 2300.0], [30.0, 3024.0], [31.0, 2819.0], [33.0, 2700.0], [32.0, 2383.0], [34.0, 2833.0], [35.0, 2762.5], [37.0, 2194.5], [36.0, 2431.0], [38.0, 2808.0], [39.0, 2589.5], [41.0, 2270.0], [40.0, 2688.5], [43.0, 2542.0], [42.0, 2563.0], [45.0, 2346.0], [44.0, 2167.0], [47.0, 1077.0], [46.0, 2271.5], [49.0, 2014.0], [48.0, 1620.5], [50.0, 1634.0], [51.0, 2673.5], [52.0, 2412.0], [53.0, 37.0], [55.0, 2007.0], [54.0, 63.0], [56.0, 49.0], [57.0, 413.0], [58.0, 2192.0], [61.0, 5.0], [60.0, 3008.0], [62.0, 775.0], [67.0, 8.0], [69.0, 59.0], [75.0, 420.0], [74.0, 1421.5], [72.0, 818.0], [77.0, 1662.0], [76.0, 4.0], [80.0, 12.5], [83.0, 36.0], [86.0, 37.0], [87.0, 102.5], [89.0, 2189.0], [98.0, 1397.0], [101.0, 3.0], [102.0, 20220.0], [105.0, 2037.0], [107.0, 53.5], [111.0, 2158.0], [115.0, 833.0], [142.0, 2315.0], [149.0, 1857.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [18.0, 0.0], [19.0, 0.0], [24.0, 3207.5], [33.0, 2847.0], [32.0, 5083.0], [34.0, 2701.0], [35.0, 4001.5], [36.0, 0.0], [38.0, 1263.0], [39.0, 0.0], [43.0, 0.0], [42.0, 1262.0], [44.0, 722.0], [47.0, 0.0], [53.0, 0.0], [55.0, 0.0], [57.0, 0.0], [56.0, 0.0], [61.0, 0.0], [60.0, 0.0], [62.0, 0.0], [67.0, 0.0], [69.0, 5034.5], [75.0, 0.0], [72.0, 0.0], [73.0, 0.0], [77.0, 0.0], [78.0, 0.0], [76.0, 0.0], [79.0, 0.0], [80.0, 0.0], [83.0, 0.0], [82.0, 0.0], [81.0, 0.0], [87.0, 0.0], [86.0, 0.0], [85.0, 0.0], [84.0, 0.0], [90.0, 0.0], [91.0, 0.0], [88.0, 0.0], [89.0, 0.0], [92.0, 0.0], [93.0, 0.0], [94.0, 0.0], [95.0, 0.0], [98.0, 0.0], [96.0, 0.0], [97.0, 0.0], [99.0, 0.0], [102.0, 0.0], [101.0, 0.0], [100.0, 0.0], [103.0, 0.0], [105.0, 0.0], [107.0, 0.0], [106.0, 0.0], [104.0, 0.0], [109.0, 0.0], [110.0, 0.0], [115.0, 0.0], [114.0, 0.0], [119.0, 0.0], [122.0, 0.0], [128.0, 0.0], [149.0, 3027.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 149.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.8, "minX": 1.58543454E12, "maxY": 93.26666666666667, "series": [{"data": [[1.5854349E12, 35.266666666666666], [1.5854352E12, 34.06666666666667], [1.58543526E12, 1.8], [1.5854346E12, 46.65], [1.58543466E12, 40.5], [1.58543496E12, 50.55], [1.58543502E12, 93.18333333333334], [1.58543472E12, 36.78333333333333], [1.58543478E12, 46.05], [1.58543508E12, 93.26666666666667], [1.58543514E12, 59.65], [1.58543454E12, 12.383333333333333], [1.58543484E12, 36.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543526E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58543454E12, "maxY": 93.26666666666667, "series": [{"data": [[1.5854349E12, 35.166666666666664], [1.58543472E12, 36.85], [1.5854352E12, 35.63333333333333], [1.58543478E12, 44.28333333333333], [1.58543526E12, 1.8333333333333333], [1.5854346E12, 44.4], [1.58543466E12, 38.63333333333333], [1.58543514E12, 22.966666666666665], [1.58543496E12, 10.483333333333333], [1.58543454E12, 12.333333333333334], [1.58543484E12, 26.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58543478E12, 0.35], [1.5854346E12, 0.21666666666666667], [1.58543484E12, 0.2833333333333333]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.58543478E12, 0.016666666666666666], [1.5854346E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.TruncatedChunkException", "isController": false}, {"data": [[1.58543478E12, 1.5833333333333333], [1.5854346E12, 0.7666666666666667], [1.58543508E12, 93.26666666666667], [1.58543466E12, 0.5166666666666667], [1.58543514E12, 35.083333333333336], [1.58543496E12, 41.95], [1.58543502E12, 93.18333333333334], [1.58543484E12, 9.133333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.58543478E12, 0.2], [1.5854346E12, 0.7], [1.58543466E12, 0.25]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58543526E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.58543454E12, "maxY": 46.63333333333333, "series": [{"data": [[1.5854346E12, 1.5], [1.58543454E12, 1.4166666666666667]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.5854349E12, 17.7], [1.58543472E12, 18.683333333333334], [1.5854352E12, 18.2], [1.58543478E12, 21.2], [1.58543526E12, 1.0666666666666667], [1.5854346E12, 20.866666666666667], [1.58543466E12, 18.933333333333334], [1.58543514E12, 11.45], [1.58543496E12, 5.933333333333334], [1.58543454E12, 5.25], [1.58543484E12, 11.95]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58543478E12, 1.8333333333333333], [1.5854346E12, 1.1166666666666667], [1.58543508E12, 46.63333333333333], [1.58543466E12, 0.5833333333333334], [1.58543514E12, 17.55], [1.58543496E12, 20.516666666666666], [1.58543502E12, 46.55], [1.58543484E12, 5.65]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.5854349E12, 17.466666666666665], [1.58543472E12, 18.166666666666668], [1.5854352E12, 17.433333333333334], [1.58543478E12, 23.083333333333332], [1.58543526E12, 0.7666666666666667], [1.5854346E12, 22.033333333333335], [1.58543466E12, 19.7], [1.58543514E12, 11.516666666666667], [1.58543496E12, 4.55], [1.58543454E12, 5.666666666666667], [1.58543484E12, 14.2]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.58543478E12, 0.31666666666666665], [1.5854346E12, 0.5833333333333334], [1.58543508E12, 46.63333333333333], [1.58543466E12, 0.18333333333333332], [1.58543514E12, 17.533333333333335], [1.58543496E12, 21.433333333333334], [1.58543502E12, 46.63333333333333], [1.58543484E12, 3.7666666666666666]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543526E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.7666666666666667, "minX": 1.58543454E12, "maxY": 93.26666666666667, "series": [{"data": [[1.5854349E12, 35.166666666666664], [1.58543472E12, 36.85], [1.5854352E12, 35.63333333333333], [1.58543478E12, 44.28333333333333], [1.58543526E12, 1.8333333333333333], [1.5854346E12, 44.4], [1.58543466E12, 38.63333333333333], [1.58543514E12, 22.966666666666665], [1.58543496E12, 10.483333333333333], [1.58543454E12, 12.333333333333334], [1.58543484E12, 26.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58543478E12, 2.15], [1.5854346E12, 1.7], [1.58543508E12, 93.26666666666667], [1.58543466E12, 0.7666666666666667], [1.58543514E12, 35.083333333333336], [1.58543496E12, 41.95], [1.58543502E12, 93.18333333333334], [1.58543484E12, 9.416666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58543526E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

