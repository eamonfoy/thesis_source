/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 15955.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 3.0], [39.8, 3.0], [39.9, 3.0], [40.0, 3.0], [40.1, 3.0], [40.2, 3.0], [40.3, 3.0], [40.4, 3.0], [40.5, 3.0], [40.6, 3.0], [40.7, 3.0], [40.8, 3.0], [40.9, 3.0], [41.0, 3.0], [41.1, 3.0], [41.2, 3.0], [41.3, 3.0], [41.4, 3.0], [41.5, 3.0], [41.6, 3.0], [41.7, 3.0], [41.8, 3.0], [41.9, 3.0], [42.0, 3.0], [42.1, 3.0], [42.2, 3.0], [42.3, 3.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 4.0], [42.8, 4.0], [42.9, 4.0], [43.0, 4.0], [43.1, 4.0], [43.2, 4.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 6.0], [43.7, 7.0], [43.8, 14.0], [43.9, 19.0], [44.0, 21.0], [44.1, 23.0], [44.2, 25.0], [44.3, 26.0], [44.4, 27.0], [44.5, 28.0], [44.6, 29.0], [44.7, 31.0], [44.8, 32.0], [44.9, 34.0], [45.0, 36.0], [45.1, 37.0], [45.2, 40.0], [45.3, 42.0], [45.4, 46.0], [45.5, 50.0], [45.6, 63.0], [45.7, 83.0], [45.8, 128.0], [45.9, 178.0], [46.0, 246.0], [46.1, 325.0], [46.2, 367.0], [46.3, 421.0], [46.4, 452.0], [46.5, 490.0], [46.6, 545.0], [46.7, 579.0], [46.8, 626.0], [46.9, 659.0], [47.0, 690.0], [47.1, 716.0], [47.2, 755.0], [47.3, 788.0], [47.4, 821.0], [47.5, 846.0], [47.6, 877.0], [47.7, 917.0], [47.8, 947.0], [47.9, 977.0], [48.0, 998.0], [48.1, 1041.0], [48.2, 1064.0], [48.3, 1084.0], [48.4, 1100.0], [48.5, 1126.0], [48.6, 1152.0], [48.7, 1173.0], [48.8, 1203.0], [48.9, 1229.0], [49.0, 1251.0], [49.1, 1269.0], [49.2, 1285.0], [49.3, 1307.0], [49.4, 1322.0], [49.5, 1345.0], [49.6, 1366.0], [49.7, 1378.0], [49.8, 1395.0], [49.9, 1408.0], [50.0, 1426.0], [50.1, 1448.0], [50.2, 1476.0], [50.3, 1497.0], [50.4, 1512.0], [50.5, 1525.0], [50.6, 1539.0], [50.7, 1560.0], [50.8, 1577.0], [50.9, 1592.0], [51.0, 1606.0], [51.1, 1619.0], [51.2, 1637.0], [51.3, 1657.0], [51.4, 1676.0], [51.5, 1689.0], [51.6, 1699.0], [51.7, 1714.0], [51.8, 1728.0], [51.9, 1742.0], [52.0, 1752.0], [52.1, 1769.0], [52.2, 1782.0], [52.3, 1795.0], [52.4, 1808.0], [52.5, 1818.0], [52.6, 1831.0], [52.7, 1847.0], [52.8, 1857.0], [52.9, 1869.0], [53.0, 1877.0], [53.1, 1893.0], [53.2, 1904.0], [53.3, 1919.0], [53.4, 1931.0], [53.5, 1939.0], [53.6, 1949.0], [53.7, 1965.0], [53.8, 1972.0], [53.9, 1980.0], [54.0, 1987.0], [54.1, 1997.0], [54.2, 2006.0], [54.3, 2016.0], [54.4, 2027.0], [54.5, 2037.0], [54.6, 2043.0], [54.7, 2055.0], [54.8, 2066.0], [54.9, 2073.0], [55.0, 2081.0], [55.1, 2089.0], [55.2, 2098.0], [55.3, 2110.0], [55.4, 2120.0], [55.5, 2128.0], [55.6, 2135.0], [55.7, 2142.0], [55.8, 2152.0], [55.9, 2160.0], [56.0, 2170.0], [56.1, 2178.0], [56.2, 2185.0], [56.3, 2193.0], [56.4, 2205.0], [56.5, 2214.0], [56.6, 2223.0], [56.7, 2235.0], [56.8, 2246.0], [56.9, 2255.0], [57.0, 2263.0], [57.1, 2273.0], [57.2, 2283.0], [57.3, 2292.0], [57.4, 2301.0], [57.5, 2307.0], [57.6, 2314.0], [57.7, 2325.0], [57.8, 2332.0], [57.9, 2337.0], [58.0, 2350.0], [58.1, 2359.0], [58.2, 2368.0], [58.3, 2379.0], [58.4, 2396.0], [58.5, 2405.0], [58.6, 2421.0], [58.7, 2428.0], [58.8, 2437.0], [58.9, 2449.0], [59.0, 2460.0], [59.1, 2473.0], [59.2, 2484.0], [59.3, 2493.0], [59.4, 2503.0], [59.5, 2511.0], [59.6, 2525.0], [59.7, 2534.0], [59.8, 2541.0], [59.9, 2553.0], [60.0, 2559.0], [60.1, 2567.0], [60.2, 2577.0], [60.3, 2588.0], [60.4, 2599.0], [60.5, 2612.0], [60.6, 2621.0], [60.7, 2633.0], [60.8, 2643.0], [60.9, 2657.0], [61.0, 2663.0], [61.1, 2679.0], [61.2, 2690.0], [61.3, 2702.0], [61.4, 2715.0], [61.5, 2727.0], [61.6, 2735.0], [61.7, 2743.0], [61.8, 2752.0], [61.9, 2764.0], [62.0, 2773.0], [62.1, 2787.0], [62.2, 2797.0], [62.3, 2810.0], [62.4, 2821.0], [62.5, 2835.0], [62.6, 2849.0], [62.7, 2862.0], [62.8, 2871.0], [62.9, 2886.0], [63.0, 2893.0], [63.1, 2901.0], [63.2, 2911.0], [63.3, 2920.0], [63.4, 2928.0], [63.5, 2940.0], [63.6, 2948.0], [63.7, 2959.0], [63.8, 2973.0], [63.9, 2983.0], [64.0, 2993.0], [64.1, 3003.0], [64.2, 3009.0], [64.3, 3015.0], [64.4, 3029.0], [64.5, 3033.0], [64.6, 3042.0], [64.7, 3050.0], [64.8, 3057.0], [64.9, 3067.0], [65.0, 3075.0], [65.1, 3083.0], [65.2, 3090.0], [65.3, 3096.0], [65.4, 3104.0], [65.5, 3111.0], [65.6, 3118.0], [65.7, 3130.0], [65.8, 3135.0], [65.9, 3142.0], [66.0, 3147.0], [66.1, 3154.0], [66.2, 3162.0], [66.3, 3170.0], [66.4, 3176.0], [66.5, 3182.0], [66.6, 3189.0], [66.7, 3194.0], [66.8, 3204.0], [66.9, 3212.0], [67.0, 3220.0], [67.1, 3228.0], [67.2, 3235.0], [67.3, 3244.0], [67.4, 3251.0], [67.5, 3258.0], [67.6, 3266.0], [67.7, 3272.0], [67.8, 3281.0], [67.9, 3286.0], [68.0, 3293.0], [68.1, 3301.0], [68.2, 3307.0], [68.3, 3315.0], [68.4, 3322.0], [68.5, 3331.0], [68.6, 3338.0], [68.7, 3345.0], [68.8, 3354.0], [68.9, 3362.0], [69.0, 3367.0], [69.1, 3377.0], [69.2, 3384.0], [69.3, 3392.0], [69.4, 3402.0], [69.5, 3409.0], [69.6, 3416.0], [69.7, 3423.0], [69.8, 3430.0], [69.9, 3437.0], [70.0, 3445.0], [70.1, 3455.0], [70.2, 3462.0], [70.3, 3466.0], [70.4, 3476.0], [70.5, 3484.0], [70.6, 3493.0], [70.7, 3499.0], [70.8, 3506.0], [70.9, 3511.0], [71.0, 3519.0], [71.1, 3524.0], [71.2, 3533.0], [71.3, 3539.0], [71.4, 3545.0], [71.5, 3551.0], [71.6, 3559.0], [71.7, 3568.0], [71.8, 3578.0], [71.9, 3585.0], [72.0, 3592.0], [72.1, 3599.0], [72.2, 3607.0], [72.3, 3613.0], [72.4, 3619.0], [72.5, 3627.0], [72.6, 3633.0], [72.7, 3640.0], [72.8, 3647.0], [72.9, 3656.0], [73.0, 3659.0], [73.1, 3665.0], [73.2, 3670.0], [73.3, 3677.0], [73.4, 3683.0], [73.5, 3689.0], [73.6, 3698.0], [73.7, 3703.0], [73.8, 3707.0], [73.9, 3713.0], [74.0, 3718.0], [74.1, 3727.0], [74.2, 3735.0], [74.3, 3742.0], [74.4, 3745.0], [74.5, 3751.0], [74.6, 3756.0], [74.7, 3761.0], [74.8, 3767.0], [74.9, 3771.0], [75.0, 3776.0], [75.1, 3782.0], [75.2, 3789.0], [75.3, 3797.0], [75.4, 3802.0], [75.5, 3806.0], [75.6, 3813.0], [75.7, 3818.0], [75.8, 3824.0], [75.9, 3830.0], [76.0, 3836.0], [76.1, 3842.0], [76.2, 3846.0], [76.3, 3851.0], [76.4, 3855.0], [76.5, 3858.0], [76.6, 3863.0], [76.7, 3869.0], [76.8, 3877.0], [76.9, 3882.0], [77.0, 3886.0], [77.1, 3891.0], [77.2, 3899.0], [77.3, 3904.0], [77.4, 3911.0], [77.5, 3917.0], [77.6, 3922.0], [77.7, 3927.0], [77.8, 3934.0], [77.9, 3940.0], [78.0, 3944.0], [78.1, 3949.0], [78.2, 3955.0], [78.3, 3961.0], [78.4, 3966.0], [78.5, 3971.0], [78.6, 3976.0], [78.7, 3983.0], [78.8, 3988.0], [78.9, 3994.0], [79.0, 4000.0], [79.1, 4008.0], [79.2, 4013.0], [79.3, 4019.0], [79.4, 4022.0], [79.5, 4027.0], [79.6, 4034.0], [79.7, 4037.0], [79.8, 4044.0], [79.9, 4050.0], [80.0, 4054.0], [80.1, 4060.0], [80.2, 4067.0], [80.3, 4073.0], [80.4, 4078.0], [80.5, 4084.0], [80.6, 4089.0], [80.7, 4095.0], [80.8, 4100.0], [80.9, 4104.0], [81.0, 4109.0], [81.1, 4116.0], [81.2, 4121.0], [81.3, 4128.0], [81.4, 4134.0], [81.5, 4139.0], [81.6, 4144.0], [81.7, 4152.0], [81.8, 4156.0], [81.9, 4162.0], [82.0, 4168.0], [82.1, 4173.0], [82.2, 4179.0], [82.3, 4184.0], [82.4, 4190.0], [82.5, 4195.0], [82.6, 4202.0], [82.7, 4208.0], [82.8, 4214.0], [82.9, 4218.0], [83.0, 4224.0], [83.1, 4228.0], [83.2, 4234.0], [83.3, 4240.0], [83.4, 4244.0], [83.5, 4249.0], [83.6, 4253.0], [83.7, 4259.0], [83.8, 4263.0], [83.9, 4269.0], [84.0, 4277.0], [84.1, 4283.0], [84.2, 4288.0], [84.3, 4294.0], [84.4, 4300.0], [84.5, 4305.0], [84.6, 4312.0], [84.7, 4319.0], [84.8, 4325.0], [84.9, 4328.0], [85.0, 4334.0], [85.1, 4341.0], [85.2, 4346.0], [85.3, 4352.0], [85.4, 4356.0], [85.5, 4365.0], [85.6, 4369.0], [85.7, 4373.0], [85.8, 4380.0], [85.9, 4384.0], [86.0, 4389.0], [86.1, 4393.0], [86.2, 4399.0], [86.3, 4404.0], [86.4, 4409.0], [86.5, 4416.0], [86.6, 4422.0], [86.7, 4428.0], [86.8, 4433.0], [86.9, 4437.0], [87.0, 4443.0], [87.1, 4447.0], [87.2, 4452.0], [87.3, 4457.0], [87.4, 4461.0], [87.5, 4467.0], [87.6, 4472.0], [87.7, 4478.0], [87.8, 4486.0], [87.9, 4492.0], [88.0, 4498.0], [88.1, 4508.0], [88.2, 4512.0], [88.3, 4518.0], [88.4, 4523.0], [88.5, 4530.0], [88.6, 4538.0], [88.7, 4544.0], [88.8, 4549.0], [88.9, 4555.0], [89.0, 4562.0], [89.1, 4569.0], [89.2, 4576.0], [89.3, 4582.0], [89.4, 4587.0], [89.5, 4597.0], [89.6, 4605.0], [89.7, 4611.0], [89.8, 4617.0], [89.9, 4625.0], [90.0, 4631.0], [90.1, 4640.0], [90.2, 4647.0], [90.3, 4655.0], [90.4, 4666.0], [90.5, 4675.0], [90.6, 4682.0], [90.7, 4689.0], [90.8, 4697.0], [90.9, 4702.0], [91.0, 4707.0], [91.1, 4721.0], [91.2, 4733.0], [91.3, 4742.0], [91.4, 4752.0], [91.5, 4764.0], [91.6, 4769.0], [91.7, 4776.0], [91.8, 4789.0], [91.9, 4798.0], [92.0, 4808.0], [92.1, 4817.0], [92.2, 4824.0], [92.3, 4833.0], [92.4, 4842.0], [92.5, 4857.0], [92.6, 4865.0], [92.7, 4879.0], [92.8, 4896.0], [92.9, 4907.0], [93.0, 4926.0], [93.1, 4943.0], [93.2, 4961.0], [93.3, 4975.0], [93.4, 4988.0], [93.5, 5007.0], [93.6, 5021.0], [93.7, 5040.0], [93.8, 5061.0], [93.9, 5078.0], [94.0, 5105.0], [94.1, 5133.0], [94.2, 5160.0], [94.3, 5178.0], [94.4, 5210.0], [94.5, 5234.0], [94.6, 5267.0], [94.7, 5285.0], [94.8, 5315.0], [94.9, 5350.0], [95.0, 5376.0], [95.1, 5400.0], [95.2, 5429.0], [95.3, 5462.0], [95.4, 5514.0], [95.5, 5563.0], [95.6, 5597.0], [95.7, 5636.0], [95.8, 5665.0], [95.9, 5702.0], [96.0, 5738.0], [96.1, 5768.0], [96.2, 5814.0], [96.3, 5847.0], [96.4, 5873.0], [96.5, 5918.0], [96.6, 5964.0], [96.7, 5996.0], [96.8, 6050.0], [96.9, 6080.0], [97.0, 6142.0], [97.1, 6192.0], [97.2, 6250.0], [97.3, 6311.0], [97.4, 6381.0], [97.5, 6455.0], [97.6, 6540.0], [97.7, 6604.0], [97.8, 6769.0], [97.9, 6923.0], [98.0, 7139.0], [98.1, 7336.0], [98.2, 7545.0], [98.3, 7756.0], [98.4, 7859.0], [98.5, 7998.0], [98.6, 8224.0], [98.7, 8443.0], [98.8, 8656.0], [98.9, 8869.0], [99.0, 9044.0], [99.1, 9249.0], [99.2, 9396.0], [99.3, 9553.0], [99.4, 9843.0], [99.5, 10083.0], [99.6, 10359.0], [99.7, 10767.0], [99.8, 11543.0], [99.9, 12354.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 137.0], [0.1, 137.0], [0.2, 137.0], [0.3, 137.0], [0.4, 137.0], [0.5, 140.0], [0.6, 140.0], [0.7, 140.0], [0.8, 140.0], [0.9, 140.0], [1.0, 142.0], [1.1, 142.0], [1.2, 142.0], [1.3, 142.0], [1.4, 142.0], [1.5, 144.0], [1.6, 144.0], [1.7, 144.0], [1.8, 144.0], [1.9, 144.0], [2.0, 144.0], [2.1, 144.0], [2.2, 144.0], [2.3, 144.0], [2.4, 144.0], [2.5, 145.0], [2.6, 145.0], [2.7, 145.0], [2.8, 145.0], [2.9, 145.0], [3.0, 145.0], [3.1, 145.0], [3.2, 145.0], [3.3, 145.0], [3.4, 145.0], [3.5, 145.0], [3.6, 145.0], [3.7, 145.0], [3.8, 145.0], [3.9, 145.0], [4.0, 145.0], [4.1, 145.0], [4.2, 145.0], [4.3, 145.0], [4.4, 145.0], [4.5, 146.0], [4.6, 146.0], [4.7, 146.0], [4.8, 146.0], [4.9, 146.0], [5.0, 146.0], [5.1, 146.0], [5.2, 146.0], [5.3, 146.0], [5.4, 146.0], [5.5, 146.0], [5.6, 146.0], [5.7, 146.0], [5.8, 146.0], [5.9, 146.0], [6.0, 146.0], [6.1, 146.0], [6.2, 146.0], [6.3, 146.0], [6.4, 146.0], [6.5, 146.0], [6.6, 146.0], [6.7, 146.0], [6.8, 146.0], [6.9, 146.0], [7.0, 146.0], [7.1, 146.0], [7.2, 146.0], [7.3, 146.0], [7.4, 146.0], [7.5, 146.0], [7.6, 146.0], [7.7, 146.0], [7.8, 146.0], [7.9, 146.0], [8.0, 146.0], [8.1, 146.0], [8.2, 146.0], [8.3, 146.0], [8.4, 146.0], [8.5, 147.0], [8.6, 147.0], [8.7, 147.0], [8.8, 147.0], [8.9, 147.0], [9.0, 147.0], [9.1, 147.0], [9.2, 147.0], [9.3, 147.0], [9.4, 147.0], [9.5, 147.0], [9.6, 147.0], [9.7, 147.0], [9.8, 147.0], [9.9, 147.0], [10.0, 147.0], [10.1, 147.0], [10.2, 147.0], [10.3, 147.0], [10.4, 147.0], [10.5, 147.0], [10.6, 147.0], [10.7, 147.0], [10.8, 147.0], [10.9, 147.0], [11.0, 147.0], [11.1, 147.0], [11.2, 147.0], [11.3, 147.0], [11.4, 147.0], [11.5, 148.0], [11.6, 148.0], [11.7, 148.0], [11.8, 148.0], [11.9, 148.0], [12.0, 148.0], [12.1, 148.0], [12.2, 148.0], [12.3, 148.0], [12.4, 148.0], [12.5, 148.0], [12.6, 148.0], [12.7, 148.0], [12.8, 148.0], [12.9, 148.0], [13.0, 148.0], [13.1, 148.0], [13.2, 148.0], [13.3, 148.0], [13.4, 148.0], [13.5, 148.0], [13.6, 148.0], [13.7, 148.0], [13.8, 148.0], [13.9, 148.0], [14.0, 148.0], [14.1, 148.0], [14.2, 148.0], [14.3, 148.0], [14.4, 148.0], [14.5, 148.0], [14.6, 148.0], [14.7, 148.0], [14.8, 148.0], [14.9, 148.0], [15.0, 148.0], [15.1, 148.0], [15.2, 148.0], [15.3, 148.0], [15.4, 148.0], [15.5, 149.0], [15.6, 149.0], [15.7, 149.0], [15.8, 149.0], [15.9, 149.0], [16.0, 149.0], [16.1, 149.0], [16.2, 149.0], [16.3, 149.0], [16.4, 149.0], [16.5, 149.0], [16.6, 149.0], [16.7, 149.0], [16.8, 149.0], [16.9, 149.0], [17.0, 149.0], [17.1, 149.0], [17.2, 149.0], [17.3, 149.0], [17.4, 149.0], [17.5, 149.0], [17.6, 149.0], [17.7, 149.0], [17.8, 149.0], [17.9, 149.0], [18.0, 149.0], [18.1, 149.0], [18.2, 149.0], [18.3, 149.0], [18.4, 149.0], [18.5, 149.0], [18.6, 149.0], [18.7, 149.0], [18.8, 149.0], [18.9, 149.0], [19.0, 149.0], [19.1, 149.0], [19.2, 149.0], [19.3, 149.0], [19.4, 149.0], [19.5, 149.0], [19.6, 149.0], [19.7, 149.0], [19.8, 149.0], [19.9, 149.0], [20.0, 149.0], [20.1, 149.0], [20.2, 149.0], [20.3, 149.0], [20.4, 149.0], [20.5, 149.0], [20.6, 149.0], [20.7, 149.0], [20.8, 149.0], [20.9, 149.0], [21.0, 149.0], [21.1, 149.0], [21.2, 149.0], [21.3, 149.0], [21.4, 149.0], [21.5, 149.0], [21.6, 149.0], [21.7, 149.0], [21.8, 149.0], [21.9, 149.0], [22.0, 149.0], [22.1, 149.0], [22.2, 149.0], [22.3, 149.0], [22.4, 149.0], [22.5, 149.0], [22.6, 149.0], [22.7, 149.0], [22.8, 149.0], [22.9, 149.0], [23.0, 149.0], [23.1, 149.0], [23.2, 149.0], [23.3, 149.0], [23.4, 149.0], [23.5, 149.0], [23.6, 149.0], [23.7, 149.0], [23.8, 149.0], [23.9, 149.0], [24.0, 149.0], [24.1, 149.0], [24.2, 149.0], [24.3, 149.0], [24.4, 149.0], [24.5, 150.0], [24.6, 150.0], [24.7, 150.0], [24.8, 150.0], [24.9, 150.0], [25.0, 150.0], [25.1, 150.0], [25.2, 150.0], [25.3, 150.0], [25.4, 150.0], [25.5, 150.0], [25.6, 150.0], [25.7, 150.0], [25.8, 150.0], [25.9, 150.0], [26.0, 150.0], [26.1, 150.0], [26.2, 150.0], [26.3, 150.0], [26.4, 150.0], [26.5, 150.0], [26.6, 150.0], [26.7, 150.0], [26.8, 150.0], [26.9, 150.0], [27.0, 151.0], [27.1, 151.0], [27.2, 151.0], [27.3, 151.0], [27.4, 151.0], [27.5, 151.0], [27.6, 151.0], [27.7, 151.0], [27.8, 151.0], [27.9, 151.0], [28.0, 151.0], [28.1, 151.0], [28.2, 151.0], [28.3, 151.0], [28.4, 151.0], [28.5, 151.0], [28.6, 151.0], [28.7, 151.0], [28.8, 151.0], [28.9, 151.0], [29.0, 151.0], [29.1, 151.0], [29.2, 151.0], [29.3, 151.0], [29.4, 151.0], [29.5, 151.0], [29.6, 151.0], [29.7, 151.0], [29.8, 151.0], [29.9, 151.0], [30.0, 151.0], [30.1, 151.0], [30.2, 151.0], [30.3, 151.0], [30.4, 151.0], [30.5, 151.0], [30.6, 151.0], [30.7, 151.0], [30.8, 151.0], [30.9, 151.0], [31.0, 151.0], [31.1, 151.0], [31.2, 151.0], [31.3, 151.0], [31.4, 151.0], [31.5, 151.0], [31.6, 151.0], [31.7, 151.0], [31.8, 151.0], [31.9, 151.0], [32.0, 151.0], [32.1, 151.0], [32.2, 151.0], [32.3, 151.0], [32.4, 151.0], [32.5, 151.0], [32.6, 151.0], [32.7, 151.0], [32.8, 151.0], [32.9, 151.0], [33.0, 151.0], [33.1, 151.0], [33.2, 151.0], [33.3, 151.0], [33.4, 151.0], [33.5, 151.0], [33.6, 151.0], [33.7, 151.0], [33.8, 151.0], [33.9, 151.0], [34.0, 151.0], [34.1, 151.0], [34.2, 151.0], [34.3, 151.0], [34.4, 151.0], [34.5, 151.0], [34.6, 151.0], [34.7, 151.0], [34.8, 151.0], [34.9, 151.0], [35.0, 151.0], [35.1, 151.0], [35.2, 151.0], [35.3, 151.0], [35.4, 151.0], [35.5, 151.0], [35.6, 151.0], [35.7, 151.0], [35.8, 151.0], [35.9, 151.0], [36.0, 151.0], [36.1, 151.0], [36.2, 151.0], [36.3, 151.0], [36.4, 151.0], [36.5, 152.0], [36.6, 152.0], [36.7, 152.0], [36.8, 152.0], [36.9, 152.0], [37.0, 152.0], [37.1, 152.0], [37.2, 152.0], [37.3, 152.0], [37.4, 152.0], [37.5, 152.0], [37.6, 152.0], [37.7, 152.0], [37.8, 152.0], [37.9, 152.0], [38.0, 152.0], [38.1, 152.0], [38.2, 152.0], [38.3, 152.0], [38.4, 152.0], [38.5, 152.0], [38.6, 152.0], [38.7, 152.0], [38.8, 152.0], [38.9, 152.0], [39.0, 152.0], [39.1, 152.0], [39.2, 152.0], [39.3, 152.0], [39.4, 152.0], [39.5, 152.0], [39.6, 152.0], [39.7, 152.0], [39.8, 152.0], [39.9, 152.0], [40.0, 152.0], [40.1, 152.0], [40.2, 152.0], [40.3, 152.0], [40.4, 152.0], [40.5, 152.0], [40.6, 152.0], [40.7, 152.0], [40.8, 152.0], [40.9, 152.0], [41.0, 153.0], [41.1, 153.0], [41.2, 153.0], [41.3, 153.0], [41.4, 153.0], [41.5, 153.0], [41.6, 153.0], [41.7, 153.0], [41.8, 153.0], [41.9, 153.0], [42.0, 153.0], [42.1, 153.0], [42.2, 153.0], [42.3, 153.0], [42.4, 153.0], [42.5, 153.0], [42.6, 153.0], [42.7, 153.0], [42.8, 153.0], [42.9, 153.0], [43.0, 153.0], [43.1, 153.0], [43.2, 153.0], [43.3, 153.0], [43.4, 153.0], [43.5, 153.0], [43.6, 153.0], [43.7, 153.0], [43.8, 153.0], [43.9, 153.0], [44.0, 153.0], [44.1, 153.0], [44.2, 153.0], [44.3, 153.0], [44.4, 153.0], [44.5, 153.0], [44.6, 153.0], [44.7, 153.0], [44.8, 153.0], [44.9, 153.0], [45.0, 153.0], [45.1, 153.0], [45.2, 153.0], [45.3, 153.0], [45.4, 153.0], [45.5, 153.0], [45.6, 153.0], [45.7, 153.0], [45.8, 153.0], [45.9, 153.0], [46.0, 154.0], [46.1, 154.0], [46.2, 154.0], [46.3, 154.0], [46.4, 154.0], [46.5, 154.0], [46.6, 154.0], [46.7, 154.0], [46.8, 154.0], [46.9, 154.0], [47.0, 154.0], [47.1, 154.0], [47.2, 154.0], [47.3, 154.0], [47.4, 154.0], [47.5, 154.0], [47.6, 154.0], [47.7, 154.0], [47.8, 154.0], [47.9, 154.0], [48.0, 154.0], [48.1, 154.0], [48.2, 154.0], [48.3, 154.0], [48.4, 154.0], [48.5, 154.0], [48.6, 154.0], [48.7, 154.0], [48.8, 154.0], [48.9, 154.0], [49.0, 154.0], [49.1, 154.0], [49.2, 154.0], [49.3, 154.0], [49.4, 154.0], [49.5, 154.0], [49.6, 154.0], [49.7, 154.0], [49.8, 154.0], [49.9, 154.0], [50.0, 154.0], [50.1, 154.0], [50.2, 154.0], [50.3, 154.0], [50.4, 154.0], [50.5, 154.0], [50.6, 154.0], [50.7, 154.0], [50.8, 154.0], [50.9, 154.0], [51.0, 154.0], [51.1, 154.0], [51.2, 154.0], [51.3, 154.0], [51.4, 154.0], [51.5, 154.0], [51.6, 154.0], [51.7, 154.0], [51.8, 154.0], [51.9, 154.0], [52.0, 154.0], [52.1, 154.0], [52.2, 154.0], [52.3, 154.0], [52.4, 154.0], [52.5, 154.0], [52.6, 154.0], [52.7, 154.0], [52.8, 154.0], [52.9, 154.0], [53.0, 154.0], [53.1, 154.0], [53.2, 154.0], [53.3, 154.0], [53.4, 154.0], [53.5, 155.0], [53.6, 155.0], [53.7, 155.0], [53.8, 155.0], [53.9, 155.0], [54.0, 155.0], [54.1, 155.0], [54.2, 155.0], [54.3, 155.0], [54.4, 155.0], [54.5, 155.0], [54.6, 155.0], [54.7, 155.0], [54.8, 155.0], [54.9, 155.0], [55.0, 155.0], [55.1, 155.0], [55.2, 155.0], [55.3, 155.0], [55.4, 155.0], [55.5, 155.0], [55.6, 155.0], [55.7, 155.0], [55.8, 155.0], [55.9, 155.0], [56.0, 155.0], [56.1, 155.0], [56.2, 155.0], [56.3, 155.0], [56.4, 155.0], [56.5, 155.0], [56.6, 155.0], [56.7, 155.0], [56.8, 155.0], [56.9, 155.0], [57.0, 155.0], [57.1, 155.0], [57.2, 155.0], [57.3, 155.0], [57.4, 155.0], [57.5, 155.0], [57.6, 155.0], [57.7, 155.0], [57.8, 155.0], [57.9, 155.0], [58.0, 155.0], [58.1, 155.0], [58.2, 155.0], [58.3, 155.0], [58.4, 155.0], [58.5, 155.0], [58.6, 155.0], [58.7, 155.0], [58.8, 155.0], [58.9, 155.0], [59.0, 156.0], [59.1, 156.0], [59.2, 156.0], [59.3, 156.0], [59.4, 156.0], [59.5, 156.0], [59.6, 156.0], [59.7, 156.0], [59.8, 156.0], [59.9, 156.0], [60.0, 156.0], [60.1, 156.0], [60.2, 156.0], [60.3, 156.0], [60.4, 156.0], [60.5, 156.0], [60.6, 156.0], [60.7, 156.0], [60.8, 156.0], [60.9, 156.0], [61.0, 156.0], [61.1, 156.0], [61.2, 156.0], [61.3, 156.0], [61.4, 156.0], [61.5, 156.0], [61.6, 156.0], [61.7, 156.0], [61.8, 156.0], [61.9, 156.0], [62.0, 156.0], [62.1, 156.0], [62.2, 156.0], [62.3, 156.0], [62.4, 156.0], [62.5, 156.0], [62.6, 156.0], [62.7, 156.0], [62.8, 156.0], [62.9, 156.0], [63.0, 156.0], [63.1, 156.0], [63.2, 156.0], [63.3, 156.0], [63.4, 156.0], [63.5, 157.0], [63.6, 157.0], [63.7, 157.0], [63.8, 157.0], [63.9, 157.0], [64.0, 157.0], [64.1, 157.0], [64.2, 157.0], [64.3, 157.0], [64.4, 157.0], [64.5, 157.0], [64.6, 157.0], [64.7, 157.0], [64.8, 157.0], [64.9, 157.0], [65.0, 157.0], [65.1, 157.0], [65.2, 157.0], [65.3, 157.0], [65.4, 157.0], [65.5, 157.0], [65.6, 157.0], [65.7, 157.0], [65.8, 157.0], [65.9, 157.0], [66.0, 157.0], [66.1, 157.0], [66.2, 157.0], [66.3, 157.0], [66.4, 157.0], [66.5, 158.0], [66.6, 158.0], [66.7, 158.0], [66.8, 158.0], [66.9, 158.0], [67.0, 158.0], [67.1, 158.0], [67.2, 158.0], [67.3, 158.0], [67.4, 158.0], [67.5, 158.0], [67.6, 158.0], [67.7, 158.0], [67.8, 158.0], [67.9, 158.0], [68.0, 158.0], [68.1, 158.0], [68.2, 158.0], [68.3, 158.0], [68.4, 158.0], [68.5, 158.0], [68.6, 158.0], [68.7, 158.0], [68.8, 158.0], [68.9, 158.0], [69.0, 158.0], [69.1, 158.0], [69.2, 158.0], [69.3, 158.0], [69.4, 158.0], [69.5, 158.0], [69.6, 158.0], [69.7, 158.0], [69.8, 158.0], [69.9, 158.0], [70.0, 159.0], [70.1, 159.0], [70.2, 159.0], [70.3, 159.0], [70.4, 159.0], [70.5, 159.0], [70.6, 159.0], [70.7, 159.0], [70.8, 159.0], [70.9, 159.0], [71.0, 159.0], [71.1, 159.0], [71.2, 159.0], [71.3, 159.0], [71.4, 159.0], [71.5, 159.0], [71.6, 159.0], [71.7, 159.0], [71.8, 159.0], [71.9, 159.0], [72.0, 159.0], [72.1, 159.0], [72.2, 159.0], [72.3, 159.0], [72.4, 159.0], [72.5, 159.0], [72.6, 159.0], [72.7, 159.0], [72.8, 159.0], [72.9, 159.0], [73.0, 159.0], [73.1, 159.0], [73.2, 159.0], [73.3, 159.0], [73.4, 159.0], [73.5, 159.0], [73.6, 159.0], [73.7, 159.0], [73.8, 159.0], [73.9, 159.0], [74.0, 159.0], [74.1, 159.0], [74.2, 159.0], [74.3, 159.0], [74.4, 159.0], [74.5, 160.0], [74.6, 160.0], [74.7, 160.0], [74.8, 160.0], [74.9, 160.0], [75.0, 160.0], [75.1, 160.0], [75.2, 160.0], [75.3, 160.0], [75.4, 160.0], [75.5, 160.0], [75.6, 160.0], [75.7, 160.0], [75.8, 160.0], [75.9, 160.0], [76.0, 160.0], [76.1, 160.0], [76.2, 160.0], [76.3, 160.0], [76.4, 160.0], [76.5, 160.0], [76.6, 160.0], [76.7, 160.0], [76.8, 160.0], [76.9, 160.0], [77.0, 160.0], [77.1, 160.0], [77.2, 160.0], [77.3, 160.0], [77.4, 160.0], [77.5, 160.0], [77.6, 160.0], [77.7, 160.0], [77.8, 160.0], [77.9, 160.0], [78.0, 160.0], [78.1, 160.0], [78.2, 160.0], [78.3, 160.0], [78.4, 160.0], [78.5, 160.0], [78.6, 160.0], [78.7, 160.0], [78.8, 160.0], [78.9, 160.0], [79.0, 160.0], [79.1, 160.0], [79.2, 160.0], [79.3, 160.0], [79.4, 160.0], [79.5, 160.0], [79.6, 160.0], [79.7, 160.0], [79.8, 160.0], [79.9, 160.0], [80.0, 160.0], [80.1, 160.0], [80.2, 160.0], [80.3, 160.0], [80.4, 160.0], [80.5, 160.0], [80.6, 160.0], [80.7, 160.0], [80.8, 160.0], [80.9, 160.0], [81.0, 160.0], [81.1, 160.0], [81.2, 160.0], [81.3, 160.0], [81.4, 160.0], [81.5, 160.0], [81.6, 160.0], [81.7, 160.0], [81.8, 160.0], [81.9, 160.0], [82.0, 161.0], [82.1, 161.0], [82.2, 161.0], [82.3, 161.0], [82.4, 161.0], [82.5, 161.0], [82.6, 161.0], [82.7, 161.0], [82.8, 161.0], [82.9, 161.0], [83.0, 161.0], [83.1, 161.0], [83.2, 161.0], [83.3, 161.0], [83.4, 161.0], [83.5, 161.0], [83.6, 161.0], [83.7, 161.0], [83.8, 161.0], [83.9, 161.0], [84.0, 161.0], [84.1, 161.0], [84.2, 161.0], [84.3, 161.0], [84.4, 161.0], [84.5, 162.0], [84.6, 162.0], [84.7, 162.0], [84.8, 162.0], [84.9, 162.0], [85.0, 162.0], [85.1, 162.0], [85.2, 162.0], [85.3, 162.0], [85.4, 162.0], [85.5, 162.0], [85.6, 162.0], [85.7, 162.0], [85.8, 162.0], [85.9, 162.0], [86.0, 163.0], [86.1, 163.0], [86.2, 163.0], [86.3, 163.0], [86.4, 163.0], [86.5, 163.0], [86.6, 163.0], [86.7, 163.0], [86.8, 163.0], [86.9, 163.0], [87.0, 163.0], [87.1, 163.0], [87.2, 163.0], [87.3, 163.0], [87.4, 163.0], [87.5, 163.0], [87.6, 163.0], [87.7, 163.0], [87.8, 163.0], [87.9, 163.0], [88.0, 164.0], [88.1, 164.0], [88.2, 164.0], [88.3, 164.0], [88.4, 164.0], [88.5, 165.0], [88.6, 165.0], [88.7, 165.0], [88.8, 165.0], [88.9, 165.0], [89.0, 165.0], [89.1, 165.0], [89.2, 165.0], [89.3, 165.0], [89.4, 165.0], [89.5, 165.0], [89.6, 165.0], [89.7, 165.0], [89.8, 165.0], [89.9, 165.0], [90.0, 165.0], [90.1, 165.0], [90.2, 165.0], [90.3, 165.0], [90.4, 165.0], [90.5, 165.0], [90.6, 165.0], [90.7, 165.0], [90.8, 165.0], [90.9, 165.0], [91.0, 166.0], [91.1, 166.0], [91.2, 166.0], [91.3, 166.0], [91.4, 166.0], [91.5, 166.0], [91.6, 166.0], [91.7, 166.0], [91.8, 166.0], [91.9, 166.0], [92.0, 166.0], [92.1, 166.0], [92.2, 166.0], [92.3, 166.0], [92.4, 166.0], [92.5, 167.0], [92.6, 167.0], [92.7, 167.0], [92.8, 167.0], [92.9, 167.0], [93.0, 167.0], [93.1, 167.0], [93.2, 167.0], [93.3, 167.0], [93.4, 167.0], [93.5, 167.0], [93.6, 167.0], [93.7, 167.0], [93.8, 167.0], [93.9, 167.0], [94.0, 168.0], [94.1, 168.0], [94.2, 168.0], [94.3, 168.0], [94.4, 168.0], [94.5, 168.0], [94.6, 168.0], [94.7, 168.0], [94.8, 168.0], [94.9, 168.0], [95.0, 169.0], [95.1, 169.0], [95.2, 169.0], [95.3, 169.0], [95.4, 169.0], [95.5, 174.0], [95.6, 174.0], [95.7, 174.0], [95.8, 174.0], [95.9, 174.0], [96.0, 174.0], [96.1, 174.0], [96.2, 174.0], [96.3, 174.0], [96.4, 174.0], [96.5, 175.0], [96.6, 175.0], [96.7, 175.0], [96.8, 175.0], [96.9, 175.0], [97.0, 177.0], [97.1, 177.0], [97.2, 177.0], [97.3, 177.0], [97.4, 177.0], [97.5, 191.0], [97.6, 191.0], [97.7, 191.0], [97.8, 191.0], [97.9, 191.0], [98.0, 205.0], [98.1, 205.0], [98.2, 205.0], [98.3, 205.0], [98.4, 205.0], [98.5, 209.0], [98.6, 209.0], [98.7, 209.0], [98.8, 209.0], [98.9, 209.0], [99.0, 293.0], [99.1, 293.0], [99.2, 293.0], [99.3, 293.0], [99.4, 293.0], [99.5, 602.0], [99.6, 602.0], [99.7, 602.0], [99.8, 602.0], [99.9, 602.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 3.0], [32.1, 3.0], [32.2, 3.0], [32.3, 3.0], [32.4, 3.0], [32.5, 3.0], [32.6, 3.0], [32.7, 3.0], [32.8, 3.0], [32.9, 3.0], [33.0, 3.0], [33.1, 3.0], [33.2, 3.0], [33.3, 3.0], [33.4, 3.0], [33.5, 3.0], [33.6, 3.0], [33.7, 3.0], [33.8, 3.0], [33.9, 3.0], [34.0, 3.0], [34.1, 3.0], [34.2, 3.0], [34.3, 3.0], [34.4, 3.0], [34.5, 3.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 3.0], [36.2, 3.0], [36.3, 3.0], [36.4, 3.0], [36.5, 3.0], [36.6, 3.0], [36.7, 3.0], [36.8, 3.0], [36.9, 3.0], [37.0, 3.0], [37.1, 3.0], [37.2, 3.0], [37.3, 3.0], [37.4, 3.0], [37.5, 3.0], [37.6, 3.0], [37.7, 3.0], [37.8, 3.0], [37.9, 3.0], [38.0, 3.0], [38.1, 3.0], [38.2, 3.0], [38.3, 3.0], [38.4, 3.0], [38.5, 3.0], [38.6, 3.0], [38.7, 3.0], [38.8, 3.0], [38.9, 3.0], [39.0, 3.0], [39.1, 3.0], [39.2, 3.0], [39.3, 3.0], [39.4, 3.0], [39.5, 3.0], [39.6, 3.0], [39.7, 3.0], [39.8, 3.0], [39.9, 3.0], [40.0, 3.0], [40.1, 3.0], [40.2, 3.0], [40.3, 3.0], [40.4, 3.0], [40.5, 3.0], [40.6, 3.0], [40.7, 3.0], [40.8, 3.0], [40.9, 3.0], [41.0, 3.0], [41.1, 3.0], [41.2, 3.0], [41.3, 3.0], [41.4, 3.0], [41.5, 3.0], [41.6, 3.0], [41.7, 3.0], [41.8, 3.0], [41.9, 3.0], [42.0, 3.0], [42.1, 3.0], [42.2, 3.0], [42.3, 4.0], [42.4, 4.0], [42.5, 4.0], [42.6, 4.0], [42.7, 4.0], [42.8, 4.0], [42.9, 4.0], [43.0, 4.0], [43.1, 4.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 6.0], [43.7, 6.0], [43.8, 7.0], [43.9, 12.0], [44.0, 18.0], [44.1, 21.0], [44.2, 23.0], [44.3, 24.0], [44.4, 25.0], [44.5, 27.0], [44.6, 28.0], [44.7, 29.0], [44.8, 31.0], [44.9, 32.0], [45.0, 34.0], [45.1, 36.0], [45.2, 38.0], [45.3, 41.0], [45.4, 44.0], [45.5, 48.0], [45.6, 55.0], [45.7, 61.0], [45.8, 95.0], [45.9, 148.0], [46.0, 191.0], [46.1, 230.0], [46.2, 269.0], [46.3, 350.0], [46.4, 403.0], [46.5, 452.0], [46.6, 500.0], [46.7, 540.0], [46.8, 591.0], [46.9, 630.0], [47.0, 665.0], [47.1, 691.0], [47.2, 729.0], [47.3, 756.0], [47.4, 785.0], [47.5, 811.0], [47.6, 851.0], [47.7, 887.0], [47.8, 921.0], [47.9, 939.0], [48.0, 968.0], [48.1, 994.0], [48.2, 1020.0], [48.3, 1045.0], [48.4, 1068.0], [48.5, 1103.0], [48.6, 1124.0], [48.7, 1145.0], [48.8, 1172.0], [48.9, 1193.0], [49.0, 1212.0], [49.1, 1239.0], [49.2, 1261.0], [49.3, 1281.0], [49.4, 1308.0], [49.5, 1326.0], [49.6, 1347.0], [49.7, 1368.0], [49.8, 1391.0], [49.9, 1412.0], [50.0, 1427.0], [50.1, 1445.0], [50.2, 1460.0], [50.3, 1478.0], [50.4, 1496.0], [50.5, 1510.0], [50.6, 1530.0], [50.7, 1550.0], [50.8, 1570.0], [50.9, 1593.0], [51.0, 1612.0], [51.1, 1623.0], [51.2, 1639.0], [51.3, 1656.0], [51.4, 1669.0], [51.5, 1682.0], [51.6, 1696.0], [51.7, 1710.0], [51.8, 1729.0], [51.9, 1741.0], [52.0, 1754.0], [52.1, 1769.0], [52.2, 1786.0], [52.3, 1799.0], [52.4, 1812.0], [52.5, 1829.0], [52.6, 1837.0], [52.7, 1851.0], [52.8, 1865.0], [52.9, 1877.0], [53.0, 1892.0], [53.1, 1904.0], [53.2, 1914.0], [53.3, 1926.0], [53.4, 1940.0], [53.5, 1954.0], [53.6, 1969.0], [53.7, 1981.0], [53.8, 1996.0], [53.9, 2008.0], [54.0, 2021.0], [54.1, 2030.0], [54.2, 2042.0], [54.3, 2052.0], [54.4, 2065.0], [54.5, 2083.0], [54.6, 2091.0], [54.7, 2101.0], [54.8, 2111.0], [54.9, 2117.0], [55.0, 2129.0], [55.1, 2145.0], [55.2, 2154.0], [55.3, 2165.0], [55.4, 2172.0], [55.5, 2181.0], [55.6, 2192.0], [55.7, 2203.0], [55.8, 2213.0], [55.9, 2219.0], [56.0, 2228.0], [56.1, 2235.0], [56.2, 2245.0], [56.3, 2251.0], [56.4, 2261.0], [56.5, 2273.0], [56.6, 2284.0], [56.7, 2294.0], [56.8, 2303.0], [56.9, 2313.0], [57.0, 2321.0], [57.1, 2332.0], [57.2, 2339.0], [57.3, 2346.0], [57.4, 2359.0], [57.5, 2371.0], [57.6, 2377.0], [57.7, 2389.0], [57.8, 2398.0], [57.9, 2408.0], [58.0, 2419.0], [58.1, 2432.0], [58.2, 2441.0], [58.3, 2450.0], [58.4, 2461.0], [58.5, 2474.0], [58.6, 2487.0], [58.7, 2496.0], [58.8, 2505.0], [58.9, 2513.0], [59.0, 2520.0], [59.1, 2533.0], [59.2, 2540.0], [59.3, 2553.0], [59.4, 2562.0], [59.5, 2572.0], [59.6, 2582.0], [59.7, 2595.0], [59.8, 2606.0], [59.9, 2618.0], [60.0, 2636.0], [60.1, 2646.0], [60.2, 2656.0], [60.3, 2668.0], [60.4, 2677.0], [60.5, 2689.0], [60.6, 2699.0], [60.7, 2712.0], [60.8, 2720.0], [60.9, 2725.0], [61.0, 2739.0], [61.1, 2745.0], [61.2, 2757.0], [61.3, 2767.0], [61.4, 2778.0], [61.5, 2791.0], [61.6, 2805.0], [61.7, 2816.0], [61.8, 2826.0], [61.9, 2836.0], [62.0, 2845.0], [62.1, 2856.0], [62.2, 2864.0], [62.3, 2872.0], [62.4, 2881.0], [62.5, 2891.0], [62.6, 2902.0], [62.7, 2911.0], [62.8, 2921.0], [62.9, 2926.0], [63.0, 2936.0], [63.1, 2944.0], [63.2, 2951.0], [63.3, 2958.0], [63.4, 2967.0], [63.5, 2975.0], [63.6, 2985.0], [63.7, 2997.0], [63.8, 3004.0], [63.9, 3011.0], [64.0, 3019.0], [64.1, 3026.0], [64.2, 3034.0], [64.3, 3043.0], [64.4, 3052.0], [64.5, 3061.0], [64.6, 3069.0], [64.7, 3076.0], [64.8, 3082.0], [64.9, 3092.0], [65.0, 3100.0], [65.1, 3108.0], [65.2, 3114.0], [65.3, 3120.0], [65.4, 3128.0], [65.5, 3137.0], [65.6, 3143.0], [65.7, 3149.0], [65.8, 3154.0], [65.9, 3160.0], [66.0, 3169.0], [66.1, 3174.0], [66.2, 3183.0], [66.3, 3189.0], [66.4, 3197.0], [66.5, 3202.0], [66.6, 3208.0], [66.7, 3216.0], [66.8, 3222.0], [66.9, 3229.0], [67.0, 3235.0], [67.1, 3243.0], [67.2, 3250.0], [67.3, 3257.0], [67.4, 3263.0], [67.5, 3270.0], [67.6, 3279.0], [67.7, 3286.0], [67.8, 3293.0], [67.9, 3301.0], [68.0, 3309.0], [68.1, 3315.0], [68.2, 3319.0], [68.3, 3326.0], [68.4, 3333.0], [68.5, 3336.0], [68.6, 3346.0], [68.7, 3353.0], [68.8, 3359.0], [68.9, 3366.0], [69.0, 3372.0], [69.1, 3379.0], [69.2, 3387.0], [69.3, 3392.0], [69.4, 3399.0], [69.5, 3405.0], [69.6, 3414.0], [69.7, 3421.0], [69.8, 3428.0], [69.9, 3435.0], [70.0, 3440.0], [70.1, 3448.0], [70.2, 3453.0], [70.3, 3459.0], [70.4, 3465.0], [70.5, 3475.0], [70.6, 3483.0], [70.7, 3491.0], [70.8, 3499.0], [70.9, 3504.0], [71.0, 3512.0], [71.1, 3521.0], [71.2, 3527.0], [71.3, 3535.0], [71.4, 3543.0], [71.5, 3547.0], [71.6, 3554.0], [71.7, 3558.0], [71.8, 3565.0], [71.9, 3572.0], [72.0, 3578.0], [72.1, 3584.0], [72.2, 3591.0], [72.3, 3596.0], [72.4, 3601.0], [72.5, 3607.0], [72.6, 3612.0], [72.7, 3617.0], [72.8, 3624.0], [72.9, 3630.0], [73.0, 3637.0], [73.1, 3644.0], [73.2, 3652.0], [73.3, 3657.0], [73.4, 3664.0], [73.5, 3670.0], [73.6, 3676.0], [73.7, 3681.0], [73.8, 3686.0], [73.9, 3692.0], [74.0, 3698.0], [74.1, 3703.0], [74.2, 3707.0], [74.3, 3713.0], [74.4, 3717.0], [74.5, 3723.0], [74.6, 3729.0], [74.7, 3734.0], [74.8, 3740.0], [74.9, 3748.0], [75.0, 3755.0], [75.1, 3759.0], [75.2, 3764.0], [75.3, 3773.0], [75.4, 3779.0], [75.5, 3785.0], [75.6, 3791.0], [75.7, 3799.0], [75.8, 3806.0], [75.9, 3812.0], [76.0, 3820.0], [76.1, 3825.0], [76.2, 3830.0], [76.3, 3836.0], [76.4, 3842.0], [76.5, 3847.0], [76.6, 3854.0], [76.7, 3860.0], [76.8, 3863.0], [76.9, 3871.0], [77.0, 3877.0], [77.1, 3883.0], [77.2, 3887.0], [77.3, 3891.0], [77.4, 3895.0], [77.5, 3900.0], [77.6, 3903.0], [77.7, 3908.0], [77.8, 3917.0], [77.9, 3923.0], [78.0, 3930.0], [78.1, 3936.0], [78.2, 3941.0], [78.3, 3945.0], [78.4, 3950.0], [78.5, 3956.0], [78.6, 3962.0], [78.7, 3971.0], [78.8, 3977.0], [78.9, 3982.0], [79.0, 3988.0], [79.1, 3995.0], [79.2, 4001.0], [79.3, 4005.0], [79.4, 4011.0], [79.5, 4016.0], [79.6, 4021.0], [79.7, 4025.0], [79.8, 4030.0], [79.9, 4037.0], [80.0, 4044.0], [80.1, 4050.0], [80.2, 4056.0], [80.3, 4059.0], [80.4, 4065.0], [80.5, 4070.0], [80.6, 4077.0], [80.7, 4084.0], [80.8, 4088.0], [80.9, 4093.0], [81.0, 4097.0], [81.1, 4102.0], [81.2, 4107.0], [81.3, 4113.0], [81.4, 4119.0], [81.5, 4123.0], [81.6, 4129.0], [81.7, 4136.0], [81.8, 4140.0], [81.9, 4145.0], [82.0, 4151.0], [82.1, 4156.0], [82.2, 4160.0], [82.3, 4165.0], [82.4, 4172.0], [82.5, 4176.0], [82.6, 4181.0], [82.7, 4187.0], [82.8, 4194.0], [82.9, 4199.0], [83.0, 4207.0], [83.1, 4215.0], [83.2, 4219.0], [83.3, 4224.0], [83.4, 4230.0], [83.5, 4236.0], [83.6, 4241.0], [83.7, 4249.0], [83.8, 4253.0], [83.9, 4261.0], [84.0, 4268.0], [84.1, 4273.0], [84.2, 4278.0], [84.3, 4282.0], [84.4, 4286.0], [84.5, 4291.0], [84.6, 4297.0], [84.7, 4303.0], [84.8, 4309.0], [84.9, 4315.0], [85.0, 4321.0], [85.1, 4326.0], [85.2, 4333.0], [85.3, 4339.0], [85.4, 4345.0], [85.5, 4351.0], [85.6, 4356.0], [85.7, 4361.0], [85.8, 4366.0], [85.9, 4373.0], [86.0, 4377.0], [86.1, 4382.0], [86.2, 4389.0], [86.3, 4396.0], [86.4, 4403.0], [86.5, 4410.0], [86.6, 4416.0], [86.7, 4424.0], [86.8, 4428.0], [86.9, 4434.0], [87.0, 4440.0], [87.1, 4446.0], [87.2, 4455.0], [87.3, 4460.0], [87.4, 4467.0], [87.5, 4474.0], [87.6, 4479.0], [87.7, 4484.0], [87.8, 4492.0], [87.9, 4500.0], [88.0, 4505.0], [88.1, 4512.0], [88.2, 4519.0], [88.3, 4526.0], [88.4, 4530.0], [88.5, 4536.0], [88.6, 4545.0], [88.7, 4550.0], [88.8, 4558.0], [88.9, 4564.0], [89.0, 4572.0], [89.1, 4577.0], [89.2, 4584.0], [89.3, 4593.0], [89.4, 4601.0], [89.5, 4607.0], [89.6, 4616.0], [89.7, 4624.0], [89.8, 4634.0], [89.9, 4645.0], [90.0, 4656.0], [90.1, 4663.0], [90.2, 4671.0], [90.3, 4680.0], [90.4, 4690.0], [90.5, 4704.0], [90.6, 4714.0], [90.7, 4727.0], [90.8, 4736.0], [90.9, 4747.0], [91.0, 4761.0], [91.1, 4772.0], [91.2, 4787.0], [91.3, 4797.0], [91.4, 4807.0], [91.5, 4819.0], [91.6, 4834.0], [91.7, 4851.0], [91.8, 4861.0], [91.9, 4872.0], [92.0, 4886.0], [92.1, 4902.0], [92.2, 4915.0], [92.3, 4932.0], [92.4, 4949.0], [92.5, 4963.0], [92.6, 4984.0], [92.7, 5003.0], [92.8, 5021.0], [92.9, 5033.0], [93.0, 5053.0], [93.1, 5074.0], [93.2, 5098.0], [93.3, 5124.0], [93.4, 5153.0], [93.5, 5176.0], [93.6, 5204.0], [93.7, 5238.0], [93.8, 5268.0], [93.9, 5283.0], [94.0, 5317.0], [94.1, 5366.0], [94.2, 5396.0], [94.3, 5440.0], [94.4, 5466.0], [94.5, 5507.0], [94.6, 5538.0], [94.7, 5581.0], [94.8, 5630.0], [94.9, 5679.0], [95.0, 5724.0], [95.1, 5770.0], [95.2, 5823.0], [95.3, 5855.0], [95.4, 5900.0], [95.5, 5931.0], [95.6, 5980.0], [95.7, 6022.0], [95.8, 6075.0], [95.9, 6127.0], [96.0, 6176.0], [96.1, 6245.0], [96.2, 6323.0], [96.3, 6375.0], [96.4, 6438.0], [96.5, 6497.0], [96.6, 6570.0], [96.7, 6633.0], [96.8, 6743.0], [96.9, 6789.0], [97.0, 6896.0], [97.1, 6972.0], [97.2, 7052.0], [97.3, 7146.0], [97.4, 7228.0], [97.5, 7301.0], [97.6, 7377.0], [97.7, 7485.0], [97.8, 7587.0], [97.9, 7697.0], [98.0, 7802.0], [98.1, 7916.0], [98.2, 8066.0], [98.3, 8162.0], [98.4, 8328.0], [98.5, 8452.0], [98.6, 8581.0], [98.7, 8750.0], [98.8, 8931.0], [98.9, 9037.0], [99.0, 9122.0], [99.1, 9263.0], [99.2, 9434.0], [99.3, 9596.0], [99.4, 9787.0], [99.5, 10089.0], [99.6, 10664.0], [99.7, 11125.0], [99.8, 11563.0], [99.9, 12367.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 9163.0, "series": [{"data": [[0.0, 9149.0], [100.0, 34.0], [200.0, 31.0], [300.0, 39.0], [400.0, 52.0], [500.0, 38.0], [600.0, 65.0], [700.0, 60.0], [800.0, 64.0], [900.0, 68.0], [1000.0, 78.0], [1100.0, 81.0], [1200.0, 94.0], [1300.0, 112.0], [1400.0, 99.0], [1500.0, 130.0], [1600.0, 127.0], [1700.0, 147.0], [1800.0, 166.0], [1900.0, 192.0], [2000.0, 215.0], [2100.0, 227.0], [2200.0, 206.0], [2300.0, 215.0], [2400.0, 185.0], [2500.0, 206.0], [2600.0, 175.0], [2700.0, 187.0], [2800.0, 174.0], [2900.0, 197.0], [3000.0, 261.0], [3100.0, 277.0], [3300.0, 261.0], [3200.0, 263.0], [3400.0, 268.0], [3500.0, 277.0], [3600.0, 301.0], [3700.0, 345.0], [3800.0, 376.0], [3900.0, 357.0], [4000.0, 355.0], [4100.0, 357.0], [4300.0, 362.0], [4200.0, 367.0], [4500.0, 302.0], [4600.0, 263.0], [4400.0, 366.0], [4700.0, 213.0], [4800.0, 183.0], [5000.0, 102.0], [4900.0, 125.0], [5100.0, 78.0], [5200.0, 83.0], [5300.0, 63.0], [5500.0, 50.0], [5600.0, 58.0], [5400.0, 53.0], [5700.0, 54.0], [5800.0, 60.0], [5900.0, 48.0], [6000.0, 44.0], [6100.0, 37.0], [6200.0, 36.0], [6300.0, 27.0], [6600.0, 16.0], [6500.0, 28.0], [6400.0, 24.0], [6700.0, 13.0], [6800.0, 10.0], [6900.0, 9.0], [7000.0, 10.0], [7100.0, 10.0], [7200.0, 10.0], [7300.0, 13.0], [7400.0, 7.0], [7600.0, 11.0], [7500.0, 9.0], [7700.0, 10.0], [7900.0, 16.0], [7800.0, 19.0], [8000.0, 8.0], [8100.0, 7.0], [8400.0, 14.0], [8500.0, 5.0], [8300.0, 9.0], [8700.0, 8.0], [8600.0, 10.0], [8200.0, 9.0], [9100.0, 7.0], [9200.0, 10.0], [9000.0, 16.0], [8900.0, 10.0], [8800.0, 14.0], [9400.0, 11.0], [9300.0, 14.0], [9500.0, 14.0], [9600.0, 7.0], [9700.0, 6.0], [9900.0, 6.0], [10000.0, 12.0], [9800.0, 6.0], [10100.0, 9.0], [10200.0, 4.0], [10500.0, 6.0], [10600.0, 3.0], [10300.0, 9.0], [10400.0, 4.0], [10700.0, 3.0], [11200.0, 5.0], [11000.0, 4.0], [11100.0, 1.0], [11700.0, 5.0], [11500.0, 6.0], [11300.0, 3.0], [11400.0, 4.0], [11600.0, 1.0], [12000.0, 3.0], [11800.0, 1.0], [12200.0, 2.0], [12100.0, 4.0], [12600.0, 2.0], [12400.0, 4.0], [12300.0, 2.0], [12700.0, 2.0], [12500.0, 1.0], [13000.0, 1.0], [13100.0, 3.0], [12800.0, 1.0], [13400.0, 1.0], [14000.0, 1.0], [14600.0, 1.0], [15900.0, 1.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[600.0, 1.0], [100.0, 196.0], [200.0, 3.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 9163.0], [100.0, 39.0], [200.0, 43.0], [300.0, 32.0], [400.0, 42.0], [500.0, 45.0], [600.0, 59.0], [700.0, 66.0], [800.0, 54.0], [900.0, 80.0], [1000.0, 75.0], [1100.0, 88.0], [1200.0, 84.0], [1300.0, 96.0], [1400.0, 123.0], [1500.0, 96.0], [1600.0, 140.0], [1700.0, 137.0], [1800.0, 146.0], [1900.0, 155.0], [2000.0, 173.0], [2100.0, 198.0], [2300.0, 210.0], [2200.0, 220.0], [2400.0, 186.0], [2500.0, 197.0], [2600.0, 173.0], [2700.0, 192.0], [2800.0, 201.0], [2900.0, 229.0], [3000.0, 254.0], [3100.0, 290.0], [3200.0, 293.0], [3300.0, 305.0], [3400.0, 276.0], [3500.0, 313.0], [3700.0, 333.0], [3600.0, 334.0], [3800.0, 358.0], [3900.0, 338.0], [4000.0, 371.0], [4100.0, 376.0], [4200.0, 345.0], [4300.0, 341.0], [4400.0, 310.0], [4600.0, 217.0], [4500.0, 298.0], [4800.0, 152.0], [4700.0, 172.0], [4900.0, 118.0], [5000.0, 105.0], [5100.0, 77.0], [5300.0, 49.0], [5200.0, 73.0], [5600.0, 43.0], [5400.0, 53.0], [5500.0, 51.0], [5700.0, 42.0], [5800.0, 50.0], [5900.0, 50.0], [6000.0, 40.0], [6100.0, 38.0], [6300.0, 35.0], [6200.0, 27.0], [6600.0, 18.0], [6400.0, 33.0], [6500.0, 26.0], [6900.0, 23.0], [6700.0, 35.0], [6800.0, 20.0], [7000.0, 22.0], [7100.0, 28.0], [7300.0, 25.0], [7200.0, 25.0], [7400.0, 21.0], [7500.0, 16.0], [7600.0, 19.0], [7700.0, 19.0], [7800.0, 16.0], [7900.0, 15.0], [8000.0, 21.0], [8100.0, 14.0], [8200.0, 13.0], [8600.0, 10.0], [8400.0, 23.0], [8500.0, 13.0], [8700.0, 10.0], [8300.0, 9.0], [9000.0, 20.0], [9100.0, 16.0], [9200.0, 18.0], [8800.0, 14.0], [8900.0, 17.0], [9700.0, 9.0], [9600.0, 12.0], [9500.0, 12.0], [9400.0, 9.0], [9300.0, 12.0], [9900.0, 9.0], [10000.0, 7.0], [10200.0, 3.0], [10100.0, 3.0], [9800.0, 4.0], [10600.0, 6.0], [10700.0, 6.0], [10300.0, 7.0], [10500.0, 1.0], [11200.0, 5.0], [11100.0, 7.0], [10900.0, 3.0], [10800.0, 3.0], [11000.0, 4.0], [11500.0, 9.0], [11400.0, 3.0], [11300.0, 3.0], [11600.0, 2.0], [11700.0, 3.0], [11800.0, 3.0], [11900.0, 1.0], [12200.0, 1.0], [12100.0, 3.0], [12000.0, 1.0], [12500.0, 1.0], [12400.0, 3.0], [12300.0, 5.0], [12600.0, 2.0], [12700.0, 1.0], [13300.0, 1.0], [13000.0, 1.0], [13100.0, 2.0], [13800.0, 1.0], [14200.0, 1.0], [14400.0, 1.0], [14600.0, 1.0], [15000.0, 1.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1182.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 19306.0, "series": [{"data": [[0.0, 1182.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1339.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 19306.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 18373.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 53.19945355191255, "minX": 1.58768964E12, "maxY": 200.0, "series": [{"data": [[1.58769036E12, 197.2476459510356], [1.58769006E12, 200.0], [1.58769E12, 200.0], [1.5876897E12, 181.2845279720281], [1.58768964E12, 67.45664739884398], [1.5876903E12, 200.0], [1.58769024E12, 200.0], [1.58768994E12, 200.0], [1.58768988E12, 200.0], [1.58769048E12, 53.19945355191255], [1.58769018E12, 200.0], [1.58769012E12, 200.0], [1.58768982E12, 200.0], [1.58768976E12, 200.0], [1.58769042E12, 152.02800579430271]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58769048E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.0, "maxY": 4031.9999999999995, "series": [{"data": [[4.0, 32.75], [6.0, 33.666666666666664], [8.0, 30.0], [9.0, 32.666666666666664], [10.0, 44.0], [11.0, 34.0], [12.0, 40.0], [13.0, 35.5], [14.0, 40.5], [15.0, 31.0], [16.0, 38.5], [17.0, 34.8], [18.0, 88.8], [19.0, 32.0], [20.0, 34.25], [21.0, 31.666666666666668], [22.0, 30.0], [23.0, 36.75], [24.0, 33.0], [25.0, 29.25], [26.0, 47.0], [27.0, 25.71428571428571], [28.0, 51.0], [29.0, 32.0], [30.0, 31.5], [31.0, 30.0], [32.0, 26.5], [33.0, 26.000000000000004], [35.0, 28.0], [34.0, 47.2], [36.0, 28.5], [37.0, 36.142857142857146], [39.0, 39.25], [38.0, 32.666666666666664], [40.0, 28.666666666666668], [41.0, 34.76923076923077], [42.0, 45.111111111111114], [43.0, 64.99999999999999], [44.0, 35.0], [45.0, 34.75], [46.0, 34.75], [47.0, 35.75], [48.0, 34.5], [49.0, 33.16666666666667], [50.0, 30.333333333333332], [51.0, 26.25], [52.0, 20.0], [53.0, 28.142857142857142], [54.0, 20.0], [55.0, 40.166666666666664], [56.0, 42.0], [57.0, 39.333333333333336], [58.0, 27.166666666666664], [59.0, 38.57142857142857], [60.0, 43.9375], [61.0, 41.07142857142857], [62.0, 46.888888888888886], [63.0, 214.09523809523807], [64.0, 712.578947368421], [65.0, 299.5], [66.0, 260.6666666666667], [67.0, 108.5], [68.0, 27.125], [69.0, 23.0], [70.0, 34.833333333333336], [71.0, 41.0], [72.0, 78.22222222222223], [73.0, 30.75], [74.0, 35.285714285714285], [75.0, 30.0], [76.0, 78.70588235294117], [77.0, 36.0], [78.0, 36.333333333333336], [79.0, 56.22222222222222], [81.0, 441.7142857142857], [83.0, 572.0], [80.0, 167.875], [85.0, 1184.2727272727273], [86.0, 1082.75], [87.0, 1465.1875], [84.0, 1640.0], [88.0, 1607.5833333333333], [89.0, 2328.25], [90.0, 2062.5], [91.0, 2062.0], [92.0, 1211.6153846153845], [94.0, 728.5454545454546], [95.0, 819.3333333333333], [93.0, 1290.5], [96.0, 1166.1538461538462], [97.0, 1633.0], [98.0, 1458.75], [99.0, 851.5], [100.0, 1509.666666666667], [101.0, 1444.2], [102.0, 1784.4285714285713], [103.0, 1684.7272727272727], [104.0, 1425.3333333333333], [105.0, 1846.5833333333333], [106.0, 1966.5], [107.0, 1996.5714285714284], [108.0, 2030.4583333333328], [109.0, 1927.5714285714287], [110.0, 1732.4444444444443], [111.0, 1590.6], [112.0, 1603.888888888889], [113.0, 1581.75], [114.0, 1428.5], [115.0, 1359.2142857142856], [116.0, 1246.0], [117.0, 1278.8999999999999], [118.0, 1474.5], [119.0, 1164.3846153846152], [120.0, 1582.2857142857142], [121.0, 1408.0], [122.0, 1306.4285714285716], [123.0, 1443.1034482758623], [124.0, 1682.4499999999998], [125.0, 1857.193548387097], [127.0, 1883.6874999999998], [126.0, 1959.4], [128.0, 1505.5], [129.0, 2089.1111111111113], [130.0, 1670.0], [132.0, 1722.2857142857142], [133.0, 1673.9999999999998], [134.0, 2269.3333333333335], [135.0, 1942.85], [131.0, 2250.7187499999995], [136.0, 1779.5], [137.0, 2194.4], [138.0, 1992.2142857142858], [139.0, 1864.318181818182], [140.0, 1665.0000000000002], [141.0, 1769.0], [143.0, 1789.0], [144.0, 2206.75], [145.0, 2443.3], [146.0, 2520.7222222222226], [147.0, 2252.2142857142862], [148.0, 2153.823529411765], [149.0, 2085.333333333333], [150.0, 2553.9523809523816], [151.0, 2679.0000000000005], [152.0, 2897.1], [153.0, 3119.4], [154.0, 2325.769230769231], [155.0, 2248.9], [156.0, 2744.4500000000003], [157.0, 3018.0], [158.0, 2823.7000000000003], [159.0, 2766.071428571429], [160.0, 2694.2], [161.0, 3027.827586206897], [162.0, 2260.125], [163.0, 3405.1372549019607], [164.0, 2838.3499999999995], [165.0, 2911.7], [166.0, 2696.125], [167.0, 1824.75], [168.0, 2943.8], [169.0, 2740.310344827586], [170.0, 2920.7741935483873], [171.0, 2580.8], [172.0, 2747.6666666666665], [173.0, 2946.5333333333333], [174.0, 3118.5737704918024], [175.0, 3064.882352941176], [176.0, 3116.0], [177.0, 2739.416666666666], [178.0, 3319.7272727272725], [180.0, 3501.8750000000005], [181.0, 3220.2191780821922], [182.0, 3004.8666666666663], [183.0, 3243.3333333333335], [179.0, 3787.5600000000004], [184.0, 3645.6000000000004], [185.0, 3842.893333333333], [186.0, 3362.7142857142862], [187.0, 3457.567567567568], [188.0, 3286.9999999999995], [189.0, 3212.090909090909], [190.0, 3503.8181818181815], [191.0, 3257.0000000000005], [192.0, 2799.7222222222226], [193.0, 2494.5833333333335], [194.0, 2444.3863636363635], [195.0, 3021.2000000000003], [196.0, 3426.065420560747], [197.0, 3169.7884615384605], [198.0, 3127.308943089431], [199.0, 3591.25], [200.0, 1937.3323798627027], [1.0, 39.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[192.58314999999965, 1971.0809]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[2.0, 149.0], [3.0, 154.0], [4.0, 159.0], [5.0, 151.0], [6.0, 149.0], [7.0, 160.0], [8.0, 154.0], [9.0, 149.0], [10.0, 146.0], [11.0, 145.0], [12.0, 158.0], [13.0, 151.0], [14.0, 162.0], [15.0, 146.0], [16.0, 147.0], [17.0, 149.0], [18.0, 148.0], [19.0, 148.0], [20.0, 153.0], [21.0, 146.0], [22.0, 149.0], [23.0, 137.0], [24.0, 140.0], [25.0, 150.0], [26.0, 142.0], [27.0, 191.0], [28.0, 168.0], [29.0, 153.0], [30.0, 155.0], [31.0, 149.0], [32.0, 146.0], [33.0, 161.0], [34.0, 149.0], [35.0, 151.0], [36.0, 151.0], [37.0, 158.0], [38.0, 160.0], [39.0, 149.0], [40.0, 169.0], [41.0, 149.0], [42.0, 166.0], [43.0, 157.0], [44.0, 164.0], [45.0, 163.0], [46.0, 151.0], [47.0, 152.0], [48.0, 159.0], [49.0, 165.0], [50.0, 165.0], [51.0, 148.0], [52.0, 167.0], [53.0, 166.0], [54.0, 157.0], [55.0, 160.0], [56.0, 157.0], [57.0, 150.0], [58.0, 161.0], [59.0, 165.0], [60.0, 156.0], [61.0, 156.0], [62.0, 155.0], [63.0, 160.0], [64.0, 160.0], [65.0, 158.0], [66.0, 156.0], [67.0, 149.0], [68.0, 151.0], [69.0, 151.0], [70.0, 151.0], [71.0, 146.0], [72.0, 154.0], [73.0, 160.0], [74.0, 148.0], [75.0, 146.0], [76.0, 155.0], [77.0, 151.0], [78.0, 156.0], [79.0, 155.0], [81.0, 447.5], [82.0, 166.0], [83.0, 153.0], [84.0, 151.0], [85.0, 174.0], [86.0, 153.0], [87.0, 159.0], [88.0, 158.0], [89.0, 155.0], [90.0, 155.0], [91.0, 162.0], [92.0, 159.0], [93.0, 151.0], [94.0, 148.0], [95.0, 160.0], [96.0, 160.0], [97.0, 162.0], [98.0, 155.0], [99.0, 154.0], [100.0, 158.0], [101.0, 147.0], [102.0, 159.0], [103.0, 154.0], [104.0, 153.0], [105.0, 160.0], [106.0, 156.0], [107.0, 150.0], [108.0, 149.0], [109.0, 153.0], [110.0, 149.0], [111.0, 151.0], [112.0, 146.0], [113.0, 150.0], [114.0, 149.0], [115.0, 157.0], [116.0, 153.0], [117.0, 152.0], [118.0, 174.0], [119.0, 152.0], [120.0, 155.0], [121.0, 155.0], [122.0, 156.0], [123.0, 149.0], [124.0, 157.0], [125.0, 153.0], [126.0, 151.0], [127.0, 165.0], [128.0, 154.0], [129.0, 151.0], [130.0, 160.0], [131.0, 160.0], [132.0, 156.0], [133.0, 163.0], [134.0, 151.0], [135.0, 154.0], [136.0, 155.0], [137.0, 151.0], [138.0, 152.0], [139.0, 175.0], [140.0, 209.0], [141.0, 150.0], [142.0, 161.0], [143.0, 145.0], [144.0, 152.0], [145.0, 165.0], [146.0, 161.0], [147.0, 152.0], [148.0, 154.0], [149.0, 159.0], [150.0, 151.0], [151.0, 154.0], [152.0, 152.0], [153.0, 159.0], [154.0, 157.0], [155.0, 148.0], [156.0, 155.0], [157.0, 156.0], [158.0, 154.0], [159.0, 160.0], [160.0, 147.0], [161.0, 149.0], [162.0, 154.0], [163.0, 152.0], [164.0, 154.0], [165.0, 145.0], [166.0, 151.0], [167.0, 145.0], [168.0, 148.0], [169.0, 159.0], [170.0, 153.0], [171.0, 149.0], [172.0, 146.0], [173.0, 160.0], [174.0, 144.0], [175.0, 161.0], [176.0, 160.0], [177.0, 158.0], [178.0, 148.0], [179.0, 167.0], [180.0, 151.0], [181.0, 158.0], [182.0, 149.0], [183.0, 154.0], [184.0, 147.0], [185.0, 160.0], [186.0, 147.0], [187.0, 147.0], [188.0, 144.0], [189.0, 205.0], [190.0, 152.0], [191.0, 163.0], [192.0, 156.0], [193.0, 153.0], [194.0, 159.0], [195.0, 163.0], [196.0, 154.0], [197.0, 154.0], [198.0, 168.0], [199.0, 167.0], [200.0, 149.0], [1.0, 177.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[100.50500000000008, 158.2699999999998]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[5.0, 22.0], [6.0, 40.2], [7.0, 44.0], [8.0, 29.666666666666668], [9.0, 41.0], [10.0, 41.5], [11.0, 27.0], [12.0, 38.0], [13.0, 36.666666666666664], [14.0, 44.5], [15.0, 30.0], [16.0, 45.5], [17.0, 54.0], [19.0, 28.333333333333332], [20.0, 81.0], [21.0, 27.333333333333332], [22.0, 329.3333333333333], [23.0, 35.666666666666664], [24.0, 33.0], [25.0, 26.75], [26.0, 33.0], [27.0, 35.16666666666667], [28.0, 46.333333333333336], [29.0, 32.0], [30.0, 30.0], [31.0, 28.0], [32.0, 33.5], [33.0, 29.4], [34.0, 45.0], [35.0, 29.5], [36.0, 32.8], [37.0, 41.666666666666664], [38.0, 32.0], [39.0, 27.0], [40.0, 37.0], [41.0, 31.714285714285715], [42.0, 30.230769230769234], [43.0, 44.41666666666667], [44.0, 46.0], [45.0, 38.75], [46.0, 33.00000000000001], [47.0, 26.166666666666668], [48.0, 38.75], [49.0, 33.5], [50.0, 28.333333333333332], [51.0, 37.0], [52.0, 40.6], [53.0, 27.625], [54.0, 28.0], [55.0, 35.666666666666664], [56.0, 36.0], [57.0, 41.6], [58.0, 30.28571428571429], [59.0, 39.888888888888886], [60.0, 50.75], [61.0, 27.4], [62.0, 45.166666666666664], [63.0, 357.95238095238096], [64.0, 793.8461538461538], [65.0, 489.0], [66.0, 145.375], [67.0, 127.33333333333333], [68.0, 26.333333333333332], [69.0, 29.2], [70.0, 39.375], [71.0, 35.166666666666664], [72.0, 95.0909090909091], [73.0, 30.75], [74.0, 119.1], [75.0, 50.18181818181818], [76.0, 89.0909090909091], [77.0, 67.75], [78.0, 33.0], [79.0, 55.0], [81.0, 299.25], [83.0, 793.0], [80.0, 348.75], [86.0, 580.0], [87.0, 1387.75], [85.0, 432.33333333333337], [88.0, 1926.8421052631581], [89.0, 2119.8], [90.0, 2065.6666666666665], [91.0, 1966.6], [92.0, 1990.0937499999998], [93.0, 1621.5], [94.0, 1018.2], [95.0, 1005.6666666666666], [96.0, 1194.25], [97.0, 1781.611111111111], [98.0, 1705.5], [99.0, 1066.0], [100.0, 1854.0], [101.0, 1381.3333333333333], [103.0, 1647.6], [102.0, 1865.6666666666667], [104.0, 1847.4545454545453], [105.0, 1792.0666666666668], [106.0, 1912.0], [107.0, 1731.5], [108.0, 1888.6666666666667], [109.0, 1869.875], [110.0, 1674.7142857142856], [111.0, 1737.2857142857142], [112.0, 1884.9999999999998], [113.0, 1433.3333333333335], [115.0, 1465.1333333333332], [114.0, 1378.8], [116.0, 1108.0], [117.0, 1244.2857142857142], [118.0, 1619.4285714285713], [119.0, 1083.9583333333333], [120.0, 1566.5], [121.0, 1372.1333333333334], [122.0, 1133.5714285714287], [123.0, 1399.909090909091], [124.0, 1560.5454545454545], [125.0, 1821.9444444444443], [126.0, 1985.5714285714287], [127.0, 1524.5], [128.0, 1726.5], [129.0, 2220.375], [130.0, 1915.0], [131.0, 2214.823529411766], [132.0, 1957.9333333333334], [133.0, 1898.3200000000002], [134.0, 1346.3333333333333], [135.0, 1974.12], [136.0, 1791.5], [137.0, 1966.2142857142858], [138.0, 2016.315789473684], [139.0, 2073.409090909091], [140.0, 2697.0], [141.0, 1636.2], [142.0, 2260.4285714285716], [143.0, 1931.4], [144.0, 2003.5], [145.0, 1907.818181818182], [146.0, 2873.066666666666], [147.0, 2465.5454545454545], [148.0, 2007.3333333333333], [149.0, 1710.0], [150.0, 2522.3999999999996], [151.0, 2678.1864406779664], [152.0, 2477.384615384615], [153.0, 2944.8888888888887], [154.0, 1987.4166666666667], [155.0, 1750.3333333333333], [156.0, 2911.3600000000006], [157.0, 2292.5], [158.0, 2156.818181818182], [159.0, 3033.714285714286], [160.0, 2220.7142857142853], [161.0, 2897.6538461538466], [162.0, 1858.6923076923076], [163.0, 3269.8541666666665], [164.0, 3204.4761904761904], [165.0, 2931.866666666667], [166.0, 2744.3478260869565], [167.0, 2231.571428571429], [168.0, 2269.8888888888887], [169.0, 2729.565217391304], [170.0, 3055.9655172413795], [171.0, 2446.117647058824], [172.0, 2766.545454545455], [173.0, 2945.25], [174.0, 3072.6458333333335], [175.0, 3245.4590163934436], [176.0, 3512.566666666666], [177.0, 3094.944444444444], [178.0, 3442.8888888888887], [179.0, 3628.0000000000005], [180.0, 3538.2631578947376], [181.0, 3428.057692307692], [182.0, 3026.912280701754], [183.0, 3282.1999999999994], [184.0, 3677.7916666666665], [185.0, 3747.6249999999995], [186.0, 2869.8333333333335], [187.0, 3422.1794871794864], [188.0, 3234.428571428572], [189.0, 3191.529411764706], [190.0, 3181.6666666666665], [191.0, 3196.3599999999988], [192.0, 2746.3235294117653], [193.0, 2596.6], [194.0, 2489.6666666666665], [195.0, 2900.3125000000005], [196.0, 3661.243243243243], [197.0, 3273.222222222222], [198.0, 3423.6326530612246], [199.0, 4031.9999999999995], [200.0, 1968.2824134972723], [1.0, 32.5]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[192.59200000000047, 2003.4449999999986]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2617.5333333333333, "minX": 1.58768964E12, "maxY": 251348.73333333334, "series": [{"data": [[1.58769036E12, 223805.9], [1.58769006E12, 16991.8], [1.58769E12, 162536.06666666668], [1.5876897E12, 246239.23333333334], [1.58768964E12, 89278.71666666666], [1.5876903E12, 251348.73333333334], [1.58769024E12, 197549.71666666667], [1.58768994E12, 228274.51666666666], [1.58768988E12, 204762.16666666666], [1.58769048E12, 42459.2], [1.58769018E12, 201211.55], [1.58769012E12, 16922.9], [1.58768982E12, 219234.3], [1.58768976E12, 230218.53333333333], [1.58769042E12, 236303.76666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58769036E12, 15186.866666666667], [1.58769006E12, 45846.0], [1.58769E12, 24946.4], [1.5876897E12, 16067.4], [1.58768964E12, 5805.3], [1.5876903E12, 18932.766666666666], [1.58769024E12, 17031.6], [1.58768994E12, 14064.033333333333], [1.58768988E12, 19212.066666666666], [1.58769048E12, 2617.5333333333333], [1.58769018E12, 15665.433333333332], [1.58769012E12, 45660.066666666666], [1.58768982E12, 15844.166666666666], [1.58768976E12, 15072.1], [1.58769042E12, 14808.266666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58769048E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.7160647571606473, "minX": 1.58768964E12, "maxY": 4190.438453713119, "series": [{"data": [[1.58769036E12, 3759.8448598130885], [1.58769006E12, 1.7160647571606473], [1.58769E12, 1682.8791523482246], [1.5876897E12, 2889.6550458715583], [1.58768964E12, 517.8223495702007], [1.5876903E12, 2500.685736079329], [1.58769024E12, 3078.6324999999997], [1.58768994E12, 4190.438453713119], [1.58768988E12, 2670.3504464285747], [1.58769048E12, 245.5148514851485], [1.58769018E12, 3351.5261707988952], [1.58769012E12, 2.27861163227017], [1.58768982E12, 3568.7375113533185], [1.58768976E12, 3792.3063748810655], [1.58769042E12, 2677.252371916509]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.5876897E12, 155.90804597701148], [1.58768964E12, 160.08849557522117]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58769036E12, 3880.0512333965858], [1.58769006E12, 2.3312499999999905], [1.58769E12, 1675.2088353413678], [1.5876897E12, 2896.764176417642], [1.58768964E12, 636.937965260546], [1.5876903E12, 2532.9409124906497], [1.58769024E12, 3380.8468697123567], [1.58768994E12, 4164.678861788612], [1.58768988E12, 2581.4839910647747], [1.58769048E12, 309.1036585365852], [1.58769018E12, 3471.30217785844], [1.58769012E12, 2.193538268506893], [1.58768982E12, 3562.527354260091], [1.58768976E12, 3811.966887417214], [1.58769042E12, 2698.8967551622377]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58769048E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1.711394769613942, "minX": 1.58768964E12, "maxY": 4190.232960325536, "series": [{"data": [[1.58769036E12, 3759.5682242990642], [1.58769006E12, 1.711394769613942], [1.58769E12, 1682.8333333333346], [1.5876897E12, 2889.2550458715596], [1.58768964E12, 517.5243553008596], [1.5876903E12, 2500.3653699466063], [1.58769024E12, 3078.195833333331], [1.58768994E12, 4190.232960325536], [1.58768988E12, 2669.8965773809514], [1.58769048E12, 244.78217821782172], [1.58769018E12, 3350.896235078055], [1.58769012E12, 2.27485928705441], [1.58768982E12, 3568.4059945504073], [1.58768976E12, 3792.0856327307333], [1.58769042E12, 2676.7466793168815]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.5876897E12, 155.82758620689657], [1.58768964E12, 160.05309734513273]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58769036E12, 3879.7533206831054], [1.58769006E12, 2.3278124999999954], [1.58769E12, 1675.1612162937488], [1.5876897E12, 2896.4050405040534], [1.58768964E12, 636.5831265508687], [1.5876903E12, 2532.433807030669], [1.58769024E12, 3380.1996615905214], [1.58768994E12, 4164.420731707316], [1.58768988E12, 2581.154132539092], [1.58769048E12, 307.4329268292684], [1.58769018E12, 3470.2676950998175], [1.58769012E12, 2.1885194479297354], [1.58768982E12, 3562.104932735422], [1.58768976E12, 3811.501419110692], [1.58769042E12, 2698.009832841687]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58769048E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58768964E12, "maxY": 0.9115044247787607, "series": [{"data": [[1.58769036E12, 0.38504672897196335], [1.58769006E12, 0.0], [1.58769E12, 0.17353951890034353], [1.5876897E12, 0.5009174311926605], [1.58768964E12, 0.3151862464183379], [1.5876903E12, 0.2852784134248664], [1.58769024E12, 0.30833333333333385], [1.58768994E12, 0.4181078331637841], [1.58768988E12, 0.258928571428572], [1.58769048E12, 0.09405940594059414], [1.58769018E12, 0.30211202938475673], [1.58769012E12, 0.0], [1.58768982E12, 0.3396911898274296], [1.58768976E12, 0.43958135109419566], [1.58769042E12, 0.41366223908918387]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.5876897E12, 0.5632183908045976], [1.58768964E12, 0.9115044247787607]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58769036E12, 0.3700189753320681], [1.58769006E12, 0.39156249999999937], [1.58769E12, 0.378657487091222], [1.5876897E12, 0.4455445544554454], [1.58768964E12, 0.436724565756824], [1.5876903E12, 0.413612565445026], [1.58769024E12, 0.3900169204737737], [1.58768994E12, 0.43597560975609745], [1.58768988E12, 0.39687267311988117], [1.58769048E12, 0.35975609756097576], [1.58769018E12, 0.3929219600725956], [1.58769012E12, 0.3845671267252195], [1.58768982E12, 0.4340807174887893], [1.58768976E12, 0.4361400189214759], [1.58769042E12, 0.4021632251720749]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58769048E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.58768964E12, "maxY": 15955.0, "series": [{"data": [[1.58769036E12, 15955.0], [1.58769E12, 5821.0], [1.5876897E12, 6730.0], [1.58768964E12, 3175.0], [1.5876903E12, 10618.0], [1.58769024E12, 9374.0], [1.58768994E12, 5925.0], [1.58768988E12, 8272.0], [1.58769048E12, 3064.0], [1.58769018E12, 7468.0], [1.58768982E12, 12023.0], [1.58768976E12, 7488.0], [1.58769042E12, 6133.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58769036E12, 432.0], [1.58769E12, 19.0], [1.5876897E12, 144.0], [1.58768964E12, 15.0], [1.5876903E12, 36.0], [1.58769024E12, 336.0], [1.58768994E12, 2900.0], [1.58768988E12, 1563.0], [1.58769048E12, 14.0], [1.58769018E12, 2581.0], [1.58768982E12, 131.0], [1.58768976E12, 377.0], [1.58769042E12, 19.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58769036E12, 7640.200000000047], [1.58769E12, 4819.0], [1.5876897E12, 4940.0], [1.58768964E12, 2021.0], [1.5876903E12, 7785.200000000001], [1.58769024E12, 5896.5], [1.58768994E12, 4805.0], [1.58768988E12, 5355.200000000002], [1.58769048E12, 921.9000000000001], [1.58769018E12, 5097.8], [1.58768982E12, 7766.199999999999], [1.58768976E12, 6089.200000000001], [1.58769042E12, 3706.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58769036E12, 12741.75], [1.58769E12, 5199.5], [1.5876897E12, 5781.12], [1.58768964E12, 2727.5299999999997], [1.5876903E12, 9789.08], [1.58769024E12, 9172.45], [1.58768994E12, 5270.639999999999], [1.58768988E12, 7848.879999999999], [1.58769048E12, 1817.1499999999992], [1.58769018E12, 7209.94], [1.58768982E12, 11219.23], [1.58768976E12, 6926.990000000001], [1.58769042E12, 4113.200000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58769036E12, 10067.199999999986], [1.58769E12, 4924.5], [1.5876897E12, 5367.799999999999], [1.58768964E12, 2289.0], [1.5876903E12, 8950.2], [1.58769024E12, 7589.0], [1.58768994E12, 4974.9], [1.58768988E12, 6792.1], [1.58769048E12, 1173.6499999999992], [1.58769018E12, 6294.149999999996], [1.58768982E12, 9454.149999999994], [1.58768976E12, 6351.349999999999], [1.58769042E12, 3842.25]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58769048E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 8656.0, "series": [{"data": [[2.0, 41.0], [4.0, 40.5], [5.0, 41.0], [6.0, 40.5], [7.0, 32.0], [9.0, 84.0], [10.0, 293.0], [11.0, 146.0], [12.0, 34.0], [13.0, 39.0], [14.0, 341.5], [15.0, 5979.0], [16.0, 772.5], [17.0, 3700.5], [18.0, 3599.0], [19.0, 2762.0], [20.0, 2540.0], [22.0, 3731.0], [23.0, 3382.5], [24.0, 3987.0], [25.0, 4299.0], [26.0, 4368.5], [27.0, 4024.0], [28.0, 3833.5], [29.0, 3666.0], [30.0, 3831.0], [31.0, 3745.0], [32.0, 3846.0], [33.0, 4095.0], [35.0, 3378.0], [34.0, 3621.0], [36.0, 4095.0], [37.0, 3224.5], [39.0, 3539.5], [38.0, 3814.0], [40.0, 3149.0], [41.0, 3269.0], [42.0, 3222.5], [43.0, 3447.0], [45.0, 3169.0], [44.0, 3476.0], [46.0, 4114.0], [47.0, 3760.0], [48.0, 3140.0], [49.0, 3830.0], [50.0, 33.0], [51.0, 3418.5], [53.0, 2741.0], [52.0, 3993.0], [54.0, 2360.0], [55.0, 2267.0], [56.0, 1716.0], [57.0, 3076.0], [59.0, 2616.5], [58.0, 3037.0], [60.0, 1944.0], [61.0, 3090.0], [63.0, 3576.0], [62.0, 2073.0], [67.0, 2228.0], [64.0, 2299.5], [66.0, 2658.0], [68.0, 2792.0], [69.0, 4345.0], [70.0, 2217.0], [74.0, 4150.5], [72.0, 3049.0], [73.0, 4838.5], [83.0, 2519.5], [80.0, 2445.5], [82.0, 4120.0], [90.0, 3898.0], [95.0, 3839.0], [96.0, 3855.0], [111.0, 2434.0], [112.0, 3853.0], [155.0, 3510.0], [166.0, 5030.0], [175.0, 2664.0], [1.0, 39.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[10.0, 148.0], [17.0, 2.0], [22.0, 3.0], [23.0, 2.5], [26.0, 2.0], [27.0, 2.0], [28.0, 204.0], [31.0, 2.0], [33.0, 2.0], [32.0, 2.0], [35.0, 2.0], [34.0, 3.0], [36.0, 2.5], [37.0, 2.0], [39.0, 2.0], [38.0, 2.0], [41.0, 2.0], [40.0, 2.0], [44.0, 2.0], [45.0, 2.0], [46.0, 2.0], [47.0, 2.0], [49.0, 2.0], [48.0, 2.0], [51.0, 2.0], [53.0, 2.0], [52.0, 2.0], [54.0, 2.0], [55.0, 2.0], [56.0, 2172.0], [57.0, 2.0], [59.0, 2.0], [58.0, 2.0], [60.0, 2.0], [61.0, 2.0], [63.0, 3.0], [62.0, 2.0], [67.0, 2.0], [64.0, 2.0], [66.0, 2.0], [68.0, 3.0], [71.0, 2.0], [69.0, 2.0], [70.0, 2.0], [74.0, 1583.0], [72.0, 2.0], [73.0, 1975.0], [83.0, 8656.0], [82.0, 2.0], [80.0, 1701.5], [85.0, 2.0], [87.0, 2.0], [84.0, 2.0], [90.0, 2.0], [88.0, 2.0], [91.0, 2.0], [89.0, 2.0], [95.0, 2.0], [94.0, 2.0], [93.0, 2.0], [92.0, 2.0], [96.0, 2.0], [99.0, 2.0], [97.0, 2.0], [98.0, 2.0], [102.0, 2.0], [100.0, 2.0], [101.0, 2.0], [103.0, 2.0], [107.0, 2.0], [106.0, 2.0], [104.0, 2.0], [111.0, 2.0], [110.0, 2.0], [108.0, 2.0], [109.0, 2.0], [115.0, 2.0], [112.0, 2.0], [114.0, 2.0], [113.0, 2.0], [119.0, 2.0], [117.0, 2.0], [116.0, 2.0], [118.0, 2.0], [121.0, 2.0], [123.0, 2.0], [120.0, 2.0], [122.0, 2.0], [125.0, 2.0], [126.0, 2.0], [131.0, 2.0], [132.0, 2.0], [133.0, 2.0], [140.0, 2.0], [136.0, 2.0], [158.0, 2.0], [155.0, 2243.0], [165.0, 2.0], [166.0, 2463.5], [175.0, 1139.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 175.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.5, "minX": 1.0, "maxY": 8656.0, "series": [{"data": [[2.0, 40.0], [4.0, 39.0], [5.0, 41.0], [6.0, 38.5], [7.0, 31.0], [9.0, 83.5], [10.0, 293.0], [11.0, 146.0], [12.0, 33.5], [13.0, 38.0], [14.0, 341.5], [15.0, 5979.0], [16.0, 772.0], [17.0, 3700.5], [18.0, 3599.0], [19.0, 2759.0], [20.0, 2535.5], [22.0, 3716.0], [23.0, 3382.5], [24.0, 3987.0], [25.0, 4299.0], [26.0, 4368.5], [27.0, 4024.0], [28.0, 3833.5], [29.0, 3666.0], [30.0, 3831.0], [31.0, 3744.0], [32.0, 3846.0], [33.0, 4095.0], [35.0, 3378.0], [34.0, 3621.0], [36.0, 4095.0], [37.0, 3224.5], [39.0, 3539.5], [38.0, 3814.0], [40.0, 3149.0], [41.0, 3269.0], [42.0, 3222.5], [43.0, 3447.0], [45.0, 3169.0], [44.0, 3476.0], [46.0, 4114.0], [47.0, 3760.0], [48.0, 3140.0], [49.0, 3830.0], [50.0, 33.0], [51.0, 3418.5], [53.0, 2740.5], [52.0, 3993.0], [54.0, 2358.0], [55.0, 2267.0], [56.0, 1716.0], [57.0, 3076.0], [59.0, 2616.5], [58.0, 3037.0], [60.0, 1944.0], [61.0, 3090.0], [63.0, 3573.5], [62.0, 2073.0], [67.0, 2228.0], [64.0, 2299.5], [66.0, 2658.0], [68.0, 2792.0], [69.0, 4345.0], [70.0, 2217.0], [74.0, 4150.5], [72.0, 3049.0], [73.0, 4838.5], [83.0, 2518.0], [80.0, 2444.0], [82.0, 4120.0], [90.0, 3898.0], [95.0, 3839.0], [96.0, 3855.0], [111.0, 2434.0], [112.0, 3853.0], [155.0, 3500.0], [166.0, 5029.5], [175.0, 2664.0], [1.0, 39.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[10.0, 147.0], [17.0, 2.0], [22.0, 3.0], [23.0, 2.5], [26.0, 2.0], [27.0, 2.0], [28.0, 204.0], [31.0, 2.0], [33.0, 2.0], [32.0, 2.0], [35.0, 2.0], [34.0, 3.0], [36.0, 2.5], [37.0, 2.0], [39.0, 2.0], [38.0, 2.0], [41.0, 2.0], [40.0, 2.0], [44.0, 2.0], [45.0, 2.0], [46.0, 2.0], [47.0, 2.0], [49.0, 2.0], [48.0, 2.0], [51.0, 2.0], [53.0, 2.0], [52.0, 2.0], [54.0, 2.0], [55.0, 2.0], [56.0, 2172.0], [57.0, 2.0], [59.0, 2.0], [58.0, 2.0], [60.0, 2.0], [61.0, 2.0], [63.0, 3.0], [62.0, 2.0], [67.0, 2.0], [64.0, 1.5], [66.0, 2.0], [68.0, 3.0], [71.0, 2.0], [69.0, 2.0], [70.0, 2.0], [74.0, 1583.0], [72.0, 2.0], [73.0, 1975.0], [83.0, 8656.0], [82.0, 2.0], [80.0, 1701.5], [85.0, 2.0], [87.0, 2.0], [84.0, 2.0], [90.0, 2.0], [88.0, 2.0], [91.0, 2.0], [89.0, 2.0], [95.0, 2.0], [94.0, 2.0], [93.0, 2.0], [92.0, 2.0], [96.0, 2.0], [99.0, 2.0], [97.0, 2.0], [98.0, 2.0], [102.0, 2.0], [100.0, 2.0], [101.0, 2.0], [103.0, 2.0], [107.0, 2.0], [106.0, 2.0], [104.0, 2.0], [111.0, 2.0], [110.0, 2.0], [108.0, 2.0], [109.0, 2.0], [115.0, 2.0], [112.0, 2.0], [114.0, 2.0], [113.0, 2.0], [119.0, 2.0], [117.0, 2.0], [116.0, 2.0], [118.0, 2.0], [121.0, 2.0], [123.0, 2.0], [120.0, 2.0], [122.0, 2.0], [125.0, 2.0], [126.0, 2.0], [131.0, 2.0], [132.0, 2.0], [133.0, 2.0], [140.0, 2.0], [136.0, 2.0], [158.0, 2.0], [155.0, 2243.0], [165.0, 2.0], [166.0, 2463.5], [175.0, 1139.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 175.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 5.783333333333333, "minX": 1.58768964E12, "maxY": 106.88333333333334, "series": [{"data": [[1.58769036E12, 35.3], [1.58769006E12, 106.88333333333334], [1.58769E12, 55.85], [1.5876897E12, 39.583333333333336], [1.58768964E12, 15.266666666666667], [1.5876903E12, 44.9], [1.58769024E12, 38.833333333333336], [1.58768994E12, 33.11666666666667], [1.58768988E12, 44.483333333333334], [1.58769048E12, 5.783333333333333], [1.58769018E12, 38.833333333333336], [1.58769012E12, 106.41666666666667], [1.58768982E12, 37.36666666666667], [1.58768976E12, 34.666666666666664], [1.58769042E12, 32.71666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58769048E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58768964E12, "maxY": 106.86666666666666, "series": [{"data": [[1.58769036E12, 32.0], [1.58769E12, 22.483333333333334], [1.5876897E12, 36.45], [1.58768964E12, 14.333333333333334], [1.5876903E12, 35.78333333333333], [1.58769024E12, 28.066666666666666], [1.58768994E12, 32.766666666666666], [1.58768988E12, 28.966666666666665], [1.58769048E12, 6.1], [1.58769018E12, 28.7], [1.58768982E12, 31.266666666666666], [1.58768976E12, 32.96666666666667], [1.58769042E12, 33.9]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58769036E12, 3.4], [1.58769006E12, 106.86666666666666], [1.58769E12, 35.666666666666664], [1.5876897E12, 1.6833333333333333], [1.58768964E12, 0.08333333333333333], [1.5876903E12, 8.35], [1.58769024E12, 11.633333333333333], [1.58768994E12, 0.016666666666666666], [1.58768988E12, 15.816666666666666], [1.58769018E12, 7.816666666666666], [1.58769012E12, 106.43333333333334], [1.58768982E12, 5.666666666666667], [1.58768976E12, 2.1666666666666665], [1.58769042E12, 0.6166666666666667]], "isOverall": false, "label": "503", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58769048E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58768964E12, "maxY": 53.53333333333333, "series": [{"data": [[1.5876897E12, 1.45], [1.58768964E12, 1.8833333333333333]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58769036E12, 16.016666666666666], [1.58769E12, 10.933333333333334], [1.5876897E12, 17.183333333333334], [1.58768964E12, 5.783333333333333], [1.5876903E12, 17.816666666666666], [1.58769024E12, 14.266666666666667], [1.58768994E12, 16.366666666666667], [1.58768988E12, 14.466666666666667], [1.58769048E12, 3.3666666666666667], [1.58769018E12, 14.133333333333333], [1.58768982E12, 15.516666666666667], [1.58768976E12, 16.35], [1.58769042E12, 17.266666666666666]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58769036E12, 1.8166666666666667], [1.58769006E12, 53.53333333333333], [1.58769E12, 18.166666666666668], [1.5876897E12, 0.9833333333333333], [1.58768964E12, 0.03333333333333333], [1.5876903E12, 4.033333333333333], [1.58769024E12, 5.733333333333333], [1.58768994E12, 0.016666666666666666], [1.58768988E12, 7.933333333333334], [1.58769018E12, 4.016666666666667], [1.58769012E12, 53.3], [1.58768982E12, 2.8333333333333335], [1.58768976E12, 1.1666666666666667], [1.58769042E12, 0.3]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58769036E12, 15.983333333333333], [1.58769E12, 11.55], [1.5876897E12, 17.816666666666666], [1.58768964E12, 6.666666666666667], [1.5876903E12, 17.966666666666665], [1.58769024E12, 13.8], [1.58768994E12, 16.4], [1.58768988E12, 14.5], [1.58769048E12, 2.7333333333333334], [1.58769018E12, 14.566666666666666], [1.58768982E12, 15.75], [1.58768976E12, 16.616666666666667], [1.58769042E12, 16.633333333333333]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.58769036E12, 1.5833333333333333], [1.58769006E12, 53.333333333333336], [1.58769E12, 17.5], [1.5876897E12, 0.7], [1.58768964E12, 0.05], [1.5876903E12, 4.316666666666666], [1.58769024E12, 5.9], [1.58768988E12, 7.883333333333334], [1.58769018E12, 3.8], [1.58769012E12, 53.13333333333333], [1.58768982E12, 2.8333333333333335], [1.58768976E12, 1.0], [1.58769042E12, 0.31666666666666665]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58769048E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.58768964E12, "maxY": 106.86666666666666, "series": [{"data": [[1.58769036E12, 32.0], [1.58769E12, 22.483333333333334], [1.5876897E12, 36.45], [1.58768964E12, 14.333333333333334], [1.5876903E12, 35.78333333333333], [1.58769024E12, 28.066666666666666], [1.58768994E12, 32.766666666666666], [1.58768988E12, 28.966666666666665], [1.58769048E12, 6.1], [1.58769018E12, 28.7], [1.58768982E12, 31.266666666666666], [1.58768976E12, 32.96666666666667], [1.58769042E12, 33.9]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58769036E12, 3.4], [1.58769006E12, 106.86666666666666], [1.58769E12, 35.666666666666664], [1.5876897E12, 1.6833333333333333], [1.58768964E12, 0.08333333333333333], [1.5876903E12, 8.35], [1.58769024E12, 11.633333333333333], [1.58768994E12, 0.016666666666666666], [1.58768988E12, 15.816666666666666], [1.58769018E12, 7.816666666666666], [1.58769012E12, 106.43333333333334], [1.58768982E12, 5.666666666666667], [1.58768976E12, 2.1666666666666665], [1.58769042E12, 0.6166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58769048E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

