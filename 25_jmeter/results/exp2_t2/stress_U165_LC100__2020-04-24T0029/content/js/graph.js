/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 9150.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 3.0], [36.2, 3.0], [36.3, 3.0], [36.4, 3.0], [36.5, 3.0], [36.6, 3.0], [36.7, 3.0], [36.8, 3.0], [36.9, 3.0], [37.0, 3.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 5.0], [37.7, 5.0], [37.8, 6.0], [37.9, 9.0], [38.0, 21.0], [38.1, 23.0], [38.2, 24.0], [38.3, 25.0], [38.4, 26.0], [38.5, 27.0], [38.6, 28.0], [38.7, 29.0], [38.8, 30.0], [38.9, 31.0], [39.0, 31.0], [39.1, 33.0], [39.2, 34.0], [39.3, 35.0], [39.4, 37.0], [39.5, 38.0], [39.6, 40.0], [39.7, 42.0], [39.8, 45.0], [39.9, 49.0], [40.0, 52.0], [40.1, 55.0], [40.2, 58.0], [40.3, 64.0], [40.4, 70.0], [40.5, 74.0], [40.6, 81.0], [40.7, 89.0], [40.8, 95.0], [40.9, 102.0], [41.0, 110.0], [41.1, 125.0], [41.2, 142.0], [41.3, 163.0], [41.4, 183.0], [41.5, 228.0], [41.6, 269.0], [41.7, 300.0], [41.8, 328.0], [41.9, 355.0], [42.0, 383.0], [42.1, 416.0], [42.2, 434.0], [42.3, 454.0], [42.4, 473.0], [42.5, 501.0], [42.6, 521.0], [42.7, 543.0], [42.8, 563.0], [42.9, 601.0], [43.0, 613.0], [43.1, 626.0], [43.2, 640.0], [43.3, 661.0], [43.4, 670.0], [43.5, 687.0], [43.6, 694.0], [43.7, 709.0], [43.8, 730.0], [43.9, 740.0], [44.0, 755.0], [44.1, 768.0], [44.2, 784.0], [44.3, 794.0], [44.4, 809.0], [44.5, 827.0], [44.6, 838.0], [44.7, 853.0], [44.8, 862.0], [44.9, 874.0], [45.0, 881.0], [45.1, 893.0], [45.2, 902.0], [45.3, 914.0], [45.4, 926.0], [45.5, 935.0], [45.6, 949.0], [45.7, 960.0], [45.8, 972.0], [45.9, 985.0], [46.0, 996.0], [46.1, 1006.0], [46.2, 1016.0], [46.3, 1023.0], [46.4, 1035.0], [46.5, 1043.0], [46.6, 1049.0], [46.7, 1061.0], [46.8, 1070.0], [46.9, 1078.0], [47.0, 1087.0], [47.1, 1093.0], [47.2, 1100.0], [47.3, 1109.0], [47.4, 1116.0], [47.5, 1123.0], [47.6, 1134.0], [47.7, 1139.0], [47.8, 1146.0], [47.9, 1152.0], [48.0, 1162.0], [48.1, 1169.0], [48.2, 1180.0], [48.3, 1186.0], [48.4, 1193.0], [48.5, 1201.0], [48.6, 1210.0], [48.7, 1218.0], [48.8, 1224.0], [48.9, 1237.0], [49.0, 1244.0], [49.1, 1251.0], [49.2, 1259.0], [49.3, 1272.0], [49.4, 1280.0], [49.5, 1285.0], [49.6, 1296.0], [49.7, 1303.0], [49.8, 1312.0], [49.9, 1318.0], [50.0, 1324.0], [50.1, 1332.0], [50.2, 1344.0], [50.3, 1353.0], [50.4, 1358.0], [50.5, 1365.0], [50.6, 1374.0], [50.7, 1382.0], [50.8, 1389.0], [50.9, 1397.0], [51.0, 1404.0], [51.1, 1416.0], [51.2, 1422.0], [51.3, 1432.0], [51.4, 1438.0], [51.5, 1449.0], [51.6, 1455.0], [51.7, 1462.0], [51.8, 1466.0], [51.9, 1474.0], [52.0, 1482.0], [52.1, 1492.0], [52.2, 1498.0], [52.3, 1507.0], [52.4, 1515.0], [52.5, 1526.0], [52.6, 1531.0], [52.7, 1539.0], [52.8, 1546.0], [52.9, 1555.0], [53.0, 1561.0], [53.1, 1568.0], [53.2, 1573.0], [53.3, 1581.0], [53.4, 1589.0], [53.5, 1597.0], [53.6, 1606.0], [53.7, 1613.0], [53.8, 1620.0], [53.9, 1628.0], [54.0, 1636.0], [54.1, 1644.0], [54.2, 1652.0], [54.3, 1656.0], [54.4, 1662.0], [54.5, 1672.0], [54.6, 1676.0], [54.7, 1685.0], [54.8, 1688.0], [54.9, 1694.0], [55.0, 1699.0], [55.1, 1704.0], [55.2, 1712.0], [55.3, 1718.0], [55.4, 1726.0], [55.5, 1736.0], [55.6, 1744.0], [55.7, 1749.0], [55.8, 1754.0], [55.9, 1760.0], [56.0, 1766.0], [56.1, 1772.0], [56.2, 1779.0], [56.3, 1783.0], [56.4, 1790.0], [56.5, 1794.0], [56.6, 1798.0], [56.7, 1804.0], [56.8, 1810.0], [56.9, 1816.0], [57.0, 1821.0], [57.1, 1825.0], [57.2, 1830.0], [57.3, 1834.0], [57.4, 1841.0], [57.5, 1846.0], [57.6, 1850.0], [57.7, 1853.0], [57.8, 1859.0], [57.9, 1868.0], [58.0, 1872.0], [58.1, 1876.0], [58.2, 1881.0], [58.3, 1887.0], [58.4, 1892.0], [58.5, 1895.0], [58.6, 1903.0], [58.7, 1907.0], [58.8, 1911.0], [58.9, 1915.0], [59.0, 1920.0], [59.1, 1924.0], [59.2, 1927.0], [59.3, 1932.0], [59.4, 1936.0], [59.5, 1940.0], [59.6, 1944.0], [59.7, 1949.0], [59.8, 1952.0], [59.9, 1955.0], [60.0, 1961.0], [60.1, 1967.0], [60.2, 1970.0], [60.3, 1975.0], [60.4, 1979.0], [60.5, 1983.0], [60.6, 1986.0], [60.7, 1990.0], [60.8, 1994.0], [60.9, 1999.0], [61.0, 2003.0], [61.1, 2007.0], [61.2, 2010.0], [61.3, 2014.0], [61.4, 2018.0], [61.5, 2023.0], [61.6, 2026.0], [61.7, 2029.0], [61.8, 2033.0], [61.9, 2037.0], [62.0, 2040.0], [62.1, 2043.0], [62.2, 2049.0], [62.3, 2054.0], [62.4, 2059.0], [62.5, 2062.0], [62.6, 2065.0], [62.7, 2070.0], [62.8, 2073.0], [62.9, 2076.0], [63.0, 2080.0], [63.1, 2083.0], [63.2, 2088.0], [63.3, 2092.0], [63.4, 2095.0], [63.5, 2098.0], [63.6, 2101.0], [63.7, 2106.0], [63.8, 2109.0], [63.9, 2112.0], [64.0, 2115.0], [64.1, 2120.0], [64.2, 2122.0], [64.3, 2127.0], [64.4, 2132.0], [64.5, 2137.0], [64.6, 2141.0], [64.7, 2143.0], [64.8, 2147.0], [64.9, 2152.0], [65.0, 2158.0], [65.1, 2162.0], [65.2, 2169.0], [65.3, 2172.0], [65.4, 2176.0], [65.5, 2182.0], [65.6, 2185.0], [65.7, 2190.0], [65.8, 2194.0], [65.9, 2200.0], [66.0, 2204.0], [66.1, 2208.0], [66.2, 2212.0], [66.3, 2216.0], [66.4, 2221.0], [66.5, 2226.0], [66.6, 2228.0], [66.7, 2232.0], [66.8, 2236.0], [66.9, 2240.0], [67.0, 2243.0], [67.1, 2247.0], [67.2, 2250.0], [67.3, 2253.0], [67.4, 2257.0], [67.5, 2260.0], [67.6, 2262.0], [67.7, 2269.0], [67.8, 2273.0], [67.9, 2277.0], [68.0, 2281.0], [68.1, 2285.0], [68.2, 2290.0], [68.3, 2295.0], [68.4, 2300.0], [68.5, 2303.0], [68.6, 2307.0], [68.7, 2311.0], [68.8, 2315.0], [68.9, 2320.0], [69.0, 2323.0], [69.1, 2327.0], [69.2, 2329.0], [69.3, 2335.0], [69.4, 2338.0], [69.5, 2342.0], [69.6, 2343.0], [69.7, 2349.0], [69.8, 2354.0], [69.9, 2359.0], [70.0, 2364.0], [70.1, 2367.0], [70.2, 2371.0], [70.3, 2379.0], [70.4, 2382.0], [70.5, 2387.0], [70.6, 2394.0], [70.7, 2397.0], [70.8, 2402.0], [70.9, 2405.0], [71.0, 2410.0], [71.1, 2414.0], [71.2, 2419.0], [71.3, 2423.0], [71.4, 2426.0], [71.5, 2429.0], [71.6, 2432.0], [71.7, 2436.0], [71.8, 2439.0], [71.9, 2443.0], [72.0, 2449.0], [72.1, 2453.0], [72.2, 2459.0], [72.3, 2463.0], [72.4, 2468.0], [72.5, 2472.0], [72.6, 2476.0], [72.7, 2481.0], [72.8, 2485.0], [72.9, 2489.0], [73.0, 2493.0], [73.1, 2498.0], [73.2, 2503.0], [73.3, 2507.0], [73.4, 2512.0], [73.5, 2516.0], [73.6, 2520.0], [73.7, 2523.0], [73.8, 2527.0], [73.9, 2531.0], [74.0, 2536.0], [74.1, 2540.0], [74.2, 2547.0], [74.3, 2550.0], [74.4, 2555.0], [74.5, 2559.0], [74.6, 2562.0], [74.7, 2569.0], [74.8, 2572.0], [74.9, 2576.0], [75.0, 2582.0], [75.1, 2588.0], [75.2, 2593.0], [75.3, 2597.0], [75.4, 2602.0], [75.5, 2606.0], [75.6, 2610.0], [75.7, 2615.0], [75.8, 2621.0], [75.9, 2624.0], [76.0, 2628.0], [76.1, 2633.0], [76.2, 2639.0], [76.3, 2643.0], [76.4, 2648.0], [76.5, 2653.0], [76.6, 2660.0], [76.7, 2663.0], [76.8, 2667.0], [76.9, 2673.0], [77.0, 2677.0], [77.1, 2683.0], [77.2, 2687.0], [77.3, 2692.0], [77.4, 2697.0], [77.5, 2705.0], [77.6, 2711.0], [77.7, 2717.0], [77.8, 2723.0], [77.9, 2727.0], [78.0, 2732.0], [78.1, 2736.0], [78.2, 2739.0], [78.3, 2743.0], [78.4, 2747.0], [78.5, 2754.0], [78.6, 2759.0], [78.7, 2763.0], [78.8, 2768.0], [78.9, 2773.0], [79.0, 2778.0], [79.1, 2781.0], [79.2, 2787.0], [79.3, 2793.0], [79.4, 2801.0], [79.5, 2808.0], [79.6, 2813.0], [79.7, 2820.0], [79.8, 2828.0], [79.9, 2835.0], [80.0, 2841.0], [80.1, 2848.0], [80.2, 2852.0], [80.3, 2859.0], [80.4, 2863.0], [80.5, 2869.0], [80.6, 2875.0], [80.7, 2882.0], [80.8, 2887.0], [80.9, 2893.0], [81.0, 2899.0], [81.1, 2906.0], [81.2, 2913.0], [81.3, 2920.0], [81.4, 2926.0], [81.5, 2932.0], [81.6, 2939.0], [81.7, 2945.0], [81.8, 2952.0], [81.9, 2958.0], [82.0, 2964.0], [82.1, 2970.0], [82.2, 2975.0], [82.3, 2981.0], [82.4, 2987.0], [82.5, 2997.0], [82.6, 3004.0], [82.7, 3013.0], [82.8, 3020.0], [82.9, 3029.0], [83.0, 3036.0], [83.1, 3043.0], [83.2, 3047.0], [83.3, 3054.0], [83.4, 3061.0], [83.5, 3068.0], [83.6, 3074.0], [83.7, 3081.0], [83.8, 3088.0], [83.9, 3096.0], [84.0, 3105.0], [84.1, 3112.0], [84.2, 3124.0], [84.3, 3128.0], [84.4, 3136.0], [84.5, 3147.0], [84.6, 3152.0], [84.7, 3157.0], [84.8, 3167.0], [84.9, 3173.0], [85.0, 3181.0], [85.1, 3189.0], [85.2, 3196.0], [85.3, 3203.0], [85.4, 3210.0], [85.5, 3220.0], [85.6, 3227.0], [85.7, 3237.0], [85.8, 3246.0], [85.9, 3253.0], [86.0, 3263.0], [86.1, 3272.0], [86.2, 3278.0], [86.3, 3285.0], [86.4, 3297.0], [86.5, 3304.0], [86.6, 3311.0], [86.7, 3319.0], [86.8, 3331.0], [86.9, 3339.0], [87.0, 3345.0], [87.1, 3357.0], [87.2, 3365.0], [87.3, 3378.0], [87.4, 3389.0], [87.5, 3400.0], [87.6, 3409.0], [87.7, 3416.0], [87.8, 3424.0], [87.9, 3432.0], [88.0, 3441.0], [88.1, 3449.0], [88.2, 3456.0], [88.3, 3466.0], [88.4, 3477.0], [88.5, 3485.0], [88.6, 3496.0], [88.7, 3503.0], [88.8, 3517.0], [88.9, 3529.0], [89.0, 3540.0], [89.1, 3553.0], [89.2, 3564.0], [89.3, 3573.0], [89.4, 3584.0], [89.5, 3595.0], [89.6, 3608.0], [89.7, 3619.0], [89.8, 3628.0], [89.9, 3642.0], [90.0, 3654.0], [90.1, 3669.0], [90.2, 3678.0], [90.3, 3686.0], [90.4, 3694.0], [90.5, 3718.0], [90.6, 3730.0], [90.7, 3741.0], [90.8, 3753.0], [90.9, 3764.0], [91.0, 3775.0], [91.1, 3790.0], [91.2, 3805.0], [91.3, 3822.0], [91.4, 3832.0], [91.5, 3848.0], [91.6, 3860.0], [91.7, 3873.0], [91.8, 3890.0], [91.9, 3918.0], [92.0, 3942.0], [92.1, 3961.0], [92.2, 3977.0], [92.3, 3992.0], [92.4, 4012.0], [92.5, 4029.0], [92.6, 4040.0], [92.7, 4056.0], [92.8, 4065.0], [92.9, 4087.0], [93.0, 4097.0], [93.1, 4106.0], [93.2, 4122.0], [93.3, 4135.0], [93.4, 4150.0], [93.5, 4176.0], [93.6, 4190.0], [93.7, 4209.0], [93.8, 4223.0], [93.9, 4244.0], [94.0, 4266.0], [94.1, 4284.0], [94.2, 4299.0], [94.3, 4325.0], [94.4, 4342.0], [94.5, 4360.0], [94.6, 4380.0], [94.7, 4407.0], [94.8, 4424.0], [94.9, 4441.0], [95.0, 4461.0], [95.1, 4482.0], [95.2, 4494.0], [95.3, 4517.0], [95.4, 4541.0], [95.5, 4567.0], [95.6, 4587.0], [95.7, 4604.0], [95.8, 4638.0], [95.9, 4682.0], [96.0, 4719.0], [96.1, 4741.0], [96.2, 4798.0], [96.3, 4833.0], [96.4, 4889.0], [96.5, 4913.0], [96.6, 4941.0], [96.7, 4993.0], [96.8, 5043.0], [96.9, 5081.0], [97.0, 5134.0], [97.1, 5176.0], [97.2, 5228.0], [97.3, 5271.0], [97.4, 5326.0], [97.5, 5390.0], [97.6, 5440.0], [97.7, 5473.0], [97.8, 5528.0], [97.9, 5595.0], [98.0, 5664.0], [98.1, 5711.0], [98.2, 5799.0], [98.3, 5847.0], [98.4, 5915.0], [98.5, 5962.0], [98.6, 6036.0], [98.7, 6145.0], [98.8, 6222.0], [98.9, 6313.0], [99.0, 6387.0], [99.1, 6484.0], [99.2, 6558.0], [99.3, 6636.0], [99.4, 6761.0], [99.5, 6851.0], [99.6, 6996.0], [99.7, 7129.0], [99.8, 7310.0], [99.9, 7576.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 141.0], [0.1, 141.0], [0.2, 141.0], [0.3, 141.0], [0.4, 141.0], [0.5, 141.0], [0.6, 141.0], [0.7, 142.0], [0.8, 142.0], [0.9, 142.0], [1.0, 142.0], [1.1, 142.0], [1.2, 142.0], [1.3, 142.0], [1.4, 142.0], [1.5, 142.0], [1.6, 142.0], [1.7, 142.0], [1.8, 142.0], [1.9, 144.0], [2.0, 144.0], [2.1, 144.0], [2.2, 144.0], [2.3, 144.0], [2.4, 144.0], [2.5, 144.0], [2.6, 144.0], [2.7, 144.0], [2.8, 144.0], [2.9, 144.0], [3.0, 144.0], [3.1, 145.0], [3.2, 145.0], [3.3, 145.0], [3.4, 145.0], [3.5, 145.0], [3.6, 145.0], [3.7, 145.0], [3.8, 145.0], [3.9, 145.0], [4.0, 145.0], [4.1, 145.0], [4.2, 145.0], [4.3, 146.0], [4.4, 146.0], [4.5, 146.0], [4.6, 146.0], [4.7, 146.0], [4.8, 146.0], [4.9, 146.0], [5.0, 146.0], [5.1, 146.0], [5.2, 146.0], [5.3, 146.0], [5.4, 146.0], [5.5, 146.0], [5.6, 146.0], [5.7, 146.0], [5.8, 146.0], [5.9, 146.0], [6.0, 146.0], [6.1, 146.0], [6.2, 146.0], [6.3, 146.0], [6.4, 146.0], [6.5, 146.0], [6.6, 146.0], [6.7, 147.0], [6.8, 147.0], [6.9, 147.0], [7.0, 147.0], [7.1, 147.0], [7.2, 147.0], [7.3, 147.0], [7.4, 147.0], [7.5, 147.0], [7.6, 147.0], [7.7, 147.0], [7.8, 147.0], [7.9, 147.0], [8.0, 147.0], [8.1, 147.0], [8.2, 147.0], [8.3, 147.0], [8.4, 147.0], [8.5, 147.0], [8.6, 147.0], [8.7, 147.0], [8.8, 147.0], [8.9, 147.0], [9.0, 147.0], [9.1, 147.0], [9.2, 147.0], [9.3, 147.0], [9.4, 147.0], [9.5, 147.0], [9.6, 147.0], [9.7, 147.0], [9.8, 147.0], [9.9, 147.0], [10.0, 147.0], [10.1, 147.0], [10.2, 147.0], [10.3, 147.0], [10.4, 147.0], [10.5, 147.0], [10.6, 147.0], [10.7, 147.0], [10.8, 147.0], [10.9, 147.0], [11.0, 147.0], [11.1, 147.0], [11.2, 147.0], [11.3, 147.0], [11.4, 147.0], [11.5, 147.0], [11.6, 147.0], [11.7, 147.0], [11.8, 147.0], [11.9, 147.0], [12.0, 147.0], [12.1, 147.0], [12.2, 147.0], [12.3, 147.0], [12.4, 147.0], [12.5, 147.0], [12.6, 147.0], [12.7, 147.0], [12.8, 147.0], [12.9, 147.0], [13.0, 147.0], [13.1, 147.0], [13.2, 147.0], [13.3, 147.0], [13.4, 147.0], [13.5, 147.0], [13.6, 147.0], [13.7, 147.0], [13.8, 147.0], [13.9, 147.0], [14.0, 147.0], [14.1, 147.0], [14.2, 147.0], [14.3, 147.0], [14.4, 147.0], [14.5, 147.0], [14.6, 147.0], [14.7, 147.0], [14.8, 147.0], [14.9, 147.0], [15.0, 147.0], [15.1, 147.0], [15.2, 148.0], [15.3, 148.0], [15.4, 148.0], [15.5, 148.0], [15.6, 148.0], [15.7, 148.0], [15.8, 148.0], [15.9, 148.0], [16.0, 148.0], [16.1, 148.0], [16.2, 148.0], [16.3, 148.0], [16.4, 148.0], [16.5, 148.0], [16.6, 148.0], [16.7, 148.0], [16.8, 148.0], [16.9, 148.0], [17.0, 149.0], [17.1, 149.0], [17.2, 149.0], [17.3, 149.0], [17.4, 149.0], [17.5, 149.0], [17.6, 149.0], [17.7, 149.0], [17.8, 149.0], [17.9, 149.0], [18.0, 149.0], [18.1, 149.0], [18.2, 149.0], [18.3, 149.0], [18.4, 149.0], [18.5, 149.0], [18.6, 149.0], [18.7, 149.0], [18.8, 149.0], [18.9, 149.0], [19.0, 149.0], [19.1, 149.0], [19.2, 149.0], [19.3, 149.0], [19.4, 149.0], [19.5, 149.0], [19.6, 149.0], [19.7, 149.0], [19.8, 149.0], [19.9, 149.0], [20.0, 149.0], [20.1, 149.0], [20.2, 149.0], [20.3, 149.0], [20.4, 149.0], [20.5, 149.0], [20.6, 149.0], [20.7, 149.0], [20.8, 149.0], [20.9, 149.0], [21.0, 149.0], [21.1, 149.0], [21.2, 149.0], [21.3, 149.0], [21.4, 149.0], [21.5, 149.0], [21.6, 149.0], [21.7, 149.0], [21.8, 149.0], [21.9, 149.0], [22.0, 149.0], [22.1, 149.0], [22.2, 149.0], [22.3, 149.0], [22.4, 149.0], [22.5, 150.0], [22.6, 150.0], [22.7, 150.0], [22.8, 150.0], [22.9, 150.0], [23.0, 150.0], [23.1, 150.0], [23.2, 150.0], [23.3, 150.0], [23.4, 150.0], [23.5, 150.0], [23.6, 150.0], [23.7, 150.0], [23.8, 150.0], [23.9, 150.0], [24.0, 150.0], [24.1, 150.0], [24.2, 150.0], [24.3, 150.0], [24.4, 150.0], [24.5, 150.0], [24.6, 150.0], [24.7, 150.0], [24.8, 150.0], [24.9, 150.0], [25.0, 150.0], [25.1, 150.0], [25.2, 150.0], [25.3, 150.0], [25.4, 150.0], [25.5, 150.0], [25.6, 150.0], [25.7, 150.0], [25.8, 150.0], [25.9, 150.0], [26.0, 150.0], [26.1, 150.0], [26.2, 150.0], [26.3, 150.0], [26.4, 150.0], [26.5, 150.0], [26.6, 150.0], [26.7, 150.0], [26.8, 150.0], [26.9, 150.0], [27.0, 150.0], [27.1, 150.0], [27.2, 150.0], [27.3, 150.0], [27.4, 150.0], [27.5, 150.0], [27.6, 150.0], [27.7, 150.0], [27.8, 150.0], [27.9, 150.0], [28.0, 150.0], [28.1, 150.0], [28.2, 150.0], [28.3, 150.0], [28.4, 150.0], [28.5, 150.0], [28.6, 150.0], [28.7, 150.0], [28.8, 150.0], [28.9, 150.0], [29.0, 150.0], [29.1, 151.0], [29.2, 151.0], [29.3, 151.0], [29.4, 151.0], [29.5, 151.0], [29.6, 151.0], [29.7, 151.0], [29.8, 151.0], [29.9, 151.0], [30.0, 151.0], [30.1, 151.0], [30.2, 151.0], [30.3, 151.0], [30.4, 151.0], [30.5, 151.0], [30.6, 151.0], [30.7, 151.0], [30.8, 151.0], [30.9, 151.0], [31.0, 151.0], [31.1, 151.0], [31.2, 151.0], [31.3, 151.0], [31.4, 151.0], [31.5, 151.0], [31.6, 151.0], [31.7, 151.0], [31.8, 151.0], [31.9, 151.0], [32.0, 151.0], [32.1, 151.0], [32.2, 151.0], [32.3, 151.0], [32.4, 151.0], [32.5, 151.0], [32.6, 151.0], [32.7, 151.0], [32.8, 151.0], [32.9, 151.0], [33.0, 151.0], [33.1, 151.0], [33.2, 151.0], [33.3, 151.0], [33.4, 152.0], [33.5, 152.0], [33.6, 152.0], [33.7, 152.0], [33.8, 152.0], [33.9, 152.0], [34.0, 152.0], [34.1, 152.0], [34.2, 152.0], [34.3, 152.0], [34.4, 152.0], [34.5, 152.0], [34.6, 152.0], [34.7, 152.0], [34.8, 152.0], [34.9, 152.0], [35.0, 152.0], [35.1, 152.0], [35.2, 152.0], [35.3, 152.0], [35.4, 152.0], [35.5, 152.0], [35.6, 152.0], [35.7, 152.0], [35.8, 152.0], [35.9, 152.0], [36.0, 152.0], [36.1, 152.0], [36.2, 152.0], [36.3, 152.0], [36.4, 152.0], [36.5, 152.0], [36.6, 152.0], [36.7, 152.0], [36.8, 152.0], [36.9, 152.0], [37.0, 152.0], [37.1, 152.0], [37.2, 152.0], [37.3, 152.0], [37.4, 152.0], [37.5, 152.0], [37.6, 152.0], [37.7, 152.0], [37.8, 152.0], [37.9, 152.0], [38.0, 152.0], [38.1, 152.0], [38.2, 152.0], [38.3, 152.0], [38.4, 152.0], [38.5, 152.0], [38.6, 152.0], [38.7, 152.0], [38.8, 152.0], [38.9, 152.0], [39.0, 152.0], [39.1, 152.0], [39.2, 152.0], [39.3, 152.0], [39.4, 153.0], [39.5, 153.0], [39.6, 153.0], [39.7, 153.0], [39.8, 153.0], [39.9, 153.0], [40.0, 153.0], [40.1, 153.0], [40.2, 153.0], [40.3, 153.0], [40.4, 153.0], [40.5, 153.0], [40.6, 153.0], [40.7, 153.0], [40.8, 153.0], [40.9, 153.0], [41.0, 153.0], [41.1, 153.0], [41.2, 153.0], [41.3, 153.0], [41.4, 153.0], [41.5, 153.0], [41.6, 153.0], [41.7, 153.0], [41.8, 153.0], [41.9, 153.0], [42.0, 153.0], [42.1, 153.0], [42.2, 153.0], [42.3, 153.0], [42.4, 153.0], [42.5, 153.0], [42.6, 153.0], [42.7, 153.0], [42.8, 153.0], [42.9, 153.0], [43.0, 153.0], [43.1, 153.0], [43.2, 153.0], [43.3, 153.0], [43.4, 153.0], [43.5, 153.0], [43.6, 153.0], [43.7, 153.0], [43.8, 153.0], [43.9, 153.0], [44.0, 153.0], [44.1, 153.0], [44.2, 153.0], [44.3, 153.0], [44.4, 153.0], [44.5, 153.0], [44.6, 153.0], [44.7, 153.0], [44.8, 153.0], [44.9, 153.0], [45.0, 153.0], [45.1, 153.0], [45.2, 153.0], [45.3, 153.0], [45.4, 153.0], [45.5, 153.0], [45.6, 153.0], [45.7, 153.0], [45.8, 153.0], [45.9, 153.0], [46.0, 153.0], [46.1, 154.0], [46.2, 154.0], [46.3, 154.0], [46.4, 154.0], [46.5, 154.0], [46.6, 154.0], [46.7, 154.0], [46.8, 154.0], [46.9, 154.0], [47.0, 154.0], [47.1, 154.0], [47.2, 154.0], [47.3, 154.0], [47.4, 154.0], [47.5, 154.0], [47.6, 154.0], [47.7, 154.0], [47.8, 154.0], [47.9, 154.0], [48.0, 154.0], [48.1, 154.0], [48.2, 154.0], [48.3, 154.0], [48.4, 154.0], [48.5, 154.0], [48.6, 154.0], [48.7, 154.0], [48.8, 154.0], [48.9, 154.0], [49.0, 154.0], [49.1, 154.0], [49.2, 154.0], [49.3, 154.0], [49.4, 154.0], [49.5, 154.0], [49.6, 154.0], [49.7, 154.0], [49.8, 154.0], [49.9, 154.0], [50.0, 154.0], [50.1, 154.0], [50.2, 154.0], [50.3, 154.0], [50.4, 154.0], [50.5, 154.0], [50.6, 154.0], [50.7, 154.0], [50.8, 154.0], [50.9, 154.0], [51.0, 154.0], [51.1, 154.0], [51.2, 154.0], [51.3, 154.0], [51.4, 154.0], [51.5, 154.0], [51.6, 155.0], [51.7, 155.0], [51.8, 155.0], [51.9, 155.0], [52.0, 155.0], [52.1, 155.0], [52.2, 155.0], [52.3, 155.0], [52.4, 155.0], [52.5, 155.0], [52.6, 155.0], [52.7, 155.0], [52.8, 155.0], [52.9, 155.0], [53.0, 155.0], [53.1, 155.0], [53.2, 155.0], [53.3, 155.0], [53.4, 155.0], [53.5, 155.0], [53.6, 155.0], [53.7, 155.0], [53.8, 155.0], [53.9, 155.0], [54.0, 155.0], [54.1, 155.0], [54.2, 155.0], [54.3, 155.0], [54.4, 155.0], [54.5, 155.0], [54.6, 155.0], [54.7, 155.0], [54.8, 155.0], [54.9, 155.0], [55.0, 155.0], [55.1, 155.0], [55.2, 156.0], [55.3, 156.0], [55.4, 156.0], [55.5, 156.0], [55.6, 156.0], [55.7, 156.0], [55.8, 156.0], [55.9, 156.0], [56.0, 156.0], [56.1, 156.0], [56.2, 156.0], [56.3, 156.0], [56.4, 156.0], [56.5, 156.0], [56.6, 156.0], [56.7, 156.0], [56.8, 156.0], [56.9, 156.0], [57.0, 156.0], [57.1, 156.0], [57.2, 156.0], [57.3, 156.0], [57.4, 156.0], [57.5, 156.0], [57.6, 156.0], [57.7, 156.0], [57.8, 156.0], [57.9, 156.0], [58.0, 156.0], [58.1, 156.0], [58.2, 156.0], [58.3, 156.0], [58.4, 156.0], [58.5, 156.0], [58.6, 156.0], [58.7, 156.0], [58.8, 156.0], [58.9, 156.0], [59.0, 156.0], [59.1, 156.0], [59.2, 156.0], [59.3, 156.0], [59.4, 157.0], [59.5, 157.0], [59.6, 157.0], [59.7, 157.0], [59.8, 157.0], [59.9, 157.0], [60.0, 157.0], [60.1, 157.0], [60.2, 157.0], [60.3, 157.0], [60.4, 157.0], [60.5, 157.0], [60.6, 157.0], [60.7, 157.0], [60.8, 157.0], [60.9, 157.0], [61.0, 157.0], [61.1, 157.0], [61.2, 157.0], [61.3, 157.0], [61.4, 157.0], [61.5, 157.0], [61.6, 157.0], [61.7, 157.0], [61.8, 157.0], [61.9, 157.0], [62.0, 157.0], [62.1, 157.0], [62.2, 157.0], [62.3, 157.0], [62.4, 157.0], [62.5, 157.0], [62.6, 157.0], [62.7, 157.0], [62.8, 157.0], [62.9, 157.0], [63.0, 157.0], [63.1, 157.0], [63.2, 157.0], [63.3, 157.0], [63.4, 157.0], [63.5, 157.0], [63.6, 157.0], [63.7, 157.0], [63.8, 157.0], [63.9, 157.0], [64.0, 157.0], [64.1, 157.0], [64.2, 157.0], [64.3, 157.0], [64.4, 157.0], [64.5, 157.0], [64.6, 157.0], [64.7, 157.0], [64.8, 157.0], [64.9, 157.0], [65.0, 157.0], [65.1, 157.0], [65.2, 157.0], [65.3, 157.0], [65.4, 157.0], [65.5, 157.0], [65.6, 157.0], [65.7, 157.0], [65.8, 157.0], [65.9, 157.0], [66.0, 157.0], [66.1, 158.0], [66.2, 158.0], [66.3, 158.0], [66.4, 158.0], [66.5, 158.0], [66.6, 158.0], [66.7, 158.0], [66.8, 158.0], [66.9, 158.0], [67.0, 158.0], [67.1, 158.0], [67.2, 158.0], [67.3, 158.0], [67.4, 158.0], [67.5, 158.0], [67.6, 158.0], [67.7, 158.0], [67.8, 158.0], [67.9, 158.0], [68.0, 158.0], [68.1, 158.0], [68.2, 158.0], [68.3, 158.0], [68.4, 158.0], [68.5, 158.0], [68.6, 158.0], [68.7, 158.0], [68.8, 158.0], [68.9, 158.0], [69.0, 158.0], [69.1, 159.0], [69.2, 159.0], [69.3, 159.0], [69.4, 159.0], [69.5, 159.0], [69.6, 159.0], [69.7, 159.0], [69.8, 159.0], [69.9, 159.0], [70.0, 159.0], [70.1, 159.0], [70.2, 159.0], [70.3, 159.0], [70.4, 159.0], [70.5, 159.0], [70.6, 159.0], [70.7, 159.0], [70.8, 159.0], [70.9, 159.0], [71.0, 159.0], [71.1, 159.0], [71.2, 159.0], [71.3, 159.0], [71.4, 159.0], [71.5, 159.0], [71.6, 159.0], [71.7, 159.0], [71.8, 159.0], [71.9, 159.0], [72.0, 159.0], [72.1, 159.0], [72.2, 159.0], [72.3, 159.0], [72.4, 159.0], [72.5, 159.0], [72.6, 159.0], [72.7, 159.0], [72.8, 159.0], [72.9, 159.0], [73.0, 159.0], [73.1, 159.0], [73.2, 159.0], [73.3, 159.0], [73.4, 159.0], [73.5, 159.0], [73.6, 159.0], [73.7, 159.0], [73.8, 159.0], [73.9, 159.0], [74.0, 159.0], [74.1, 159.0], [74.2, 159.0], [74.3, 159.0], [74.4, 159.0], [74.5, 159.0], [74.6, 159.0], [74.7, 159.0], [74.8, 159.0], [74.9, 159.0], [75.0, 159.0], [75.1, 159.0], [75.2, 160.0], [75.3, 160.0], [75.4, 160.0], [75.5, 160.0], [75.6, 160.0], [75.7, 160.0], [75.8, 160.0], [75.9, 160.0], [76.0, 160.0], [76.1, 160.0], [76.2, 160.0], [76.3, 160.0], [76.4, 160.0], [76.5, 160.0], [76.6, 160.0], [76.7, 160.0], [76.8, 160.0], [76.9, 160.0], [77.0, 160.0], [77.1, 160.0], [77.2, 160.0], [77.3, 160.0], [77.4, 160.0], [77.5, 160.0], [77.6, 160.0], [77.7, 160.0], [77.8, 160.0], [77.9, 160.0], [78.0, 160.0], [78.1, 160.0], [78.2, 161.0], [78.3, 161.0], [78.4, 161.0], [78.5, 161.0], [78.6, 161.0], [78.7, 161.0], [78.8, 161.0], [78.9, 161.0], [79.0, 161.0], [79.1, 161.0], [79.2, 161.0], [79.3, 161.0], [79.4, 161.0], [79.5, 161.0], [79.6, 161.0], [79.7, 161.0], [79.8, 161.0], [79.9, 161.0], [80.0, 161.0], [80.1, 161.0], [80.2, 161.0], [80.3, 161.0], [80.4, 161.0], [80.5, 161.0], [80.6, 161.0], [80.7, 162.0], [80.8, 162.0], [80.9, 162.0], [81.0, 162.0], [81.1, 162.0], [81.2, 162.0], [81.3, 162.0], [81.4, 162.0], [81.5, 162.0], [81.6, 162.0], [81.7, 162.0], [81.8, 162.0], [81.9, 162.0], [82.0, 162.0], [82.1, 162.0], [82.2, 162.0], [82.3, 162.0], [82.4, 162.0], [82.5, 163.0], [82.6, 163.0], [82.7, 163.0], [82.8, 163.0], [82.9, 163.0], [83.0, 163.0], [83.1, 163.0], [83.2, 163.0], [83.3, 163.0], [83.4, 163.0], [83.5, 163.0], [83.6, 163.0], [83.7, 163.0], [83.8, 163.0], [83.9, 163.0], [84.0, 163.0], [84.1, 163.0], [84.2, 163.0], [84.3, 164.0], [84.4, 164.0], [84.5, 164.0], [84.6, 164.0], [84.7, 164.0], [84.8, 164.0], [84.9, 164.0], [85.0, 164.0], [85.1, 164.0], [85.2, 164.0], [85.3, 164.0], [85.4, 164.0], [85.5, 164.0], [85.6, 164.0], [85.7, 164.0], [85.8, 164.0], [85.9, 164.0], [86.0, 164.0], [86.1, 164.0], [86.2, 164.0], [86.3, 164.0], [86.4, 164.0], [86.5, 164.0], [86.6, 164.0], [86.7, 164.0], [86.8, 164.0], [86.9, 164.0], [87.0, 164.0], [87.1, 164.0], [87.2, 164.0], [87.3, 165.0], [87.4, 165.0], [87.5, 165.0], [87.6, 165.0], [87.7, 165.0], [87.8, 165.0], [87.9, 166.0], [88.0, 166.0], [88.1, 166.0], [88.2, 166.0], [88.3, 166.0], [88.4, 166.0], [88.5, 166.0], [88.6, 166.0], [88.7, 166.0], [88.8, 166.0], [88.9, 166.0], [89.0, 166.0], [89.1, 166.0], [89.2, 166.0], [89.3, 166.0], [89.4, 166.0], [89.5, 166.0], [89.6, 166.0], [89.7, 167.0], [89.8, 167.0], [89.9, 167.0], [90.0, 167.0], [90.1, 167.0], [90.2, 167.0], [90.3, 167.0], [90.4, 167.0], [90.5, 167.0], [90.6, 167.0], [90.7, 167.0], [90.8, 167.0], [90.9, 167.0], [91.0, 167.0], [91.1, 167.0], [91.2, 167.0], [91.3, 167.0], [91.4, 167.0], [91.5, 167.0], [91.6, 167.0], [91.7, 167.0], [91.8, 167.0], [91.9, 167.0], [92.0, 167.0], [92.1, 167.0], [92.2, 168.0], [92.3, 168.0], [92.4, 168.0], [92.5, 168.0], [92.6, 168.0], [92.7, 168.0], [92.8, 168.0], [92.9, 168.0], [93.0, 168.0], [93.1, 168.0], [93.2, 168.0], [93.3, 168.0], [93.4, 171.0], [93.5, 171.0], [93.6, 171.0], [93.7, 171.0], [93.8, 171.0], [93.9, 171.0], [94.0, 172.0], [94.1, 172.0], [94.2, 172.0], [94.3, 172.0], [94.4, 172.0], [94.5, 172.0], [94.6, 178.0], [94.7, 178.0], [94.8, 178.0], [94.9, 178.0], [95.0, 178.0], [95.1, 178.0], [95.2, 182.0], [95.3, 182.0], [95.4, 182.0], [95.5, 182.0], [95.6, 182.0], [95.7, 182.0], [95.8, 184.0], [95.9, 184.0], [96.0, 184.0], [96.1, 184.0], [96.2, 184.0], [96.3, 184.0], [96.4, 197.0], [96.5, 197.0], [96.6, 197.0], [96.7, 197.0], [96.8, 197.0], [96.9, 197.0], [97.0, 235.0], [97.1, 235.0], [97.2, 235.0], [97.3, 235.0], [97.4, 235.0], [97.5, 235.0], [97.6, 253.0], [97.7, 253.0], [97.8, 253.0], [97.9, 253.0], [98.0, 253.0], [98.1, 253.0], [98.2, 255.0], [98.3, 255.0], [98.4, 255.0], [98.5, 255.0], [98.6, 255.0], [98.7, 255.0], [98.8, 258.0], [98.9, 258.0], [99.0, 258.0], [99.1, 258.0], [99.2, 258.0], [99.3, 258.0], [99.4, 283.0], [99.5, 283.0], [99.6, 283.0], [99.7, 283.0], [99.8, 283.0], [99.9, 283.0], [100.0, 283.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 3.0], [27.8, 3.0], [27.9, 3.0], [28.0, 3.0], [28.1, 3.0], [28.2, 3.0], [28.3, 3.0], [28.4, 3.0], [28.5, 3.0], [28.6, 3.0], [28.7, 3.0], [28.8, 3.0], [28.9, 3.0], [29.0, 3.0], [29.1, 3.0], [29.2, 3.0], [29.3, 3.0], [29.4, 3.0], [29.5, 3.0], [29.6, 3.0], [29.7, 3.0], [29.8, 3.0], [29.9, 3.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 3.0], [30.5, 3.0], [30.6, 3.0], [30.7, 3.0], [30.8, 3.0], [30.9, 3.0], [31.0, 3.0], [31.1, 3.0], [31.2, 3.0], [31.3, 3.0], [31.4, 3.0], [31.5, 3.0], [31.6, 3.0], [31.7, 3.0], [31.8, 3.0], [31.9, 3.0], [32.0, 3.0], [32.1, 3.0], [32.2, 3.0], [32.3, 3.0], [32.4, 3.0], [32.5, 3.0], [32.6, 3.0], [32.7, 3.0], [32.8, 3.0], [32.9, 3.0], [33.0, 3.0], [33.1, 3.0], [33.2, 3.0], [33.3, 3.0], [33.4, 3.0], [33.5, 3.0], [33.6, 3.0], [33.7, 3.0], [33.8, 3.0], [33.9, 3.0], [34.0, 3.0], [34.1, 3.0], [34.2, 3.0], [34.3, 3.0], [34.4, 3.0], [34.5, 3.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 5.0], [36.9, 5.0], [37.0, 5.0], [37.1, 5.0], [37.2, 6.0], [37.3, 7.0], [37.4, 11.0], [37.5, 21.0], [37.6, 22.0], [37.7, 23.0], [37.8, 25.0], [37.9, 25.0], [38.0, 26.0], [38.1, 27.0], [38.2, 28.0], [38.3, 28.0], [38.4, 29.0], [38.5, 30.0], [38.6, 31.0], [38.7, 33.0], [38.8, 34.0], [38.9, 35.0], [39.0, 37.0], [39.1, 39.0], [39.2, 40.0], [39.3, 43.0], [39.4, 45.0], [39.5, 49.0], [39.6, 52.0], [39.7, 55.0], [39.8, 59.0], [39.9, 66.0], [40.0, 72.0], [40.1, 79.0], [40.2, 85.0], [40.3, 95.0], [40.4, 103.0], [40.5, 113.0], [40.6, 129.0], [40.7, 157.0], [40.8, 177.0], [40.9, 223.0], [41.0, 247.0], [41.1, 269.0], [41.2, 302.0], [41.3, 326.0], [41.4, 367.0], [41.5, 395.0], [41.6, 422.0], [41.7, 441.0], [41.8, 463.0], [41.9, 492.0], [42.0, 520.0], [42.1, 541.0], [42.2, 563.0], [42.3, 582.0], [42.4, 592.0], [42.5, 611.0], [42.6, 626.0], [42.7, 646.0], [42.8, 662.0], [42.9, 678.0], [43.0, 690.0], [43.1, 705.0], [43.2, 715.0], [43.3, 726.0], [43.4, 735.0], [43.5, 750.0], [43.6, 765.0], [43.7, 780.0], [43.8, 791.0], [43.9, 804.0], [44.0, 818.0], [44.1, 828.0], [44.2, 844.0], [44.3, 854.0], [44.4, 865.0], [44.5, 879.0], [44.6, 893.0], [44.7, 904.0], [44.8, 913.0], [44.9, 923.0], [45.0, 935.0], [45.1, 944.0], [45.2, 958.0], [45.3, 966.0], [45.4, 980.0], [45.5, 989.0], [45.6, 1000.0], [45.7, 1011.0], [45.8, 1019.0], [45.9, 1027.0], [46.0, 1036.0], [46.1, 1045.0], [46.2, 1056.0], [46.3, 1064.0], [46.4, 1073.0], [46.5, 1084.0], [46.6, 1093.0], [46.7, 1103.0], [46.8, 1116.0], [46.9, 1123.0], [47.0, 1131.0], [47.1, 1144.0], [47.2, 1147.0], [47.3, 1156.0], [47.4, 1167.0], [47.5, 1178.0], [47.6, 1184.0], [47.7, 1195.0], [47.8, 1201.0], [47.9, 1211.0], [48.0, 1219.0], [48.1, 1228.0], [48.2, 1239.0], [48.3, 1246.0], [48.4, 1255.0], [48.5, 1264.0], [48.6, 1274.0], [48.7, 1282.0], [48.8, 1290.0], [48.9, 1295.0], [49.0, 1302.0], [49.1, 1309.0], [49.2, 1317.0], [49.3, 1325.0], [49.4, 1332.0], [49.5, 1337.0], [49.6, 1349.0], [49.7, 1356.0], [49.8, 1364.0], [49.9, 1373.0], [50.0, 1379.0], [50.1, 1386.0], [50.2, 1396.0], [50.3, 1401.0], [50.4, 1408.0], [50.5, 1420.0], [50.6, 1425.0], [50.7, 1433.0], [50.8, 1441.0], [50.9, 1447.0], [51.0, 1453.0], [51.1, 1460.0], [51.2, 1468.0], [51.3, 1475.0], [51.4, 1481.0], [51.5, 1485.0], [51.6, 1494.0], [51.7, 1503.0], [51.8, 1510.0], [51.9, 1517.0], [52.0, 1525.0], [52.1, 1534.0], [52.2, 1542.0], [52.3, 1547.0], [52.4, 1554.0], [52.5, 1558.0], [52.6, 1563.0], [52.7, 1568.0], [52.8, 1576.0], [52.9, 1583.0], [53.0, 1592.0], [53.1, 1600.0], [53.2, 1602.0], [53.3, 1610.0], [53.4, 1617.0], [53.5, 1626.0], [53.6, 1634.0], [53.7, 1641.0], [53.8, 1647.0], [53.9, 1653.0], [54.0, 1658.0], [54.1, 1664.0], [54.2, 1672.0], [54.3, 1679.0], [54.4, 1683.0], [54.5, 1689.0], [54.6, 1693.0], [54.7, 1699.0], [54.8, 1702.0], [54.9, 1709.0], [55.0, 1714.0], [55.1, 1721.0], [55.2, 1728.0], [55.3, 1731.0], [55.4, 1738.0], [55.5, 1743.0], [55.6, 1748.0], [55.7, 1755.0], [55.8, 1762.0], [55.9, 1769.0], [56.0, 1775.0], [56.1, 1779.0], [56.2, 1784.0], [56.3, 1788.0], [56.4, 1793.0], [56.5, 1797.0], [56.6, 1803.0], [56.7, 1809.0], [56.8, 1813.0], [56.9, 1817.0], [57.0, 1821.0], [57.1, 1826.0], [57.2, 1832.0], [57.3, 1836.0], [57.4, 1841.0], [57.5, 1846.0], [57.6, 1851.0], [57.7, 1857.0], [57.8, 1864.0], [57.9, 1866.0], [58.0, 1870.0], [58.1, 1873.0], [58.2, 1878.0], [58.3, 1881.0], [58.4, 1885.0], [58.5, 1889.0], [58.6, 1892.0], [58.7, 1895.0], [58.8, 1898.0], [58.9, 1905.0], [59.0, 1908.0], [59.1, 1914.0], [59.2, 1917.0], [59.3, 1921.0], [59.4, 1925.0], [59.5, 1930.0], [59.6, 1933.0], [59.7, 1937.0], [59.8, 1943.0], [59.9, 1949.0], [60.0, 1953.0], [60.1, 1957.0], [60.2, 1961.0], [60.3, 1965.0], [60.4, 1968.0], [60.5, 1972.0], [60.6, 1977.0], [60.7, 1980.0], [60.8, 1983.0], [60.9, 1989.0], [61.0, 1992.0], [61.1, 1996.0], [61.2, 1998.0], [61.3, 2003.0], [61.4, 2007.0], [61.5, 2010.0], [61.6, 2013.0], [61.7, 2019.0], [61.8, 2022.0], [61.9, 2025.0], [62.0, 2028.0], [62.1, 2033.0], [62.2, 2036.0], [62.3, 2039.0], [62.4, 2043.0], [62.5, 2047.0], [62.6, 2050.0], [62.7, 2053.0], [62.8, 2055.0], [62.9, 2061.0], [63.0, 2065.0], [63.1, 2068.0], [63.2, 2071.0], [63.3, 2074.0], [63.4, 2077.0], [63.5, 2080.0], [63.6, 2083.0], [63.7, 2087.0], [63.8, 2091.0], [63.9, 2096.0], [64.0, 2100.0], [64.1, 2104.0], [64.2, 2110.0], [64.3, 2113.0], [64.4, 2118.0], [64.5, 2122.0], [64.6, 2127.0], [64.7, 2130.0], [64.8, 2133.0], [64.9, 2136.0], [65.0, 2140.0], [65.1, 2146.0], [65.2, 2149.0], [65.3, 2153.0], [65.4, 2156.0], [65.5, 2159.0], [65.6, 2163.0], [65.7, 2167.0], [65.8, 2170.0], [65.9, 2175.0], [66.0, 2178.0], [66.1, 2182.0], [66.2, 2187.0], [66.3, 2190.0], [66.4, 2193.0], [66.5, 2198.0], [66.6, 2202.0], [66.7, 2207.0], [66.8, 2210.0], [66.9, 2215.0], [67.0, 2222.0], [67.1, 2226.0], [67.2, 2231.0], [67.3, 2235.0], [67.4, 2239.0], [67.5, 2244.0], [67.6, 2247.0], [67.7, 2252.0], [67.8, 2255.0], [67.9, 2258.0], [68.0, 2261.0], [68.1, 2267.0], [68.2, 2272.0], [68.3, 2273.0], [68.4, 2277.0], [68.5, 2282.0], [68.6, 2288.0], [68.7, 2291.0], [68.8, 2295.0], [68.9, 2299.0], [69.0, 2303.0], [69.1, 2307.0], [69.2, 2312.0], [69.3, 2318.0], [69.4, 2322.0], [69.5, 2326.0], [69.6, 2330.0], [69.7, 2336.0], [69.8, 2340.0], [69.9, 2345.0], [70.0, 2351.0], [70.1, 2356.0], [70.2, 2359.0], [70.3, 2363.0], [70.4, 2366.0], [70.5, 2371.0], [70.6, 2375.0], [70.7, 2381.0], [70.8, 2388.0], [70.9, 2393.0], [71.0, 2398.0], [71.1, 2402.0], [71.2, 2406.0], [71.3, 2411.0], [71.4, 2415.0], [71.5, 2420.0], [71.6, 2424.0], [71.7, 2430.0], [71.8, 2432.0], [71.9, 2436.0], [72.0, 2442.0], [72.1, 2448.0], [72.2, 2452.0], [72.3, 2458.0], [72.4, 2462.0], [72.5, 2466.0], [72.6, 2469.0], [72.7, 2473.0], [72.8, 2476.0], [72.9, 2479.0], [73.0, 2483.0], [73.1, 2487.0], [73.2, 2492.0], [73.3, 2497.0], [73.4, 2502.0], [73.5, 2506.0], [73.6, 2510.0], [73.7, 2515.0], [73.8, 2518.0], [73.9, 2523.0], [74.0, 2528.0], [74.1, 2532.0], [74.2, 2536.0], [74.3, 2541.0], [74.4, 2545.0], [74.5, 2550.0], [74.6, 2558.0], [74.7, 2565.0], [74.8, 2568.0], [74.9, 2572.0], [75.0, 2578.0], [75.1, 2585.0], [75.2, 2590.0], [75.3, 2593.0], [75.4, 2598.0], [75.5, 2601.0], [75.6, 2604.0], [75.7, 2607.0], [75.8, 2610.0], [75.9, 2615.0], [76.0, 2620.0], [76.1, 2624.0], [76.2, 2633.0], [76.3, 2637.0], [76.4, 2641.0], [76.5, 2645.0], [76.6, 2649.0], [76.7, 2653.0], [76.8, 2658.0], [76.9, 2662.0], [77.0, 2664.0], [77.1, 2671.0], [77.2, 2673.0], [77.3, 2678.0], [77.4, 2685.0], [77.5, 2691.0], [77.6, 2695.0], [77.7, 2699.0], [77.8, 2705.0], [77.9, 2709.0], [78.0, 2714.0], [78.1, 2719.0], [78.2, 2723.0], [78.3, 2729.0], [78.4, 2735.0], [78.5, 2740.0], [78.6, 2745.0], [78.7, 2750.0], [78.8, 2756.0], [78.9, 2760.0], [79.0, 2766.0], [79.1, 2771.0], [79.2, 2775.0], [79.3, 2779.0], [79.4, 2785.0], [79.5, 2791.0], [79.6, 2795.0], [79.7, 2799.0], [79.8, 2803.0], [79.9, 2810.0], [80.0, 2815.0], [80.1, 2822.0], [80.2, 2825.0], [80.3, 2833.0], [80.4, 2838.0], [80.5, 2844.0], [80.6, 2850.0], [80.7, 2854.0], [80.8, 2862.0], [80.9, 2868.0], [81.0, 2875.0], [81.1, 2884.0], [81.2, 2889.0], [81.3, 2895.0], [81.4, 2902.0], [81.5, 2907.0], [81.6, 2914.0], [81.7, 2922.0], [81.8, 2932.0], [81.9, 2939.0], [82.0, 2945.0], [82.1, 2950.0], [82.2, 2960.0], [82.3, 2967.0], [82.4, 2973.0], [82.5, 2981.0], [82.6, 2988.0], [82.7, 2997.0], [82.8, 3003.0], [82.9, 3013.0], [83.0, 3022.0], [83.1, 3028.0], [83.2, 3035.0], [83.3, 3042.0], [83.4, 3047.0], [83.5, 3053.0], [83.6, 3063.0], [83.7, 3069.0], [83.8, 3076.0], [83.9, 3089.0], [84.0, 3098.0], [84.1, 3105.0], [84.2, 3114.0], [84.3, 3124.0], [84.4, 3130.0], [84.5, 3140.0], [84.6, 3148.0], [84.7, 3154.0], [84.8, 3161.0], [84.9, 3169.0], [85.0, 3175.0], [85.1, 3181.0], [85.2, 3188.0], [85.3, 3196.0], [85.4, 3205.0], [85.5, 3212.0], [85.6, 3220.0], [85.7, 3228.0], [85.8, 3241.0], [85.9, 3250.0], [86.0, 3259.0], [86.1, 3267.0], [86.2, 3273.0], [86.3, 3283.0], [86.4, 3289.0], [86.5, 3298.0], [86.6, 3305.0], [86.7, 3316.0], [86.8, 3322.0], [86.9, 3330.0], [87.0, 3341.0], [87.1, 3349.0], [87.2, 3356.0], [87.3, 3371.0], [87.4, 3382.0], [87.5, 3395.0], [87.6, 3405.0], [87.7, 3421.0], [87.8, 3434.0], [87.9, 3451.0], [88.0, 3464.0], [88.1, 3481.0], [88.2, 3494.0], [88.3, 3504.0], [88.4, 3514.0], [88.5, 3528.0], [88.6, 3540.0], [88.7, 3551.0], [88.8, 3563.0], [88.9, 3577.0], [89.0, 3585.0], [89.1, 3598.0], [89.2, 3608.0], [89.3, 3620.0], [89.4, 3631.0], [89.5, 3641.0], [89.6, 3658.0], [89.7, 3666.0], [89.8, 3679.0], [89.9, 3698.0], [90.0, 3714.0], [90.1, 3731.0], [90.2, 3744.0], [90.3, 3762.0], [90.4, 3774.0], [90.5, 3786.0], [90.6, 3797.0], [90.7, 3810.0], [90.8, 3826.0], [90.9, 3839.0], [91.0, 3853.0], [91.1, 3866.0], [91.2, 3876.0], [91.3, 3893.0], [91.4, 3903.0], [91.5, 3918.0], [91.6, 3937.0], [91.7, 3946.0], [91.8, 3976.0], [91.9, 4003.0], [92.0, 4022.0], [92.1, 4041.0], [92.2, 4059.0], [92.3, 4078.0], [92.4, 4093.0], [92.5, 4109.0], [92.6, 4125.0], [92.7, 4140.0], [92.8, 4161.0], [92.9, 4180.0], [93.0, 4191.0], [93.1, 4206.0], [93.2, 4235.0], [93.3, 4261.0], [93.4, 4283.0], [93.5, 4307.0], [93.6, 4330.0], [93.7, 4347.0], [93.8, 4363.0], [93.9, 4383.0], [94.0, 4407.0], [94.1, 4434.0], [94.2, 4456.0], [94.3, 4473.0], [94.4, 4487.0], [94.5, 4508.0], [94.6, 4527.0], [94.7, 4544.0], [94.8, 4555.0], [94.9, 4580.0], [95.0, 4604.0], [95.1, 4628.0], [95.2, 4649.0], [95.3, 4680.0], [95.4, 4693.0], [95.5, 4723.0], [95.6, 4758.0], [95.7, 4794.0], [95.8, 4817.0], [95.9, 4850.0], [96.0, 4876.0], [96.1, 4907.0], [96.2, 4937.0], [96.3, 4968.0], [96.4, 4997.0], [96.5, 5032.0], [96.6, 5067.0], [96.7, 5094.0], [96.8, 5124.0], [96.9, 5148.0], [97.0, 5164.0], [97.1, 5195.0], [97.2, 5236.0], [97.3, 5286.0], [97.4, 5323.0], [97.5, 5362.0], [97.6, 5398.0], [97.7, 5448.0], [97.8, 5480.0], [97.9, 5529.0], [98.0, 5578.0], [98.1, 5630.0], [98.2, 5701.0], [98.3, 5749.0], [98.4, 5816.0], [98.5, 5893.0], [98.6, 6001.0], [98.7, 6056.0], [98.8, 6164.0], [98.9, 6241.0], [99.0, 6331.0], [99.1, 6403.0], [99.2, 6513.0], [99.3, 6593.0], [99.4, 6729.0], [99.5, 6815.0], [99.6, 6963.0], [99.7, 7180.0], [99.8, 7464.0], [99.9, 7727.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 6746.0, "series": [{"data": [[0.0, 6746.0], [600.0, 119.0], [700.0, 116.0], [800.0, 138.0], [900.0, 146.0], [1000.0, 189.0], [1100.0, 213.0], [1200.0, 193.0], [1300.0, 211.0], [1400.0, 210.0], [1500.0, 219.0], [1600.0, 249.0], [1700.0, 264.0], [1800.0, 319.0], [1900.0, 386.0], [2000.0, 437.0], [2100.0, 385.0], [2300.0, 387.0], [2200.0, 413.0], [2400.0, 393.0], [2500.0, 369.0], [2600.0, 345.0], [2800.0, 268.0], [2700.0, 318.0], [2900.0, 252.0], [3000.0, 238.0], [3100.0, 212.0], [3200.0, 193.0], [3300.0, 177.0], [3400.0, 188.0], [3500.0, 149.0], [3600.0, 148.0], [3700.0, 118.0], [3800.0, 111.0], [3900.0, 86.0], [4000.0, 113.0], [4200.0, 90.0], [4100.0, 103.0], [4300.0, 78.0], [4400.0, 91.0], [4500.0, 74.0], [4600.0, 47.0], [4800.0, 39.0], [4700.0, 41.0], [4900.0, 47.0], [5000.0, 34.0], [5100.0, 34.0], [5200.0, 35.0], [5300.0, 28.0], [5500.0, 23.0], [5600.0, 28.0], [5400.0, 40.0], [5800.0, 30.0], [5700.0, 22.0], [6000.0, 19.0], [6100.0, 15.0], [5900.0, 28.0], [6200.0, 19.0], [6300.0, 23.0], [6500.0, 18.0], [6400.0, 18.0], [6600.0, 21.0], [6800.0, 14.0], [6900.0, 14.0], [6700.0, 13.0], [7000.0, 13.0], [7100.0, 11.0], [7300.0, 8.0], [7200.0, 7.0], [7400.0, 6.0], [7500.0, 3.0], [7600.0, 2.0], [7800.0, 2.0], [7700.0, 4.0], [8000.0, 2.0], [8100.0, 1.0], [8400.0, 2.0], [8600.0, 1.0], [8800.0, 1.0], [9100.0, 1.0], [100.0, 90.0], [200.0, 44.0], [300.0, 59.0], [400.0, 73.0], [500.0, 66.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[100.0, 160.0], [200.0, 5.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 6658.0], [600.0, 106.0], [700.0, 133.0], [800.0, 132.0], [900.0, 153.0], [1000.0, 180.0], [1100.0, 180.0], [1200.0, 196.0], [1300.0, 217.0], [1400.0, 229.0], [1500.0, 235.0], [1600.0, 268.0], [1700.0, 301.0], [1800.0, 376.0], [1900.0, 396.0], [2000.0, 456.0], [2100.0, 425.0], [2200.0, 387.0], [2300.0, 355.0], [2400.0, 380.0], [2500.0, 346.0], [2600.0, 371.0], [2700.0, 330.0], [2800.0, 273.0], [2900.0, 226.0], [3000.0, 211.0], [3100.0, 221.0], [3300.0, 165.0], [3200.0, 196.0], [3400.0, 119.0], [3500.0, 142.0], [3600.0, 131.0], [3700.0, 117.0], [3800.0, 124.0], [3900.0, 85.0], [4000.0, 92.0], [4300.0, 80.0], [4100.0, 102.0], [4200.0, 69.0], [4500.0, 87.0], [4600.0, 72.0], [4400.0, 81.0], [4700.0, 51.0], [4800.0, 57.0], [4900.0, 59.0], [5100.0, 66.0], [5000.0, 47.0], [5300.0, 42.0], [5200.0, 39.0], [5500.0, 31.0], [5400.0, 43.0], [5600.0, 23.0], [5800.0, 22.0], [5700.0, 29.0], [6000.0, 23.0], [5900.0, 16.0], [6100.0, 18.0], [6300.0, 25.0], [6200.0, 16.0], [6600.0, 9.0], [6400.0, 16.0], [6500.0, 18.0], [6900.0, 11.0], [6700.0, 21.0], [6800.0, 13.0], [7100.0, 6.0], [7000.0, 6.0], [7400.0, 8.0], [7300.0, 7.0], [7200.0, 5.0], [7500.0, 6.0], [7600.0, 6.0], [7800.0, 3.0], [7700.0, 2.0], [7900.0, 1.0], [8000.0, 2.0], [8100.0, 1.0], [8700.0, 3.0], [8300.0, 2.0], [8400.0, 1.0], [8500.0, 2.0], [100.0, 82.0], [200.0, 56.0], [300.0, 53.0], [400.0, 68.0], [500.0, 82.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1612.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 15551.0, "series": [{"data": [[0.0, 1612.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3056.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 15551.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 12946.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 65.90982776089153, "minX": 1.58768454E12, "maxY": 165.0, "series": [{"data": [[1.58768514E12, 165.0], [1.58768454E12, 65.90982776089153], [1.58768484E12, 165.0], [1.5876852E12, 158.45558375634553], [1.5876849E12, 165.0], [1.5876846E12, 154.58471933471893], [1.58768526E12, 81.5371727748691], [1.58768496E12, 165.0], [1.58768466E12, 165.0], [1.58768502E12, 165.0], [1.58768472E12, 165.0], [1.58768508E12, 165.0], [1.58768478E12, 165.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58768526E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 23.0, "minX": 1.0, "maxY": 4408.400000000001, "series": [{"data": [[3.0, 42.333333333333336], [4.0, 37.0], [8.0, 54.0], [9.0, 33.0], [11.0, 35.8], [12.0, 35.0], [13.0, 33.25], [14.0, 31.666666666666668], [15.0, 30.5], [16.0, 41.333333333333336], [18.0, 43.57142857142857], [19.0, 33.0], [20.0, 25.5], [21.0, 27.666666666666668], [22.0, 33.5], [23.0, 40.5], [24.0, 39.5], [25.0, 23.0], [26.0, 34.0], [27.0, 43.5], [28.0, 27.0], [29.0, 38.666666666666664], [30.0, 31.0], [31.0, 38.5], [32.0, 31.5], [33.0, 49.75], [34.0, 36.57142857142858], [35.0, 31.0], [36.0, 34.666666666666664], [37.0, 38.0], [38.0, 31.166666666666664], [39.0, 37.142857142857146], [40.0, 43.0], [41.0, 61.0], [42.0, 40.8], [43.0, 47.0], [44.0, 41.4], [45.0, 58.5], [46.0, 28.0], [47.0, 34.0], [48.0, 31.5], [49.0, 40.153846153846146], [51.0, 42.42857142857143], [50.0, 28.5], [52.0, 41.875], [53.0, 40.57142857142857], [54.0, 55.94736842105262], [55.0, 55.39999999999999], [56.0, 38.5], [57.0, 50.0], [58.0, 39.75], [59.0, 33.2], [60.0, 62.16], [61.0, 55.0], [62.0, 40.666666666666664], [63.0, 23.5], [64.0, 323.0], [65.0, 834.7272727272727], [66.0, 592.8888888888889], [67.0, 411.6666666666667], [68.0, 382.5], [69.0, 181.1818181818182], [70.0, 430.0], [71.0, 125.70000000000002], [72.0, 111.5], [73.0, 127.12499999999999], [74.0, 138.57142857142856], [75.0, 42.285714285714285], [76.0, 85.37499999999999], [77.0, 110.83333333333331], [78.0, 85.27272727272727], [79.0, 76.0], [80.0, 86.18181818181819], [81.0, 43.0], [82.0, 43.333333333333336], [83.0, 107.61111111111113], [84.0, 88.0], [85.0, 56.666666666666664], [86.0, 517.6666666666667], [87.0, 2144.0], [88.0, 222.99999999999997], [89.0, 535.1111111111111], [90.0, 946.3823529411765], [91.0, 1397.8], [92.0, 1270.1875000000002], [93.0, 1254.0000000000002], [94.0, 1297.4761904761906], [95.0, 819.3333333333335], [96.0, 1268.8181818181822], [97.0, 967.3333333333334], [98.0, 880.25], [99.0, 851.6666666666666], [100.0, 1738.3636363636363], [101.0, 1226.5263157894735], [102.0, 1141.111111111111], [103.0, 1664.3333333333333], [104.0, 1356.5714285714284], [105.0, 1204.8], [106.0, 899.3333333333333], [107.0, 1026.4375], [108.0, 2020.7391304347823], [109.0, 1686.0833333333335], [110.0, 2070.809523809524], [111.0, 3481.7142857142853], [112.0, 2261.4615384615386], [113.0, 2898.8148148148152], [114.0, 1090.5], [115.0, 1281.6666666666667], [116.0, 1161.75], [117.0, 1878.2857142857142], [118.0, 1351.6818181818182], [119.0, 1026.6666666666665], [120.0, 1327.0], [121.0, 508.54166666666674], [122.0, 56.99999999999999], [123.0, 982.2], [124.0, 753.625], [125.0, 2257.25], [126.0, 399.76470588235276], [127.0, 1354.3125], [128.0, 1091.4444444444443], [129.0, 289.125], [130.0, 817.090909090909], [131.0, 576.5217391304348], [132.0, 652.153846153846], [133.0, 800.7826086956521], [134.0, 225.14285714285705], [135.0, 318.265306122449], [136.0, 571.6571428571427], [137.0, 2507.5], [138.0, 1360.0999999999997], [139.0, 159.13513513513507], [140.0, 431.42857142857144], [141.0, 2079.1249999999995], [142.0, 737.3125000000001], [143.0, 429.7777777777777], [144.0, 609.0], [145.0, 416.96774193548396], [146.0, 154.31249999999994], [147.0, 426.063829787234], [148.0, 1495.5], [149.0, 851.3225806451613], [150.0, 963.8461538461538], [151.0, 338.3529411764705], [152.0, 588.5], [153.0, 599.5869565217395], [154.0, 2291.4], [155.0, 542.1111111111111], [156.0, 2594.9], [157.0, 853.6666666666667], [158.0, 1334.142857142857], [159.0, 301.6875], [160.0, 294.38095238095246], [161.0, 56.671052631578924], [162.0, 164.9666666666666], [163.0, 415.53571428571416], [164.0, 29.315294117647145], [165.0, 1692.7750746905783], [1.0, 35.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[158.50357575757658, 1523.3702424242515]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[2.0, 160.0], [3.0, 155.0], [4.0, 152.0], [5.0, 147.0], [6.0, 142.0], [7.0, 153.0], [8.0, 152.0], [9.0, 147.0], [10.0, 162.0], [11.0, 157.0], [12.0, 148.0], [13.0, 159.0], [14.0, 149.0], [15.0, 160.0], [16.0, 146.0], [17.0, 153.0], [18.0, 144.0], [19.0, 149.0], [20.0, 154.0], [21.0, 153.0], [22.0, 160.0], [23.0, 149.0], [24.0, 152.0], [25.0, 153.0], [26.0, 156.0], [27.0, 150.0], [28.0, 147.0], [29.0, 147.0], [30.0, 146.0], [31.0, 153.0], [32.0, 147.0], [33.0, 155.0], [34.0, 147.0], [35.0, 151.0], [36.0, 154.0], [37.0, 164.0], [38.0, 159.0], [39.0, 150.0], [40.0, 155.0], [41.0, 150.0], [42.0, 157.0], [43.0, 159.0], [44.0, 160.0], [45.0, 154.0], [46.0, 144.0], [47.0, 154.0], [48.0, 161.0], [49.0, 162.0], [50.0, 154.0], [51.0, 178.0], [52.0, 167.0], [53.0, 158.0], [54.0, 159.0], [55.0, 167.0], [56.0, 151.0], [57.0, 155.0], [58.0, 152.0], [59.0, 147.0], [60.0, 150.0], [61.0, 156.0], [62.0, 149.0], [63.0, 141.0], [64.0, 151.0], [65.0, 157.0], [66.0, 157.0], [67.0, 154.0], [68.0, 149.0], [69.0, 153.0], [70.0, 142.0], [71.0, 152.0], [72.0, 157.0], [73.0, 152.0], [74.0, 145.0], [75.0, 184.0], [76.0, 182.0], [77.0, 146.0], [78.0, 159.0], [79.0, 171.0], [80.0, 172.0], [81.0, 155.0], [82.0, 150.0], [83.0, 158.0], [84.0, 161.0], [85.0, 156.0], [86.0, 150.0], [87.0, 258.0], [88.0, 283.0], [89.0, 235.0], [90.0, 253.0], [91.0, 255.0], [92.0, 145.0], [93.0, 149.0], [94.0, 150.0], [95.0, 158.0], [96.0, 164.0], [97.0, 156.0], [98.0, 149.0], [99.0, 157.0], [100.0, 147.0], [101.0, 155.0], [102.0, 157.0], [103.0, 151.0], [104.0, 148.0], [105.0, 157.0], [106.0, 151.0], [107.0, 161.0], [108.0, 158.0], [109.0, 150.0], [110.0, 168.0], [111.0, 150.0], [112.0, 154.0], [113.0, 166.0], [114.0, 152.0], [115.0, 162.0], [116.0, 151.0], [117.0, 167.0], [118.0, 154.0], [119.0, 152.0], [120.0, 146.0], [121.0, 157.0], [122.0, 152.0], [123.0, 158.0], [124.0, 163.0], [125.0, 154.0], [126.0, 166.0], [127.0, 153.0], [128.0, 168.0], [129.0, 157.0], [130.0, 149.0], [131.0, 164.0], [132.0, 159.0], [133.0, 157.0], [134.0, 153.0], [135.0, 147.0], [136.0, 152.0], [137.0, 164.0], [138.0, 147.0], [139.0, 164.0], [140.0, 150.0], [141.0, 159.0], [142.0, 161.0], [143.0, 159.0], [144.0, 156.0], [145.0, 153.0], [146.0, 159.0], [147.0, 147.0], [148.0, 147.0], [149.0, 159.0], [150.0, 163.0], [151.0, 149.0], [152.0, 156.0], [153.0, 166.0], [154.0, 163.0], [155.0, 165.0], [156.0, 156.0], [157.0, 150.0], [158.0, 147.0], [159.0, 153.0], [160.0, 153.0], [161.0, 167.0], [162.0, 151.0], [163.0, 160.0], [164.0, 148.0], [165.0, 147.0], [1.0, 197.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[83.0, 158.35757575757575]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[4.0, 54.666666666666664], [5.0, 32.5], [8.0, 232.66666666666669], [9.0, 28.0], [10.0, 31.0], [11.0, 43.0], [12.0, 41.5], [13.0, 33.0], [15.0, 26.0], [16.0, 38.25], [17.0, 33.57142857142858], [18.0, 166.66666666666666], [19.0, 30.0], [20.0, 36.0], [21.0, 36.333333333333336], [22.0, 32.666666666666664], [23.0, 44.0], [24.0, 58.75], [25.0, 38.0], [26.0, 32.166666666666664], [27.0, 51.333333333333336], [28.0, 33.0], [29.0, 28.0], [30.0, 43.5], [31.0, 32.333333333333336], [32.0, 29.75], [33.0, 47.25], [34.0, 27.4], [35.0, 34.0], [36.0, 34.4], [37.0, 33.75], [38.0, 25.0], [39.0, 36.666666666666664], [40.0, 41.0], [41.0, 37.0], [42.0, 41.857142857142854], [43.0, 39.5], [44.0, 49.62499999999999], [45.0, 40.9], [46.0, 37.0], [47.0, 39.0], [48.0, 35.27272727272727], [49.0, 30.750000000000004], [50.0, 30.5], [51.0, 39.8], [52.0, 50.58823529411764], [53.0, 38.75], [54.0, 37.42857142857142], [55.0, 56.22222222222222], [56.0, 37.6], [57.0, 39.4], [58.0, 46.615384615384606], [59.0, 36.833333333333336], [60.0, 58.50000000000001], [61.0, 76.0], [62.0, 51.0], [63.0, 26.333333333333332], [64.0, 284.7777777777777], [65.0, 762.6875000000002], [66.0, 299.05263157894734], [67.0, 612.4615384615386], [68.0, 1186.3333333333333], [69.0, 537.7142857142857], [70.0, 482.4], [71.0, 130.66666666666666], [72.0, 63.2], [73.0, 116.18181818181819], [74.0, 49.5], [75.0, 47.333333333333336], [76.0, 52.714285714285715], [77.0, 107.125], [78.0, 96.0], [79.0, 48.83333333333333], [80.0, 104.19354838709678], [81.0, 45.666666666666664], [82.0, 40.1], [83.0, 113.57142857142856], [84.0, 65.85714285714286], [85.0, 25.25], [86.0, 386.0499999999999], [87.0, 620.6], [88.0, 420.5714285714286], [89.0, 872.6923076923076], [90.0, 1045.8888888888887], [91.0, 2129.5], [92.0, 1428.4545454545453], [93.0, 1257.764705882353], [94.0, 1377.181818181818], [95.0, 1570.2], [96.0, 1030.722222222222], [97.0, 883.8333333333334], [99.0, 1383.0], [98.0, 1034.0], [100.0, 1760.6666666666665], [101.0, 1343.6666666666665], [102.0, 949.1363636363636], [103.0, 1820.111111111111], [104.0, 1205.3749999999998], [105.0, 1092.833333333333], [106.0, 1183.0], [107.0, 1486.5], [108.0, 1917.9200000000003], [109.0, 1729.0], [110.0, 2124.7826086956516], [111.0, 4408.400000000001], [112.0, 2211.75], [113.0, 2928.0769230769233], [114.0, 1432.8888888888891], [115.0, 1928.2500000000002], [116.0, 1385.6666666666665], [117.0, 1452.8333333333333], [118.0, 448.53846153846155], [119.0, 489.5], [120.0, 1172.4], [121.0, 592.8518518518518], [122.0, 76.63636363636364], [123.0, 1301.0], [124.0, 715.8888888888888], [125.0, 1638.5], [126.0, 717.9999999999999], [127.0, 974.7692307692307], [128.0, 447.0], [129.0, 609.2666666666667], [130.0, 1316.6363636363637], [131.0, 547.9285714285714], [132.0, 413.66666666666663], [133.0, 873.2500000000001], [134.0, 673.7272727272725], [135.0, 261.95000000000005], [136.0, 526.0], [137.0, 2675.6], [138.0, 2307.1249999999995], [139.0, 389.57500000000005], [140.0, 859.4666666666669], [141.0, 1683.857142857143], [142.0, 400.0], [143.0, 536.4642857142856], [144.0, 838.6999999999999], [145.0, 357.5882352941177], [146.0, 83.86363636363637], [147.0, 252.95000000000002], [148.0, 759.0], [149.0, 629.8695652173914], [150.0, 1057.3333333333333], [151.0, 782.7500000000001], [152.0, 1061.9285714285713], [153.0, 333.28571428571433], [154.0, 1168.0], [155.0, 803.764705882353], [156.0, 1370.2727272727273], [157.0, 1012.3076923076922], [158.0, 1657.222222222222], [159.0, 359.2291666666667], [160.0, 940.4848484848485], [161.0, 74.6794871794872], [162.0, 178.2133333333334], [163.0, 381.4565217391305], [164.0, 44.78125000000003], [165.0, 1700.2698085000254], [1.0, 48.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[158.46854545454633, 1536.6650303030362]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 165.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6691.133333333333, "minX": 1.58768454E12, "maxY": 267752.9, "series": [{"data": [[1.58768514E12, 130695.25], [1.58768454E12, 104371.3], [1.58768484E12, 232018.5], [1.5876852E12, 15593.283333333333], [1.5876849E12, 223321.38333333333], [1.5876846E12, 215916.51666666666], [1.58768526E12, 110837.68333333333], [1.58768496E12, 244072.88333333333], [1.58768466E12, 183851.75], [1.58768502E12, 225827.05], [1.58768472E12, 180724.81666666668], [1.58768508E12, 267752.9], [1.58768478E12, 232729.86666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58768514E12, 29165.233333333334], [1.58768454E12, 6691.133333333333], [1.58768484E12, 16595.3], [1.5876852E12, 33805.566666666666], [1.5876849E12, 16430.733333333334], [1.5876846E12, 13568.466666666667], [1.58768526E12, 6828.933333333333], [1.58768496E12, 15550.833333333334], [1.58768466E12, 22000.8], [1.58768502E12, 22551.3], [1.58768472E12, 22322.2], [1.58768508E12, 16487.733333333334], [1.58768478E12, 14578.766666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58768526E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 18.101894736842105, "minX": 1.58768454E12, "maxY": 3061.803921568626, "series": [{"data": [[1.58768514E12, 603.2764505119457], [1.58768454E12, 454.12980769230757], [1.58768484E12, 2541.531330472101], [1.5876852E12, 18.101894736842105], [1.5876849E12, 2313.6695652173903], [1.5876846E12, 3061.803921568626], [1.58768526E12, 945.1566265060235], [1.58768496E12, 2699.3627906976726], [1.58768466E12, 1442.1080206985805], [1.58768502E12, 1259.8174352495255], [1.58768472E12, 1154.2593068035935], [1.58768508E12, 2470.051393728221], [1.58768478E12, 2953.5801376597865]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58768454E12, 159.44036697247708], [1.5876846E12, 156.24999999999997]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58768514E12, 578.2460552268255], [1.58768454E12, 492.7099567099567], [1.58768484E12, 2533.4169550173006], [1.5876852E12, 19.657883552911173], [1.5876849E12, 2298.3972125435544], [1.5876846E12, 2951.068421052632], [1.58768526E12, 1131.0437636761485], [1.58768496E12, 2755.203636363637], [1.58768466E12, 1441.617896799476], [1.58768502E12, 1186.2959898154043], [1.58768472E12, 1260.8913043478233], [1.58768508E12, 2507.6623488773744], [1.58768478E12, 2977.8786692759336]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58768526E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 18.018526315789472, "minX": 1.58768454E12, "maxY": 3061.4836601307225, "series": [{"data": [[1.58768514E12, 603.2052657240374], [1.58768454E12, 452.7139423076922], [1.58768484E12, 2541.327038626608], [1.5876852E12, 18.018526315789472], [1.5876849E12, 2313.3808695652174], [1.5876846E12, 3061.4836601307225], [1.58768526E12, 943.6325301204813], [1.58768496E12, 2699.107906976745], [1.58768466E12, 1442.007115135836], [1.58768502E12, 1259.3562855337957], [1.58768472E12, 1153.8344030808728], [1.58768508E12, 2469.3135888501743], [1.58768478E12, 2953.1937069813175]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58768454E12, 159.35779816513764], [1.5876846E12, 156.19642857142853]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58768514E12, 578.1868836291912], [1.58768454E12, 491.5714285714285], [1.58768484E12, 2533.1989619377164], [1.5876852E12, 19.608584785380366], [1.5876849E12, 2298.0191637630637], [1.5876846E12, 2950.802105263157], [1.58768526E12, 1129.3873085339158], [1.58768496E12, 2754.8845454545462], [1.58768466E12, 1441.5114304376236], [1.58768502E12, 1185.5537873965607], [1.58768472E12, 1260.279411764704], [1.58768508E12, 2506.9844559585463], [1.58768478E12, 2977.3894324853213]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58768526E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58768454E12, "maxY": 1.0275229357798163, "series": [{"data": [[1.58768514E12, 0.14285714285714257], [1.58768454E12, 0.27884615384615397], [1.58768484E12, 0.40085836909871236], [1.5876852E12, 0.0], [1.5876849E12, 0.3121739130434784], [1.5876846E12, 0.5708061002178647], [1.58768526E12, 0.19678714859437724], [1.58768496E12, 0.4269767441860466], [1.58768466E12, 0.29366106080207005], [1.58768502E12, 0.2533164876816173], [1.58768472E12, 0.18998716302952504], [1.58768508E12, 0.43379790940766544], [1.58768478E12, 0.42674532940019616]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58768454E12, 1.0275229357798163], [1.5876846E12, 0.5535714285714286]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58768514E12, 0.47041420118343275], [1.58768454E12, 0.5844155844155848], [1.58768484E12, 0.4247404844290658], [1.5876852E12, 0.42796430089247767], [1.5876849E12, 0.44076655052264807], [1.5876846E12, 0.5484210526315786], [1.58768526E12, 0.43544857768052525], [1.58768496E12, 0.4318181818181821], [1.58768466E12, 0.5173089483997386], [1.58768502E12, 0.42838956078930585], [1.58768472E12, 0.4520460358056267], [1.58768508E12, 0.45509499136442094], [1.58768478E12, 0.47358121330724146]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58768526E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 17.0, "minX": 1.58768454E12, "maxY": 9150.0, "series": [{"data": [[1.58768514E12, 3262.0], [1.58768454E12, 3281.0], [1.58768484E12, 8498.0], [1.5876852E12, 3363.0], [1.5876849E12, 7350.0], [1.5876846E12, 8898.0], [1.58768526E12, 5478.0], [1.58768496E12, 7178.0], [1.58768466E12, 5221.0], [1.58768502E12, 4619.0], [1.58768472E12, 5638.0], [1.58768508E12, 5179.0], [1.58768478E12, 9150.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58768514E12, 1382.0], [1.58768454E12, 17.0], [1.58768484E12, 159.0], [1.5876852E12, 2503.0], [1.5876849E12, 21.0], [1.5876846E12, 146.0], [1.58768526E12, 20.0], [1.58768496E12, 610.0], [1.58768466E12, 17.0], [1.58768502E12, 29.0], [1.58768472E12, 102.0], [1.58768508E12, 1133.0], [1.58768478E12, 49.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58768514E12, 2536.3], [1.58768454E12, 1597.600000000002], [1.58768484E12, 4683.9], [1.5876852E12, 3333.4], [1.5876849E12, 5032.5], [1.5876846E12, 6158.5], [1.58768526E12, 3361.9999999999995], [1.58768496E12, 4182.0], [1.58768466E12, 3760.2000000000003], [1.58768502E12, 2745.0], [1.58768472E12, 4066.000000000001], [1.58768508E12, 3261.9000000000005], [1.58768478E12, 5634.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58768514E12, 3079.29], [1.58768454E12, 2740.6], [1.58768484E12, 7136.719999999999], [1.5876852E12, 3363.0], [1.5876849E12, 6211.749999999998], [1.5876846E12, 7563.500000000002], [1.58768526E12, 5233.839999999999], [1.58768496E12, 5461.0], [1.58768466E12, 4727.52], [1.58768502E12, 3091.83], [1.58768472E12, 5440.879999999999], [1.58768508E12, 4876.789999999999], [1.58768478E12, 7459.92]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58768514E12, 2661.0], [1.58768454E12, 2169.599999999998], [1.58768484E12, 5823.649999999997], [1.5876852E12, 3361.4], [1.5876849E12, 5579.5], [1.5876846E12, 6806.25], [1.58768526E12, 4509.599999999999], [1.58768496E12, 4614.0], [1.58768466E12, 4206.4], [1.58768502E12, 2861.1499999999996], [1.58768472E12, 4825.200000000001], [1.58768508E12, 4127.250000000002], [1.58768478E12, 6302.799999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58768526E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 3587.0, "series": [{"data": [[2.0, 44.0], [3.0, 103.5], [5.0, 142.0], [6.0, 40.5], [7.0, 147.0], [9.0, 38.0], [10.0, 1332.5], [11.0, 31.0], [12.0, 34.0], [14.0, 2614.0], [15.0, 54.0], [16.0, 904.5], [17.0, 1963.0], [18.0, 2832.5], [19.0, 2551.5], [20.0, 157.5], [21.0, 3587.0], [22.0, 2392.5], [23.0, 2562.5], [24.0, 2569.0], [25.0, 2642.0], [26.0, 2621.0], [27.0, 2244.5], [28.0, 2469.5], [29.0, 2440.0], [30.0, 2405.0], [31.0, 2472.0], [32.0, 2468.0], [33.0, 2673.0], [34.0, 2819.0], [35.0, 2573.0], [37.0, 2408.0], [36.0, 2323.0], [39.0, 1877.0], [38.0, 2154.0], [40.0, 2057.0], [41.0, 2358.0], [43.0, 2334.0], [42.0, 1918.5], [45.0, 2024.0], [44.0, 2337.0], [47.0, 1992.0], [46.0, 2483.0], [49.0, 2213.0], [48.0, 2274.5], [50.0, 1792.0], [51.0, 1621.0], [53.0, 1912.5], [52.0, 2114.0], [55.0, 2710.0], [54.0, 2107.0], [56.0, 2358.5], [57.0, 33.5], [59.0, 1185.0], [58.0, 2403.0], [60.0, 2504.0], [61.0, 1143.0], [62.0, 2011.0], [67.0, 1416.0], [64.0, 2192.0], [65.0, 1960.0], [72.0, 2432.0], [75.0, 2039.0], [81.0, 2693.0], [83.0, 1148.0], [82.0, 2720.0], [84.0, 2755.0], [85.0, 2735.0], [88.0, 2722.0], [91.0, 2830.0], [90.0, 34.0], [92.0, 2535.0], [94.0, 1491.5], [116.0, 1852.5], [1.0, 41.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 2.0], [19.0, 3.0], [26.0, 361.0], [30.0, 2.0], [33.0, 2.0], [32.0, 2.0], [37.0, 2.0], [38.0, 2.0], [39.0, 1.0], [40.0, 2.0], [43.0, 2.0], [44.0, 2.0], [46.0, 2.0], [47.0, 2.0], [49.0, 2.0], [48.0, 2.0], [50.0, 3.0], [51.0, 2.0], [53.0, 2.0], [55.0, 3299.0], [54.0, 2.0], [56.0, 1241.0], [57.0, 2.0], [58.0, 2.0], [59.0, 2.0], [60.0, 2121.0], [61.0, 2.0], [62.0, 2.0], [67.0, 2.0], [66.0, 1.0], [64.0, 2.0], [65.0, 3.0], [71.0, 2.0], [68.0, 2.0], [69.0, 2.0], [72.0, 2.0], [74.0, 2.0], [75.0, 2.0], [73.0, 2.0], [78.0, 2.0], [76.0, 2.0], [79.0, 2.0], [77.0, 2.0], [82.0, 2.0], [81.0, 2.0], [83.0, 2.0], [80.0, 2.0], [86.0, 2.0], [84.0, 2.0], [85.0, 2.0], [87.0, 2.0], [88.0, 2.0], [91.0, 2.0], [89.0, 2.0], [90.0, 2.0], [92.0, 2.0], [94.0, 2.0], [93.0, 2.0], [95.0, 2.0], [99.0, 2.0], [97.0, 2.0], [96.0, 2.0], [98.0, 2.0], [101.0, 2.0], [102.0, 2.0], [100.0, 2.0], [103.0, 2.0], [106.0, 2.0], [104.0, 2.0], [105.0, 2.0], [110.0, 2.0], [109.0, 2.0], [112.0, 1.0], [114.0, 1384.0], [116.0, 2.0], [129.0, 1058.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 129.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 3587.0, "series": [{"data": [[2.0, 42.5], [3.0, 103.5], [5.0, 142.0], [6.0, 40.5], [7.0, 147.0], [9.0, 38.0], [10.0, 1288.0], [11.0, 31.0], [12.0, 34.0], [14.0, 2614.0], [15.0, 54.0], [16.0, 904.5], [17.0, 1963.0], [18.0, 2832.5], [19.0, 2551.0], [20.0, 157.5], [21.0, 3587.0], [22.0, 2392.5], [23.0, 2562.5], [24.0, 2568.5], [25.0, 2642.0], [26.0, 2621.0], [27.0, 2244.5], [28.0, 2469.5], [29.0, 2440.0], [30.0, 2405.0], [31.0, 2472.0], [32.0, 2468.0], [33.0, 2673.0], [34.0, 2819.0], [35.0, 2571.0], [37.0, 2407.0], [36.0, 2323.0], [39.0, 1875.0], [38.0, 2154.0], [40.0, 2054.0], [41.0, 2358.0], [43.0, 2334.0], [42.0, 1918.5], [45.0, 2023.5], [44.0, 2337.0], [47.0, 1992.0], [46.0, 2483.0], [49.0, 2213.0], [48.0, 2274.5], [50.0, 1792.0], [51.0, 1621.0], [53.0, 1912.5], [52.0, 2113.0], [55.0, 2710.0], [54.0, 2107.0], [56.0, 2358.5], [57.0, 30.0], [59.0, 1184.5], [58.0, 2403.0], [60.0, 2504.0], [61.0, 1142.5], [62.0, 2010.5], [67.0, 1416.0], [64.0, 2192.0], [65.0, 1960.0], [72.0, 2431.0], [75.0, 2039.0], [81.0, 2693.0], [83.0, 1148.0], [82.0, 2720.0], [84.0, 2755.0], [85.0, 2735.0], [88.0, 2722.0], [91.0, 2830.0], [90.0, 32.5], [92.0, 2535.0], [94.0, 1489.0], [116.0, 1852.0], [1.0, 41.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 2.0], [19.0, 3.0], [26.0, 361.0], [30.0, 2.0], [33.0, 2.0], [32.0, 2.0], [37.0, 2.0], [38.0, 2.0], [39.0, 1.0], [40.0, 2.0], [43.0, 2.0], [44.0, 2.0], [46.0, 2.0], [47.0, 2.0], [49.0, 2.0], [48.0, 2.0], [50.0, 2.0], [51.0, 2.0], [53.0, 2.0], [55.0, 3299.0], [54.0, 2.0], [56.0, 1241.0], [57.0, 2.0], [58.0, 2.0], [59.0, 2.0], [60.0, 2121.0], [61.0, 2.0], [62.0, 2.0], [67.0, 2.0], [66.0, 1.0], [64.0, 2.0], [65.0, 3.0], [71.0, 2.0], [68.0, 2.0], [69.0, 2.0], [72.0, 2.0], [74.0, 2.0], [75.0, 2.0], [73.0, 2.0], [78.0, 2.0], [76.0, 2.0], [79.0, 2.0], [77.0, 2.0], [82.0, 2.0], [81.0, 2.0], [83.0, 2.0], [80.0, 2.0], [86.0, 2.0], [84.0, 2.0], [85.0, 2.0], [87.0, 2.0], [88.0, 2.0], [91.0, 2.0], [89.0, 2.0], [90.0, 2.0], [92.0, 2.0], [94.0, 2.0], [93.0, 2.0], [95.0, 2.0], [99.0, 2.0], [97.0, 2.0], [96.0, 2.0], [98.0, 2.0], [101.0, 2.0], [102.0, 2.0], [100.0, 2.0], [103.0, 2.0], [106.0, 2.0], [104.0, 2.0], [105.0, 2.0], [110.0, 2.0], [109.0, 2.0], [112.0, 1.0], [114.0, 1384.0], [116.0, 2.0], [129.0, 1058.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 129.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 14.466666666666667, "minX": 1.58768454E12, "maxY": 80.25, "series": [{"data": [[1.58768514E12, 66.68333333333334], [1.58768454E12, 17.566666666666666], [1.58768484E12, 36.86666666666667], [1.5876852E12, 80.25], [1.5876849E12, 39.9], [1.5876846E12, 32.85], [1.58768526E12, 14.466666666666667], [1.58768496E12, 36.016666666666666], [1.58768466E12, 49.38333333333333], [1.58768502E12, 53.416666666666664], [1.58768472E12, 53.81666666666667], [1.58768508E12, 37.516666666666666], [1.58768478E12, 34.016666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58768526E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.58768454E12, "maxY": 78.35, "series": [{"data": [[1.58768514E12, 17.6], [1.58768454E12, 16.45], [1.58768484E12, 33.166666666666664], [1.5876852E12, 0.45], [1.5876849E12, 31.9], [1.5876846E12, 31.733333333333334], [1.58768526E12, 15.916666666666666], [1.58768496E12, 34.983333333333334], [1.58768466E12, 25.783333333333335], [1.58768502E12, 31.933333333333334], [1.58768472E12, 25.25], [1.58768508E12, 38.43333333333333], [1.58768478E12, 33.38333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58768466E12, 0.26666666666666666], [1.58768502E12, 0.43333333333333335]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.58768496E12, 1.2666666666666666], [1.58768466E12, 25.233333333333334], [1.58768514E12, 50.38333333333333], [1.58768484E12, 5.516666666666667], [1.58768502E12, 20.2], [1.58768472E12, 26.783333333333335], [1.5876852E12, 78.35], [1.5876849E12, 6.4], [1.5876846E12, 0.3333333333333333], [1.58768478E12, 0.6]], "isOverall": false, "label": "503", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58768526E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.58768454E12, "maxY": 39.36666666666667, "series": [{"data": [[1.58768454E12, 1.8166666666666667], [1.5876846E12, 0.9333333333333333]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58768514E12, 8.883333333333333], [1.58768454E12, 6.933333333333334], [1.58768484E12, 16.6], [1.5876852E12, 0.21666666666666667], [1.5876849E12, 16.033333333333335], [1.5876846E12, 15.15], [1.58768526E12, 8.3], [1.58768496E12, 17.283333333333335], [1.58768466E12, 12.9], [1.58768502E12, 15.9], [1.58768472E12, 12.55], [1.58768508E12, 19.133333333333333], [1.58768478E12, 16.616666666666667]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58768496E12, 0.6333333333333333], [1.58768466E12, 12.866666666666667], [1.58768514E12, 25.3], [1.58768484E12, 2.816666666666667], [1.58768502E12, 10.483333333333333], [1.58768472E12, 13.416666666666666], [1.5876852E12, 39.36666666666667], [1.5876849E12, 3.1333333333333333], [1.5876846E12, 0.15], [1.58768478E12, 0.3333333333333333]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58768514E12, 8.716666666666667], [1.58768454E12, 7.7], [1.58768484E12, 16.566666666666666], [1.5876852E12, 0.23333333333333334], [1.5876849E12, 15.866666666666667], [1.5876846E12, 15.65], [1.58768526E12, 7.616666666666666], [1.58768496E12, 17.7], [1.58768466E12, 12.883333333333333], [1.58768502E12, 16.033333333333335], [1.58768472E12, 12.7], [1.58768508E12, 19.3], [1.58768478E12, 16.766666666666666]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.58768496E12, 0.6333333333333333], [1.58768466E12, 12.633333333333333], [1.58768514E12, 25.083333333333332], [1.58768484E12, 2.7], [1.58768502E12, 10.15], [1.58768472E12, 13.366666666666667], [1.5876852E12, 38.983333333333334], [1.5876849E12, 3.2666666666666666], [1.5876846E12, 0.18333333333333332], [1.58768478E12, 0.26666666666666666]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58768526E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.58768454E12, "maxY": 78.35, "series": [{"data": [[1.58768514E12, 17.6], [1.58768454E12, 16.45], [1.58768484E12, 33.166666666666664], [1.5876852E12, 0.45], [1.5876849E12, 31.9], [1.5876846E12, 31.733333333333334], [1.58768526E12, 15.916666666666666], [1.58768496E12, 34.983333333333334], [1.58768466E12, 25.783333333333335], [1.58768502E12, 31.933333333333334], [1.58768472E12, 25.25], [1.58768508E12, 38.43333333333333], [1.58768478E12, 33.38333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58768496E12, 1.2666666666666666], [1.58768466E12, 25.5], [1.58768514E12, 50.38333333333333], [1.58768484E12, 5.516666666666667], [1.58768502E12, 20.633333333333333], [1.58768472E12, 26.783333333333335], [1.5876852E12, 78.35], [1.5876849E12, 6.4], [1.5876846E12, 0.3333333333333333], [1.58768478E12, 0.6]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58768526E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

