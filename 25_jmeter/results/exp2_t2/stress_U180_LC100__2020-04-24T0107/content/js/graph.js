/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 9989.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 4.0], [57.5, 4.0], [57.6, 4.0], [57.7, 4.0], [57.8, 4.0], [57.9, 4.0], [58.0, 5.0], [58.1, 5.0], [58.2, 5.0], [58.3, 6.0], [58.4, 7.0], [58.5, 8.0], [58.6, 10.0], [58.7, 18.0], [58.8, 21.0], [58.9, 22.0], [59.0, 24.0], [59.1, 25.0], [59.2, 27.0], [59.3, 28.0], [59.4, 30.0], [59.5, 31.0], [59.6, 32.0], [59.7, 34.0], [59.8, 36.0], [59.9, 38.0], [60.0, 42.0], [60.1, 45.0], [60.2, 50.0], [60.3, 54.0], [60.4, 65.0], [60.5, 81.0], [60.6, 101.0], [60.7, 119.0], [60.8, 137.0], [60.9, 157.0], [61.0, 182.0], [61.1, 203.0], [61.2, 223.0], [61.3, 253.0], [61.4, 275.0], [61.5, 296.0], [61.6, 318.0], [61.7, 346.0], [61.8, 368.0], [61.9, 402.0], [62.0, 431.0], [62.1, 468.0], [62.2, 503.0], [62.3, 522.0], [62.4, 553.0], [62.5, 587.0], [62.6, 618.0], [62.7, 643.0], [62.8, 660.0], [62.9, 681.0], [63.0, 703.0], [63.1, 719.0], [63.2, 750.0], [63.3, 772.0], [63.4, 793.0], [63.5, 818.0], [63.6, 842.0], [63.7, 865.0], [63.8, 886.0], [63.9, 904.0], [64.0, 933.0], [64.1, 963.0], [64.2, 983.0], [64.3, 1002.0], [64.4, 1020.0], [64.5, 1045.0], [64.6, 1058.0], [64.7, 1072.0], [64.8, 1087.0], [64.9, 1101.0], [65.0, 1120.0], [65.1, 1135.0], [65.2, 1151.0], [65.3, 1161.0], [65.4, 1183.0], [65.5, 1197.0], [65.6, 1212.0], [65.7, 1227.0], [65.8, 1241.0], [65.9, 1263.0], [66.0, 1283.0], [66.1, 1304.0], [66.2, 1317.0], [66.3, 1329.0], [66.4, 1349.0], [66.5, 1366.0], [66.6, 1378.0], [66.7, 1388.0], [66.8, 1407.0], [66.9, 1420.0], [67.0, 1434.0], [67.1, 1445.0], [67.2, 1461.0], [67.3, 1469.0], [67.4, 1479.0], [67.5, 1490.0], [67.6, 1509.0], [67.7, 1524.0], [67.8, 1538.0], [67.9, 1551.0], [68.0, 1562.0], [68.1, 1572.0], [68.2, 1581.0], [68.3, 1590.0], [68.4, 1601.0], [68.5, 1614.0], [68.6, 1626.0], [68.7, 1640.0], [68.8, 1654.0], [68.9, 1673.0], [69.0, 1690.0], [69.1, 1704.0], [69.2, 1712.0], [69.3, 1730.0], [69.4, 1744.0], [69.5, 1758.0], [69.6, 1773.0], [69.7, 1785.0], [69.8, 1804.0], [69.9, 1818.0], [70.0, 1829.0], [70.1, 1845.0], [70.2, 1860.0], [70.3, 1881.0], [70.4, 1899.0], [70.5, 1927.0], [70.6, 1942.0], [70.7, 1963.0], [70.8, 1980.0], [70.9, 1994.0], [71.0, 2009.0], [71.1, 2028.0], [71.2, 2050.0], [71.3, 2069.0], [71.4, 2087.0], [71.5, 2103.0], [71.6, 2129.0], [71.7, 2146.0], [71.8, 2166.0], [71.9, 2186.0], [72.0, 2213.0], [72.1, 2238.0], [72.2, 2255.0], [72.3, 2277.0], [72.4, 2299.0], [72.5, 2331.0], [72.6, 2351.0], [72.7, 2373.0], [72.8, 2390.0], [72.9, 2409.0], [73.0, 2433.0], [73.1, 2461.0], [73.2, 2484.0], [73.3, 2501.0], [73.4, 2518.0], [73.5, 2547.0], [73.6, 2565.0], [73.7, 2591.0], [73.8, 2608.0], [73.9, 2625.0], [74.0, 2643.0], [74.1, 2661.0], [74.2, 2677.0], [74.3, 2702.0], [74.4, 2730.0], [74.5, 2754.0], [74.6, 2774.0], [74.7, 2793.0], [74.8, 2811.0], [74.9, 2836.0], [75.0, 2850.0], [75.1, 2864.0], [75.2, 2881.0], [75.3, 2900.0], [75.4, 2927.0], [75.5, 2945.0], [75.6, 2958.0], [75.7, 2974.0], [75.8, 2993.0], [75.9, 3004.0], [76.0, 3014.0], [76.1, 3027.0], [76.2, 3042.0], [76.3, 3054.0], [76.4, 3065.0], [76.5, 3078.0], [76.6, 3091.0], [76.7, 3102.0], [76.8, 3114.0], [76.9, 3125.0], [77.0, 3135.0], [77.1, 3142.0], [77.2, 3152.0], [77.3, 3161.0], [77.4, 3171.0], [77.5, 3180.0], [77.6, 3189.0], [77.7, 3197.0], [77.8, 3206.0], [77.9, 3218.0], [78.0, 3229.0], [78.1, 3234.0], [78.2, 3246.0], [78.3, 3256.0], [78.4, 3266.0], [78.5, 3276.0], [78.6, 3284.0], [78.7, 3292.0], [78.8, 3300.0], [78.9, 3306.0], [79.0, 3313.0], [79.1, 3322.0], [79.2, 3330.0], [79.3, 3339.0], [79.4, 3347.0], [79.5, 3354.0], [79.6, 3361.0], [79.7, 3370.0], [79.8, 3380.0], [79.9, 3389.0], [80.0, 3396.0], [80.1, 3405.0], [80.2, 3409.0], [80.3, 3416.0], [80.4, 3422.0], [80.5, 3432.0], [80.6, 3439.0], [80.7, 3446.0], [80.8, 3453.0], [80.9, 3458.0], [81.0, 3465.0], [81.1, 3470.0], [81.2, 3476.0], [81.3, 3485.0], [81.4, 3492.0], [81.5, 3497.0], [81.6, 3503.0], [81.7, 3512.0], [81.8, 3519.0], [81.9, 3523.0], [82.0, 3531.0], [82.1, 3535.0], [82.2, 3541.0], [82.3, 3548.0], [82.4, 3554.0], [82.5, 3559.0], [82.6, 3569.0], [82.7, 3573.0], [82.8, 3580.0], [82.9, 3588.0], [83.0, 3594.0], [83.1, 3603.0], [83.2, 3609.0], [83.3, 3614.0], [83.4, 3620.0], [83.5, 3628.0], [83.6, 3634.0], [83.7, 3640.0], [83.8, 3647.0], [83.9, 3654.0], [84.0, 3662.0], [84.1, 3670.0], [84.2, 3681.0], [84.3, 3686.0], [84.4, 3695.0], [84.5, 3704.0], [84.6, 3710.0], [84.7, 3718.0], [84.8, 3725.0], [84.9, 3732.0], [85.0, 3737.0], [85.1, 3748.0], [85.2, 3755.0], [85.3, 3761.0], [85.4, 3769.0], [85.5, 3776.0], [85.6, 3783.0], [85.7, 3793.0], [85.8, 3803.0], [85.9, 3808.0], [86.0, 3815.0], [86.1, 3822.0], [86.2, 3827.0], [86.3, 3839.0], [86.4, 3846.0], [86.5, 3853.0], [86.6, 3859.0], [86.7, 3864.0], [86.8, 3871.0], [86.9, 3879.0], [87.0, 3887.0], [87.1, 3891.0], [87.2, 3899.0], [87.3, 3908.0], [87.4, 3913.0], [87.5, 3923.0], [87.6, 3931.0], [87.7, 3942.0], [87.8, 3952.0], [87.9, 3957.0], [88.0, 3967.0], [88.1, 3975.0], [88.2, 3984.0], [88.3, 3994.0], [88.4, 4003.0], [88.5, 4010.0], [88.6, 4019.0], [88.7, 4029.0], [88.8, 4041.0], [88.9, 4051.0], [89.0, 4068.0], [89.1, 4082.0], [89.2, 4092.0], [89.3, 4102.0], [89.4, 4118.0], [89.5, 4131.0], [89.6, 4146.0], [89.7, 4157.0], [89.8, 4169.0], [89.9, 4183.0], [90.0, 4202.0], [90.1, 4216.0], [90.2, 4232.0], [90.3, 4247.0], [90.4, 4259.0], [90.5, 4274.0], [90.6, 4286.0], [90.7, 4308.0], [90.8, 4332.0], [90.9, 4352.0], [91.0, 4375.0], [91.1, 4392.0], [91.2, 4408.0], [91.3, 4425.0], [91.4, 4443.0], [91.5, 4476.0], [91.6, 4493.0], [91.7, 4512.0], [91.8, 4546.0], [91.9, 4566.0], [92.0, 4583.0], [92.1, 4611.0], [92.2, 4628.0], [92.3, 4657.0], [92.4, 4673.0], [92.5, 4704.0], [92.6, 4713.0], [92.7, 4743.0], [92.8, 4761.0], [92.9, 4780.0], [93.0, 4805.0], [93.1, 4830.0], [93.2, 4859.0], [93.3, 4878.0], [93.4, 4892.0], [93.5, 4918.0], [93.6, 4934.0], [93.7, 4960.0], [93.8, 4982.0], [93.9, 5007.0], [94.0, 5019.0], [94.1, 5035.0], [94.2, 5058.0], [94.3, 5073.0], [94.4, 5088.0], [94.5, 5106.0], [94.6, 5133.0], [94.7, 5152.0], [94.8, 5174.0], [94.9, 5192.0], [95.0, 5206.0], [95.1, 5227.0], [95.2, 5257.0], [95.3, 5272.0], [95.4, 5292.0], [95.5, 5307.0], [95.6, 5329.0], [95.7, 5346.0], [95.8, 5365.0], [95.9, 5384.0], [96.0, 5403.0], [96.1, 5418.0], [96.2, 5435.0], [96.3, 5451.0], [96.4, 5467.0], [96.5, 5489.0], [96.6, 5509.0], [96.7, 5530.0], [96.8, 5558.0], [96.9, 5579.0], [97.0, 5600.0], [97.1, 5628.0], [97.2, 5655.0], [97.3, 5681.0], [97.4, 5709.0], [97.5, 5734.0], [97.6, 5758.0], [97.7, 5790.0], [97.8, 5817.0], [97.9, 5840.0], [98.0, 5868.0], [98.1, 5900.0], [98.2, 5954.0], [98.3, 5979.0], [98.4, 6026.0], [98.5, 6068.0], [98.6, 6103.0], [98.7, 6146.0], [98.8, 6199.0], [98.9, 6266.0], [99.0, 6365.0], [99.1, 6484.0], [99.2, 6588.0], [99.3, 6742.0], [99.4, 6938.0], [99.5, 7102.0], [99.6, 7300.0], [99.7, 7434.0], [99.8, 7754.0], [99.9, 8060.0], [100.0, 9989.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 140.0], [0.1, 140.0], [0.2, 140.0], [0.3, 140.0], [0.4, 140.0], [0.5, 140.0], [0.6, 140.0], [0.7, 140.0], [0.8, 140.0], [0.9, 140.0], [1.0, 140.0], [1.1, 140.0], [1.2, 141.0], [1.3, 141.0], [1.4, 141.0], [1.5, 141.0], [1.6, 141.0], [1.7, 142.0], [1.8, 142.0], [1.9, 142.0], [2.0, 142.0], [2.1, 142.0], [2.2, 142.0], [2.3, 143.0], [2.4, 143.0], [2.5, 143.0], [2.6, 143.0], [2.7, 143.0], [2.8, 144.0], [2.9, 144.0], [3.0, 144.0], [3.1, 144.0], [3.2, 144.0], [3.3, 144.0], [3.4, 145.0], [3.5, 145.0], [3.6, 145.0], [3.7, 145.0], [3.8, 145.0], [3.9, 145.0], [4.0, 145.0], [4.1, 145.0], [4.2, 145.0], [4.3, 145.0], [4.4, 145.0], [4.5, 145.0], [4.6, 145.0], [4.7, 145.0], [4.8, 145.0], [4.9, 145.0], [5.0, 145.0], [5.1, 145.0], [5.2, 145.0], [5.3, 145.0], [5.4, 145.0], [5.5, 145.0], [5.6, 146.0], [5.7, 146.0], [5.8, 146.0], [5.9, 146.0], [6.0, 146.0], [6.1, 146.0], [6.2, 146.0], [6.3, 146.0], [6.4, 146.0], [6.5, 146.0], [6.6, 146.0], [6.7, 146.0], [6.8, 146.0], [6.9, 146.0], [7.0, 146.0], [7.1, 146.0], [7.2, 146.0], [7.3, 147.0], [7.4, 147.0], [7.5, 147.0], [7.6, 147.0], [7.7, 147.0], [7.8, 147.0], [7.9, 147.0], [8.0, 147.0], [8.1, 147.0], [8.2, 147.0], [8.3, 147.0], [8.4, 147.0], [8.5, 147.0], [8.6, 147.0], [8.7, 147.0], [8.8, 147.0], [8.9, 147.0], [9.0, 147.0], [9.1, 147.0], [9.2, 147.0], [9.3, 147.0], [9.4, 147.0], [9.5, 147.0], [9.6, 147.0], [9.7, 147.0], [9.8, 147.0], [9.9, 147.0], [10.0, 147.0], [10.1, 147.0], [10.2, 147.0], [10.3, 147.0], [10.4, 147.0], [10.5, 147.0], [10.6, 147.0], [10.7, 147.0], [10.8, 147.0], [10.9, 147.0], [11.0, 147.0], [11.1, 147.0], [11.2, 147.0], [11.3, 147.0], [11.4, 147.0], [11.5, 147.0], [11.6, 147.0], [11.7, 147.0], [11.8, 147.0], [11.9, 147.0], [12.0, 147.0], [12.1, 147.0], [12.2, 147.0], [12.3, 147.0], [12.4, 147.0], [12.5, 147.0], [12.6, 147.0], [12.7, 147.0], [12.8, 148.0], [12.9, 148.0], [13.0, 148.0], [13.1, 148.0], [13.2, 148.0], [13.3, 148.0], [13.4, 148.0], [13.5, 148.0], [13.6, 148.0], [13.7, 148.0], [13.8, 148.0], [13.9, 148.0], [14.0, 148.0], [14.1, 148.0], [14.2, 148.0], [14.3, 148.0], [14.4, 148.0], [14.5, 148.0], [14.6, 148.0], [14.7, 148.0], [14.8, 148.0], [14.9, 148.0], [15.0, 148.0], [15.1, 148.0], [15.2, 148.0], [15.3, 148.0], [15.4, 148.0], [15.5, 148.0], [15.6, 148.0], [15.7, 148.0], [15.8, 148.0], [15.9, 148.0], [16.0, 148.0], [16.1, 148.0], [16.2, 148.0], [16.3, 148.0], [16.4, 148.0], [16.5, 148.0], [16.6, 148.0], [16.7, 148.0], [16.8, 148.0], [16.9, 148.0], [17.0, 148.0], [17.1, 148.0], [17.2, 148.0], [17.3, 148.0], [17.4, 148.0], [17.5, 148.0], [17.6, 148.0], [17.7, 148.0], [17.8, 148.0], [17.9, 148.0], [18.0, 148.0], [18.1, 148.0], [18.2, 148.0], [18.3, 148.0], [18.4, 148.0], [18.5, 148.0], [18.6, 148.0], [18.7, 148.0], [18.8, 148.0], [18.9, 148.0], [19.0, 148.0], [19.1, 148.0], [19.2, 148.0], [19.3, 148.0], [19.4, 148.0], [19.5, 148.0], [19.6, 148.0], [19.7, 148.0], [19.8, 148.0], [19.9, 148.0], [20.0, 148.0], [20.1, 148.0], [20.2, 148.0], [20.3, 148.0], [20.4, 148.0], [20.5, 148.0], [20.6, 149.0], [20.7, 149.0], [20.8, 149.0], [20.9, 149.0], [21.0, 149.0], [21.1, 149.0], [21.2, 149.0], [21.3, 149.0], [21.4, 149.0], [21.5, 149.0], [21.6, 149.0], [21.7, 149.0], [21.8, 149.0], [21.9, 149.0], [22.0, 149.0], [22.1, 149.0], [22.2, 149.0], [22.3, 149.0], [22.4, 149.0], [22.5, 149.0], [22.6, 149.0], [22.7, 149.0], [22.8, 149.0], [22.9, 149.0], [23.0, 149.0], [23.1, 149.0], [23.2, 149.0], [23.3, 149.0], [23.4, 149.0], [23.5, 149.0], [23.6, 149.0], [23.7, 149.0], [23.8, 149.0], [23.9, 149.0], [24.0, 149.0], [24.1, 149.0], [24.2, 149.0], [24.3, 149.0], [24.4, 149.0], [24.5, 149.0], [24.6, 149.0], [24.7, 149.0], [24.8, 149.0], [24.9, 149.0], [25.0, 149.0], [25.1, 149.0], [25.2, 149.0], [25.3, 149.0], [25.4, 149.0], [25.5, 149.0], [25.6, 149.0], [25.7, 149.0], [25.8, 149.0], [25.9, 149.0], [26.0, 149.0], [26.1, 149.0], [26.2, 150.0], [26.3, 150.0], [26.4, 150.0], [26.5, 150.0], [26.6, 150.0], [26.7, 150.0], [26.8, 150.0], [26.9, 150.0], [27.0, 150.0], [27.1, 150.0], [27.2, 150.0], [27.3, 150.0], [27.4, 150.0], [27.5, 150.0], [27.6, 150.0], [27.7, 150.0], [27.8, 150.0], [27.9, 150.0], [28.0, 150.0], [28.1, 150.0], [28.2, 150.0], [28.3, 150.0], [28.4, 150.0], [28.5, 150.0], [28.6, 150.0], [28.7, 150.0], [28.8, 150.0], [28.9, 150.0], [29.0, 150.0], [29.1, 150.0], [29.2, 150.0], [29.3, 150.0], [29.4, 150.0], [29.5, 150.0], [29.6, 150.0], [29.7, 150.0], [29.8, 150.0], [29.9, 150.0], [30.0, 150.0], [30.1, 151.0], [30.2, 151.0], [30.3, 151.0], [30.4, 151.0], [30.5, 151.0], [30.6, 151.0], [30.7, 151.0], [30.8, 151.0], [30.9, 151.0], [31.0, 151.0], [31.1, 151.0], [31.2, 151.0], [31.3, 151.0], [31.4, 151.0], [31.5, 151.0], [31.6, 151.0], [31.7, 151.0], [31.8, 151.0], [31.9, 151.0], [32.0, 151.0], [32.1, 151.0], [32.2, 151.0], [32.3, 151.0], [32.4, 151.0], [32.5, 151.0], [32.6, 151.0], [32.7, 151.0], [32.8, 151.0], [32.9, 151.0], [33.0, 151.0], [33.1, 151.0], [33.2, 151.0], [33.3, 151.0], [33.4, 152.0], [33.5, 152.0], [33.6, 152.0], [33.7, 152.0], [33.8, 152.0], [33.9, 152.0], [34.0, 152.0], [34.1, 152.0], [34.2, 152.0], [34.3, 152.0], [34.4, 152.0], [34.5, 152.0], [34.6, 152.0], [34.7, 152.0], [34.8, 152.0], [34.9, 152.0], [35.0, 152.0], [35.1, 152.0], [35.2, 152.0], [35.3, 152.0], [35.4, 152.0], [35.5, 152.0], [35.6, 152.0], [35.7, 152.0], [35.8, 152.0], [35.9, 152.0], [36.0, 152.0], [36.1, 152.0], [36.2, 152.0], [36.3, 152.0], [36.4, 152.0], [36.5, 152.0], [36.6, 152.0], [36.7, 152.0], [36.8, 152.0], [36.9, 152.0], [37.0, 152.0], [37.1, 152.0], [37.2, 152.0], [37.3, 152.0], [37.4, 152.0], [37.5, 152.0], [37.6, 152.0], [37.7, 152.0], [37.8, 152.0], [37.9, 152.0], [38.0, 152.0], [38.1, 152.0], [38.2, 152.0], [38.3, 152.0], [38.4, 152.0], [38.5, 152.0], [38.6, 152.0], [38.7, 152.0], [38.8, 152.0], [38.9, 152.0], [39.0, 152.0], [39.1, 152.0], [39.2, 152.0], [39.3, 152.0], [39.4, 152.0], [39.5, 152.0], [39.6, 152.0], [39.7, 152.0], [39.8, 152.0], [39.9, 152.0], [40.0, 152.0], [40.1, 152.0], [40.2, 152.0], [40.3, 152.0], [40.4, 152.0], [40.5, 152.0], [40.6, 153.0], [40.7, 153.0], [40.8, 153.0], [40.9, 153.0], [41.0, 153.0], [41.1, 153.0], [41.2, 153.0], [41.3, 153.0], [41.4, 153.0], [41.5, 153.0], [41.6, 153.0], [41.7, 153.0], [41.8, 153.0], [41.9, 153.0], [42.0, 153.0], [42.1, 153.0], [42.2, 153.0], [42.3, 153.0], [42.4, 153.0], [42.5, 153.0], [42.6, 153.0], [42.7, 153.0], [42.8, 153.0], [42.9, 153.0], [43.0, 153.0], [43.1, 153.0], [43.2, 153.0], [43.3, 153.0], [43.4, 153.0], [43.5, 153.0], [43.6, 153.0], [43.7, 153.0], [43.8, 153.0], [43.9, 153.0], [44.0, 153.0], [44.1, 153.0], [44.2, 153.0], [44.3, 153.0], [44.4, 153.0], [44.5, 153.0], [44.6, 153.0], [44.7, 153.0], [44.8, 153.0], [44.9, 153.0], [45.0, 153.0], [45.1, 153.0], [45.2, 153.0], [45.3, 153.0], [45.4, 153.0], [45.5, 153.0], [45.6, 153.0], [45.7, 153.0], [45.8, 153.0], [45.9, 153.0], [46.0, 153.0], [46.1, 153.0], [46.2, 153.0], [46.3, 153.0], [46.4, 153.0], [46.5, 153.0], [46.6, 153.0], [46.7, 154.0], [46.8, 154.0], [46.9, 154.0], [47.0, 154.0], [47.1, 154.0], [47.2, 154.0], [47.3, 154.0], [47.4, 154.0], [47.5, 154.0], [47.6, 154.0], [47.7, 154.0], [47.8, 154.0], [47.9, 154.0], [48.0, 154.0], [48.1, 154.0], [48.2, 154.0], [48.3, 154.0], [48.4, 154.0], [48.5, 154.0], [48.6, 154.0], [48.7, 154.0], [48.8, 154.0], [48.9, 154.0], [49.0, 154.0], [49.1, 154.0], [49.2, 154.0], [49.3, 154.0], [49.4, 154.0], [49.5, 154.0], [49.6, 154.0], [49.7, 154.0], [49.8, 154.0], [49.9, 154.0], [50.0, 154.0], [50.1, 154.0], [50.2, 154.0], [50.3, 154.0], [50.4, 154.0], [50.5, 154.0], [50.6, 154.0], [50.7, 154.0], [50.8, 154.0], [50.9, 154.0], [51.0, 154.0], [51.1, 154.0], [51.2, 154.0], [51.3, 154.0], [51.4, 154.0], [51.5, 154.0], [51.6, 154.0], [51.7, 154.0], [51.8, 154.0], [51.9, 154.0], [52.0, 154.0], [52.1, 154.0], [52.2, 154.0], [52.3, 154.0], [52.4, 154.0], [52.5, 154.0], [52.6, 154.0], [52.7, 154.0], [52.8, 155.0], [52.9, 155.0], [53.0, 155.0], [53.1, 155.0], [53.2, 155.0], [53.3, 155.0], [53.4, 155.0], [53.5, 155.0], [53.6, 155.0], [53.7, 155.0], [53.8, 155.0], [53.9, 155.0], [54.0, 155.0], [54.1, 155.0], [54.2, 155.0], [54.3, 155.0], [54.4, 155.0], [54.5, 155.0], [54.6, 155.0], [54.7, 155.0], [54.8, 155.0], [54.9, 155.0], [55.0, 155.0], [55.1, 155.0], [55.2, 155.0], [55.3, 155.0], [55.4, 155.0], [55.5, 155.0], [55.6, 155.0], [55.7, 155.0], [55.8, 155.0], [55.9, 155.0], [56.0, 155.0], [56.1, 155.0], [56.2, 155.0], [56.3, 155.0], [56.4, 155.0], [56.5, 155.0], [56.6, 155.0], [56.7, 155.0], [56.8, 155.0], [56.9, 155.0], [57.0, 155.0], [57.1, 155.0], [57.2, 155.0], [57.3, 155.0], [57.4, 155.0], [57.5, 155.0], [57.6, 155.0], [57.7, 155.0], [57.8, 155.0], [57.9, 155.0], [58.0, 155.0], [58.1, 155.0], [58.2, 155.0], [58.3, 155.0], [58.4, 156.0], [58.5, 156.0], [58.6, 156.0], [58.7, 156.0], [58.8, 156.0], [58.9, 156.0], [59.0, 156.0], [59.1, 156.0], [59.2, 156.0], [59.3, 156.0], [59.4, 156.0], [59.5, 156.0], [59.6, 156.0], [59.7, 156.0], [59.8, 156.0], [59.9, 156.0], [60.0, 156.0], [60.1, 156.0], [60.2, 156.0], [60.3, 156.0], [60.4, 156.0], [60.5, 156.0], [60.6, 156.0], [60.7, 156.0], [60.8, 156.0], [60.9, 156.0], [61.0, 156.0], [61.1, 156.0], [61.2, 156.0], [61.3, 156.0], [61.4, 156.0], [61.5, 156.0], [61.6, 156.0], [61.7, 156.0], [61.8, 156.0], [61.9, 156.0], [62.0, 156.0], [62.1, 156.0], [62.2, 156.0], [62.3, 157.0], [62.4, 157.0], [62.5, 157.0], [62.6, 157.0], [62.7, 157.0], [62.8, 157.0], [62.9, 157.0], [63.0, 157.0], [63.1, 157.0], [63.2, 157.0], [63.3, 157.0], [63.4, 157.0], [63.5, 157.0], [63.6, 157.0], [63.7, 157.0], [63.8, 157.0], [63.9, 157.0], [64.0, 157.0], [64.1, 157.0], [64.2, 157.0], [64.3, 157.0], [64.4, 157.0], [64.5, 157.0], [64.6, 157.0], [64.7, 157.0], [64.8, 157.0], [64.9, 157.0], [65.0, 157.0], [65.1, 157.0], [65.2, 157.0], [65.3, 157.0], [65.4, 157.0], [65.5, 157.0], [65.6, 158.0], [65.7, 158.0], [65.8, 158.0], [65.9, 158.0], [66.0, 158.0], [66.1, 158.0], [66.2, 158.0], [66.3, 158.0], [66.4, 158.0], [66.5, 158.0], [66.6, 158.0], [66.7, 158.0], [66.8, 158.0], [66.9, 158.0], [67.0, 158.0], [67.1, 158.0], [67.2, 158.0], [67.3, 158.0], [67.4, 158.0], [67.5, 158.0], [67.6, 158.0], [67.7, 158.0], [67.8, 158.0], [67.9, 158.0], [68.0, 158.0], [68.1, 158.0], [68.2, 158.0], [68.3, 158.0], [68.4, 158.0], [68.5, 158.0], [68.6, 158.0], [68.7, 158.0], [68.8, 158.0], [68.9, 159.0], [69.0, 159.0], [69.1, 159.0], [69.2, 159.0], [69.3, 159.0], [69.4, 159.0], [69.5, 159.0], [69.6, 159.0], [69.7, 159.0], [69.8, 159.0], [69.9, 159.0], [70.0, 159.0], [70.1, 159.0], [70.2, 159.0], [70.3, 159.0], [70.4, 159.0], [70.5, 159.0], [70.6, 159.0], [70.7, 159.0], [70.8, 159.0], [70.9, 159.0], [71.0, 159.0], [71.1, 159.0], [71.2, 159.0], [71.3, 159.0], [71.4, 159.0], [71.5, 159.0], [71.6, 159.0], [71.7, 159.0], [71.8, 159.0], [71.9, 159.0], [72.0, 159.0], [72.1, 159.0], [72.2, 159.0], [72.3, 159.0], [72.4, 159.0], [72.5, 159.0], [72.6, 159.0], [72.7, 159.0], [72.8, 160.0], [72.9, 160.0], [73.0, 160.0], [73.1, 160.0], [73.2, 160.0], [73.3, 160.0], [73.4, 160.0], [73.5, 160.0], [73.6, 160.0], [73.7, 160.0], [73.8, 160.0], [73.9, 160.0], [74.0, 160.0], [74.1, 160.0], [74.2, 160.0], [74.3, 160.0], [74.4, 160.0], [74.5, 161.0], [74.6, 161.0], [74.7, 161.0], [74.8, 161.0], [74.9, 161.0], [75.0, 161.0], [75.1, 161.0], [75.2, 161.0], [75.3, 161.0], [75.4, 161.0], [75.5, 161.0], [75.6, 161.0], [75.7, 161.0], [75.8, 161.0], [75.9, 161.0], [76.0, 161.0], [76.1, 161.0], [76.2, 161.0], [76.3, 161.0], [76.4, 161.0], [76.5, 161.0], [76.6, 161.0], [76.7, 161.0], [76.8, 161.0], [76.9, 161.0], [77.0, 161.0], [77.1, 161.0], [77.2, 161.0], [77.3, 161.0], [77.4, 161.0], [77.5, 161.0], [77.6, 161.0], [77.7, 161.0], [77.8, 161.0], [77.9, 161.0], [78.0, 161.0], [78.1, 161.0], [78.2, 161.0], [78.3, 161.0], [78.4, 162.0], [78.5, 162.0], [78.6, 162.0], [78.7, 162.0], [78.8, 162.0], [78.9, 162.0], [79.0, 162.0], [79.1, 162.0], [79.2, 162.0], [79.3, 162.0], [79.4, 162.0], [79.5, 162.0], [79.6, 162.0], [79.7, 162.0], [79.8, 162.0], [79.9, 162.0], [80.0, 162.0], [80.1, 162.0], [80.2, 162.0], [80.3, 162.0], [80.4, 162.0], [80.5, 162.0], [80.6, 162.0], [80.7, 162.0], [80.8, 162.0], [80.9, 162.0], [81.0, 162.0], [81.1, 162.0], [81.2, 162.0], [81.3, 162.0], [81.4, 162.0], [81.5, 162.0], [81.6, 162.0], [81.7, 162.0], [81.8, 162.0], [81.9, 162.0], [82.0, 162.0], [82.1, 162.0], [82.2, 162.0], [82.3, 162.0], [82.4, 162.0], [82.5, 162.0], [82.6, 162.0], [82.7, 162.0], [82.8, 163.0], [82.9, 163.0], [83.0, 163.0], [83.1, 163.0], [83.2, 163.0], [83.3, 163.0], [83.4, 163.0], [83.5, 163.0], [83.6, 163.0], [83.7, 163.0], [83.8, 163.0], [83.9, 163.0], [84.0, 163.0], [84.1, 163.0], [84.2, 163.0], [84.3, 163.0], [84.4, 163.0], [84.5, 163.0], [84.6, 163.0], [84.7, 163.0], [84.8, 163.0], [84.9, 163.0], [85.0, 163.0], [85.1, 163.0], [85.2, 163.0], [85.3, 163.0], [85.4, 163.0], [85.5, 163.0], [85.6, 164.0], [85.7, 164.0], [85.8, 164.0], [85.9, 164.0], [86.0, 164.0], [86.1, 164.0], [86.2, 164.0], [86.3, 164.0], [86.4, 164.0], [86.5, 164.0], [86.6, 164.0], [86.7, 164.0], [86.8, 164.0], [86.9, 164.0], [87.0, 164.0], [87.1, 164.0], [87.2, 164.0], [87.3, 165.0], [87.4, 165.0], [87.5, 165.0], [87.6, 165.0], [87.7, 165.0], [87.8, 165.0], [87.9, 165.0], [88.0, 165.0], [88.1, 165.0], [88.2, 165.0], [88.3, 165.0], [88.4, 165.0], [88.5, 165.0], [88.6, 165.0], [88.7, 165.0], [88.8, 165.0], [88.9, 166.0], [89.0, 166.0], [89.1, 166.0], [89.2, 166.0], [89.3, 166.0], [89.4, 166.0], [89.5, 166.0], [89.6, 166.0], [89.7, 166.0], [89.8, 166.0], [89.9, 166.0], [90.0, 166.0], [90.1, 166.0], [90.2, 166.0], [90.3, 166.0], [90.4, 166.0], [90.5, 166.0], [90.6, 167.0], [90.7, 167.0], [90.8, 167.0], [90.9, 167.0], [91.0, 167.0], [91.1, 167.0], [91.2, 167.0], [91.3, 167.0], [91.4, 167.0], [91.5, 167.0], [91.6, 167.0], [91.7, 167.0], [91.8, 167.0], [91.9, 167.0], [92.0, 167.0], [92.1, 167.0], [92.2, 167.0], [92.3, 168.0], [92.4, 168.0], [92.5, 168.0], [92.6, 168.0], [92.7, 168.0], [92.8, 169.0], [92.9, 169.0], [93.0, 169.0], [93.1, 169.0], [93.2, 169.0], [93.3, 169.0], [93.4, 169.0], [93.5, 169.0], [93.6, 169.0], [93.7, 169.0], [93.8, 169.0], [93.9, 170.0], [94.0, 170.0], [94.1, 170.0], [94.2, 170.0], [94.3, 170.0], [94.4, 170.0], [94.5, 171.0], [94.6, 171.0], [94.7, 171.0], [94.8, 171.0], [94.9, 171.0], [95.0, 171.0], [95.1, 172.0], [95.2, 172.0], [95.3, 172.0], [95.4, 172.0], [95.5, 172.0], [95.6, 174.0], [95.7, 174.0], [95.8, 174.0], [95.9, 174.0], [96.0, 174.0], [96.1, 174.0], [96.2, 174.0], [96.3, 174.0], [96.4, 174.0], [96.5, 174.0], [96.6, 174.0], [96.7, 174.0], [96.8, 174.0], [96.9, 174.0], [97.0, 174.0], [97.1, 174.0], [97.2, 174.0], [97.3, 175.0], [97.4, 175.0], [97.5, 175.0], [97.6, 175.0], [97.7, 175.0], [97.8, 182.0], [97.9, 182.0], [98.0, 182.0], [98.1, 182.0], [98.2, 182.0], [98.3, 182.0], [98.4, 192.0], [98.5, 192.0], [98.6, 192.0], [98.7, 192.0], [98.8, 192.0], [98.9, 242.0], [99.0, 242.0], [99.1, 242.0], [99.2, 242.0], [99.3, 242.0], [99.4, 242.0], [99.5, 604.0], [99.6, 604.0], [99.7, 604.0], [99.8, 604.0], [99.9, 604.0], [100.0, 604.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 3.0], [42.2, 3.0], [42.3, 3.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 3.0], [42.8, 3.0], [42.9, 3.0], [43.0, 3.0], [43.1, 3.0], [43.2, 3.0], [43.3, 3.0], [43.4, 3.0], [43.5, 3.0], [43.6, 3.0], [43.7, 3.0], [43.8, 3.0], [43.9, 3.0], [44.0, 3.0], [44.1, 3.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 4.0], [56.3, 4.0], [56.4, 4.0], [56.5, 4.0], [56.6, 4.0], [56.7, 4.0], [56.8, 4.0], [56.9, 4.0], [57.0, 4.0], [57.1, 4.0], [57.2, 4.0], [57.3, 4.0], [57.4, 5.0], [57.5, 5.0], [57.6, 5.0], [57.7, 5.0], [57.8, 5.0], [57.9, 6.0], [58.0, 6.0], [58.1, 7.0], [58.2, 8.0], [58.3, 10.0], [58.4, 19.0], [58.5, 22.0], [58.6, 24.0], [58.7, 26.0], [58.8, 27.0], [58.9, 28.0], [59.0, 30.0], [59.1, 31.0], [59.2, 32.0], [59.3, 33.0], [59.4, 35.0], [59.5, 36.0], [59.6, 39.0], [59.7, 42.0], [59.8, 45.0], [59.9, 50.0], [60.0, 57.0], [60.1, 71.0], [60.2, 91.0], [60.3, 113.0], [60.4, 127.0], [60.5, 145.0], [60.6, 165.0], [60.7, 187.0], [60.8, 206.0], [60.9, 224.0], [61.0, 247.0], [61.1, 278.0], [61.2, 316.0], [61.3, 369.0], [61.4, 401.0], [61.5, 430.0], [61.6, 464.0], [61.7, 494.0], [61.8, 518.0], [61.9, 550.0], [62.0, 582.0], [62.1, 610.0], [62.2, 632.0], [62.3, 663.0], [62.4, 701.0], [62.5, 722.0], [62.6, 749.0], [62.7, 772.0], [62.8, 789.0], [62.9, 801.0], [63.0, 829.0], [63.1, 858.0], [63.2, 877.0], [63.3, 898.0], [63.4, 922.0], [63.5, 941.0], [63.6, 961.0], [63.7, 979.0], [63.8, 996.0], [63.9, 1017.0], [64.0, 1035.0], [64.1, 1050.0], [64.2, 1068.0], [64.3, 1085.0], [64.4, 1105.0], [64.5, 1122.0], [64.6, 1140.0], [64.7, 1150.0], [64.8, 1164.0], [64.9, 1180.0], [65.0, 1200.0], [65.1, 1213.0], [65.2, 1223.0], [65.3, 1236.0], [65.4, 1251.0], [65.5, 1268.0], [65.6, 1285.0], [65.7, 1294.0], [65.8, 1310.0], [65.9, 1324.0], [66.0, 1334.0], [66.1, 1352.0], [66.2, 1367.0], [66.3, 1383.0], [66.4, 1403.0], [66.5, 1419.0], [66.6, 1429.0], [66.7, 1443.0], [66.8, 1457.0], [66.9, 1469.0], [67.0, 1486.0], [67.1, 1497.0], [67.2, 1515.0], [67.3, 1522.0], [67.4, 1538.0], [67.5, 1545.0], [67.6, 1558.0], [67.7, 1572.0], [67.8, 1581.0], [67.9, 1594.0], [68.0, 1604.0], [68.1, 1617.0], [68.2, 1641.0], [68.3, 1659.0], [68.4, 1670.0], [68.5, 1686.0], [68.6, 1697.0], [68.7, 1713.0], [68.8, 1728.0], [68.9, 1741.0], [69.0, 1750.0], [69.1, 1763.0], [69.2, 1780.0], [69.3, 1795.0], [69.4, 1811.0], [69.5, 1822.0], [69.6, 1841.0], [69.7, 1859.0], [69.8, 1867.0], [69.9, 1878.0], [70.0, 1897.0], [70.1, 1916.0], [70.2, 1935.0], [70.3, 1953.0], [70.4, 1972.0], [70.5, 1989.0], [70.6, 2009.0], [70.7, 2023.0], [70.8, 2046.0], [70.9, 2063.0], [71.0, 2081.0], [71.1, 2098.0], [71.2, 2114.0], [71.3, 2135.0], [71.4, 2160.0], [71.5, 2180.0], [71.6, 2199.0], [71.7, 2216.0], [71.8, 2230.0], [71.9, 2258.0], [72.0, 2277.0], [72.1, 2294.0], [72.2, 2313.0], [72.3, 2331.0], [72.4, 2348.0], [72.5, 2377.0], [72.6, 2400.0], [72.7, 2425.0], [72.8, 2440.0], [72.9, 2459.0], [73.0, 2474.0], [73.1, 2496.0], [73.2, 2521.0], [73.3, 2542.0], [73.4, 2564.0], [73.5, 2589.0], [73.6, 2621.0], [73.7, 2649.0], [73.8, 2666.0], [73.9, 2684.0], [74.0, 2702.0], [74.1, 2718.0], [74.2, 2736.0], [74.3, 2753.0], [74.4, 2767.0], [74.5, 2794.0], [74.6, 2809.0], [74.7, 2829.0], [74.8, 2848.0], [74.9, 2868.0], [75.0, 2878.0], [75.1, 2889.0], [75.2, 2904.0], [75.3, 2921.0], [75.4, 2937.0], [75.5, 2955.0], [75.6, 2974.0], [75.7, 2982.0], [75.8, 2997.0], [75.9, 3012.0], [76.0, 3023.0], [76.1, 3037.0], [76.2, 3047.0], [76.3, 3060.0], [76.4, 3073.0], [76.5, 3087.0], [76.6, 3094.0], [76.7, 3112.0], [76.8, 3129.0], [76.9, 3139.0], [77.0, 3150.0], [77.1, 3159.0], [77.2, 3165.0], [77.3, 3169.0], [77.4, 3178.0], [77.5, 3190.0], [77.6, 3201.0], [77.7, 3208.0], [77.8, 3216.0], [77.9, 3229.0], [78.0, 3236.0], [78.1, 3243.0], [78.2, 3251.0], [78.3, 3259.0], [78.4, 3268.0], [78.5, 3277.0], [78.6, 3283.0], [78.7, 3289.0], [78.8, 3296.0], [78.9, 3308.0], [79.0, 3317.0], [79.1, 3325.0], [79.2, 3330.0], [79.3, 3341.0], [79.4, 3349.0], [79.5, 3357.0], [79.6, 3363.0], [79.7, 3368.0], [79.8, 3373.0], [79.9, 3382.0], [80.0, 3394.0], [80.1, 3403.0], [80.2, 3411.0], [80.3, 3417.0], [80.4, 3423.0], [80.5, 3429.0], [80.6, 3437.0], [80.7, 3446.0], [80.8, 3451.0], [80.9, 3458.0], [81.0, 3464.0], [81.1, 3470.0], [81.2, 3477.0], [81.3, 3483.0], [81.4, 3492.0], [81.5, 3498.0], [81.6, 3508.0], [81.7, 3517.0], [81.8, 3522.0], [81.9, 3526.0], [82.0, 3533.0], [82.1, 3542.0], [82.2, 3550.0], [82.3, 3559.0], [82.4, 3564.0], [82.5, 3568.0], [82.6, 3575.0], [82.7, 3584.0], [82.8, 3589.0], [82.9, 3597.0], [83.0, 3604.0], [83.1, 3612.0], [83.2, 3620.0], [83.3, 3627.0], [83.4, 3633.0], [83.5, 3640.0], [83.6, 3643.0], [83.7, 3651.0], [83.8, 3656.0], [83.9, 3661.0], [84.0, 3669.0], [84.1, 3676.0], [84.2, 3687.0], [84.3, 3695.0], [84.4, 3703.0], [84.5, 3711.0], [84.6, 3718.0], [84.7, 3728.0], [84.8, 3735.0], [84.9, 3742.0], [85.0, 3750.0], [85.1, 3757.0], [85.2, 3764.0], [85.3, 3771.0], [85.4, 3778.0], [85.5, 3786.0], [85.6, 3793.0], [85.7, 3797.0], [85.8, 3805.0], [85.9, 3813.0], [86.0, 3820.0], [86.1, 3829.0], [86.2, 3839.0], [86.3, 3846.0], [86.4, 3856.0], [86.5, 3861.0], [86.6, 3871.0], [86.7, 3878.0], [86.8, 3886.0], [86.9, 3897.0], [87.0, 3903.0], [87.1, 3913.0], [87.2, 3920.0], [87.3, 3924.0], [87.4, 3930.0], [87.5, 3938.0], [87.6, 3946.0], [87.7, 3955.0], [87.8, 3962.0], [87.9, 3974.0], [88.0, 3985.0], [88.1, 3996.0], [88.2, 4008.0], [88.3, 4017.0], [88.4, 4028.0], [88.5, 4041.0], [88.6, 4053.0], [88.7, 4064.0], [88.8, 4073.0], [88.9, 4086.0], [89.0, 4098.0], [89.1, 4113.0], [89.2, 4123.0], [89.3, 4134.0], [89.4, 4144.0], [89.5, 4156.0], [89.6, 4172.0], [89.7, 4184.0], [89.8, 4199.0], [89.9, 4210.0], [90.0, 4228.0], [90.1, 4251.0], [90.2, 4263.0], [90.3, 4279.0], [90.4, 4293.0], [90.5, 4318.0], [90.6, 4338.0], [90.7, 4357.0], [90.8, 4374.0], [90.9, 4389.0], [91.0, 4410.0], [91.1, 4443.0], [91.2, 4464.0], [91.3, 4488.0], [91.4, 4502.0], [91.5, 4527.0], [91.6, 4544.0], [91.7, 4570.0], [91.8, 4595.0], [91.9, 4615.0], [92.0, 4633.0], [92.1, 4665.0], [92.2, 4686.0], [92.3, 4715.0], [92.4, 4741.0], [92.5, 4759.0], [92.6, 4789.0], [92.7, 4810.0], [92.8, 4826.0], [92.9, 4852.0], [93.0, 4868.0], [93.1, 4887.0], [93.2, 4902.0], [93.3, 4923.0], [93.4, 4937.0], [93.5, 4964.0], [93.6, 4988.0], [93.7, 5000.0], [93.8, 5027.0], [93.9, 5046.0], [94.0, 5063.0], [94.1, 5079.0], [94.2, 5097.0], [94.3, 5116.0], [94.4, 5139.0], [94.5, 5157.0], [94.6, 5175.0], [94.7, 5204.0], [94.8, 5232.0], [94.9, 5250.0], [95.0, 5274.0], [95.1, 5299.0], [95.2, 5322.0], [95.3, 5353.0], [95.4, 5370.0], [95.5, 5390.0], [95.6, 5415.0], [95.7, 5449.0], [95.8, 5473.0], [95.9, 5494.0], [96.0, 5521.0], [96.1, 5537.0], [96.2, 5552.0], [96.3, 5571.0], [96.4, 5588.0], [96.5, 5614.0], [96.6, 5642.0], [96.7, 5664.0], [96.8, 5686.0], [96.9, 5719.0], [97.0, 5757.0], [97.1, 5782.0], [97.2, 5810.0], [97.3, 5834.0], [97.4, 5871.0], [97.5, 5898.0], [97.6, 5938.0], [97.7, 5967.0], [97.8, 6001.0], [97.9, 6026.0], [98.0, 6076.0], [98.1, 6105.0], [98.2, 6142.0], [98.3, 6177.0], [98.4, 6233.0], [98.5, 6259.0], [98.6, 6285.0], [98.7, 6322.0], [98.8, 6360.0], [98.9, 6396.0], [99.0, 6447.0], [99.1, 6503.0], [99.2, 6558.0], [99.3, 6657.0], [99.4, 6797.0], [99.5, 6981.0], [99.6, 7145.0], [99.7, 7275.0], [99.8, 7658.0], [99.9, 7911.0], [100.0, 8937.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10908.0, "series": [{"data": [[0.0, 10908.0], [600.0, 80.0], [700.0, 81.0], [800.0, 78.0], [900.0, 73.0], [1000.0, 110.0], [1100.0, 117.0], [1200.0, 97.0], [1300.0, 125.0], [1400.0, 141.0], [1500.0, 149.0], [1600.0, 125.0], [1700.0, 130.0], [1800.0, 111.0], [1900.0, 96.0], [2000.0, 94.0], [2100.0, 86.0], [2300.0, 80.0], [2200.0, 83.0], [2400.0, 80.0], [2500.0, 80.0], [2600.0, 99.0], [2700.0, 78.0], [2800.0, 102.0], [2900.0, 97.0], [3000.0, 152.0], [3100.0, 190.0], [3200.0, 191.0], [3300.0, 219.0], [3400.0, 278.0], [3500.0, 268.0], [3600.0, 255.0], [3700.0, 238.0], [3800.0, 257.0], [3900.0, 207.0], [4000.0, 168.0], [4100.0, 126.0], [4200.0, 122.0], [4300.0, 86.0], [4500.0, 78.0], [4600.0, 74.0], [4400.0, 88.0], [4700.0, 87.0], [4800.0, 85.0], [4900.0, 79.0], [5000.0, 106.0], [5100.0, 86.0], [5200.0, 91.0], [5300.0, 94.0], [5400.0, 106.0], [5600.0, 66.0], [5500.0, 79.0], [5700.0, 69.0], [5800.0, 62.0], [5900.0, 50.0], [6100.0, 38.0], [6000.0, 40.0], [6200.0, 24.0], [6300.0, 16.0], [6400.0, 15.0], [6500.0, 20.0], [6600.0, 9.0], [6900.0, 9.0], [6700.0, 14.0], [6800.0, 8.0], [7000.0, 8.0], [7100.0, 11.0], [7200.0, 9.0], [7300.0, 13.0], [7400.0, 10.0], [7500.0, 5.0], [7600.0, 4.0], [7800.0, 6.0], [7700.0, 6.0], [7900.0, 6.0], [8100.0, 6.0], [8000.0, 6.0], [8200.0, 1.0], [8400.0, 3.0], [8300.0, 3.0], [8500.0, 1.0], [8800.0, 1.0], [9300.0, 1.0], [9900.0, 1.0], [100.0, 88.0], [200.0, 82.0], [300.0, 63.0], [400.0, 54.0], [500.0, 62.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[600.0, 1.0], [100.0, 178.0], [200.0, 1.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 10842.0], [600.0, 59.0], [700.0, 89.0], [800.0, 77.0], [900.0, 90.0], [1000.0, 98.0], [1100.0, 115.0], [1200.0, 132.0], [1300.0, 118.0], [1400.0, 130.0], [1500.0, 150.0], [1600.0, 122.0], [1700.0, 130.0], [1800.0, 123.0], [1900.0, 95.0], [2000.0, 101.0], [2100.0, 89.0], [2200.0, 95.0], [2300.0, 83.0], [2400.0, 93.0], [2500.0, 74.0], [2600.0, 83.0], [2700.0, 100.0], [2800.0, 112.0], [2900.0, 118.0], [3000.0, 146.0], [3100.0, 172.0], [3200.0, 223.0], [3300.0, 225.0], [3400.0, 260.0], [3500.0, 253.0], [3700.0, 247.0], [3600.0, 260.0], [3800.0, 218.0], [3900.0, 210.0], [4000.0, 162.0], [4100.0, 142.0], [4300.0, 91.0], [4200.0, 113.0], [4600.0, 75.0], [4500.0, 82.0], [4400.0, 77.0], [4700.0, 73.0], [4800.0, 96.0], [5100.0, 82.0], [5000.0, 95.0], [4900.0, 90.0], [5200.0, 78.0], [5300.0, 77.0], [5500.0, 98.0], [5400.0, 68.0], [5600.0, 67.0], [5800.0, 57.0], [5700.0, 65.0], [6000.0, 52.0], [5900.0, 53.0], [6100.0, 47.0], [6200.0, 53.0], [6300.0, 49.0], [6400.0, 31.0], [6500.0, 27.0], [6600.0, 19.0], [6900.0, 10.0], [6800.0, 9.0], [6700.0, 11.0], [7000.0, 10.0], [7100.0, 16.0], [7300.0, 5.0], [7200.0, 10.0], [7400.0, 4.0], [7500.0, 4.0], [7600.0, 6.0], [7900.0, 7.0], [7800.0, 9.0], [7700.0, 4.0], [8100.0, 4.0], [8000.0, 1.0], [8200.0, 2.0], [8400.0, 2.0], [8500.0, 3.0], [8700.0, 1.0], [8900.0, 1.0], [100.0, 95.0], [200.0, 72.0], [300.0, 43.0], [400.0, 58.0], [500.0, 62.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1328.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 21439.0, "series": [{"data": [[0.0, 1328.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1866.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 11547.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 21439.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.6, "minX": 1.58768682E12, "maxY": 180.0, "series": [{"data": [[1.58768718E12, 180.0], [1.58768748E12, 136.08599592114228], [1.58768682E12, 55.32658959537569], [1.58768712E12, 180.0], [1.58768742E12, 179.9685763888889], [1.58768706E12, 180.0], [1.58768736E12, 180.0], [1.587687E12, 180.0], [1.5876873E12, 180.0], [1.58768694E12, 180.0], [1.58768724E12, 180.0], [1.58768754E12, 2.6], [1.58768688E12, 156.18075232046894]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58768754E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.2857142857142856, "minX": 1.0, "maxY": 3778.5, "series": [{"data": [[2.0, 48.0], [4.0, 91.0], [7.0, 39.0], [9.0, 27.0], [10.0, 43.0], [11.0, 241.33333333333337], [12.0, 43.833333333333336], [13.0, 37.75], [15.0, 24.333333333333332], [17.0, 26.0], [18.0, 35.5], [19.0, 38.142857142857146], [20.0, 31.0], [21.0, 34.0], [22.0, 32.0], [23.0, 33.125], [24.0, 27.666666666666668], [25.0, 27.0], [26.0, 38.666666666666664], [27.0, 37.0], [28.0, 27.0], [29.0, 28.5], [30.0, 57.62499999999999], [31.0, 36.5], [32.0, 36.285714285714285], [33.0, 36.0], [34.0, 21.0], [35.0, 217.0], [36.0, 37.0], [37.0, 20.5], [38.0, 34.0], [39.0, 36.0], [40.0, 71.66666666666666], [41.0, 378.875], [42.0, 69.0], [43.0, 40.75], [44.0, 45.083333333333336], [45.0, 49.4], [46.0, 29.0], [47.0, 103.66666666666666], [48.0, 33.4], [49.0, 58.25], [50.0, 30.142857142857142], [51.0, 42.5], [52.0, 85.5], [53.0, 59.0], [54.0, 49.625], [55.0, 70.64705882352939], [56.0, 42.285714285714285], [57.0, 24.833333333333332], [58.0, 48.0], [59.0, 188.27272727272725], [60.0, 83.4], [61.0, 160.4], [62.0, 177.58333333333334], [63.0, 361.0], [64.0, 382.6666666666667], [65.0, 574.9230769230769], [66.0, 40.714285714285715], [67.0, 34.2], [68.0, 132.92857142857144], [69.0, 91.28571428571428], [70.0, 142.13333333333333], [71.0, 164.87500000000003], [72.0, 92.33333333333333], [73.0, 63.111111111111114], [74.0, 46.4], [75.0, 23.0], [76.0, 32.0], [77.0, 96.33333333333333], [78.0, 190.125], [79.0, 236.5], [80.0, 425.0], [81.0, 900.5714285714287], [82.0, 791.7], [83.0, 385.8518518518519], [84.0, 890.8], [85.0, 1020.5], [86.0, 923.0], [87.0, 603.2142857142858], [88.0, 493.18518518518505], [89.0, 1138.4285714285713], [91.0, 2063.0], [90.0, 424.1666666666667], [92.0, 952.6], [93.0, 1589.6999999999998], [94.0, 1277.7], [95.0, 1049.4545454545455], [96.0, 841.7142857142857], [97.0, 542.2857142857142], [98.0, 979.7], [99.0, 841.8235294117649], [100.0, 1258.1764705882356], [101.0, 1051.7857142857142], [102.0, 1089.9166666666665], [103.0, 1385.0769230769233], [104.0, 2297.9696969696965], [105.0, 3032.5], [106.0, 917.8], [107.0, 2991.6666666666665], [108.0, 1263.9999999999998], [109.0, 1749.2857142857142], [111.0, 2668.7555555555555], [110.0, 3778.5], [112.0, 914.5], [113.0, 1316.0], [114.0, 1345.9999999999995], [115.0, 1481.0], [116.0, 1272.0], [117.0, 1594.0769230769233], [118.0, 1528.3333333333335], [119.0, 135.57142857142856], [120.0, 541.0], [121.0, 224.9599999999999], [122.0, 428.0833333333333], [123.0, 1291.5555555555559], [124.0, 280.0], [125.0, 212.2142857142857], [126.0, 1774.0], [127.0, 129.70833333333334], [128.0, 703.8461538461538], [129.0, 444.0357142857141], [130.0, 958.8], [132.0, 1775.5], [133.0, 966.9090909090908], [134.0, 237.40000000000006], [135.0, 1023.1428571428571], [131.0, 1.3333333333333333], [136.0, 626.6060606060604], [137.0, 370.99999999999994], [138.0, 1395.1999999999998], [139.0, 1072.8], [140.0, 1763.8181818181818], [141.0, 292.0], [142.0, 938.1304347826086], [143.0, 178.25000000000003], [144.0, 622.1458333333334], [145.0, 325.94117647058823], [146.0, 590.5714285714286], [147.0, 907.0526315789474], [148.0, 1179.6153846153848], [150.0, 2168.625], [151.0, 280.57142857142856], [149.0, 122.20000000000002], [152.0, 2601.5], [153.0, 1767.0000000000002], [154.0, 726.4285714285716], [155.0, 1576.8333333333333], [156.0, 254.49090909090918], [157.0, 446.0], [158.0, 1457.7777777777776], [159.0, 891.8695652173913], [160.0, 285.7142857142857], [161.0, 998.0344827586207], [162.0, 702.1999999999999], [163.0, 975.3636363636363], [164.0, 754.1666666666667], [165.0, 497.3142857142856], [166.0, 165.26190476190476], [167.0, 455.8181818181819], [168.0, 1728.3684210526314], [169.0, 457.5555555555556], [171.0, 2775.6153846153843], [172.0, 527.3571428571428], [174.0, 1644.8461538461543], [175.0, 289.12643678160924], [173.0, 1.538461538461538], [170.0, 1.958333333333333], [176.0, 161.14999999999992], [177.0, 941.2631578947365], [178.0, 65.56790123456793], [179.0, 55.03673469387757], [180.0, 1394.6673049917058], [1.0, 54.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[173.10166666666663, 1286.7444444444438]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[2.0, 175.0], [3.0, 150.0], [4.0, 158.0], [5.0, 167.0], [6.0, 152.0], [7.0, 149.0], [8.0, 160.0], [9.0, 157.0], [10.0, 154.0], [11.0, 153.0], [12.0, 167.0], [13.0, 162.0], [14.0, 168.0], [15.0, 163.0], [16.0, 161.0], [17.0, 150.0], [18.0, 149.0], [19.0, 155.0], [20.0, 152.0], [21.0, 148.0], [22.0, 161.0], [23.0, 146.0], [24.0, 174.0], [25.0, 145.0], [26.0, 155.0], [27.0, 158.0], [28.0, 150.0], [29.0, 152.0], [30.0, 145.0], [31.0, 154.0], [32.0, 163.0], [33.0, 159.0], [34.0, 159.0], [35.0, 148.0], [36.0, 157.0], [37.0, 158.0], [38.0, 161.0], [39.0, 147.0], [41.0, 388.0], [42.0, 149.0], [43.0, 151.0], [44.0, 242.0], [45.0, 163.0], [46.0, 157.0], [47.0, 158.0], [48.0, 158.0], [49.0, 174.0], [50.0, 151.0], [51.0, 153.0], [52.0, 156.0], [53.0, 170.0], [54.0, 149.0], [55.0, 149.0], [56.0, 163.0], [57.0, 162.0], [58.0, 155.0], [59.0, 148.0], [60.0, 145.0], [61.0, 164.0], [62.0, 147.0], [63.0, 156.0], [64.0, 146.0], [65.0, 148.0], [66.0, 148.0], [67.0, 147.0], [68.0, 174.0], [69.0, 146.0], [70.0, 147.0], [71.0, 162.0], [72.0, 155.0], [73.0, 159.0], [74.0, 169.0], [75.0, 153.0], [76.0, 149.0], [77.0, 153.0], [78.0, 148.0], [79.0, 171.0], [80.0, 162.0], [81.0, 154.0], [82.0, 166.0], [83.0, 148.0], [84.0, 152.0], [85.0, 161.0], [86.0, 159.0], [87.0, 154.0], [88.0, 167.0], [89.0, 162.0], [90.0, 155.0], [91.0, 147.0], [92.0, 147.0], [93.0, 156.0], [94.0, 150.0], [95.0, 151.0], [96.0, 159.0], [97.0, 154.0], [98.0, 166.0], [99.0, 153.0], [100.0, 147.0], [101.0, 159.0], [102.0, 149.0], [103.0, 147.0], [104.0, 152.0], [105.0, 144.0], [106.0, 147.0], [107.0, 155.0], [108.0, 149.0], [109.0, 150.0], [110.0, 152.0], [111.0, 143.0], [112.0, 152.0], [113.0, 165.0], [114.0, 140.0], [115.0, 142.0], [116.0, 156.0], [117.0, 140.0], [118.0, 141.0], [119.0, 162.0], [120.0, 145.0], [121.0, 192.0], [122.0, 147.0], [123.0, 162.0], [124.0, 161.0], [125.0, 164.0], [126.0, 154.0], [127.0, 153.0], [128.0, 161.0], [129.0, 151.0], [130.0, 152.0], [131.0, 149.0], [132.0, 158.0], [133.0, 156.0], [134.0, 160.0], [135.0, 155.0], [136.0, 152.0], [137.0, 157.0], [138.0, 164.0], [139.0, 154.0], [140.0, 152.0], [141.0, 150.0], [142.0, 156.0], [143.0, 148.0], [144.0, 159.0], [145.0, 152.0], [146.0, 152.0], [147.0, 153.0], [148.0, 156.0], [149.0, 148.0], [150.0, 151.0], [151.0, 153.0], [152.0, 149.0], [153.0, 155.0], [154.0, 154.0], [155.0, 151.0], [156.0, 155.0], [157.0, 153.0], [158.0, 166.0], [159.0, 153.0], [160.0, 148.0], [161.0, 163.0], [162.0, 150.0], [163.0, 160.0], [164.0, 152.0], [165.0, 155.0], [166.0, 165.0], [167.0, 153.0], [168.0, 154.0], [169.0, 148.0], [170.0, 154.0], [171.0, 148.0], [172.0, 148.0], [173.0, 157.0], [174.0, 161.0], [175.0, 162.0], [176.0, 157.0], [177.0, 148.0], [178.0, 169.0], [179.0, 154.0], [180.0, 165.0], [1.0, 182.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[90.50555555555563, 158.29999999999987]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[2.0, 60.0], [4.0, 123.0], [5.0, 44.0], [6.0, 37.5], [7.0, 34.0], [9.0, 33.5], [11.0, 68.71428571428571], [12.0, 42.14285714285714], [13.0, 33.333333333333336], [14.0, 32.0], [15.0, 31.0], [16.0, 30.0], [17.0, 27.0], [18.0, 30.0], [19.0, 38.8], [20.0, 27.5], [21.0, 28.333333333333332], [22.0, 39.5], [23.0, 34.333333333333336], [24.0, 38.0], [25.0, 36.0], [26.0, 32.5], [27.0, 32.0], [28.0, 35.2], [29.0, 41.75], [30.0, 43.25], [31.0, 38.5], [32.0, 37.666666666666664], [33.0, 36.333333333333336], [34.0, 40.0], [35.0, 196.66666666666666], [36.0, 148.71428571428572], [37.0, 105.75], [38.0, 184.33333333333334], [39.0, 30.4], [40.0, 29.5], [41.0, 386.6666666666667], [42.0, 38.0], [43.0, 46.42857142857143], [44.0, 76.28571428571429], [45.0, 61.0], [46.0, 36.75], [47.0, 111.875], [48.0, 50.25], [49.0, 28.71428571428571], [50.0, 37.4], [51.0, 37.83333333333333], [52.0, 79.77777777777777], [53.0, 45.33333333333333], [54.0, 77.54545454545455], [55.0, 77.25], [56.0, 34.833333333333336], [57.0, 49.0], [58.0, 45.63636363636363], [59.0, 150.95238095238093], [60.0, 68.75], [61.0, 207.0], [62.0, 207.0], [63.0, 445.75], [64.0, 537.0], [65.0, 602.0], [66.0, 40.57142857142857], [67.0, 32.25], [68.0, 127.66666666666667], [69.0, 150.42857142857144], [70.0, 233.27272727272728], [71.0, 122.71428571428571], [72.0, 73.3], [73.0, 46.294117647058826], [74.0, 86.8], [75.0, 28.2], [76.0, 53.5], [77.0, 70.8], [78.0, 196.52941176470588], [79.0, 344.4166666666667], [81.0, 987.8333333333333], [82.0, 1014.1818181818182], [83.0, 233.9], [80.0, 482.0], [84.0, 773.0], [85.0, 1018.2500000000001], [86.0, 1050.5], [87.0, 324.9444444444444], [88.0, 439.5199999999999], [89.0, 755.2941176470589], [91.0, 1241.0], [90.0, 523.6], [92.0, 542.2222222222222], [93.0, 1055.6000000000001], [94.0, 1394.5999999999997], [95.0, 973.0], [96.0, 805.9444444444446], [97.0, 462.2222222222222], [98.0, 870.6666666666666], [99.0, 1085.2857142857142], [100.0, 1324.7142857142856], [101.0, 1297.1666666666667], [102.0, 1126.1], [103.0, 1151.3999999999999], [104.0, 3152.75], [105.0, 2171.5882352941176], [106.0, 1079.4545454545453], [107.0, 3671.3], [108.0, 1218.230769230769], [109.0, 1908.4166666666667], [110.0, 2634.5], [111.0, 2441.9523809523807], [113.0, 1616.5], [114.0, 1550.0], [115.0, 1122.6666666666667], [116.0, 1940.6], [117.0, 1668.5714285714287], [118.0, 1046.142857142857], [119.0, 289.2], [120.0, 345.909090909091], [121.0, 204.48148148148152], [122.0, 197.33333333333331], [123.0, 1152.75], [124.0, 441.84615384615387], [125.0, 245.79999999999995], [126.0, 965.357142857143], [127.0, 94.67999999999999], [128.0, 1007.076923076923], [129.0, 284.47368421052624], [130.0, 990.0909090909092], [131.0, 555.5555555555555], [132.0, 1842.857142857143], [133.0, 762.7777777777777], [134.0, 177.70588235294125], [135.0, 853.5], [136.0, 537.5263157894735], [137.0, 668.4545454545454], [138.0, 1237.8], [139.0, 1987.0], [140.0, 984.6666666666666], [142.0, 1021.0714285714283], [143.0, 578.4999999999999], [141.0, 2.0], [144.0, 501.0000000000001], [145.0, 677.4444444444443], [146.0, 498.75862068965506], [147.0, 676.4230769230772], [148.0, 1436.1999999999998], [150.0, 2529.25], [151.0, 1246.4285714285716], [149.0, 1.2857142857142856], [152.0, 2227.272727272727], [153.0, 1972.4444444444441], [154.0, 1752.2499999999998], [155.0, 849.6], [156.0, 106.36170212765963], [157.0, 462.6874999999999], [158.0, 1498.1999999999998], [159.0, 793.6969696969695], [160.0, 133.68571428571428], [161.0, 1937.2272727272732], [163.0, 1545.2500000000002], [164.0, 852.8333333333333], [165.0, 547.8666666666663], [166.0, 730.5999999999999], [167.0, 302.41666666666674], [162.0, 2.0], [168.0, 1218.1764705882354], [169.0, 343.3709677419354], [171.0, 1303.0], [172.0, 821.3529411764707], [173.0, 192.83870967741936], [174.0, 2505.8571428571427], [175.0, 331.9789473684209], [170.0, 2.3846153846153846], [176.0, 648.9230769230769], [177.0, 1386.583333333333], [178.0, 111.89062500000003], [179.0, 145.0968992248063], [180.0, 1412.431976484137]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[173.0546666666666, 1306.8996666666712]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 180.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 35.766666666666666, "minX": 1.58768682E12, "maxY": 244736.78333333333, "series": [{"data": [[1.58768718E12, 130777.83333333333], [1.58768748E12, 96140.31666666667], [1.58768682E12, 71995.71666666666], [1.58768712E12, 220422.95], [1.58768742E12, 15264.0], [1.58768706E12, 239793.06666666668], [1.58768736E12, 130788.66666666667], [1.587687E12, 244736.78333333333], [1.5876873E12, 218864.91666666666], [1.58768694E12, 145802.63333333333], [1.58768724E12, 15022.85], [1.58768754E12, 579.6833333333333], [1.58768688E12, 222236.93333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58768718E12, 27356.066666666666], [1.58768748E12, 21036.233333333334], [1.58768682E12, 4649.033333333334], [1.58768712E12, 14257.2], [1.58768742E12, 41184.066666666666], [1.58768706E12, 14807.433333333332], [1.58768736E12, 27413.366666666665], [1.587687E12, 16180.333333333334], [1.5876873E12, 13477.733333333334], [1.58768694E12, 22823.166666666668], [1.58768724E12, 40533.166666666664], [1.58768754E12, 35.766666666666666], [1.58768688E12, 14330.433333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58768754E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.7755390597384217, "minX": 1.58768682E12, "maxY": 3785.9936373276787, "series": [{"data": [[1.58768718E12, 1028.9405630865483], [1.58768748E12, 222.160773849233], [1.58768682E12, 255.71378091872796], [1.58768712E12, 3517.2959999999994], [1.58768742E12, 2.0961138098542667], [1.58768706E12, 3314.584062196306], [1.58768736E12, 1033.5355844155824], [1.587687E12, 2856.3209219858177], [1.5876873E12, 3755.1210191082837], [1.58768694E12, 1469.452395768513], [1.58768724E12, 1.7755390597384217], [1.58768754E12, 64.33333333333333], [1.58768688E12, 2861.807329842932]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58768682E12, 162.69662921348313], [1.58768688E12, 154.00000000000003]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58768718E12, 1022.3951781970642], [1.58768748E12, 252.5336105336106], [1.58768682E12, 250.2968749999999], [1.58768712E12, 3600.641851106642], [1.58768742E12, 2.2407922168172307], [1.58768706E12, 3391.385796545105], [1.58768736E12, 1045.8585646935564], [1.587687E12, 3071.0616740088135], [1.5876873E12, 3785.9936373276787], [1.58768694E12, 1440.9810725552022], [1.58768724E12, 2.305633802816895], [1.58768754E12, 91.5], [1.58768688E12, 2663.9110889110866]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58768754E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1.771297278190174, "minX": 1.58768682E12, "maxY": 3785.059384941672, "series": [{"data": [[1.58768718E12, 1028.8905109489085], [1.58768748E12, 221.80253502334875], [1.58768682E12, 255.06007067137813], [1.58768712E12, 3516.9899999999984], [1.58768742E12, 2.0909090909090913], [1.58768706E12, 3314.026239067057], [1.58768736E12, 1033.4924675324694], [1.587687E12, 2855.480496453897], [1.5876873E12, 3754.72186836518], [1.58768694E12, 1469.1462352209055], [1.58768724E12, 1.771297278190174], [1.58768754E12, 64.33333333333333], [1.58768688E12, 2861.4900523560186]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58768682E12, 162.57303370786516], [1.58768688E12, 154.00000000000003]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58768718E12, 1022.3522012578634], [1.58768748E12, 251.9431739431741], [1.58768682E12, 249.74062499999997], [1.58768712E12, 3600.354124748493], [1.58768742E12, 2.23627519110493], [1.58768706E12, 3390.575815738965], [1.58768736E12, 1045.731272917757], [1.587687E12, 3070.4035242290824], [1.5876873E12, 3785.059384941672], [1.58768694E12, 1440.812618296529], [1.58768724E12, 2.2971830985915513], [1.58768754E12, 90.0], [1.58768688E12, 2663.566433566432]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58768754E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.58768682E12, "maxY": 1.033707865168539, "series": [{"data": [[1.58768718E12, 0.16058394160583955], [1.58768748E12, 0.02401601067378252], [1.58768682E12, 0.24734982332155483], [1.58768712E12, 0.44800000000000006], [1.58768742E12, 0.0], [1.58768706E12, 0.4344023323615164], [1.58768736E12, 0.1355844155844158], [1.587687E12, 0.41223404255319124], [1.5876873E12, 0.40127388535031866], [1.58768694E12, 0.21406347230864983], [1.58768724E12, 0.0], [1.58768754E12, 0.0], [1.58768688E12, 0.510994764397906]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58768682E12, 1.033707865168539], [1.58768688E12, 0.5494505494505492]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58768718E12, 0.4386792452830184], [1.58768748E12, 0.42273042273042294], [1.58768682E12, 0.5562499999999995], [1.58768712E12, 0.42454728370221295], [1.58768742E12, 0.382209867963863], [1.58768706E12, 0.4366602687140114], [1.58768736E12, 0.4038763750654797], [1.587687E12, 0.49779735682819387], [1.5876873E12, 0.4687168610816542], [1.58768694E12, 0.5217665615141968], [1.58768724E12, 0.43274647887323886], [1.58768754E12, 1.0], [1.58768688E12, 0.5304695304695298]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58768754E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 17.0, "minX": 1.58768682E12, "maxY": 9989.0, "series": [{"data": [[1.58768718E12, 4454.0], [1.587687E12, 6580.0], [1.58768748E12, 4502.0], [1.58768682E12, 2828.0], [1.5876873E12, 6854.0], [1.58768712E12, 9989.0], [1.58768694E12, 6596.0], [1.58768706E12, 8708.0], [1.58768754E12, 123.0], [1.58768688E12, 8937.0], [1.58768736E12, 4994.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58768718E12, 2741.0], [1.587687E12, 31.0], [1.58768748E12, 22.0], [1.58768682E12, 17.0], [1.5876873E12, 2213.0], [1.58768712E12, 401.0], [1.58768694E12, 543.0], [1.58768706E12, 37.0], [1.58768754E12, 48.0], [1.58768688E12, 59.0], [1.58768736E12, 2594.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58768718E12, 3984.2], [1.587687E12, 5368.5], [1.58768748E12, 3229.0], [1.58768682E12, 696.7000000000005], [1.5876873E12, 4472.0], [1.58768712E12, 5889.5], [1.58768694E12, 5790.3], [1.58768706E12, 5867.4], [1.58768754E12, 123.0], [1.58768688E12, 5647.8], [1.58768736E12, 4184.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58768718E12, 4267.759999999998], [1.587687E12, 6316.879999999999], [1.58768748E12, 4132.400000000001], [1.58768682E12, 2360.730000000007], [1.5876873E12, 6446.42], [1.58768712E12, 7239.9], [1.58768694E12, 6201.470000000001], [1.58768706E12, 7775.439999999995], [1.58768754E12, 123.0], [1.58768688E12, 8022.6799999999985], [1.58768736E12, 4573.199999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58768718E12, 4111.4], [1.587687E12, 5756.499999999999], [1.58768748E12, 3860.0], [1.58768682E12, 1234.4], [1.5876873E12, 5523.599999999997], [1.58768712E12, 6465.0], [1.58768694E12, 5953.55], [1.58768706E12, 6334.599999999993], [1.58768754E12, 123.0], [1.58768688E12, 7066.099999999998], [1.58768736E12, 4359.6]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58768754E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 4239.0, "series": [{"data": [[2.0, 54.0], [3.0, 175.0], [5.0, 43.0], [6.0, 42.5], [7.0, 50.0], [8.0, 39.0], [10.0, 32.5], [11.0, 30.0], [12.0, 34.0], [13.0, 59.0], [14.0, 150.0], [15.0, 53.0], [16.0, 2624.0], [17.0, 45.0], [18.0, 31.5], [19.0, 147.0], [20.0, 2340.5], [21.0, 3210.0], [22.0, 3581.0], [23.0, 2197.0], [24.0, 2411.0], [25.0, 3248.0], [26.0, 3622.5], [27.0, 3776.0], [28.0, 3712.5], [29.0, 3461.0], [30.0, 3530.0], [31.0, 3659.0], [33.0, 3207.5], [32.0, 3446.5], [35.0, 3471.0], [34.0, 3442.5], [37.0, 3505.0], [36.0, 3542.5], [39.0, 3241.0], [38.0, 2814.0], [40.0, 3229.0], [41.0, 3229.5], [42.0, 3499.5], [43.0, 3269.0], [44.0, 2667.5], [45.0, 2486.5], [47.0, 3313.0], [46.0, 4068.5], [49.0, 1392.0], [51.0, 2346.0], [50.0, 2672.0], [55.0, 2448.0], [54.0, 3279.0], [57.0, 2633.0], [59.0, 4076.0], [61.0, 3473.0], [66.0, 3531.0], [69.0, 2603.0], [70.0, 3981.5], [73.0, 4239.0], [81.0, 2525.0], [82.0, 3965.5], [103.0, 3867.0], [107.0, 4235.0], [146.0, 1514.0], [1.0, 54.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[21.0, 2.0], [22.0, 3.5], [28.0, 2.0], [29.0, 2.0], [30.0, 3.0], [31.0, 2.0], [33.0, 3.5], [35.0, 3.0], [36.0, 2.0], [37.0, 2.0], [38.0, 2.0], [39.0, 2.0], [40.0, 3.0], [41.0, 2.0], [43.0, 8.0], [42.0, 25.5], [45.0, 2.0], [44.0, 2.5], [47.0, 1191.0], [55.0, 2.0], [54.0, 2.0], [57.0, 2.0], [59.0, 2.0], [61.0, 2.0], [62.0, 2.0], [66.0, 2.0], [67.0, 2.0], [65.0, 2.0], [69.0, 2775.5], [70.0, 1045.0], [71.0, 2.0], [73.0, 2.0], [74.0, 2.0], [75.0, 2.0], [72.0, 2.0], [79.0, 2.0], [78.0, 2.0], [82.0, 2.0], [83.0, 2.0], [81.0, 2.0], [80.0, 2.0], [86.0, 2.0], [87.0, 2.0], [85.0, 2.0], [84.0, 2.0], [90.0, 2.0], [89.0, 2.0], [91.0, 2.0], [88.0, 2.0], [92.0, 2.0], [95.0, 2.0], [93.0, 2.0], [94.0, 2.0], [98.0, 2.0], [96.0, 2.0], [99.0, 2.0], [97.0, 2.0], [103.0, 2.0], [102.0, 2.0], [101.0, 2.0], [100.0, 2.0], [106.0, 2.0], [105.0, 2.0], [104.0, 2.0], [107.0, 2.0], [109.0, 2.0], [108.0, 2.0], [110.0, 2.0], [111.0, 2.0], [113.0, 2.0], [112.0, 2.0], [115.0, 2.0], [116.0, 2.0], [120.0, 2.0], [146.0, 1680.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 146.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 4239.0, "series": [{"data": [[2.0, 53.5], [3.0, 175.0], [5.0, 43.0], [6.0, 42.5], [7.0, 50.0], [8.0, 38.5], [10.0, 32.5], [11.0, 30.0], [12.0, 34.0], [13.0, 59.0], [14.0, 150.0], [15.0, 53.0], [16.0, 2618.5], [17.0, 44.0], [18.0, 31.0], [19.0, 147.0], [20.0, 2340.5], [21.0, 3210.0], [22.0, 3581.0], [23.0, 2197.0], [24.0, 2411.0], [25.0, 3248.0], [26.0, 3622.5], [27.0, 3776.0], [28.0, 3712.5], [29.0, 3461.0], [30.0, 3530.0], [31.0, 3659.0], [33.0, 3207.5], [32.0, 3446.5], [35.0, 3471.0], [34.0, 3442.5], [37.0, 3505.0], [36.0, 3542.5], [39.0, 3241.0], [38.0, 2813.5], [40.0, 3229.0], [41.0, 3229.5], [42.0, 3499.5], [43.0, 3269.0], [44.0, 2665.5], [45.0, 2486.5], [47.0, 3313.0], [46.0, 4068.5], [49.0, 1392.0], [51.0, 2346.0], [50.0, 2672.0], [55.0, 2448.0], [54.0, 3279.0], [57.0, 2633.0], [59.0, 4076.0], [61.0, 3473.0], [66.0, 3531.0], [69.0, 2603.0], [70.0, 3981.5], [73.0, 4239.0], [81.0, 2525.0], [82.0, 3965.0], [103.0, 3866.0], [107.0, 4222.0], [146.0, 1514.0], [1.0, 54.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[21.0, 2.0], [22.0, 3.5], [28.0, 2.0], [29.0, 2.0], [30.0, 3.0], [31.0, 2.0], [33.0, 3.5], [35.0, 3.0], [36.0, 2.0], [37.0, 2.0], [38.0, 2.0], [39.0, 2.0], [40.0, 3.0], [41.0, 2.0], [43.0, 8.0], [42.0, 25.5], [45.0, 2.0], [44.0, 2.5], [47.0, 1191.0], [55.0, 2.0], [54.0, 2.0], [57.0, 2.0], [59.0, 2.0], [61.0, 2.0], [62.0, 2.0], [66.0, 2.0], [67.0, 2.0], [65.0, 2.0], [69.0, 2775.5], [70.0, 1045.0], [71.0, 2.0], [73.0, 2.0], [74.0, 2.0], [75.0, 2.0], [72.0, 2.0], [79.0, 2.0], [78.0, 2.0], [82.0, 2.0], [83.0, 2.0], [81.0, 2.0], [80.0, 2.0], [86.0, 2.0], [87.0, 2.0], [85.0, 2.0], [84.0, 2.0], [90.0, 2.0], [89.0, 2.0], [91.0, 2.0], [88.0, 2.0], [92.0, 2.0], [95.0, 2.0], [93.0, 2.0], [94.0, 2.0], [98.0, 2.0], [96.0, 2.0], [99.0, 2.0], [97.0, 2.0], [103.0, 2.0], [102.0, 2.0], [101.0, 2.0], [100.0, 2.0], [106.0, 2.0], [105.0, 2.0], [104.0, 2.0], [107.0, 2.0], [109.0, 2.0], [108.0, 2.0], [110.0, 2.0], [111.0, 2.0], [113.0, 2.0], [112.0, 2.0], [115.0, 2.0], [116.0, 2.0], [120.0, 2.0], [146.0, 1680.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 146.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.58768682E12, "maxY": 96.46666666666667, "series": [{"data": [[1.58768718E12, 61.766666666666666], [1.58768748E12, 49.03333333333333], [1.58768682E12, 12.0], [1.58768712E12, 33.3], [1.58768742E12, 96.0], [1.58768706E12, 34.5], [1.58768736E12, 61.95], [1.587687E12, 37.06666666666667], [1.5876873E12, 31.383333333333333], [1.58768694E12, 53.916666666666664], [1.58768724E12, 96.46666666666667], [1.58768754E12, 0.08333333333333333], [1.58768688E12, 35.53333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58768754E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.58768682E12, "maxY": 96.0, "series": [{"data": [[1.58768718E12, 17.716666666666665], [1.587687E12, 35.03333333333333], [1.58768748E12, 12.983333333333333], [1.58768682E12, 11.533333333333333], [1.5876873E12, 31.416666666666668], [1.58768712E12, 31.566666666666666], [1.58768694E12, 20.133333333333333], [1.58768706E12, 34.416666666666664], [1.58768754E12, 0.08333333333333333], [1.58768688E12, 33.083333333333336], [1.58768736E12, 17.716666666666665]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58768712E12, 0.06666666666666667]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.58768718E12, 46.05], [1.587687E12, 2.683333333333333], [1.58768748E12, 36.05], [1.58768712E12, 1.6], [1.58768694E12, 33.06666666666667], [1.58768742E12, 96.0], [1.58768724E12, 94.48333333333333], [1.58768706E12, 0.1], [1.58768688E12, 1.0333333333333334], [1.58768736E12, 46.18333333333333]], "isOverall": false, "label": "503", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58768754E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.58768682E12, "maxY": 48.03333333333333, "series": [{"data": [[1.58768682E12, 1.4833333333333334], [1.58768688E12, 1.5166666666666666]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58768718E12, 8.85], [1.587687E12, 17.3], [1.58768748E12, 6.816666666666666], [1.58768682E12, 4.716666666666667], [1.5876873E12, 15.7], [1.58768712E12, 15.683333333333334], [1.58768694E12, 10.133333333333333], [1.58768706E12, 17.116666666666667], [1.58768754E12, 0.05], [1.58768688E12, 15.383333333333333], [1.58768736E12, 8.883333333333333]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.58768718E12, 23.116666666666667], [1.587687E12, 1.5], [1.58768748E12, 18.166666666666668], [1.58768712E12, 0.9833333333333333], [1.58768694E12, 16.65], [1.58768742E12, 48.03333333333333], [1.58768724E12, 47.15], [1.58768706E12, 0.03333333333333333], [1.58768688E12, 0.5333333333333333], [1.58768736E12, 23.2]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58768718E12, 8.866666666666667], [1.587687E12, 17.733333333333334], [1.58768748E12, 6.166666666666667], [1.58768682E12, 5.333333333333333], [1.5876873E12, 15.716666666666667], [1.58768712E12, 15.883333333333333], [1.58768694E12, 10.0], [1.58768706E12, 17.3], [1.58768754E12, 0.03333333333333333], [1.58768688E12, 16.183333333333334], [1.58768736E12, 8.833333333333334]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.58768718E12, 22.933333333333334], [1.587687E12, 1.1833333333333333], [1.58768748E12, 17.883333333333333], [1.58768712E12, 0.6833333333333333], [1.58768694E12, 16.416666666666668], [1.58768742E12, 47.96666666666667], [1.58768724E12, 47.333333333333336], [1.58768706E12, 0.06666666666666667], [1.58768688E12, 0.5], [1.58768736E12, 22.983333333333334]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58768754E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.58768682E12, "maxY": 96.0, "series": [{"data": [[1.58768718E12, 17.716666666666665], [1.587687E12, 35.03333333333333], [1.58768748E12, 12.983333333333333], [1.58768682E12, 11.533333333333333], [1.5876873E12, 31.416666666666668], [1.58768712E12, 31.566666666666666], [1.58768694E12, 20.133333333333333], [1.58768706E12, 34.416666666666664], [1.58768754E12, 0.08333333333333333], [1.58768688E12, 33.083333333333336], [1.58768736E12, 17.716666666666665]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58768718E12, 46.05], [1.587687E12, 2.683333333333333], [1.58768748E12, 36.05], [1.58768712E12, 1.6666666666666667], [1.58768694E12, 33.06666666666667], [1.58768742E12, 96.0], [1.58768724E12, 94.48333333333333], [1.58768706E12, 0.1], [1.58768688E12, 1.0333333333333334], [1.58768736E12, 46.18333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58768754E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

