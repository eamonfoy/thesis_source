/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 8.0, "minX": 0.0, "maxY": 4435.0, "series": [{"data": [[0.0, 8.0], [0.1, 13.0], [0.2, 14.0], [0.3, 15.0], [0.4, 15.0], [0.5, 16.0], [0.6, 16.0], [0.7, 16.0], [0.8, 16.0], [0.9, 17.0], [1.0, 17.0], [1.1, 17.0], [1.2, 17.0], [1.3, 18.0], [1.4, 18.0], [1.5, 18.0], [1.6, 18.0], [1.7, 19.0], [1.8, 19.0], [1.9, 19.0], [2.0, 19.0], [2.1, 19.0], [2.2, 20.0], [2.3, 20.0], [2.4, 20.0], [2.5, 20.0], [2.6, 20.0], [2.7, 20.0], [2.8, 20.0], [2.9, 20.0], [3.0, 21.0], [3.1, 21.0], [3.2, 21.0], [3.3, 21.0], [3.4, 21.0], [3.5, 21.0], [3.6, 21.0], [3.7, 22.0], [3.8, 22.0], [3.9, 22.0], [4.0, 22.0], [4.1, 22.0], [4.2, 22.0], [4.3, 22.0], [4.4, 23.0], [4.5, 23.0], [4.6, 23.0], [4.7, 23.0], [4.8, 23.0], [4.9, 23.0], [5.0, 23.0], [5.1, 24.0], [5.2, 24.0], [5.3, 24.0], [5.4, 24.0], [5.5, 24.0], [5.6, 24.0], [5.7, 24.0], [5.8, 24.0], [5.9, 25.0], [6.0, 25.0], [6.1, 25.0], [6.2, 25.0], [6.3, 25.0], [6.4, 25.0], [6.5, 26.0], [6.6, 26.0], [6.7, 26.0], [6.8, 26.0], [6.9, 26.0], [7.0, 26.0], [7.1, 26.0], [7.2, 27.0], [7.3, 27.0], [7.4, 27.0], [7.5, 27.0], [7.6, 27.0], [7.7, 27.0], [7.8, 27.0], [7.9, 28.0], [8.0, 28.0], [8.1, 28.0], [8.2, 28.0], [8.3, 28.0], [8.4, 28.0], [8.5, 29.0], [8.6, 29.0], [8.7, 29.0], [8.8, 29.0], [8.9, 29.0], [9.0, 29.0], [9.1, 30.0], [9.2, 30.0], [9.3, 30.0], [9.4, 30.0], [9.5, 30.0], [9.6, 30.0], [9.7, 31.0], [9.8, 31.0], [9.9, 31.0], [10.0, 31.0], [10.1, 32.0], [10.2, 32.0], [10.3, 32.0], [10.4, 32.0], [10.5, 33.0], [10.6, 33.0], [10.7, 33.0], [10.8, 34.0], [10.9, 34.0], [11.0, 34.0], [11.1, 34.0], [11.2, 35.0], [11.3, 35.0], [11.4, 36.0], [11.5, 36.0], [11.6, 37.0], [11.7, 37.0], [11.8, 38.0], [11.9, 39.0], [12.0, 40.0], [12.1, 40.0], [12.2, 42.0], [12.3, 44.0], [12.4, 45.0], [12.5, 48.0], [12.6, 51.0], [12.7, 55.0], [12.8, 63.0], [12.9, 87.0], [13.0, 110.0], [13.1, 128.0], [13.2, 135.0], [13.3, 149.0], [13.4, 173.0], [13.5, 187.0], [13.6, 201.0], [13.7, 218.0], [13.8, 230.0], [13.9, 237.0], [14.0, 244.0], [14.1, 251.0], [14.2, 258.0], [14.3, 270.0], [14.4, 284.0], [14.5, 300.0], [14.6, 308.0], [14.7, 313.0], [14.8, 319.0], [14.9, 325.0], [15.0, 331.0], [15.1, 334.0], [15.2, 339.0], [15.3, 345.0], [15.4, 352.0], [15.5, 357.0], [15.6, 361.0], [15.7, 367.0], [15.8, 371.0], [15.9, 375.0], [16.0, 380.0], [16.1, 385.0], [16.2, 390.0], [16.3, 394.0], [16.4, 398.0], [16.5, 401.0], [16.6, 407.0], [16.7, 409.0], [16.8, 414.0], [16.9, 418.0], [17.0, 422.0], [17.1, 425.0], [17.2, 429.0], [17.3, 431.0], [17.4, 435.0], [17.5, 436.0], [17.6, 438.0], [17.7, 441.0], [17.8, 444.0], [17.9, 445.0], [18.0, 449.0], [18.1, 451.0], [18.2, 453.0], [18.3, 456.0], [18.4, 457.0], [18.5, 460.0], [18.6, 463.0], [18.7, 466.0], [18.8, 468.0], [18.9, 471.0], [19.0, 473.0], [19.1, 478.0], [19.2, 482.0], [19.3, 483.0], [19.4, 486.0], [19.5, 488.0], [19.6, 489.0], [19.7, 494.0], [19.8, 496.0], [19.9, 498.0], [20.0, 501.0], [20.1, 503.0], [20.2, 505.0], [20.3, 508.0], [20.4, 511.0], [20.5, 512.0], [20.6, 515.0], [20.7, 517.0], [20.8, 520.0], [20.9, 523.0], [21.0, 527.0], [21.1, 528.0], [21.2, 530.0], [21.3, 531.0], [21.4, 532.0], [21.5, 534.0], [21.6, 536.0], [21.7, 538.0], [21.8, 540.0], [21.9, 542.0], [22.0, 543.0], [22.1, 546.0], [22.2, 547.0], [22.3, 550.0], [22.4, 550.0], [22.5, 552.0], [22.6, 555.0], [22.7, 557.0], [22.8, 560.0], [22.9, 562.0], [23.0, 563.0], [23.1, 565.0], [23.2, 566.0], [23.3, 568.0], [23.4, 569.0], [23.5, 571.0], [23.6, 572.0], [23.7, 574.0], [23.8, 578.0], [23.9, 581.0], [24.0, 585.0], [24.1, 587.0], [24.2, 589.0], [24.3, 592.0], [24.4, 593.0], [24.5, 595.0], [24.6, 597.0], [24.7, 599.0], [24.8, 601.0], [24.9, 602.0], [25.0, 603.0], [25.1, 605.0], [25.2, 608.0], [25.3, 610.0], [25.4, 612.0], [25.5, 614.0], [25.6, 616.0], [25.7, 617.0], [25.8, 620.0], [25.9, 622.0], [26.0, 623.0], [26.1, 624.0], [26.2, 625.0], [26.3, 627.0], [26.4, 628.0], [26.5, 630.0], [26.6, 631.0], [26.7, 634.0], [26.8, 636.0], [26.9, 638.0], [27.0, 640.0], [27.1, 642.0], [27.2, 644.0], [27.3, 645.0], [27.4, 647.0], [27.5, 648.0], [27.6, 649.0], [27.7, 651.0], [27.8, 653.0], [27.9, 655.0], [28.0, 657.0], [28.1, 658.0], [28.2, 660.0], [28.3, 661.0], [28.4, 663.0], [28.5, 665.0], [28.6, 667.0], [28.7, 668.0], [28.8, 669.0], [28.9, 670.0], [29.0, 671.0], [29.1, 672.0], [29.2, 674.0], [29.3, 676.0], [29.4, 678.0], [29.5, 679.0], [29.6, 681.0], [29.7, 682.0], [29.8, 684.0], [29.9, 685.0], [30.0, 687.0], [30.1, 689.0], [30.2, 692.0], [30.3, 694.0], [30.4, 695.0], [30.5, 697.0], [30.6, 698.0], [30.7, 699.0], [30.8, 702.0], [30.9, 703.0], [31.0, 704.0], [31.1, 706.0], [31.2, 708.0], [31.3, 710.0], [31.4, 712.0], [31.5, 713.0], [31.6, 715.0], [31.7, 716.0], [31.8, 718.0], [31.9, 718.0], [32.0, 720.0], [32.1, 721.0], [32.2, 723.0], [32.3, 725.0], [32.4, 727.0], [32.5, 728.0], [32.6, 730.0], [32.7, 732.0], [32.8, 733.0], [32.9, 736.0], [33.0, 737.0], [33.1, 738.0], [33.2, 739.0], [33.3, 741.0], [33.4, 742.0], [33.5, 744.0], [33.6, 746.0], [33.7, 747.0], [33.8, 748.0], [33.9, 749.0], [34.0, 751.0], [34.1, 752.0], [34.2, 754.0], [34.3, 755.0], [34.4, 757.0], [34.5, 759.0], [34.6, 760.0], [34.7, 762.0], [34.8, 763.0], [34.9, 765.0], [35.0, 766.0], [35.1, 767.0], [35.2, 769.0], [35.3, 770.0], [35.4, 772.0], [35.5, 773.0], [35.6, 775.0], [35.7, 777.0], [35.8, 779.0], [35.9, 780.0], [36.0, 782.0], [36.1, 783.0], [36.2, 785.0], [36.3, 787.0], [36.4, 788.0], [36.5, 789.0], [36.6, 791.0], [36.7, 793.0], [36.8, 794.0], [36.9, 796.0], [37.0, 797.0], [37.1, 799.0], [37.2, 801.0], [37.3, 801.0], [37.4, 802.0], [37.5, 804.0], [37.6, 804.0], [37.7, 805.0], [37.8, 807.0], [37.9, 808.0], [38.0, 809.0], [38.1, 810.0], [38.2, 812.0], [38.3, 814.0], [38.4, 816.0], [38.5, 817.0], [38.6, 819.0], [38.7, 820.0], [38.8, 821.0], [38.9, 822.0], [39.0, 824.0], [39.1, 825.0], [39.2, 826.0], [39.3, 828.0], [39.4, 829.0], [39.5, 832.0], [39.6, 833.0], [39.7, 835.0], [39.8, 837.0], [39.9, 838.0], [40.0, 840.0], [40.1, 842.0], [40.2, 842.0], [40.3, 843.0], [40.4, 845.0], [40.5, 847.0], [40.6, 848.0], [40.7, 849.0], [40.8, 851.0], [40.9, 852.0], [41.0, 853.0], [41.1, 855.0], [41.2, 857.0], [41.3, 859.0], [41.4, 861.0], [41.5, 862.0], [41.6, 863.0], [41.7, 864.0], [41.8, 865.0], [41.9, 867.0], [42.0, 870.0], [42.1, 871.0], [42.2, 874.0], [42.3, 875.0], [42.4, 877.0], [42.5, 878.0], [42.6, 879.0], [42.7, 881.0], [42.8, 882.0], [42.9, 884.0], [43.0, 885.0], [43.1, 887.0], [43.2, 889.0], [43.3, 890.0], [43.4, 892.0], [43.5, 893.0], [43.6, 894.0], [43.7, 896.0], [43.8, 897.0], [43.9, 899.0], [44.0, 900.0], [44.1, 901.0], [44.2, 902.0], [44.3, 904.0], [44.4, 906.0], [44.5, 907.0], [44.6, 909.0], [44.7, 910.0], [44.8, 912.0], [44.9, 913.0], [45.0, 914.0], [45.1, 915.0], [45.2, 916.0], [45.3, 918.0], [45.4, 919.0], [45.5, 920.0], [45.6, 921.0], [45.7, 923.0], [45.8, 924.0], [45.9, 926.0], [46.0, 927.0], [46.1, 930.0], [46.2, 931.0], [46.3, 933.0], [46.4, 935.0], [46.5, 936.0], [46.6, 937.0], [46.7, 938.0], [46.8, 940.0], [46.9, 941.0], [47.0, 943.0], [47.1, 945.0], [47.2, 945.0], [47.3, 946.0], [47.4, 949.0], [47.5, 950.0], [47.6, 951.0], [47.7, 953.0], [47.8, 953.0], [47.9, 955.0], [48.0, 957.0], [48.1, 958.0], [48.2, 959.0], [48.3, 962.0], [48.4, 963.0], [48.5, 965.0], [48.6, 966.0], [48.7, 967.0], [48.8, 969.0], [48.9, 970.0], [49.0, 971.0], [49.1, 972.0], [49.2, 973.0], [49.3, 974.0], [49.4, 976.0], [49.5, 977.0], [49.6, 978.0], [49.7, 979.0], [49.8, 981.0], [49.9, 982.0], [50.0, 984.0], [50.1, 985.0], [50.2, 986.0], [50.3, 987.0], [50.4, 988.0], [50.5, 990.0], [50.6, 991.0], [50.7, 992.0], [50.8, 994.0], [50.9, 996.0], [51.0, 997.0], [51.1, 999.0], [51.2, 1001.0], [51.3, 1002.0], [51.4, 1004.0], [51.5, 1005.0], [51.6, 1007.0], [51.7, 1008.0], [51.8, 1009.0], [51.9, 1011.0], [52.0, 1012.0], [52.1, 1013.0], [52.2, 1014.0], [52.3, 1015.0], [52.4, 1016.0], [52.5, 1018.0], [52.6, 1020.0], [52.7, 1021.0], [52.8, 1022.0], [52.9, 1022.0], [53.0, 1023.0], [53.1, 1025.0], [53.2, 1026.0], [53.3, 1028.0], [53.4, 1029.0], [53.5, 1030.0], [53.6, 1031.0], [53.7, 1033.0], [53.8, 1035.0], [53.9, 1036.0], [54.0, 1038.0], [54.1, 1040.0], [54.2, 1041.0], [54.3, 1043.0], [54.4, 1044.0], [54.5, 1045.0], [54.6, 1046.0], [54.7, 1048.0], [54.8, 1050.0], [54.9, 1051.0], [55.0, 1052.0], [55.1, 1053.0], [55.2, 1054.0], [55.3, 1057.0], [55.4, 1058.0], [55.5, 1059.0], [55.6, 1060.0], [55.7, 1062.0], [55.8, 1063.0], [55.9, 1065.0], [56.0, 1067.0], [56.1, 1068.0], [56.2, 1069.0], [56.3, 1070.0], [56.4, 1072.0], [56.5, 1074.0], [56.6, 1075.0], [56.7, 1077.0], [56.8, 1079.0], [56.9, 1081.0], [57.0, 1083.0], [57.1, 1084.0], [57.2, 1085.0], [57.3, 1086.0], [57.4, 1088.0], [57.5, 1089.0], [57.6, 1091.0], [57.7, 1092.0], [57.8, 1094.0], [57.9, 1095.0], [58.0, 1097.0], [58.1, 1098.0], [58.2, 1099.0], [58.3, 1100.0], [58.4, 1102.0], [58.5, 1104.0], [58.6, 1105.0], [58.7, 1107.0], [58.8, 1108.0], [58.9, 1110.0], [59.0, 1111.0], [59.1, 1112.0], [59.2, 1113.0], [59.3, 1115.0], [59.4, 1117.0], [59.5, 1119.0], [59.6, 1120.0], [59.7, 1121.0], [59.8, 1122.0], [59.9, 1124.0], [60.0, 1125.0], [60.1, 1127.0], [60.2, 1129.0], [60.3, 1130.0], [60.4, 1132.0], [60.5, 1134.0], [60.6, 1135.0], [60.7, 1136.0], [60.8, 1138.0], [60.9, 1139.0], [61.0, 1140.0], [61.1, 1142.0], [61.2, 1144.0], [61.3, 1145.0], [61.4, 1147.0], [61.5, 1148.0], [61.6, 1149.0], [61.7, 1151.0], [61.8, 1153.0], [61.9, 1154.0], [62.0, 1156.0], [62.1, 1158.0], [62.2, 1160.0], [62.3, 1162.0], [62.4, 1163.0], [62.5, 1163.0], [62.6, 1165.0], [62.7, 1166.0], [62.8, 1168.0], [62.9, 1170.0], [63.0, 1172.0], [63.1, 1173.0], [63.2, 1174.0], [63.3, 1176.0], [63.4, 1177.0], [63.5, 1179.0], [63.6, 1180.0], [63.7, 1181.0], [63.8, 1183.0], [63.9, 1183.0], [64.0, 1184.0], [64.1, 1185.0], [64.2, 1188.0], [64.3, 1190.0], [64.4, 1191.0], [64.5, 1192.0], [64.6, 1194.0], [64.7, 1195.0], [64.8, 1199.0], [64.9, 1200.0], [65.0, 1203.0], [65.1, 1204.0], [65.2, 1205.0], [65.3, 1207.0], [65.4, 1208.0], [65.5, 1210.0], [65.6, 1212.0], [65.7, 1213.0], [65.8, 1214.0], [65.9, 1216.0], [66.0, 1217.0], [66.1, 1219.0], [66.2, 1221.0], [66.3, 1223.0], [66.4, 1224.0], [66.5, 1226.0], [66.6, 1227.0], [66.7, 1228.0], [66.8, 1230.0], [66.9, 1230.0], [67.0, 1232.0], [67.1, 1233.0], [67.2, 1235.0], [67.3, 1236.0], [67.4, 1238.0], [67.5, 1240.0], [67.6, 1242.0], [67.7, 1243.0], [67.8, 1245.0], [67.9, 1248.0], [68.0, 1249.0], [68.1, 1250.0], [68.2, 1251.0], [68.3, 1252.0], [68.4, 1253.0], [68.5, 1255.0], [68.6, 1257.0], [68.7, 1259.0], [68.8, 1261.0], [68.9, 1262.0], [69.0, 1264.0], [69.1, 1267.0], [69.2, 1269.0], [69.3, 1271.0], [69.4, 1273.0], [69.5, 1275.0], [69.6, 1277.0], [69.7, 1278.0], [69.8, 1279.0], [69.9, 1281.0], [70.0, 1283.0], [70.1, 1284.0], [70.2, 1286.0], [70.3, 1287.0], [70.4, 1289.0], [70.5, 1291.0], [70.6, 1292.0], [70.7, 1294.0], [70.8, 1295.0], [70.9, 1297.0], [71.0, 1299.0], [71.1, 1301.0], [71.2, 1303.0], [71.3, 1304.0], [71.4, 1305.0], [71.5, 1307.0], [71.6, 1308.0], [71.7, 1309.0], [71.8, 1310.0], [71.9, 1312.0], [72.0, 1314.0], [72.1, 1316.0], [72.2, 1318.0], [72.3, 1320.0], [72.4, 1323.0], [72.5, 1324.0], [72.6, 1326.0], [72.7, 1327.0], [72.8, 1329.0], [72.9, 1331.0], [73.0, 1332.0], [73.1, 1334.0], [73.2, 1336.0], [73.3, 1338.0], [73.4, 1340.0], [73.5, 1341.0], [73.6, 1343.0], [73.7, 1345.0], [73.8, 1346.0], [73.9, 1347.0], [74.0, 1349.0], [74.1, 1352.0], [74.2, 1354.0], [74.3, 1356.0], [74.4, 1358.0], [74.5, 1360.0], [74.6, 1363.0], [74.7, 1364.0], [74.8, 1366.0], [74.9, 1367.0], [75.0, 1369.0], [75.1, 1371.0], [75.2, 1373.0], [75.3, 1374.0], [75.4, 1377.0], [75.5, 1378.0], [75.6, 1380.0], [75.7, 1382.0], [75.8, 1384.0], [75.9, 1386.0], [76.0, 1388.0], [76.1, 1391.0], [76.2, 1393.0], [76.3, 1395.0], [76.4, 1398.0], [76.5, 1399.0], [76.6, 1402.0], [76.7, 1403.0], [76.8, 1405.0], [76.9, 1406.0], [77.0, 1407.0], [77.1, 1410.0], [77.2, 1411.0], [77.3, 1413.0], [77.4, 1415.0], [77.5, 1417.0], [77.6, 1418.0], [77.7, 1420.0], [77.8, 1423.0], [77.9, 1425.0], [78.0, 1427.0], [78.1, 1429.0], [78.2, 1431.0], [78.3, 1433.0], [78.4, 1435.0], [78.5, 1439.0], [78.6, 1441.0], [78.7, 1443.0], [78.8, 1445.0], [78.9, 1448.0], [79.0, 1450.0], [79.1, 1452.0], [79.2, 1455.0], [79.3, 1456.0], [79.4, 1458.0], [79.5, 1460.0], [79.6, 1463.0], [79.7, 1464.0], [79.8, 1466.0], [79.9, 1469.0], [80.0, 1472.0], [80.1, 1474.0], [80.2, 1476.0], [80.3, 1478.0], [80.4, 1479.0], [80.5, 1481.0], [80.6, 1483.0], [80.7, 1485.0], [80.8, 1487.0], [80.9, 1489.0], [81.0, 1491.0], [81.1, 1494.0], [81.2, 1495.0], [81.3, 1500.0], [81.4, 1501.0], [81.5, 1504.0], [81.6, 1506.0], [81.7, 1508.0], [81.8, 1510.0], [81.9, 1513.0], [82.0, 1514.0], [82.1, 1518.0], [82.2, 1520.0], [82.3, 1523.0], [82.4, 1525.0], [82.5, 1527.0], [82.6, 1530.0], [82.7, 1532.0], [82.8, 1534.0], [82.9, 1536.0], [83.0, 1539.0], [83.1, 1541.0], [83.2, 1544.0], [83.3, 1547.0], [83.4, 1549.0], [83.5, 1551.0], [83.6, 1553.0], [83.7, 1557.0], [83.8, 1558.0], [83.9, 1561.0], [84.0, 1563.0], [84.1, 1566.0], [84.2, 1568.0], [84.3, 1570.0], [84.4, 1573.0], [84.5, 1575.0], [84.6, 1577.0], [84.7, 1580.0], [84.8, 1583.0], [84.9, 1587.0], [85.0, 1588.0], [85.1, 1591.0], [85.2, 1593.0], [85.3, 1596.0], [85.4, 1597.0], [85.5, 1599.0], [85.6, 1601.0], [85.7, 1605.0], [85.8, 1609.0], [85.9, 1610.0], [86.0, 1613.0], [86.1, 1614.0], [86.2, 1619.0], [86.3, 1621.0], [86.4, 1624.0], [86.5, 1628.0], [86.6, 1631.0], [86.7, 1633.0], [86.8, 1637.0], [86.9, 1639.0], [87.0, 1642.0], [87.1, 1647.0], [87.2, 1651.0], [87.3, 1654.0], [87.4, 1658.0], [87.5, 1661.0], [87.6, 1664.0], [87.7, 1667.0], [87.8, 1671.0], [87.9, 1673.0], [88.0, 1676.0], [88.1, 1681.0], [88.2, 1685.0], [88.3, 1688.0], [88.4, 1692.0], [88.5, 1696.0], [88.6, 1701.0], [88.7, 1705.0], [88.8, 1706.0], [88.9, 1709.0], [89.0, 1713.0], [89.1, 1715.0], [89.2, 1718.0], [89.3, 1722.0], [89.4, 1725.0], [89.5, 1728.0], [89.6, 1734.0], [89.7, 1737.0], [89.8, 1741.0], [89.9, 1744.0], [90.0, 1752.0], [90.1, 1756.0], [90.2, 1758.0], [90.3, 1761.0], [90.4, 1764.0], [90.5, 1768.0], [90.6, 1771.0], [90.7, 1776.0], [90.8, 1779.0], [90.9, 1784.0], [91.0, 1787.0], [91.1, 1792.0], [91.2, 1797.0], [91.3, 1801.0], [91.4, 1806.0], [91.5, 1809.0], [91.6, 1815.0], [91.7, 1818.0], [91.8, 1823.0], [91.9, 1827.0], [92.0, 1832.0], [92.1, 1836.0], [92.2, 1839.0], [92.3, 1843.0], [92.4, 1846.0], [92.5, 1850.0], [92.6, 1852.0], [92.7, 1857.0], [92.8, 1861.0], [92.9, 1864.0], [93.0, 1871.0], [93.1, 1876.0], [93.2, 1881.0], [93.3, 1883.0], [93.4, 1887.0], [93.5, 1892.0], [93.6, 1897.0], [93.7, 1903.0], [93.8, 1910.0], [93.9, 1917.0], [94.0, 1926.0], [94.1, 1938.0], [94.2, 1940.0], [94.3, 1944.0], [94.4, 1947.0], [94.5, 1954.0], [94.6, 1960.0], [94.7, 1965.0], [94.8, 1973.0], [94.9, 1981.0], [95.0, 1986.0], [95.1, 1991.0], [95.2, 1995.0], [95.3, 2003.0], [95.4, 2008.0], [95.5, 2011.0], [95.6, 2018.0], [95.7, 2027.0], [95.8, 2036.0], [95.9, 2044.0], [96.0, 2049.0], [96.1, 2059.0], [96.2, 2066.0], [96.3, 2084.0], [96.4, 2090.0], [96.5, 2101.0], [96.6, 2113.0], [96.7, 2126.0], [96.8, 2132.0], [96.9, 2143.0], [97.0, 2149.0], [97.1, 2163.0], [97.2, 2173.0], [97.3, 2186.0], [97.4, 2198.0], [97.5, 2213.0], [97.6, 2226.0], [97.7, 2248.0], [97.8, 2261.0], [97.9, 2285.0], [98.0, 2306.0], [98.1, 2332.0], [98.2, 2349.0], [98.3, 2370.0], [98.4, 2382.0], [98.5, 2401.0], [98.6, 2426.0], [98.7, 2439.0], [98.8, 2462.0], [98.9, 2478.0], [99.0, 2512.0], [99.1, 2533.0], [99.2, 2563.0], [99.3, 2591.0], [99.4, 2630.0], [99.5, 2664.0], [99.6, 2748.0], [99.7, 2804.0], [99.8, 2880.0], [99.9, 3034.0], [100.0, 4435.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[0.0, 150.0], [0.1, 150.0], [0.2, 150.0], [0.3, 150.0], [0.4, 150.0], [0.5, 150.0], [0.6, 150.0], [0.7, 150.0], [0.8, 150.0], [0.9, 150.0], [1.0, 151.0], [1.1, 151.0], [1.2, 151.0], [1.3, 151.0], [1.4, 151.0], [1.5, 151.0], [1.6, 151.0], [1.7, 151.0], [1.8, 151.0], [1.9, 151.0], [2.0, 153.0], [2.1, 153.0], [2.2, 153.0], [2.3, 153.0], [2.4, 153.0], [2.5, 153.0], [2.6, 153.0], [2.7, 153.0], [2.8, 153.0], [2.9, 153.0], [3.0, 154.0], [3.1, 154.0], [3.2, 154.0], [3.3, 154.0], [3.4, 154.0], [3.5, 154.0], [3.6, 154.0], [3.7, 154.0], [3.8, 154.0], [3.9, 154.0], [4.0, 156.0], [4.1, 156.0], [4.2, 156.0], [4.3, 156.0], [4.4, 156.0], [4.5, 156.0], [4.6, 156.0], [4.7, 156.0], [4.8, 156.0], [4.9, 156.0], [5.0, 156.0], [5.1, 156.0], [5.2, 156.0], [5.3, 156.0], [5.4, 156.0], [5.5, 156.0], [5.6, 156.0], [5.7, 156.0], [5.8, 156.0], [5.9, 156.0], [6.0, 156.0], [6.1, 156.0], [6.2, 156.0], [6.3, 156.0], [6.4, 156.0], [6.5, 156.0], [6.6, 156.0], [6.7, 156.0], [6.8, 156.0], [6.9, 156.0], [7.0, 157.0], [7.1, 157.0], [7.2, 157.0], [7.3, 157.0], [7.4, 157.0], [7.5, 157.0], [7.6, 157.0], [7.7, 157.0], [7.8, 157.0], [7.9, 157.0], [8.0, 157.0], [8.1, 157.0], [8.2, 157.0], [8.3, 157.0], [8.4, 157.0], [8.5, 157.0], [8.6, 157.0], [8.7, 157.0], [8.8, 157.0], [8.9, 157.0], [9.0, 158.0], [9.1, 158.0], [9.2, 158.0], [9.3, 158.0], [9.4, 158.0], [9.5, 158.0], [9.6, 158.0], [9.7, 158.0], [9.8, 158.0], [9.9, 158.0], [10.0, 158.0], [10.1, 158.0], [10.2, 158.0], [10.3, 158.0], [10.4, 158.0], [10.5, 158.0], [10.6, 158.0], [10.7, 158.0], [10.8, 158.0], [10.9, 158.0], [11.0, 158.0], [11.1, 158.0], [11.2, 158.0], [11.3, 158.0], [11.4, 158.0], [11.5, 158.0], [11.6, 158.0], [11.7, 158.0], [11.8, 158.0], [11.9, 158.0], [12.0, 158.0], [12.1, 158.0], [12.2, 158.0], [12.3, 158.0], [12.4, 158.0], [12.5, 158.0], [12.6, 158.0], [12.7, 158.0], [12.8, 158.0], [12.9, 158.0], [13.0, 158.0], [13.1, 158.0], [13.2, 158.0], [13.3, 158.0], [13.4, 158.0], [13.5, 158.0], [13.6, 158.0], [13.7, 158.0], [13.8, 158.0], [13.9, 158.0], [14.0, 158.0], [14.1, 158.0], [14.2, 158.0], [14.3, 158.0], [14.4, 158.0], [14.5, 158.0], [14.6, 158.0], [14.7, 158.0], [14.8, 158.0], [14.9, 158.0], [15.0, 158.0], [15.1, 158.0], [15.2, 158.0], [15.3, 158.0], [15.4, 158.0], [15.5, 158.0], [15.6, 158.0], [15.7, 158.0], [15.8, 158.0], [15.9, 158.0], [16.0, 159.0], [16.1, 159.0], [16.2, 159.0], [16.3, 159.0], [16.4, 159.0], [16.5, 159.0], [16.6, 159.0], [16.7, 159.0], [16.8, 159.0], [16.9, 159.0], [17.0, 159.0], [17.1, 159.0], [17.2, 159.0], [17.3, 159.0], [17.4, 159.0], [17.5, 159.0], [17.6, 159.0], [17.7, 159.0], [17.8, 159.0], [17.9, 159.0], [18.0, 159.0], [18.1, 159.0], [18.2, 159.0], [18.3, 159.0], [18.4, 159.0], [18.5, 159.0], [18.6, 159.0], [18.7, 159.0], [18.8, 159.0], [18.9, 159.0], [19.0, 159.0], [19.1, 159.0], [19.2, 159.0], [19.3, 159.0], [19.4, 159.0], [19.5, 159.0], [19.6, 159.0], [19.7, 159.0], [19.8, 159.0], [19.9, 159.0], [20.0, 159.0], [20.1, 159.0], [20.2, 159.0], [20.3, 159.0], [20.4, 159.0], [20.5, 159.0], [20.6, 159.0], [20.7, 159.0], [20.8, 159.0], [20.9, 159.0], [21.0, 160.0], [21.1, 160.0], [21.2, 160.0], [21.3, 160.0], [21.4, 160.0], [21.5, 160.0], [21.6, 160.0], [21.7, 160.0], [21.8, 160.0], [21.9, 160.0], [22.0, 160.0], [22.1, 160.0], [22.2, 160.0], [22.3, 160.0], [22.4, 160.0], [22.5, 160.0], [22.6, 160.0], [22.7, 160.0], [22.8, 160.0], [22.9, 160.0], [23.0, 160.0], [23.1, 160.0], [23.2, 160.0], [23.3, 160.0], [23.4, 160.0], [23.5, 160.0], [23.6, 160.0], [23.7, 160.0], [23.8, 160.0], [23.9, 160.0], [24.0, 161.0], [24.1, 161.0], [24.2, 161.0], [24.3, 161.0], [24.4, 161.0], [24.5, 161.0], [24.6, 161.0], [24.7, 161.0], [24.8, 161.0], [24.9, 161.0], [25.0, 161.0], [25.1, 161.0], [25.2, 161.0], [25.3, 161.0], [25.4, 161.0], [25.5, 161.0], [25.6, 161.0], [25.7, 161.0], [25.8, 161.0], [25.9, 161.0], [26.0, 161.0], [26.1, 161.0], [26.2, 161.0], [26.3, 161.0], [26.4, 161.0], [26.5, 161.0], [26.6, 161.0], [26.7, 161.0], [26.8, 161.0], [26.9, 161.0], [27.0, 161.0], [27.1, 161.0], [27.2, 161.0], [27.3, 161.0], [27.4, 161.0], [27.5, 161.0], [27.6, 161.0], [27.7, 161.0], [27.8, 161.0], [27.9, 161.0], [28.0, 162.0], [28.1, 162.0], [28.2, 162.0], [28.3, 162.0], [28.4, 162.0], [28.5, 162.0], [28.6, 162.0], [28.7, 162.0], [28.8, 162.0], [28.9, 162.0], [29.0, 162.0], [29.1, 162.0], [29.2, 162.0], [29.3, 162.0], [29.4, 162.0], [29.5, 162.0], [29.6, 162.0], [29.7, 162.0], [29.8, 162.0], [29.9, 162.0], [30.0, 162.0], [30.1, 162.0], [30.2, 162.0], [30.3, 162.0], [30.4, 162.0], [30.5, 162.0], [30.6, 162.0], [30.7, 162.0], [30.8, 162.0], [30.9, 162.0], [31.0, 162.0], [31.1, 162.0], [31.2, 162.0], [31.3, 162.0], [31.4, 162.0], [31.5, 162.0], [31.6, 162.0], [31.7, 162.0], [31.8, 162.0], [31.9, 162.0], [32.0, 162.0], [32.1, 162.0], [32.2, 162.0], [32.3, 162.0], [32.4, 162.0], [32.5, 162.0], [32.6, 162.0], [32.7, 162.0], [32.8, 162.0], [32.9, 162.0], [33.0, 163.0], [33.1, 163.0], [33.2, 163.0], [33.3, 163.0], [33.4, 163.0], [33.5, 163.0], [33.6, 163.0], [33.7, 163.0], [33.8, 163.0], [33.9, 163.0], [34.0, 163.0], [34.1, 163.0], [34.2, 163.0], [34.3, 163.0], [34.4, 163.0], [34.5, 163.0], [34.6, 163.0], [34.7, 163.0], [34.8, 163.0], [34.9, 163.0], [35.0, 163.0], [35.1, 163.0], [35.2, 163.0], [35.3, 163.0], [35.4, 163.0], [35.5, 163.0], [35.6, 163.0], [35.7, 163.0], [35.8, 163.0], [35.9, 163.0], [36.0, 163.0], [36.1, 163.0], [36.2, 163.0], [36.3, 163.0], [36.4, 163.0], [36.5, 163.0], [36.6, 163.0], [36.7, 163.0], [36.8, 163.0], [36.9, 163.0], [37.0, 163.0], [37.1, 163.0], [37.2, 163.0], [37.3, 163.0], [37.4, 163.0], [37.5, 163.0], [37.6, 163.0], [37.7, 163.0], [37.8, 163.0], [37.9, 163.0], [38.0, 163.0], [38.1, 163.0], [38.2, 163.0], [38.3, 163.0], [38.4, 163.0], [38.5, 163.0], [38.6, 163.0], [38.7, 163.0], [38.8, 163.0], [38.9, 163.0], [39.0, 163.0], [39.1, 163.0], [39.2, 163.0], [39.3, 163.0], [39.4, 163.0], [39.5, 163.0], [39.6, 163.0], [39.7, 163.0], [39.8, 163.0], [39.9, 163.0], [40.0, 164.0], [40.1, 164.0], [40.2, 164.0], [40.3, 164.0], [40.4, 164.0], [40.5, 164.0], [40.6, 164.0], [40.7, 164.0], [40.8, 164.0], [40.9, 164.0], [41.0, 164.0], [41.1, 164.0], [41.2, 164.0], [41.3, 164.0], [41.4, 164.0], [41.5, 164.0], [41.6, 164.0], [41.7, 164.0], [41.8, 164.0], [41.9, 164.0], [42.0, 164.0], [42.1, 164.0], [42.2, 164.0], [42.3, 164.0], [42.4, 164.0], [42.5, 164.0], [42.6, 164.0], [42.7, 164.0], [42.8, 164.0], [42.9, 164.0], [43.0, 164.0], [43.1, 164.0], [43.2, 164.0], [43.3, 164.0], [43.4, 164.0], [43.5, 164.0], [43.6, 164.0], [43.7, 164.0], [43.8, 164.0], [43.9, 164.0], [44.0, 164.0], [44.1, 164.0], [44.2, 164.0], [44.3, 164.0], [44.4, 164.0], [44.5, 164.0], [44.6, 164.0], [44.7, 164.0], [44.8, 164.0], [44.9, 164.0], [45.0, 164.0], [45.1, 164.0], [45.2, 164.0], [45.3, 164.0], [45.4, 164.0], [45.5, 164.0], [45.6, 164.0], [45.7, 164.0], [45.8, 164.0], [45.9, 164.0], [46.0, 165.0], [46.1, 165.0], [46.2, 165.0], [46.3, 165.0], [46.4, 165.0], [46.5, 165.0], [46.6, 165.0], [46.7, 165.0], [46.8, 165.0], [46.9, 165.0], [47.0, 165.0], [47.1, 165.0], [47.2, 165.0], [47.3, 165.0], [47.4, 165.0], [47.5, 165.0], [47.6, 165.0], [47.7, 165.0], [47.8, 165.0], [47.9, 165.0], [48.0, 165.0], [48.1, 165.0], [48.2, 165.0], [48.3, 165.0], [48.4, 165.0], [48.5, 165.0], [48.6, 165.0], [48.7, 165.0], [48.8, 165.0], [48.9, 165.0], [49.0, 165.0], [49.1, 165.0], [49.2, 165.0], [49.3, 165.0], [49.4, 165.0], [49.5, 165.0], [49.6, 165.0], [49.7, 165.0], [49.8, 165.0], [49.9, 165.0], [50.0, 165.0], [50.1, 165.0], [50.2, 165.0], [50.3, 165.0], [50.4, 165.0], [50.5, 165.0], [50.6, 165.0], [50.7, 165.0], [50.8, 165.0], [50.9, 165.0], [51.0, 165.0], [51.1, 165.0], [51.2, 165.0], [51.3, 165.0], [51.4, 165.0], [51.5, 165.0], [51.6, 165.0], [51.7, 165.0], [51.8, 165.0], [51.9, 165.0], [52.0, 166.0], [52.1, 166.0], [52.2, 166.0], [52.3, 166.0], [52.4, 166.0], [52.5, 166.0], [52.6, 166.0], [52.7, 166.0], [52.8, 166.0], [52.9, 166.0], [53.0, 166.0], [53.1, 166.0], [53.2, 166.0], [53.3, 166.0], [53.4, 166.0], [53.5, 166.0], [53.6, 166.0], [53.7, 166.0], [53.8, 166.0], [53.9, 166.0], [54.0, 167.0], [54.1, 167.0], [54.2, 167.0], [54.3, 167.0], [54.4, 167.0], [54.5, 167.0], [54.6, 167.0], [54.7, 167.0], [54.8, 167.0], [54.9, 167.0], [55.0, 167.0], [55.1, 167.0], [55.2, 167.0], [55.3, 167.0], [55.4, 167.0], [55.5, 167.0], [55.6, 167.0], [55.7, 167.0], [55.8, 167.0], [55.9, 167.0], [56.0, 167.0], [56.1, 167.0], [56.2, 167.0], [56.3, 167.0], [56.4, 167.0], [56.5, 167.0], [56.6, 167.0], [56.7, 167.0], [56.8, 167.0], [56.9, 167.0], [57.0, 167.0], [57.1, 167.0], [57.2, 167.0], [57.3, 167.0], [57.4, 167.0], [57.5, 167.0], [57.6, 167.0], [57.7, 167.0], [57.8, 167.0], [57.9, 167.0], [58.0, 167.0], [58.1, 167.0], [58.2, 167.0], [58.3, 167.0], [58.4, 167.0], [58.5, 167.0], [58.6, 167.0], [58.7, 167.0], [58.8, 167.0], [58.9, 167.0], [59.0, 168.0], [59.1, 168.0], [59.2, 168.0], [59.3, 168.0], [59.4, 168.0], [59.5, 168.0], [59.6, 168.0], [59.7, 168.0], [59.8, 168.0], [59.9, 168.0], [60.0, 168.0], [60.1, 168.0], [60.2, 168.0], [60.3, 168.0], [60.4, 168.0], [60.5, 168.0], [60.6, 168.0], [60.7, 168.0], [60.8, 168.0], [60.9, 168.0], [61.0, 168.0], [61.1, 168.0], [61.2, 168.0], [61.3, 168.0], [61.4, 168.0], [61.5, 168.0], [61.6, 168.0], [61.7, 168.0], [61.8, 168.0], [61.9, 168.0], [62.0, 169.0], [62.1, 169.0], [62.2, 169.0], [62.3, 169.0], [62.4, 169.0], [62.5, 169.0], [62.6, 169.0], [62.7, 169.0], [62.8, 169.0], [62.9, 169.0], [63.0, 169.0], [63.1, 169.0], [63.2, 169.0], [63.3, 169.0], [63.4, 169.0], [63.5, 169.0], [63.6, 169.0], [63.7, 169.0], [63.8, 169.0], [63.9, 169.0], [64.0, 169.0], [64.1, 169.0], [64.2, 169.0], [64.3, 169.0], [64.4, 169.0], [64.5, 169.0], [64.6, 169.0], [64.7, 169.0], [64.8, 169.0], [64.9, 169.0], [65.0, 169.0], [65.1, 169.0], [65.2, 169.0], [65.3, 169.0], [65.4, 169.0], [65.5, 169.0], [65.6, 169.0], [65.7, 169.0], [65.8, 169.0], [65.9, 169.0], [66.0, 169.0], [66.1, 169.0], [66.2, 169.0], [66.3, 169.0], [66.4, 169.0], [66.5, 169.0], [66.6, 169.0], [66.7, 169.0], [66.8, 169.0], [66.9, 169.0], [67.0, 170.0], [67.1, 170.0], [67.2, 170.0], [67.3, 170.0], [67.4, 170.0], [67.5, 170.0], [67.6, 170.0], [67.7, 170.0], [67.8, 170.0], [67.9, 170.0], [68.0, 170.0], [68.1, 170.0], [68.2, 170.0], [68.3, 170.0], [68.4, 170.0], [68.5, 170.0], [68.6, 170.0], [68.7, 170.0], [68.8, 170.0], [68.9, 170.0], [69.0, 170.0], [69.1, 170.0], [69.2, 170.0], [69.3, 170.0], [69.4, 170.0], [69.5, 170.0], [69.6, 170.0], [69.7, 170.0], [69.8, 170.0], [69.9, 170.0], [70.0, 170.0], [70.1, 170.0], [70.2, 170.0], [70.3, 170.0], [70.4, 170.0], [70.5, 170.0], [70.6, 170.0], [70.7, 170.0], [70.8, 170.0], [70.9, 170.0], [71.0, 170.0], [71.1, 170.0], [71.2, 170.0], [71.3, 170.0], [71.4, 170.0], [71.5, 170.0], [71.6, 170.0], [71.7, 170.0], [71.8, 170.0], [71.9, 170.0], [72.0, 171.0], [72.1, 171.0], [72.2, 171.0], [72.3, 171.0], [72.4, 171.0], [72.5, 171.0], [72.6, 171.0], [72.7, 171.0], [72.8, 171.0], [72.9, 171.0], [73.0, 171.0], [73.1, 171.0], [73.2, 171.0], [73.3, 171.0], [73.4, 171.0], [73.5, 171.0], [73.6, 171.0], [73.7, 171.0], [73.8, 171.0], [73.9, 171.0], [74.0, 171.0], [74.1, 171.0], [74.2, 171.0], [74.3, 171.0], [74.4, 171.0], [74.5, 171.0], [74.6, 171.0], [74.7, 171.0], [74.8, 171.0], [74.9, 171.0], [75.0, 171.0], [75.1, 171.0], [75.2, 171.0], [75.3, 171.0], [75.4, 171.0], [75.5, 171.0], [75.6, 171.0], [75.7, 171.0], [75.8, 171.0], [75.9, 171.0], [76.0, 171.0], [76.1, 171.0], [76.2, 171.0], [76.3, 171.0], [76.4, 171.0], [76.5, 171.0], [76.6, 171.0], [76.7, 171.0], [76.8, 171.0], [76.9, 171.0], [77.0, 172.0], [77.1, 172.0], [77.2, 172.0], [77.3, 172.0], [77.4, 172.0], [77.5, 172.0], [77.6, 172.0], [77.7, 172.0], [77.8, 172.0], [77.9, 172.0], [78.0, 174.0], [78.1, 174.0], [78.2, 174.0], [78.3, 174.0], [78.4, 174.0], [78.5, 174.0], [78.6, 174.0], [78.7, 174.0], [78.8, 174.0], [78.9, 174.0], [79.0, 174.0], [79.1, 174.0], [79.2, 174.0], [79.3, 174.0], [79.4, 174.0], [79.5, 174.0], [79.6, 174.0], [79.7, 174.0], [79.8, 174.0], [79.9, 174.0], [80.0, 174.0], [80.1, 174.0], [80.2, 174.0], [80.3, 174.0], [80.4, 174.0], [80.5, 174.0], [80.6, 174.0], [80.7, 174.0], [80.8, 174.0], [80.9, 174.0], [81.0, 174.0], [81.1, 174.0], [81.2, 174.0], [81.3, 174.0], [81.4, 174.0], [81.5, 174.0], [81.6, 174.0], [81.7, 174.0], [81.8, 174.0], [81.9, 174.0], [82.0, 175.0], [82.1, 175.0], [82.2, 175.0], [82.3, 175.0], [82.4, 175.0], [82.5, 175.0], [82.6, 175.0], [82.7, 175.0], [82.8, 175.0], [82.9, 175.0], [83.0, 175.0], [83.1, 175.0], [83.2, 175.0], [83.3, 175.0], [83.4, 175.0], [83.5, 175.0], [83.6, 175.0], [83.7, 175.0], [83.8, 175.0], [83.9, 175.0], [84.0, 175.0], [84.1, 175.0], [84.2, 175.0], [84.3, 175.0], [84.4, 175.0], [84.5, 175.0], [84.6, 175.0], [84.7, 175.0], [84.8, 175.0], [84.9, 175.0], [85.0, 177.0], [85.1, 177.0], [85.2, 177.0], [85.3, 177.0], [85.4, 177.0], [85.5, 177.0], [85.6, 177.0], [85.7, 177.0], [85.8, 177.0], [85.9, 177.0], [86.0, 178.0], [86.1, 178.0], [86.2, 178.0], [86.3, 178.0], [86.4, 178.0], [86.5, 178.0], [86.6, 178.0], [86.7, 178.0], [86.8, 178.0], [86.9, 178.0], [87.0, 178.0], [87.1, 178.0], [87.2, 178.0], [87.3, 178.0], [87.4, 178.0], [87.5, 178.0], [87.6, 178.0], [87.7, 178.0], [87.8, 178.0], [87.9, 178.0], [88.0, 179.0], [88.1, 179.0], [88.2, 179.0], [88.3, 179.0], [88.4, 179.0], [88.5, 179.0], [88.6, 179.0], [88.7, 179.0], [88.8, 179.0], [88.9, 179.0], [89.0, 181.0], [89.1, 181.0], [89.2, 181.0], [89.3, 181.0], [89.4, 181.0], [89.5, 181.0], [89.6, 181.0], [89.7, 181.0], [89.8, 181.0], [89.9, 181.0], [90.0, 183.0], [90.1, 183.0], [90.2, 183.0], [90.3, 183.0], [90.4, 183.0], [90.5, 183.0], [90.6, 183.0], [90.7, 183.0], [90.8, 183.0], [90.9, 183.0], [91.0, 185.0], [91.1, 185.0], [91.2, 185.0], [91.3, 185.0], [91.4, 185.0], [91.5, 185.0], [91.6, 185.0], [91.7, 185.0], [91.8, 185.0], [91.9, 185.0], [92.0, 195.0], [92.1, 195.0], [92.2, 195.0], [92.3, 195.0], [92.4, 195.0], [92.5, 195.0], [92.6, 195.0], [92.7, 195.0], [92.8, 195.0], [92.9, 195.0], [93.0, 198.0], [93.1, 198.0], [93.2, 198.0], [93.3, 198.0], [93.4, 198.0], [93.5, 198.0], [93.6, 198.0], [93.7, 198.0], [93.8, 198.0], [93.9, 198.0], [94.0, 200.0], [94.1, 200.0], [94.2, 200.0], [94.3, 200.0], [94.4, 200.0], [94.5, 200.0], [94.6, 200.0], [94.7, 200.0], [94.8, 200.0], [94.9, 200.0], [95.0, 215.0], [95.1, 215.0], [95.2, 215.0], [95.3, 215.0], [95.4, 215.0], [95.5, 215.0], [95.6, 215.0], [95.7, 215.0], [95.8, 215.0], [95.9, 215.0], [96.0, 228.0], [96.1, 228.0], [96.2, 228.0], [96.3, 228.0], [96.4, 228.0], [96.5, 228.0], [96.6, 228.0], [96.7, 228.0], [96.8, 228.0], [96.9, 228.0], [97.0, 246.0], [97.1, 246.0], [97.2, 246.0], [97.3, 246.0], [97.4, 246.0], [97.5, 246.0], [97.6, 246.0], [97.7, 246.0], [97.8, 246.0], [97.9, 246.0], [98.0, 259.0], [98.1, 259.0], [98.2, 259.0], [98.3, 259.0], [98.4, 259.0], [98.5, 259.0], [98.6, 259.0], [98.7, 259.0], [98.8, 259.0], [98.9, 259.0], [99.0, 283.0], [99.1, 283.0], [99.2, 283.0], [99.3, 283.0], [99.4, 283.0], [99.5, 283.0], [99.6, 283.0], [99.7, 283.0], [99.8, 283.0], [99.9, 283.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 10.0], [0.1, 13.0], [0.2, 14.0], [0.3, 15.0], [0.4, 15.0], [0.5, 16.0], [0.6, 16.0], [0.7, 16.0], [0.8, 17.0], [0.9, 17.0], [1.0, 18.0], [1.1, 18.0], [1.2, 18.0], [1.3, 18.0], [1.4, 18.0], [1.5, 19.0], [1.6, 19.0], [1.7, 19.0], [1.8, 19.0], [1.9, 19.0], [2.0, 20.0], [2.1, 20.0], [2.2, 20.0], [2.3, 20.0], [2.4, 20.0], [2.5, 20.0], [2.6, 20.0], [2.7, 21.0], [2.8, 21.0], [2.9, 21.0], [3.0, 21.0], [3.1, 21.0], [3.2, 21.0], [3.3, 21.0], [3.4, 22.0], [3.5, 22.0], [3.6, 22.0], [3.7, 22.0], [3.8, 22.0], [3.9, 22.0], [4.0, 23.0], [4.1, 23.0], [4.2, 23.0], [4.3, 23.0], [4.4, 23.0], [4.5, 23.0], [4.6, 23.0], [4.7, 23.0], [4.8, 23.0], [4.9, 24.0], [5.0, 24.0], [5.1, 24.0], [5.2, 24.0], [5.3, 24.0], [5.4, 24.0], [5.5, 24.0], [5.6, 24.0], [5.7, 25.0], [5.8, 25.0], [5.9, 25.0], [6.0, 25.0], [6.1, 25.0], [6.2, 25.0], [6.3, 25.0], [6.4, 26.0], [6.5, 26.0], [6.6, 26.0], [6.7, 26.0], [6.8, 26.0], [6.9, 26.0], [7.0, 26.0], [7.1, 26.0], [7.2, 27.0], [7.3, 27.0], [7.4, 27.0], [7.5, 27.0], [7.6, 27.0], [7.7, 27.0], [7.8, 27.0], [7.9, 28.0], [8.0, 28.0], [8.1, 28.0], [8.2, 28.0], [8.3, 28.0], [8.4, 28.0], [8.5, 28.0], [8.6, 29.0], [8.7, 29.0], [8.8, 29.0], [8.9, 29.0], [9.0, 29.0], [9.1, 29.0], [9.2, 30.0], [9.3, 30.0], [9.4, 30.0], [9.5, 30.0], [9.6, 30.0], [9.7, 31.0], [9.8, 31.0], [9.9, 31.0], [10.0, 31.0], [10.1, 31.0], [10.2, 32.0], [10.3, 32.0], [10.4, 32.0], [10.5, 32.0], [10.6, 33.0], [10.7, 33.0], [10.8, 33.0], [10.9, 33.0], [11.0, 33.0], [11.1, 34.0], [11.2, 34.0], [11.3, 34.0], [11.4, 35.0], [11.5, 35.0], [11.6, 35.0], [11.7, 36.0], [11.8, 36.0], [11.9, 37.0], [12.0, 38.0], [12.1, 40.0], [12.2, 41.0], [12.3, 41.0], [12.4, 43.0], [12.5, 44.0], [12.6, 46.0], [12.7, 54.0], [12.8, 66.0], [12.9, 75.0], [13.0, 115.0], [13.1, 129.0], [13.2, 145.0], [13.3, 167.0], [13.4, 182.0], [13.5, 206.0], [13.6, 224.0], [13.7, 231.0], [13.8, 252.0], [13.9, 267.0], [14.0, 275.0], [14.1, 285.0], [14.2, 293.0], [14.3, 307.0], [14.4, 313.0], [14.5, 317.0], [14.6, 324.0], [14.7, 329.0], [14.8, 334.0], [14.9, 336.0], [15.0, 343.0], [15.1, 350.0], [15.2, 356.0], [15.3, 358.0], [15.4, 366.0], [15.5, 371.0], [15.6, 375.0], [15.7, 381.0], [15.8, 386.0], [15.9, 391.0], [16.0, 394.0], [16.1, 400.0], [16.2, 403.0], [16.3, 408.0], [16.4, 412.0], [16.5, 416.0], [16.6, 421.0], [16.7, 425.0], [16.8, 427.0], [16.9, 428.0], [17.0, 430.0], [17.1, 432.0], [17.2, 437.0], [17.3, 440.0], [17.4, 444.0], [17.5, 446.0], [17.6, 449.0], [17.7, 451.0], [17.8, 453.0], [17.9, 455.0], [18.0, 457.0], [18.1, 459.0], [18.2, 462.0], [18.3, 466.0], [18.4, 469.0], [18.5, 471.0], [18.6, 475.0], [18.7, 477.0], [18.8, 482.0], [18.9, 483.0], [19.0, 486.0], [19.1, 487.0], [19.2, 490.0], [19.3, 493.0], [19.4, 495.0], [19.5, 498.0], [19.6, 501.0], [19.7, 504.0], [19.8, 508.0], [19.9, 510.0], [20.0, 512.0], [20.1, 514.0], [20.2, 515.0], [20.3, 518.0], [20.4, 519.0], [20.5, 522.0], [20.6, 523.0], [20.7, 526.0], [20.8, 529.0], [20.9, 531.0], [21.0, 533.0], [21.1, 536.0], [21.2, 537.0], [21.3, 539.0], [21.4, 541.0], [21.5, 542.0], [21.6, 545.0], [21.7, 548.0], [21.8, 549.0], [21.9, 552.0], [22.0, 553.0], [22.1, 555.0], [22.2, 557.0], [22.3, 559.0], [22.4, 560.0], [22.5, 562.0], [22.6, 565.0], [22.7, 567.0], [22.8, 568.0], [22.9, 571.0], [23.0, 574.0], [23.1, 575.0], [23.2, 577.0], [23.3, 579.0], [23.4, 580.0], [23.5, 582.0], [23.6, 585.0], [23.7, 586.0], [23.8, 587.0], [23.9, 589.0], [24.0, 590.0], [24.1, 592.0], [24.2, 595.0], [24.3, 596.0], [24.4, 598.0], [24.5, 601.0], [24.6, 603.0], [24.7, 604.0], [24.8, 605.0], [24.9, 606.0], [25.0, 608.0], [25.1, 609.0], [25.2, 611.0], [25.3, 613.0], [25.4, 615.0], [25.5, 617.0], [25.6, 619.0], [25.7, 621.0], [25.8, 624.0], [25.9, 625.0], [26.0, 628.0], [26.1, 630.0], [26.2, 631.0], [26.3, 632.0], [26.4, 634.0], [26.5, 635.0], [26.6, 636.0], [26.7, 639.0], [26.8, 640.0], [26.9, 642.0], [27.0, 644.0], [27.1, 646.0], [27.2, 647.0], [27.3, 649.0], [27.4, 651.0], [27.5, 652.0], [27.6, 654.0], [27.7, 655.0], [27.8, 657.0], [27.9, 659.0], [28.0, 662.0], [28.1, 663.0], [28.2, 664.0], [28.3, 665.0], [28.4, 666.0], [28.5, 669.0], [28.6, 669.0], [28.7, 670.0], [28.8, 672.0], [28.9, 674.0], [29.0, 675.0], [29.1, 677.0], [29.2, 679.0], [29.3, 681.0], [29.4, 683.0], [29.5, 684.0], [29.6, 685.0], [29.7, 687.0], [29.8, 688.0], [29.9, 689.0], [30.0, 691.0], [30.1, 692.0], [30.2, 694.0], [30.3, 694.0], [30.4, 696.0], [30.5, 697.0], [30.6, 699.0], [30.7, 700.0], [30.8, 702.0], [30.9, 704.0], [31.0, 704.0], [31.1, 705.0], [31.2, 707.0], [31.3, 708.0], [31.4, 710.0], [31.5, 713.0], [31.6, 715.0], [31.7, 716.0], [31.8, 717.0], [31.9, 719.0], [32.0, 722.0], [32.1, 722.0], [32.2, 724.0], [32.3, 726.0], [32.4, 727.0], [32.5, 729.0], [32.6, 731.0], [32.7, 732.0], [32.8, 733.0], [32.9, 735.0], [33.0, 736.0], [33.1, 737.0], [33.2, 738.0], [33.3, 740.0], [33.4, 742.0], [33.5, 745.0], [33.6, 747.0], [33.7, 748.0], [33.8, 750.0], [33.9, 751.0], [34.0, 753.0], [34.1, 754.0], [34.2, 755.0], [34.3, 757.0], [34.4, 758.0], [34.5, 760.0], [34.6, 762.0], [34.7, 763.0], [34.8, 765.0], [34.9, 767.0], [35.0, 768.0], [35.1, 769.0], [35.2, 770.0], [35.3, 772.0], [35.4, 774.0], [35.5, 775.0], [35.6, 777.0], [35.7, 778.0], [35.8, 780.0], [35.9, 782.0], [36.0, 783.0], [36.1, 784.0], [36.2, 785.0], [36.3, 787.0], [36.4, 788.0], [36.5, 789.0], [36.6, 791.0], [36.7, 792.0], [36.8, 794.0], [36.9, 795.0], [37.0, 797.0], [37.1, 798.0], [37.2, 799.0], [37.3, 801.0], [37.4, 802.0], [37.5, 803.0], [37.6, 805.0], [37.7, 806.0], [37.8, 807.0], [37.9, 808.0], [38.0, 810.0], [38.1, 813.0], [38.2, 815.0], [38.3, 817.0], [38.4, 819.0], [38.5, 820.0], [38.6, 822.0], [38.7, 823.0], [38.8, 824.0], [38.9, 826.0], [39.0, 827.0], [39.1, 828.0], [39.2, 829.0], [39.3, 830.0], [39.4, 831.0], [39.5, 832.0], [39.6, 833.0], [39.7, 835.0], [39.8, 837.0], [39.9, 838.0], [40.0, 840.0], [40.1, 842.0], [40.2, 843.0], [40.3, 845.0], [40.4, 846.0], [40.5, 848.0], [40.6, 849.0], [40.7, 851.0], [40.8, 852.0], [40.9, 854.0], [41.0, 855.0], [41.1, 856.0], [41.2, 858.0], [41.3, 859.0], [41.4, 860.0], [41.5, 862.0], [41.6, 862.0], [41.7, 864.0], [41.8, 865.0], [41.9, 866.0], [42.0, 867.0], [42.1, 868.0], [42.2, 870.0], [42.3, 871.0], [42.4, 872.0], [42.5, 874.0], [42.6, 875.0], [42.7, 876.0], [42.8, 877.0], [42.9, 879.0], [43.0, 880.0], [43.1, 882.0], [43.2, 884.0], [43.3, 886.0], [43.4, 887.0], [43.5, 889.0], [43.6, 892.0], [43.7, 893.0], [43.8, 894.0], [43.9, 897.0], [44.0, 897.0], [44.1, 900.0], [44.2, 901.0], [44.3, 902.0], [44.4, 903.0], [44.5, 904.0], [44.6, 906.0], [44.7, 908.0], [44.8, 909.0], [44.9, 910.0], [45.0, 911.0], [45.1, 912.0], [45.2, 914.0], [45.3, 915.0], [45.4, 916.0], [45.5, 917.0], [45.6, 918.0], [45.7, 920.0], [45.8, 922.0], [45.9, 923.0], [46.0, 925.0], [46.1, 926.0], [46.2, 927.0], [46.3, 928.0], [46.4, 929.0], [46.5, 930.0], [46.6, 931.0], [46.7, 932.0], [46.8, 934.0], [46.9, 936.0], [47.0, 936.0], [47.1, 938.0], [47.2, 939.0], [47.3, 940.0], [47.4, 942.0], [47.5, 944.0], [47.6, 946.0], [47.7, 947.0], [47.8, 950.0], [47.9, 951.0], [48.0, 953.0], [48.1, 954.0], [48.2, 955.0], [48.3, 957.0], [48.4, 959.0], [48.5, 961.0], [48.6, 962.0], [48.7, 963.0], [48.8, 965.0], [48.9, 966.0], [49.0, 967.0], [49.1, 968.0], [49.2, 970.0], [49.3, 971.0], [49.4, 972.0], [49.5, 975.0], [49.6, 976.0], [49.7, 977.0], [49.8, 979.0], [49.9, 980.0], [50.0, 981.0], [50.1, 983.0], [50.2, 984.0], [50.3, 985.0], [50.4, 987.0], [50.5, 988.0], [50.6, 990.0], [50.7, 992.0], [50.8, 994.0], [50.9, 995.0], [51.0, 996.0], [51.1, 998.0], [51.2, 999.0], [51.3, 1001.0], [51.4, 1003.0], [51.5, 1004.0], [51.6, 1006.0], [51.7, 1007.0], [51.8, 1008.0], [51.9, 1010.0], [52.0, 1011.0], [52.1, 1012.0], [52.2, 1014.0], [52.3, 1016.0], [52.4, 1017.0], [52.5, 1019.0], [52.6, 1020.0], [52.7, 1021.0], [52.8, 1023.0], [52.9, 1025.0], [53.0, 1026.0], [53.1, 1028.0], [53.2, 1030.0], [53.3, 1031.0], [53.4, 1032.0], [53.5, 1034.0], [53.6, 1036.0], [53.7, 1037.0], [53.8, 1038.0], [53.9, 1039.0], [54.0, 1041.0], [54.1, 1042.0], [54.2, 1044.0], [54.3, 1045.0], [54.4, 1046.0], [54.5, 1047.0], [54.6, 1048.0], [54.7, 1051.0], [54.8, 1052.0], [54.9, 1052.0], [55.0, 1054.0], [55.1, 1056.0], [55.2, 1057.0], [55.3, 1057.0], [55.4, 1059.0], [55.5, 1060.0], [55.6, 1061.0], [55.7, 1062.0], [55.8, 1064.0], [55.9, 1065.0], [56.0, 1067.0], [56.1, 1068.0], [56.2, 1069.0], [56.3, 1071.0], [56.4, 1072.0], [56.5, 1073.0], [56.6, 1075.0], [56.7, 1077.0], [56.8, 1078.0], [56.9, 1079.0], [57.0, 1081.0], [57.1, 1082.0], [57.2, 1084.0], [57.3, 1085.0], [57.4, 1086.0], [57.5, 1088.0], [57.6, 1089.0], [57.7, 1091.0], [57.8, 1092.0], [57.9, 1093.0], [58.0, 1095.0], [58.1, 1096.0], [58.2, 1097.0], [58.3, 1099.0], [58.4, 1101.0], [58.5, 1102.0], [58.6, 1103.0], [58.7, 1103.0], [58.8, 1105.0], [58.9, 1107.0], [59.0, 1108.0], [59.1, 1109.0], [59.2, 1110.0], [59.3, 1111.0], [59.4, 1114.0], [59.5, 1115.0], [59.6, 1116.0], [59.7, 1118.0], [59.8, 1120.0], [59.9, 1121.0], [60.0, 1122.0], [60.1, 1124.0], [60.2, 1124.0], [60.3, 1126.0], [60.4, 1128.0], [60.5, 1130.0], [60.6, 1131.0], [60.7, 1132.0], [60.8, 1134.0], [60.9, 1135.0], [61.0, 1137.0], [61.1, 1138.0], [61.2, 1141.0], [61.3, 1142.0], [61.4, 1144.0], [61.5, 1145.0], [61.6, 1146.0], [61.7, 1148.0], [61.8, 1148.0], [61.9, 1149.0], [62.0, 1151.0], [62.1, 1153.0], [62.2, 1154.0], [62.3, 1156.0], [62.4, 1157.0], [62.5, 1159.0], [62.6, 1161.0], [62.7, 1162.0], [62.8, 1166.0], [62.9, 1168.0], [63.0, 1169.0], [63.1, 1171.0], [63.2, 1173.0], [63.3, 1174.0], [63.4, 1175.0], [63.5, 1176.0], [63.6, 1178.0], [63.7, 1179.0], [63.8, 1180.0], [63.9, 1182.0], [64.0, 1183.0], [64.1, 1184.0], [64.2, 1186.0], [64.3, 1188.0], [64.4, 1189.0], [64.5, 1190.0], [64.6, 1192.0], [64.7, 1194.0], [64.8, 1195.0], [64.9, 1197.0], [65.0, 1199.0], [65.1, 1200.0], [65.2, 1201.0], [65.3, 1202.0], [65.4, 1204.0], [65.5, 1206.0], [65.6, 1207.0], [65.7, 1208.0], [65.8, 1210.0], [65.9, 1212.0], [66.0, 1214.0], [66.1, 1215.0], [66.2, 1216.0], [66.3, 1218.0], [66.4, 1219.0], [66.5, 1221.0], [66.6, 1223.0], [66.7, 1224.0], [66.8, 1226.0], [66.9, 1227.0], [67.0, 1229.0], [67.1, 1231.0], [67.2, 1233.0], [67.3, 1234.0], [67.4, 1237.0], [67.5, 1238.0], [67.6, 1240.0], [67.7, 1242.0], [67.8, 1243.0], [67.9, 1245.0], [68.0, 1246.0], [68.1, 1247.0], [68.2, 1248.0], [68.3, 1249.0], [68.4, 1251.0], [68.5, 1252.0], [68.6, 1254.0], [68.7, 1255.0], [68.8, 1257.0], [68.9, 1258.0], [69.0, 1260.0], [69.1, 1262.0], [69.2, 1264.0], [69.3, 1267.0], [69.4, 1268.0], [69.5, 1268.0], [69.6, 1270.0], [69.7, 1272.0], [69.8, 1273.0], [69.9, 1275.0], [70.0, 1276.0], [70.1, 1278.0], [70.2, 1279.0], [70.3, 1280.0], [70.4, 1282.0], [70.5, 1284.0], [70.6, 1286.0], [70.7, 1287.0], [70.8, 1288.0], [70.9, 1290.0], [71.0, 1291.0], [71.1, 1292.0], [71.2, 1294.0], [71.3, 1296.0], [71.4, 1298.0], [71.5, 1301.0], [71.6, 1303.0], [71.7, 1304.0], [71.8, 1306.0], [71.9, 1307.0], [72.0, 1309.0], [72.1, 1310.0], [72.2, 1311.0], [72.3, 1313.0], [72.4, 1316.0], [72.5, 1319.0], [72.6, 1320.0], [72.7, 1323.0], [72.8, 1325.0], [72.9, 1326.0], [73.0, 1328.0], [73.1, 1330.0], [73.2, 1331.0], [73.3, 1333.0], [73.4, 1335.0], [73.5, 1338.0], [73.6, 1340.0], [73.7, 1342.0], [73.8, 1344.0], [73.9, 1346.0], [74.0, 1348.0], [74.1, 1351.0], [74.2, 1353.0], [74.3, 1355.0], [74.4, 1358.0], [74.5, 1360.0], [74.6, 1361.0], [74.7, 1363.0], [74.8, 1365.0], [74.9, 1366.0], [75.0, 1371.0], [75.1, 1372.0], [75.2, 1373.0], [75.3, 1375.0], [75.4, 1377.0], [75.5, 1379.0], [75.6, 1381.0], [75.7, 1383.0], [75.8, 1385.0], [75.9, 1387.0], [76.0, 1389.0], [76.1, 1391.0], [76.2, 1393.0], [76.3, 1396.0], [76.4, 1399.0], [76.5, 1401.0], [76.6, 1403.0], [76.7, 1405.0], [76.8, 1407.0], [76.9, 1409.0], [77.0, 1412.0], [77.1, 1414.0], [77.2, 1418.0], [77.3, 1420.0], [77.4, 1422.0], [77.5, 1423.0], [77.6, 1425.0], [77.7, 1426.0], [77.8, 1428.0], [77.9, 1430.0], [78.0, 1432.0], [78.1, 1435.0], [78.2, 1439.0], [78.3, 1441.0], [78.4, 1443.0], [78.5, 1445.0], [78.6, 1447.0], [78.7, 1449.0], [78.8, 1452.0], [78.9, 1454.0], [79.0, 1456.0], [79.1, 1458.0], [79.2, 1460.0], [79.3, 1463.0], [79.4, 1465.0], [79.5, 1467.0], [79.6, 1470.0], [79.7, 1473.0], [79.8, 1473.0], [79.9, 1475.0], [80.0, 1478.0], [80.1, 1480.0], [80.2, 1483.0], [80.3, 1485.0], [80.4, 1488.0], [80.5, 1489.0], [80.6, 1491.0], [80.7, 1493.0], [80.8, 1495.0], [80.9, 1497.0], [81.0, 1500.0], [81.1, 1504.0], [81.2, 1507.0], [81.3, 1509.0], [81.4, 1513.0], [81.5, 1515.0], [81.6, 1517.0], [81.7, 1519.0], [81.8, 1522.0], [81.9, 1524.0], [82.0, 1527.0], [82.1, 1529.0], [82.2, 1533.0], [82.3, 1535.0], [82.4, 1538.0], [82.5, 1541.0], [82.6, 1543.0], [82.7, 1548.0], [82.8, 1550.0], [82.9, 1552.0], [83.0, 1553.0], [83.1, 1555.0], [83.2, 1557.0], [83.3, 1561.0], [83.4, 1565.0], [83.5, 1568.0], [83.6, 1572.0], [83.7, 1574.0], [83.8, 1575.0], [83.9, 1578.0], [84.0, 1580.0], [84.1, 1583.0], [84.2, 1585.0], [84.3, 1588.0], [84.4, 1590.0], [84.5, 1593.0], [84.6, 1597.0], [84.7, 1599.0], [84.8, 1602.0], [84.9, 1603.0], [85.0, 1606.0], [85.1, 1609.0], [85.2, 1613.0], [85.3, 1616.0], [85.4, 1618.0], [85.5, 1621.0], [85.6, 1625.0], [85.7, 1629.0], [85.8, 1634.0], [85.9, 1636.0], [86.0, 1639.0], [86.1, 1643.0], [86.2, 1645.0], [86.3, 1647.0], [86.4, 1651.0], [86.5, 1654.0], [86.6, 1656.0], [86.7, 1661.0], [86.8, 1664.0], [86.9, 1667.0], [87.0, 1670.0], [87.1, 1673.0], [87.2, 1676.0], [87.3, 1679.0], [87.4, 1681.0], [87.5, 1685.0], [87.6, 1688.0], [87.7, 1692.0], [87.8, 1697.0], [87.9, 1700.0], [88.0, 1705.0], [88.1, 1707.0], [88.2, 1711.0], [88.3, 1714.0], [88.4, 1718.0], [88.5, 1721.0], [88.6, 1726.0], [88.7, 1730.0], [88.8, 1734.0], [88.9, 1739.0], [89.0, 1742.0], [89.1, 1746.0], [89.2, 1749.0], [89.3, 1752.0], [89.4, 1755.0], [89.5, 1758.0], [89.6, 1761.0], [89.7, 1765.0], [89.8, 1769.0], [89.9, 1775.0], [90.0, 1779.0], [90.1, 1783.0], [90.2, 1787.0], [90.3, 1792.0], [90.4, 1795.0], [90.5, 1799.0], [90.6, 1803.0], [90.7, 1806.0], [90.8, 1809.0], [90.9, 1812.0], [91.0, 1817.0], [91.1, 1820.0], [91.2, 1826.0], [91.3, 1832.0], [91.4, 1834.0], [91.5, 1840.0], [91.6, 1844.0], [91.7, 1848.0], [91.8, 1853.0], [91.9, 1857.0], [92.0, 1861.0], [92.1, 1865.0], [92.2, 1870.0], [92.3, 1873.0], [92.4, 1875.0], [92.5, 1878.0], [92.6, 1883.0], [92.7, 1886.0], [92.8, 1889.0], [92.9, 1894.0], [93.0, 1898.0], [93.1, 1905.0], [93.2, 1907.0], [93.3, 1912.0], [93.4, 1915.0], [93.5, 1920.0], [93.6, 1926.0], [93.7, 1931.0], [93.8, 1938.0], [93.9, 1942.0], [94.0, 1947.0], [94.1, 1954.0], [94.2, 1962.0], [94.3, 1969.0], [94.4, 1974.0], [94.5, 1979.0], [94.6, 1982.0], [94.7, 1988.0], [94.8, 1995.0], [94.9, 1998.0], [95.0, 2000.0], [95.1, 2006.0], [95.2, 2015.0], [95.3, 2024.0], [95.4, 2033.0], [95.5, 2037.0], [95.6, 2039.0], [95.7, 2045.0], [95.8, 2051.0], [95.9, 2059.0], [96.0, 2064.0], [96.1, 2072.0], [96.2, 2081.0], [96.3, 2097.0], [96.4, 2105.0], [96.5, 2112.0], [96.6, 2126.0], [96.7, 2136.0], [96.8, 2147.0], [96.9, 2156.0], [97.0, 2164.0], [97.1, 2173.0], [97.2, 2182.0], [97.3, 2192.0], [97.4, 2201.0], [97.5, 2213.0], [97.6, 2222.0], [97.7, 2233.0], [97.8, 2247.0], [97.9, 2263.0], [98.0, 2270.0], [98.1, 2285.0], [98.2, 2300.0], [98.3, 2314.0], [98.4, 2325.0], [98.5, 2343.0], [98.6, 2366.0], [98.7, 2390.0], [98.8, 2400.0], [98.9, 2423.0], [99.0, 2441.0], [99.1, 2478.0], [99.2, 2511.0], [99.3, 2553.0], [99.4, 2594.0], [99.5, 2642.0], [99.6, 2680.0], [99.7, 2754.0], [99.8, 2809.0], [99.9, 2989.0], [100.0, 3823.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1297.0, "series": [{"data": [[0.0, 1297.0], [600.0, 598.0], [700.0, 643.0], [800.0, 684.0], [900.0, 713.0], [1000.0, 714.0], [1100.0, 658.0], [1200.0, 618.0], [1300.0, 550.0], [1400.0, 478.0], [1500.0, 423.0], [100.0, 60.0], [1600.0, 304.0], [1700.0, 268.0], [1800.0, 241.0], [1900.0, 161.0], [2000.0, 123.0], [2100.0, 92.0], [2300.0, 51.0], [2200.0, 57.0], [2400.0, 49.0], [2500.0, 33.0], [2600.0, 22.0], [2700.0, 14.0], [2800.0, 14.0], [2900.0, 6.0], [3000.0, 7.0], [3100.0, 1.0], [200.0, 93.0], [3200.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3900.0, 1.0], [4400.0, 1.0], [300.0, 196.0], [400.0, 349.0], [500.0, 478.0]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[100.0, 94.0], [200.0, 6.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[0.0, 1297.0], [600.0, 621.0], [700.0, 654.0], [800.0, 688.0], [900.0, 710.0], [1000.0, 710.0], [1100.0, 675.0], [1200.0, 643.0], [1300.0, 493.0], [1400.0, 455.0], [1500.0, 375.0], [100.0, 51.0], [1600.0, 318.0], [1700.0, 262.0], [1800.0, 251.0], [1900.0, 193.0], [2000.0, 135.0], [2100.0, 107.0], [2200.0, 82.0], [2300.0, 60.0], [2400.0, 34.0], [2500.0, 27.0], [2600.0, 23.0], [2800.0, 7.0], [2700.0, 16.0], [2900.0, 4.0], [3000.0, 2.0], [3100.0, 2.0], [200.0, 77.0], [3200.0, 2.0], [3300.0, 2.0], [3700.0, 1.0], [3800.0, 1.0], [300.0, 185.0], [400.0, 346.0], [500.0, 491.0]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 16.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 12263.0, "series": [{"data": [[0.0, 4056.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 12263.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3765.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 16.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 11.617021276595745, "minX": 1.5873153E12, "maxY": 100.0, "series": [{"data": [[1.58731584E12, 100.0], [1.58731536E12, 81.56458852867847], [1.58731554E12, 100.0], [1.58731542E12, 100.0], [1.58731572E12, 100.0], [1.5873159E12, 73.43424734191376], [1.5873153E12, 24.186770428015585], [1.5873156E12, 100.0], [1.58731578E12, 100.0], [1.58731548E12, 100.0], [1.58731596E12, 11.617021276595745], [1.58731566E12, 100.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58731596E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 20.5, "minX": 1.0, "maxY": 1189.4, "series": [{"data": [[3.0, 26.333333333333332], [5.0, 22.0], [6.0, 27.75], [7.0, 38.0], [8.0, 26.666666666666668], [9.0, 31.0], [10.0, 25.333333333333332], [11.0, 34.333333333333336], [12.0, 35.5], [13.0, 29.75], [14.0, 27.0], [15.0, 32.333333333333336], [16.0, 30.916666666666668], [17.0, 29.333333333333332], [18.0, 26.11111111111111], [19.0, 53.5], [20.0, 32.333333333333336], [21.0, 30.333333333333332], [22.0, 22.4], [23.0, 25.75], [24.0, 24.428571428571427], [25.0, 25.624999999999996], [26.0, 26.0], [27.0, 23.333333333333332], [28.0, 32.10000000000001], [29.0, 22.75], [30.0, 26.846153846153843], [31.0, 28.75], [32.0, 28.272727272727273], [33.0, 25.07142857142857], [34.0, 26.0], [35.0, 24.69230769230769], [36.0, 28.7], [37.0, 23.92307692307692], [38.0, 25.666666666666664], [39.0, 27.375], [40.0, 25.11111111111111], [41.0, 27.5], [42.0, 28.3], [43.0, 30.583333333333332], [44.0, 34.15], [45.0, 24.599999999999998], [46.0, 25.352941176470587], [47.0, 25.27272727272727], [48.0, 27.666666666666664], [49.0, 23.785714285714285], [50.0, 25.866666666666667], [51.0, 26.5], [52.0, 26.071428571428573], [53.0, 26.964285714285715], [54.0, 26.416666666666664], [55.0, 26.5], [56.0, 30.043478260869563], [57.0, 26.75], [58.0, 25.590909090909093], [59.0, 26.82352941176471], [60.0, 23.63157894736842], [61.0, 31.07692307692308], [62.0, 23.0], [63.0, 26.78571428571429], [64.0, 26.96428571428572], [65.0, 50.857142857142854], [66.0, 26.48], [67.0, 27.33333333333333], [68.0, 26.14285714285714], [69.0, 25.666666666666664], [70.0, 28.857142857142858], [71.0, 24.380952380952376], [72.0, 23.638297872340427], [73.0, 25.341463414634145], [74.0, 27.8], [75.0, 39.25000000000001], [76.0, 26.400000000000002], [77.0, 26.529411764705884], [78.0, 33.52631578947368], [79.0, 26.93333333333333], [80.0, 27.91666666666667], [81.0, 24.5625], [82.0, 27.107142857142858], [83.0, 30.36363636363636], [84.0, 605.7654320987654], [85.0, 326.875], [86.0, 506.16666666666663], [87.0, 545.7142857142857], [88.0, 820.7115384615383], [89.0, 703.3488372093024], [90.0, 757.4545454545454], [91.0, 1084.6875000000002], [92.0, 818.846153846154], [93.0, 1110.3125], [94.0, 921.9117647058825], [95.0, 970.0714285714287], [96.0, 806.3181818181819], [97.0, 756.0576923076924], [98.0, 1167.4482758620688], [99.0, 1091.0666666666666], [100.0, 1118.6489500533837]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[94.84329999999981, 987.6363000000014]], "isOverall": false, "label": "HTTP Request - Get Departure flights-Aggregated", "isController": false}, {"data": [[2.0, 163.0], [3.0, 161.0], [4.0, 171.0], [5.0, 169.0], [6.0, 159.0], [7.0, 162.0], [8.0, 170.0], [9.0, 168.0], [10.0, 170.0], [11.0, 162.0], [12.0, 164.0], [13.0, 162.0], [14.0, 174.0], [15.0, 161.0], [16.0, 159.0], [17.0, 177.0], [18.0, 167.0], [19.0, 163.0], [20.0, 165.0], [21.0, 161.0], [22.0, 163.0], [23.0, 165.0], [24.0, 158.0], [25.0, 166.0], [26.0, 162.0], [27.0, 174.0], [28.0, 163.0], [29.0, 163.0], [30.0, 166.0], [31.0, 158.0], [32.0, 157.0], [33.0, 151.0], [34.0, 171.0], [35.0, 169.0], [36.0, 158.0], [37.0, 168.0], [38.0, 170.0], [39.0, 164.0], [40.0, 159.0], [41.0, 175.0], [42.0, 170.0], [43.0, 167.0], [44.0, 156.0], [45.0, 171.0], [46.0, 161.0], [47.0, 169.0], [48.0, 171.0], [49.0, 162.0], [50.0, 160.0], [51.0, 158.0], [52.0, 259.0], [53.0, 164.0], [54.0, 169.0], [55.0, 172.0], [56.0, 164.0], [57.0, 156.0], [58.0, 160.0], [59.0, 153.0], [60.0, 156.0], [61.0, 175.0], [62.0, 165.0], [63.0, 200.0], [64.0, 163.0], [65.0, 174.0], [66.0, 164.0], [67.0, 171.0], [68.0, 154.0], [69.0, 163.0], [70.0, 283.0], [71.0, 157.0], [72.0, 165.0], [73.0, 159.0], [74.0, 165.0], [75.0, 169.0], [76.0, 167.0], [77.0, 167.0], [78.0, 228.0], [79.0, 178.0], [80.0, 158.0], [81.0, 167.0], [82.0, 170.0], [83.0, 150.0], [84.0, 165.0], [85.0, 160.0], [86.0, 174.0], [87.0, 181.0], [88.0, 175.0], [89.0, 164.0], [90.0, 183.0], [91.0, 215.0], [92.0, 168.0], [93.0, 159.0], [94.0, 246.0], [95.0, 185.0], [96.0, 158.0], [97.0, 198.0], [98.0, 158.0], [99.0, 179.0], [100.0, 178.0], [1.0, 195.0]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[50.5, 170.38999999999996]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-Aggregated", "isController": false}, {"data": [[3.0, 24.25], [4.0, 25.0], [5.0, 33.0], [6.0, 41.0], [7.0, 28.0], [8.0, 22.0], [9.0, 26.0], [10.0, 29.25], [11.0, 27.75], [12.0, 29.5], [13.0, 32.666666666666664], [14.0, 34.5], [15.0, 25.666666666666668], [16.0, 29.133333333333333], [17.0, 31.5], [18.0, 31.0], [19.0, 20.5], [20.0, 32.0], [21.0, 30.0], [22.0, 26.75], [23.0, 25.142857142857142], [24.0, 33.333333333333336], [25.0, 29.11111111111111], [26.0, 26.2], [27.0, 26.875], [28.0, 33.2], [29.0, 35.666666666666664], [30.0, 31.000000000000004], [31.0, 22.4], [32.0, 30.000000000000004], [33.0, 28.42857142857143], [34.0, 24.900000000000002], [35.0, 29.214285714285705], [36.0, 24.333333333333336], [37.0, 28.1875], [38.0, 25.90476190476191], [39.0, 25.545454545454547], [40.0, 26.333333333333332], [41.0, 25.0], [42.0, 25.22222222222222], [43.0, 23.8], [44.0, 30.31578947368421], [45.0, 28.090909090909093], [46.0, 27.125000000000004], [47.0, 28.454545454545457], [48.0, 24.25], [49.0, 27.076923076923077], [50.0, 25.46666666666667], [51.0, 24.555555555555557], [52.0, 22.900000000000002], [53.0, 26.107142857142854], [54.0, 23.846153846153847], [55.0, 27.0], [56.0, 26.519999999999996], [57.0, 28.13333333333333], [58.0, 25.0], [59.0, 23.352941176470583], [60.0, 24.21951219512195], [61.0, 27.0], [62.0, 24.714285714285715], [63.0, 34.111111111111114], [64.0, 27.34146341463415], [65.0, 37.93750000000001], [66.0, 26.291666666666664], [67.0, 25.909090909090907], [68.0, 28.571428571428573], [69.0, 26.000000000000004], [70.0, 26.933333333333334], [71.0, 24.176470588235293], [72.0, 26.53061224489796], [73.0, 28.32432432432433], [74.0, 28.64516129032258], [75.0, 28.93939393939394], [76.0, 24.863636363636367], [77.0, 26.07692307692308], [78.0, 31.333333333333332], [79.0, 26.041666666666664], [80.0, 30.333333333333336], [81.0, 22.0], [82.0, 25.720000000000002], [83.0, 22.941176470588236], [84.0, 630.276923076923], [85.0, 264.5], [86.0, 492.66666666666663], [87.0, 542.1071428571429], [88.0, 851.6938775510204], [89.0, 775.8666666666669], [90.0, 959.6111111111109], [91.0, 1075.0833333333335], [92.0, 816.0], [93.0, 1189.4], [94.0, 873.5892857142858], [95.0, 918.9999999999999], [96.0, 794.7090909090908], [97.0, 657.3333333333334], [98.0, 1182.0270270270273], [99.0, 1011.6521739130435], [100.0, 1122.7375029613795]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}, {"data": [[94.84429999999965, 991.1434999999983]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 336.1666666666667, "minX": 1.5873153E12, "maxY": 247284.48333333334, "series": [{"data": [[1.58731584E12, 225699.36666666667], [1.58731536E12, 226855.81666666668], [1.58731554E12, 227682.81666666668], [1.58731542E12, 234637.53333333333], [1.58731572E12, 226513.3], [1.5873159E12, 207424.2], [1.5873153E12, 26366.566666666666], [1.5873156E12, 239233.76666666666], [1.58731578E12, 225356.9], [1.58731548E12, 229878.1], [1.58731596E12, 5450.566666666667], [1.58731566E12, 247284.48333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58731584E12, 13899.666666666666], [1.58731536E12, 14124.333333333334], [1.58731554E12, 14020.966666666667], [1.58731542E12, 14450.133333333333], [1.58731572E12, 13949.7], [1.5873159E12, 12777.5], [1.5873153E12, 1713.3666666666666], [1.5873156E12, 14843.466666666667], [1.58731578E12, 13878.066666666668], [1.58731548E12, 14157.066666666668], [1.58731596E12, 336.1666666666667], [1.58731566E12, 15229.566666666668]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58731596E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 27.6, "minX": 1.5873153E12, "maxY": 1230.3567010309273, "series": [{"data": [[1.58731584E12, 1212.6550308008214], [1.58731536E12, 575.9479166666663], [1.58731554E12, 1180.7405128205116], [1.58731542E12, 1098.0990099009903], [1.58731572E12, 1192.277379733879], [1.5873159E12, 387.7563395810365], [1.5873153E12, 27.834951456310677], [1.5873156E12, 1005.1730769230766], [1.58731578E12, 1199.974173553719], [1.58731548E12, 1171.1794354838705], [1.58731596E12, 29.111111111111114], [1.58731566E12, 930.7000937207123]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58731536E12, 173.39682539682542], [1.5873153E12, 165.27027027027026]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58731584E12, 1230.3567010309273], [1.58731536E12, 562.8737270875765], [1.58731554E12, 1190.599391480731], [1.58731542E12, 1059.3491592482687], [1.58731572E12, 1216.0225872689937], [1.5873159E12, 391.4250000000002], [1.5873153E12, 29.196581196581196], [1.5873156E12, 1026.896718146717], [1.58731578E12, 1225.680369989722], [1.58731548E12, 1163.0344129554644], [1.58731596E12, 27.6], [1.58731566E12, 923.7591721542798]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58731596E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 27.150000000000002, "minX": 1.5873153E12, "maxY": 1230.115463917526, "series": [{"data": [[1.58731584E12, 1212.425051334701], [1.58731536E12, 575.7083333333335], [1.58731554E12, 1180.5292307692318], [1.58731542E12, 1097.9435643564375], [1.58731572E12, 1192.0706243602867], [1.5873159E12, 387.51598676957013], [1.5873153E12, 27.553398058252426], [1.5873156E12, 1005.0028846153834], [1.58731578E12, 1199.7448347107452], [1.58731548E12, 1170.9949596774206], [1.58731596E12, 28.925925925925924], [1.58731566E12, 930.3411433926898]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58731536E12, 173.39682539682542], [1.5873153E12, 165.1621621621622]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58731584E12, 1230.115463917526], [1.58731536E12, 562.6395112016293], [1.58731554E12, 1190.4016227180525], [1.58731542E12, 1059.1602373887251], [1.58731572E12, 1215.7751540041068], [1.5873159E12, 391.15113636363617], [1.5873153E12, 28.794871794871796], [1.5873156E12, 1026.7152509652508], [1.58731578E12, 1225.388489208632], [1.58731548E12, 1162.8269230769213], [1.58731596E12, 27.150000000000002], [1.58731566E12, 923.2897460018817]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58731596E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5873153E12, "maxY": 1.324324324324324, "series": [{"data": [[1.58731584E12, 0.3285420944558523], [1.58731536E12, 0.20000000000000015], [1.58731554E12, 0.31384615384615433], [1.58731542E12, 0.31386138613861403], [1.58731572E12, 0.3398157625383827], [1.5873159E12, 0.09151047409040812], [1.5873153E12, 0.2524271844660196], [1.5873156E12, 0.293269230769231], [1.58731578E12, 0.29442148760330633], [1.58731548E12, 0.39919354838709675], [1.58731596E12, 0.0], [1.58731566E12, 0.29334582942830395]], "isOverall": false, "label": "HTTP Request - Get Departure flights", "isController": false}, {"data": [[1.58731536E12, 0.6507936507936506], [1.5873153E12, 1.324324324324324]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token", "isController": false}, {"data": [[1.58731584E12, 0.39896907216494837], [1.58731536E12, 0.5285132382892064], [1.58731554E12, 0.4249492900608517], [1.58731542E12, 0.4589515331355095], [1.58731572E12, 0.40143737166324445], [1.5873159E12, 0.3977272727272726], [1.5873153E12, 0.5384615384615385], [1.5873156E12, 0.41505791505791445], [1.58731578E12, 0.4039054470709146], [1.58731548E12, 0.4746963562753036], [1.58731596E12, 0.25], [1.58731566E12, 0.3951081843838198]], "isOverall": false, "label": "HTTP Request - Get Arrival flights", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58731596E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 8.0, "minX": 1.5873153E12, "maxY": 4435.0, "series": [{"data": [[1.58731584E12, 3823.0], [1.58731536E12, 2819.0], [1.58731554E12, 3455.0], [1.58731542E12, 4435.0], [1.58731572E12, 3756.0], [1.5873159E12, 2158.0], [1.5873153E12, 195.0], [1.5873156E12, 2688.0], [1.58731578E12, 3922.0], [1.58731548E12, 3205.0], [1.58731596E12, 52.0], [1.58731566E12, 2563.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58731584E12, 110.0], [1.58731536E12, 10.0], [1.58731554E12, 135.0], [1.58731542E12, 13.0], [1.58731572E12, 15.0], [1.5873159E12, 10.0], [1.5873153E12, 8.0], [1.5873156E12, 40.0], [1.58731578E12, 20.0], [1.58731548E12, 17.0], [1.58731596E12, 16.0], [1.58731566E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58731584E12, 1972.5], [1.58731536E12, 1433.8000000000002], [1.58731554E12, 1897.8], [1.58731542E12, 1794.6], [1.58731572E12, 1870.1999999999998], [1.5873159E12, 1107.4], [1.5873153E12, 162.0], [1.5873156E12, 1682.9], [1.58731578E12, 1935.3999999999996], [1.58731548E12, 1825.0], [1.58731596E12, 37.400000000000006], [1.58731566E12, 1617.7000000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58731584E12, 2654.3499999999995], [1.58731536E12, 2037.8200000000002], [1.58731554E12, 2582.2799999999993], [1.58731542E12, 2625.379999999999], [1.58731572E12, 2623.36], [1.5873159E12, 1681.8399999999992], [1.5873153E12, 175.25999999999996], [1.5873156E12, 2228.729999999999], [1.58731578E12, 2699.819999999998], [1.58731548E12, 2512.38], [1.58731596E12, 52.0], [1.58731566E12, 2183.38]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58731584E12, 2187.5], [1.58731536E12, 1646.0], [1.58731554E12, 2115.9999999999986], [1.58731542E12, 2089.3999999999965], [1.58731572E12, 2091.5999999999995], [1.5873159E12, 1294.6], [1.5873153E12, 167.1], [1.5873156E12, 1876.8999999999996], [1.58731578E12, 2188.599999999998], [1.58731548E12, 2026.5999999999985], [1.58731596E12, 42.99999999999997], [1.58731566E12, 1841.7999999999993]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58731596E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 24.0, "minX": 1.0, "maxY": 1152.0, "series": [{"data": [[2.0, 29.0], [3.0, 27.0], [4.0, 24.0], [5.0, 31.0], [6.0, 33.5], [7.0, 32.0], [8.0, 31.0], [9.0, 31.0], [10.0, 28.5], [11.0, 26.0], [12.0, 26.5], [13.0, 27.5], [15.0, 27.0], [16.0, 690.5], [17.0, 28.0], [18.0, 37.0], [19.0, 743.0], [20.0, 202.0], [21.0, 644.0], [22.0, 792.0], [23.0, 1138.5], [24.0, 909.0], [25.0, 1027.0], [26.0, 957.5], [27.0, 1077.0], [28.0, 1070.0], [29.0, 1152.0], [30.0, 1051.0], [31.0, 1027.0], [33.0, 999.5], [32.0, 1056.0], [35.0, 901.0], [34.0, 1083.5], [37.0, 1030.5], [36.0, 1051.5], [38.0, 981.0], [39.0, 1013.0], [41.0, 880.0], [40.0, 999.0], [42.0, 967.0], [43.0, 942.0], [45.0, 508.0], [44.0, 1035.5], [47.0, 555.0], [46.0, 927.0], [48.0, 727.5], [49.0, 1054.0], [50.0, 1047.0], [55.0, 27.0], [56.0, 350.0], [59.0, 26.0], [63.0, 620.0], [1.0, 109.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[50.0, 939.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 63.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 23.0, "minX": 1.0, "maxY": 1151.5, "series": [{"data": [[2.0, 29.0], [3.0, 27.0], [4.0, 23.0], [5.0, 31.0], [6.0, 33.0], [7.0, 32.0], [8.0, 30.0], [9.0, 31.0], [10.0, 28.5], [11.0, 26.0], [12.0, 26.5], [13.0, 27.5], [15.0, 27.0], [16.0, 690.0], [17.0, 28.0], [18.0, 34.5], [19.0, 743.0], [20.0, 202.0], [21.0, 644.0], [22.0, 792.0], [23.0, 1138.0], [24.0, 908.0], [25.0, 1027.0], [26.0, 957.5], [27.0, 1077.0], [28.0, 1069.5], [29.0, 1151.5], [30.0, 1051.0], [31.0, 1025.5], [33.0, 999.5], [32.0, 1055.5], [35.0, 901.0], [34.0, 1083.5], [37.0, 1030.0], [36.0, 1051.5], [38.0, 981.0], [39.0, 1012.0], [41.0, 880.0], [40.0, 999.0], [42.0, 967.0], [43.0, 942.0], [45.0, 508.0], [44.0, 1035.0], [47.0, 555.0], [46.0, 927.0], [48.0, 727.5], [49.0, 1051.0], [50.0, 1046.5], [55.0, 27.0], [56.0, 350.0], [59.0, 25.0], [63.0, 620.0], [1.0, 107.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[50.0, 939.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 63.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7833333333333333, "minX": 1.5873153E12, "maxY": 35.68333333333333, "series": [{"data": [[1.58731584E12, 32.11666666666667], [1.58731536E12, 33.9], [1.58731554E12, 32.7], [1.58731542E12, 33.916666666666664], [1.58731572E12, 32.43333333333333], [1.5873159E12, 29.266666666666666], [1.5873153E12, 4.3], [1.5873156E12, 34.38333333333333], [1.58731578E12, 32.53333333333333], [1.58731548E12, 32.983333333333334], [1.58731596E12, 0.7833333333333333], [1.58731566E12, 35.68333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58731596E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.5873153E12, "maxY": 35.5, "series": [{"data": [[1.58731584E12, 32.4], [1.58731536E12, 33.416666666666664], [1.58731554E12, 32.68333333333333], [1.58731542E12, 33.68333333333333], [1.58731572E12, 32.516666666666666], [1.5873159E12, 29.783333333333335], [1.5873153E12, 4.283333333333333], [1.5873156E12, 34.333333333333336], [1.58731578E12, 32.35], [1.58731548E12, 33.0], [1.58731596E12, 0.7833333333333333], [1.58731566E12, 35.5]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.5873156E12, 0.26666666666666666]], "isOverall": false, "label": "503", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58731596E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.5873153E12, "maxY": 17.783333333333335, "series": [{"data": [[1.58731536E12, 1.05], [1.5873153E12, 0.6166666666666667]], "isOverall": false, "label": "HTTP Request - Authenticate and get JWT token-success", "isController": false}, {"data": [[1.58731584E12, 16.233333333333334], [1.58731536E12, 16.0], [1.58731554E12, 16.25], [1.58731542E12, 16.833333333333332], [1.58731572E12, 16.283333333333335], [1.5873159E12, 15.116666666666667], [1.5873153E12, 1.7166666666666666], [1.5873156E12, 17.2], [1.58731578E12, 16.133333333333333], [1.58731548E12, 16.533333333333335], [1.58731596E12, 0.45], [1.58731566E12, 17.783333333333335]], "isOverall": false, "label": "HTTP Request - Get Departure flights-success", "isController": false}, {"data": [[1.5873156E12, 0.13333333333333333]], "isOverall": false, "label": "HTTP Request - Get Departure flights-failure", "isController": false}, {"data": [[1.58731584E12, 16.166666666666668], [1.58731536E12, 16.366666666666667], [1.58731554E12, 16.433333333333334], [1.58731542E12, 16.85], [1.58731572E12, 16.233333333333334], [1.5873159E12, 14.666666666666666], [1.5873153E12, 1.95], [1.5873156E12, 17.133333333333333], [1.58731578E12, 16.216666666666665], [1.58731548E12, 16.466666666666665], [1.58731596E12, 0.3333333333333333], [1.58731566E12, 17.716666666666665]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-success", "isController": false}, {"data": [[1.5873156E12, 0.13333333333333333]], "isOverall": false, "label": "HTTP Request - Get Arrival flights-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58731596E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.5873153E12, "maxY": 35.5, "series": [{"data": [[1.58731584E12, 32.4], [1.58731536E12, 33.416666666666664], [1.58731554E12, 32.68333333333333], [1.58731542E12, 33.68333333333333], [1.58731572E12, 32.516666666666666], [1.5873159E12, 29.783333333333335], [1.5873153E12, 4.283333333333333], [1.5873156E12, 34.333333333333336], [1.58731578E12, 32.35], [1.58731548E12, 33.0], [1.58731596E12, 0.7833333333333333], [1.58731566E12, 35.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.5873156E12, 0.26666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58731596E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

